/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(555);
	module.exports = __webpack_require__(355);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var require;/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	
	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, (function () { 'use strict';
	
	    var hookCallback;
	
	    function hooks () {
	        return hookCallback.apply(null, arguments);
	    }
	
	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }
	
	    function isArray(input) {
	        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	    }
	
	    function isObject(input) {
	        // IE8 will treat undefined and null as object if it wasn't for
	        // input != null
	        return input != null && Object.prototype.toString.call(input) === '[object Object]';
	    }
	
	    function isObjectEmpty(obj) {
	        if (Object.getOwnPropertyNames) {
	            return (Object.getOwnPropertyNames(obj).length === 0);
	        } else {
	            var k;
	            for (k in obj) {
	                if (obj.hasOwnProperty(k)) {
	                    return false;
	                }
	            }
	            return true;
	        }
	    }
	
	    function isUndefined(input) {
	        return input === void 0;
	    }
	
	    function isNumber(input) {
	        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
	    }
	
	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }
	
	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }
	
	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }
	
	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }
	
	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }
	
	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }
	
	        return a;
	    }
	
	    function createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }
	
	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false,
	            parsedDateParts : [],
	            meridiem        : null,
	            rfc2822         : false,
	            weekdayMismatch : false
	        };
	    }
	
	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }
	
	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this);
	            var len = t.length >>> 0;
	
	            for (var i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }
	
	            return false;
	        };
	    }
	
	    function isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            var parsedParts = some.call(flags.parsedDateParts, function (i) {
	                return i != null;
	            });
	            var isNowValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.weekdayMismatch &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated &&
	                (!flags.meridiem || (flags.meridiem && parsedParts));
	
	            if (m._strict) {
	                isNowValid = isNowValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	
	            if (Object.isFrozen == null || !Object.isFrozen(m)) {
	                m._isValid = isNowValid;
	            }
	            else {
	                return isNowValid;
	            }
	        }
	        return m._isValid;
	    }
	
	    function createInvalid (flags) {
	        var m = createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }
	
	        return m;
	    }
	
	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = hooks.momentProperties = [];
	
	    function copyConfig(to, from) {
	        var i, prop, val;
	
	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }
	
	        if (momentProperties.length > 0) {
	            for (i = 0; i < momentProperties.length; i++) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }
	
	        return to;
	    }
	
	    var updateInProgress = false;
	
	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        if (!this.isValid()) {
	            this._d = new Date(NaN);
	        }
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }
	
	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }
	
	    function absFloor (number) {
	        if (number < 0) {
	            // -0 -> 0
	            return Math.ceil(number) || 0;
	        } else {
	            return Math.floor(number);
	        }
	    }
	
	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;
	
	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }
	
	        return value;
	    }
	
	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }
	
	    function warn(msg) {
	        if (hooks.suppressDeprecationWarnings === false &&
	                (typeof console !==  'undefined') && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }
	
	    function deprecate(msg, fn) {
	        var firstTime = true;
	
	        return extend(function () {
	            if (hooks.deprecationHandler != null) {
	                hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                var args = [];
	                var arg;
	                for (var i = 0; i < arguments.length; i++) {
	                    arg = '';
	                    if (typeof arguments[i] === 'object') {
	                        arg += '\n[' + i + '] ';
	                        for (var key in arguments[0]) {
	                            arg += key + ': ' + arguments[0][key] + ', ';
	                        }
	                        arg = arg.slice(0, -2); // Remove trailing comma and space
	                    } else {
	                        arg = arguments[i];
	                    }
	                    args.push(arg);
	                }
	                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }
	
	    var deprecations = {};
	
	    function deprecateSimple(name, msg) {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }
	
	    hooks.suppressDeprecationWarnings = false;
	    hooks.deprecationHandler = null;
	
	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }
	
	    function set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (isFunction(prop)) {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        this._dayOfMonthOrdinalParseLenient = new RegExp(
	            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	                '|' + (/\d{1,2}/).source);
	    }
	
	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig), prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        for (prop in parentConfig) {
	            if (hasOwnProp(parentConfig, prop) &&
	                    !hasOwnProp(childConfig, prop) &&
	                    isObject(parentConfig[prop])) {
	                // make sure changes to properties don't modify parent config
	                res[prop] = extend({}, res[prop]);
	            }
	        }
	        return res;
	    }
	
	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }
	
	    var keys;
	
	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i, res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }
	
	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };
	
	    function calendar (key, mom, now) {
	        var output = this._calendar[key] || this._calendar['sameElse'];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }
	
	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };
	
	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];
	
	        if (format || !formatUpper) {
	            return format;
	        }
	
	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });
	
	        return this._longDateFormat[key];
	    }
	
	    var defaultInvalidDate = 'Invalid date';
	
	    function invalidDate () {
	        return this._invalidDate;
	    }
	
	    var defaultOrdinal = '%d';
	    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
	
	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }
	
	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        ss : '%d seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };
	
	    function relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (isFunction(output)) ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }
	
	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }
	
	    var aliases = {};
	
	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }
	
	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }
	
	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;
	
	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }
	
	        return normalizedInput;
	    }
	
	    var priorities = {};
	
	    function addUnitPriority(unit, priority) {
	        priorities[unit] = priority;
	    }
	
	    function getPrioritizedUnits(unitsObj) {
	        var units = [];
	        for (var u in unitsObj) {
	            units.push({unit: u, priority: priorities[u]});
	        }
	        units.sort(function (a, b) {
	            return a.priority - b.priority;
	        });
	        return units;
	    }
	
	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }
	
	    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
	
	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
	
	    var formatFunctions = {};
	
	    var formatTokenFunctions = {};
	
	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }
	
	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }
	
	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;
	
	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }
	
	        return function (mom) {
	            var output = '', i;
	            for (i = 0; i < length; i++) {
	                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }
	
	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }
	
	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
	
	        return formatFunctions[format](m);
	    }
	
	    function expandFormat(format, locale) {
	        var i = 5;
	
	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }
	
	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }
	
	        return format;
	    }
	
	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999
	
	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf
	
	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	
	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
	
	    // any word (or two) characters or numbers including two/three word month in arabic.
	    // includes scottish gaelic two word and hyphenated months
	    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
	
	    var regexes = {};
	
	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }
	
	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }
	
	        return regexes[token](config._strict, config._locale);
	    }
	
	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }));
	    }
	
	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }
	
	    var tokens = {};
	
	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (isNumber(callback)) {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }
	
	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }
	
	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }
	
	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;
	    var WEEK = 7;
	    var WEEKDAY = 8;
	
	    // FORMATTING
	
	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? '' + y : '+' + y;
	    });
	
	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });
	
	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
	
	    // ALIASES
	
	    addUnitAlias('year', 'y');
	
	    // PRIORITIES
	
	    addUnitPriority('year', 1);
	
	    // PARSING
	
	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);
	
	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });
	
	    // HELPERS
	
	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }
	
	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }
	
	    // HOOKS
	
	    hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };
	
	    // MOMENTS
	
	    var getSetYear = makeGetSet('FullYear', true);
	
	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }
	
	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                set$1(this, unit, value);
	                hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get(this, unit);
	            }
	        };
	    }
	
	    function get (mom, unit) {
	        return mom.isValid() ?
	            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	    }
	
	    function set$1 (mom, unit, value) {
	        if (mom.isValid() && !isNaN(value)) {
	            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
	            }
	            else {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function stringGet (units) {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units]();
	        }
	        return this;
	    }
	
	
	    function stringSet (units, value) {
	        if (typeof units === 'object') {
	            units = normalizeObjectUnits(units);
	            var prioritized = getPrioritizedUnits(units);
	            for (var i = 0; i < prioritized.length; i++) {
	                this[prioritized[i].unit](units[prioritized[i].unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }
	
	    function mod(n, x) {
	        return ((n % x) + x) % x;
	    }
	
	    var indexOf;
	
	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }
	
	    function daysInMonth(year, month) {
	        if (isNaN(year) || isNaN(month)) {
	            return NaN;
	        }
	        var modMonth = mod(month, 12);
	        year += (month - modMonth) / 12;
	        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
	    }
	
	    // FORMATTING
	
	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });
	
	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });
	
	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });
	
	    // ALIASES
	
	    addUnitAlias('month', 'M');
	
	    // PRIORITY
	
	    addUnitPriority('month', 8);
	
	    // PARSING
	
	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });
	
	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });
	
	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });
	
	    // LOCALES
	
	    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m, format) {
	        if (!m) {
	            return isArray(this._months) ? this._months :
	                this._months['standalone'];
	        }
	        return isArray(this._months) ? this._months[m.month()] :
	            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
	    }
	
	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m, format) {
	        if (!m) {
	            return isArray(this._monthsShort) ? this._monthsShort :
	                this._monthsShort['standalone'];
	        }
	        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }
	
	    function handleStrictParse(monthName, format, strict) {
	        var i, ii, mom, llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }
	
	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }
	
	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;
	
	        if (this._monthsParseExact) {
	            return handleStrictParse.call(this, monthName, format, strict);
	        }
	
	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }
	
	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function setMonth (mom, value) {
	        var dayOfMonth;
	
	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }
	
	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (!isNumber(value)) {
	                    return mom;
	                }
	            }
	        }
	
	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }
	
	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get(this, 'Month');
	        }
	    }
	
	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }
	
	    var defaultMonthsShortRegex = matchWord;
	    function monthsShortRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsShortRegex')) {
	                this._monthsShortRegex = defaultMonthsShortRegex;
	            }
	            return this._monthsShortStrictRegex && isStrict ?
	                this._monthsShortStrictRegex : this._monthsShortRegex;
	        }
	    }
	
	    var defaultMonthsRegex = matchWord;
	    function monthsRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                this._monthsRegex = defaultMonthsRegex;
	            }
	            return this._monthsStrictRegex && isStrict ?
	                this._monthsStrictRegex : this._monthsRegex;
	        }
	    }
	
	    function computeMonthsParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }
	
	        var shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	        }
	        for (i = 0; i < 24; i++) {
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }
	
	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    }
	
	    function createDate (y, m, d, h, M, s, ms) {
	        // can't just apply() to create a date:
	        // https://stackoverflow.com/q/181348
	        var date;
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            date = new Date(y + 400, m, d, h, M, s, ms);
	            if (isFinite(date.getFullYear())) {
	                date.setFullYear(y);
	            }
	        } else {
	            date = new Date(y, m, d, h, M, s, ms);
	        }
	
	        return date;
	    }
	
	    function createUTCDate (y) {
	        var date;
	        // the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            var args = Array.prototype.slice.call(arguments);
	            // preserve leap years using a full 400 year cycle, then reset
	            args[0] = y + 400;
	            date = new Date(Date.UTC.apply(null, args));
	            if (isFinite(date.getUTCFullYear())) {
	                date.setUTCFullYear(y);
	            }
	        } else {
	            date = new Date(Date.UTC.apply(null, arguments));
	        }
	
	        return date;
	    }
	
	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
	
	        return -fwdlw + fwd - 1;
	    }
	
	    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear, resDayOfYear;
	
	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }
	
	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear
	        };
	    }
	
	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek, resYear;
	
	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }
	
	        return {
	            week: resWeek,
	            year: resYear
	        };
	    }
	
	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }
	
	    // FORMATTING
	
	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
	
	    // ALIASES
	
	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');
	
	    // PRIORITIES
	
	    addUnitPriority('week', 5);
	    addUnitPriority('isoWeek', 5);
	
	    // PARSING
	
	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);
	
	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });
	
	    // HELPERS
	
	    // LOCALES
	
	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }
	
	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 6th is the first week of the year.
	    };
	
	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }
	
	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }
	
	    // MOMENTS
	
	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }
	
	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }
	
	    // FORMATTING
	
	    addFormatToken('d', 0, 'do', 'day');
	
	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });
	
	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });
	
	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });
	
	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');
	
	    // ALIASES
	
	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');
	
	    // PRIORITY
	    addUnitPriority('day', 11);
	    addUnitPriority('weekday', 11);
	    addUnitPriority('isoWeekday', 11);
	
	    // PARSING
	
	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd',   function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd',   function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });
	
	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });
	
	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });
	
	    // HELPERS
	
	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }
	
	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }
	
	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }
	
	        return null;
	    }
	
	    function parseIsoWeekday(input, locale) {
	        if (typeof input === 'string') {
	            return locale.weekdaysParse(input) % 7 || 7;
	        }
	        return isNaN(input) ? null : input;
	    }
	
	    // LOCALES
	    function shiftWeekdays (ws, n) {
	        return ws.slice(n, 7).concat(ws.slice(0, n));
	    }
	
	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m, format) {
	        var weekdays = isArray(this._weekdays) ? this._weekdays :
	            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
	        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
	            : (m) ? weekdays[m.day()] : weekdays;
	    }
	
	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
	            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
	    }
	
	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
	            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
	    }
	
	    function handleStrictParse$1(weekdayName, format, strict) {
	        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];
	
	            for (i = 0; i < 7; ++i) {
	                mom = createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }
	
	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }
	
	    function localeWeekdaysParse (weekdayName, format, strict) {
	        var i, mom, regex;
	
	        if (this._weekdaysParseExact) {
	            return handleStrictParse$1.call(this, weekdayName, format, strict);
	        }
	
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }
	
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	
	            mom = createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
	                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
	                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
	            }
	            if (!this._weekdaysParse[i]) {
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function getSetDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }
	
	    function getSetLocaleDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }
	
	    function getSetISODayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	
	        if (input != null) {
	            var weekday = parseIsoWeekday(input, this.localeData());
	            return this.day(this.day() % 7 ? weekday : weekday - 7);
	        } else {
	            return this.day() || 7;
	        }
	    }
	
	    var defaultWeekdaysRegex = matchWord;
	    function weekdaysRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                this._weekdaysRegex = defaultWeekdaysRegex;
	            }
	            return this._weekdaysStrictRegex && isStrict ?
	                this._weekdaysStrictRegex : this._weekdaysRegex;
	        }
	    }
	
	    var defaultWeekdaysShortRegex = matchWord;
	    function weekdaysShortRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	            }
	            return this._weekdaysShortStrictRegex && isStrict ?
	                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	        }
	    }
	
	    var defaultWeekdaysMinRegex = matchWord;
	    function weekdaysMinRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	            }
	            return this._weekdaysMinStrictRegex && isStrict ?
	                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	        }
	    }
	
	
	    function computeWeekdaysParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }
	
	        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom, minp, shortp, longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, 1]).day(i);
	            minp = this.weekdaysMin(mom, '');
	            shortp = this.weekdaysShort(mom, '');
	            longp = this.weekdays(mom, '');
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 7; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }
	
	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;
	
	        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	    }
	
	    // FORMATTING
	
	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }
	
	    function kFormat() {
	        return this.hours() || 24;
	    }
	
	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);
	
	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });
	
	    addFormatToken('hmmss', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });
	
	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });
	
	    addFormatToken('Hmmss', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });
	
	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }
	
	    meridiem('a', true);
	    meridiem('A', false);
	
	    // ALIASES
	
	    addUnitAlias('hour', 'h');
	
	    // PRIORITY
	    addUnitPriority('hour', 13);
	
	    // PARSING
	
	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }
	
	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('k',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);
	    addRegexToken('kk', match1to2, match2);
	
	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);
	
	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['k', 'kk'], function (input, array, config) {
	        var kInput = toInt(input);
	        array[HOUR] = kInput === 24 ? 0 : kInput;
	    });
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });
	
	    // LOCALES
	
	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }
	
	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }
	
	
	    // MOMENTS
	
	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour they want. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);
	
	    var baseConfig = {
	        calendar: defaultCalendar,
	        longDateFormat: defaultLongDateFormat,
	        invalidDate: defaultInvalidDate,
	        ordinal: defaultOrdinal,
	        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	        relativeTime: defaultRelativeTime,
	
	        months: defaultLocaleMonths,
	        monthsShort: defaultLocaleMonthsShort,
	
	        week: defaultLocaleWeek,
	
	        weekdays: defaultLocaleWeekdays,
	        weekdaysMin: defaultLocaleWeekdaysMin,
	        weekdaysShort: defaultLocaleWeekdaysShort,
	
	        meridiemParse: defaultLocaleMeridiemParse
	    };
	
	    // internal storage for locale config files
	    var locales = {};
	    var localeFamilies = {};
	    var globalLocale;
	
	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }
	
	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;
	
	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return globalLocale;
	    }
	
	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && (typeof module !== 'undefined') &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                var aliasedRequire = require;
	                __webpack_require__(519)("./" + name);
	                getSetGlobalLocale(oldLocale);
	            } catch (e) {}
	        }
	        return locales[name];
	    }
	
	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }
	
	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	            else {
	                if ((typeof console !==  'undefined') && console.warn) {
	                    //warn user if arguments are passed but the locale could not be set
	                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
	                }
	            }
	        }
	
	        return globalLocale._abbr;
	    }
	
	    function defineLocale (name, config) {
	        if (config !== null) {
	            var locale, parentConfig = baseConfig;
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple('defineLocaleOverride',
	                        'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale ' +
	                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
	                parentConfig = locales[name]._config;
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    parentConfig = locales[config.parentLocale]._config;
	                } else {
	                    locale = loadLocale(config.parentLocale);
	                    if (locale != null) {
	                        parentConfig = locale._config;
	                    } else {
	                        if (!localeFamilies[config.parentLocale]) {
	                            localeFamilies[config.parentLocale] = [];
	                        }
	                        localeFamilies[config.parentLocale].push({
	                            name: name,
	                            config: config
	                        });
	                        return null;
	                    }
	                }
	            }
	            locales[name] = new Locale(mergeConfigs(parentConfig, config));
	
	            if (localeFamilies[name]) {
	                localeFamilies[name].forEach(function (x) {
	                    defineLocale(x.name, x.config);
	                });
	            }
	
	            // backwards compat for now: also set the locale
	            // make sure we set the locale AFTER all child locales have been
	            // created, so we won't end up with the child locale set.
	            getSetGlobalLocale(name);
	
	
	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }
	
	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale, tmpLocale, parentConfig = baseConfig;
	            // MERGE
	            tmpLocale = loadLocale(name);
	            if (tmpLocale != null) {
	                parentConfig = tmpLocale._config;
	            }
	            config = mergeConfigs(parentConfig, config);
	            locale = new Locale(config);
	            locale.parentLocale = locales[name];
	            locales[name] = locale;
	
	            // backwards compat for now: also set the locale
	            getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }
	
	    // returns locale data
	    function getLocale (key) {
	        var locale;
	
	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }
	
	        if (!key) {
	            return globalLocale;
	        }
	
	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }
	
	        return chooseLocale(key);
	    }
	
	    function listLocales() {
	        return keys(locales);
	    }
	
	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;
	
	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;
	
	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }
	
	            getParsingFlags(m).overflow = overflow;
	        }
	
	        return m;
	    }
	
	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }
	
	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(hooks.now());
	        if (config._useUTC) {
	            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }
	
	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, expectedWeekday, yearToUse;
	
	        if (config._d) {
	            return;
	        }
	
	        currentDate = currentDateArray(config);
	
	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }
	
	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear != null) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
	
	            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }
	
	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }
	
	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }
	
	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }
	
	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }
	
	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
	
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }
	
	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	
	        // check for mismatching day of week
	        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
	            getParsingFlags(config).weekdayMismatch = true;
	        }
	    }
	
	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
	
	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;
	
	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;
	
	            var curWeek = weekOfYear(createLocal(), dow, doy);
	
	            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
	
	            // Default to current week.
	            week = defaults(w.w, curWeek.week);
	
	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from beginning of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to beginning of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }
	
	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	
	    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
	
	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	        ['YYYY-DDD', /\d{4}-\d{3}/],
	        ['YYYY-MM', /\d{4}-\d\d/, false],
	        ['YYYYYYMMDD', /[+-]\d{10}/],
	        ['YYYYMMDD', /\d{8}/],
	        // YYYYMM is NOT allowed by the standard
	        ['GGGG[W]WWE', /\d{4}W\d{3}/],
	        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	        ['YYYYDDD', /\d{7}/]
	    ];
	
	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	        ['HH:mm', /\d\d:\d\d/],
	        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	        ['HHmmss', /\d\d\d\d\d\d/],
	        ['HHmm', /\d\d\d\d/],
	        ['HH', /\d\d/]
	    ];
	
	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
	
	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime, dateFormat, timeFormat, tzFormat;
	
	        if (match) {
	            getParsingFlags(config).iso = true;
	
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimes.length; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }
	
	    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
	
	    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
	        var result = [
	            untruncateYear(yearStr),
	            defaultLocaleMonthsShort.indexOf(monthStr),
	            parseInt(dayStr, 10),
	            parseInt(hourStr, 10),
	            parseInt(minuteStr, 10)
	        ];
	
	        if (secondStr) {
	            result.push(parseInt(secondStr, 10));
	        }
	
	        return result;
	    }
	
	    function untruncateYear(yearStr) {
	        var year = parseInt(yearStr, 10);
	        if (year <= 49) {
	            return 2000 + year;
	        } else if (year <= 999) {
	            return 1900 + year;
	        }
	        return year;
	    }
	
	    function preprocessRFC2822(s) {
	        // Remove comments and folding whitespace and replace multiple-spaces with a single space
	        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
	    }
	
	    function checkWeekday(weekdayStr, parsedInput, config) {
	        if (weekdayStr) {
	            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
	            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
	            if (weekdayProvided !== weekdayActual) {
	                getParsingFlags(config).weekdayMismatch = true;
	                config._isValid = false;
	                return false;
	            }
	        }
	        return true;
	    }
	
	    var obsOffsets = {
	        UT: 0,
	        GMT: 0,
	        EDT: -4 * 60,
	        EST: -5 * 60,
	        CDT: -5 * 60,
	        CST: -6 * 60,
	        MDT: -6 * 60,
	        MST: -7 * 60,
	        PDT: -7 * 60,
	        PST: -8 * 60
	    };
	
	    function calculateOffset(obsOffset, militaryOffset, numOffset) {
	        if (obsOffset) {
	            return obsOffsets[obsOffset];
	        } else if (militaryOffset) {
	            // the only allowed military tz is Z
	            return 0;
	        } else {
	            var hm = parseInt(numOffset, 10);
	            var m = hm % 100, h = (hm - m) / 100;
	            return h * 60 + m;
	        }
	    }
	
	    // date and time from ref 2822 format
	    function configFromRFC2822(config) {
	        var match = rfc2822.exec(preprocessRFC2822(config._i));
	        if (match) {
	            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
	            if (!checkWeekday(match[1], parsedArray, config)) {
	                return;
	            }
	
	            config._a = parsedArray;
	            config._tzm = calculateOffset(match[8], match[9], match[10]);
	
	            config._d = createUTCDate.apply(null, config._a);
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	
	            getParsingFlags(config).rfc2822 = true;
	        } else {
	            config._isValid = false;
	        }
	    }
	
	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);
	
	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }
	
	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }
	
	        configFromRFC2822(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }
	
	        // Final attempt, use Input Fallback
	        hooks.createFromInputFallback(config);
	    }
	
	    hooks.createFromInputFallback = deprecate(
	        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	        'discouraged and will be removed in an upcoming major release. Please refer to ' +
	        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );
	
	    // constant that refers to the ISO standard
	    hooks.ISO_8601 = function () {};
	
	    // constant that refers to the RFC 2822 form
	    hooks.RFC_2822 = function () {};
	
	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }
	        if (config._f === hooks.RFC_2822) {
	            configFromRFC2822(config);
	            return;
	        }
	        config._a = [];
	        getParsingFlags(config).empty = true;
	
	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;
	
	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
	
	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            // console.log('token', token, 'parsedInput', parsedInput,
	            //         'regex', getParseRegexForToken(token, config));
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }
	
	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }
	
	        // clear _12h flag if hour is <= 12
	        if (config._a[HOUR] <= 12 &&
	            getParsingFlags(config).bigHour === true &&
	            config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	
	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
	
	        configFromArray(config);
	        checkOverflow(config);
	    }
	
	
	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;
	
	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }
	
	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,
	
	            scoreToBeat,
	            i,
	            currentScore;
	
	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }
	
	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);
	
	            if (!isValid(tempConfig)) {
	                continue;
	            }
	
	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;
	
	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
	
	            getParsingFlags(tempConfig).score = currentScore;
	
	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }
	
	        extend(config, bestMoment || tempConfig);
	    }
	
	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }
	
	        var i = normalizeObjectUnits(config._i);
	        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	            return obj && parseInt(obj, 10);
	        });
	
	        configFromArray(config);
	    }
	
	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }
	
	        return res;
	    }
	
	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;
	
	        config._locale = config._locale || getLocale(config._l);
	
	        if (input === null || (format === undefined && input === '')) {
	            return createInvalid({nullInput: true});
	        }
	
	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }
	
	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isDate(input)) {
	            config._d = input;
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        }  else {
	            configFromInput(config);
	        }
	
	        if (!isValid(config)) {
	            config._d = null;
	        }
	
	        return config;
	    }
	
	    function configFromInput(config) {
	        var input = config._i;
	        if (isUndefined(input)) {
	            config._d = new Date(hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (isObject(input)) {
	            configFromObject(config);
	        } else if (isNumber(input)) {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            hooks.createFromInputFallback(config);
	        }
	    }
	
	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};
	
	        if (locale === true || locale === false) {
	            strict = locale;
	            locale = undefined;
	        }
	
	        if ((isObject(input) && isObjectEmpty(input)) ||
	                (isArray(input) && input.length === 0)) {
	            input = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;
	
	        return createFromConfig(c);
	    }
	
	    function createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }
	
	    var prototypeMin = deprecate(
	        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	        function () {
	            var other = createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other < this ? this : other;
	            } else {
	                return createInvalid();
	            }
	        }
	    );
	
	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	        function () {
	            var other = createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other > this ? this : other;
	            } else {
	                return createInvalid();
	            }
	        }
	    );
	
	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }
	
	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);
	
	        return pickBy('isBefore', args);
	    }
	
	    function max () {
	        var args = [].slice.call(arguments, 0);
	
	        return pickBy('isAfter', args);
	    }
	
	    var now = function () {
	        return Date.now ? Date.now() : +(new Date());
	    };
	
	    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];
	
	    function isDurationValid(m) {
	        for (var key in m) {
	            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
	                return false;
	            }
	        }
	
	        var unitHasDecimal = false;
	        for (var i = 0; i < ordering.length; ++i) {
	            if (m[ordering[i]]) {
	                if (unitHasDecimal) {
	                    return false; // only allow non-integers for smallest unit
	                }
	                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                    unitHasDecimal = true;
	                }
	            }
	        }
	
	        return true;
	    }
	
	    function isValid$1() {
	        return this._isValid;
	    }
	
	    function createInvalid$1() {
	        return createDuration(NaN);
	    }
	
	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;
	
	        this._isValid = isDurationValid(normalizedInput);
	
	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible to translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;
	
	        this._data = {};
	
	        this._locale = getLocale();
	
	        this._bubble();
	    }
	
	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }
	
	    function absRound (number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }
	
	    // FORMATTING
	
	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }
	
	    offset('Z', ':');
	    offset('ZZ', '');
	
	    // PARSING
	
	    addRegexToken('Z',  matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });
	
	    // HELPERS
	
	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;
	
	    function offsetFromString(matcher, string) {
	        var matches = (string || '').match(matcher);
	
	        if (matches === null) {
	            return null;
	        }
	
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);
	
	        return minutes === 0 ?
	          0 :
	          parts[0] === '+' ? minutes : -minutes;
	    }
	
	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return createLocal(input).local();
	        }
	    }
	
	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }
	
	    // HOOKS
	
	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    hooks.updateOffset = function () {};
	
	    // MOMENTS
	
	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime, keepMinutes) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	                if (input === null) {
	                    return this;
	                }
	            } else if (Math.abs(input) < 16 && !keepMinutes) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }
	
	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }
	
	            this.utcOffset(input, keepLocalTime);
	
	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }
	
	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }
	
	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;
	
	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }
	
	    function setOffsetToParsedOffset () {
	        if (this._tzm != null) {
	            this.utcOffset(this._tzm, false, true);
	        } else if (typeof this._i === 'string') {
	            var tZone = offsetFromString(matchOffset, this._i);
	            if (tZone != null) {
	                this.utcOffset(tZone);
	            }
	            else {
	                this.utcOffset(0, true);
	            }
	        }
	        return this;
	    }
	
	    function hasAlignedHourOffset (input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? createLocal(input).utcOffset() : 0;
	
	        return (this.utcOffset() - input) % 60 === 0;
	    }
	
	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }
	
	    function isDaylightSavingTimeShifted () {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }
	
	        var c = {};
	
	        copyConfig(c, this);
	        c = prepareConfig(c);
	
	        if (c._a) {
	            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }
	
	        return this._isDSTShifted;
	    }
	
	    function isLocal () {
	        return this.isValid() ? !this._isUTC : false;
	    }
	
	    function isUtcOffset () {
	        return this.isValid() ? this._isUTC : false;
	    }
	
	    function isUtc () {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }
	
	    // ASP.NET json date format regex
	    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
	
	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    // and further modified to allow for strings containing both week and day
	    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
	
	    function createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;
	
	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (isNumber(input)) {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])                         * sign,
	                h  : toInt(match[HOUR])                         * sign,
	                m  : toInt(match[MINUTE])                       * sign,
	                s  : toInt(match[SECOND])                       * sign,
	                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
	            };
	        } else if (!!(match = isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                w : parseIso(match[4], sign),
	                d : parseIso(match[5], sign),
	                h : parseIso(match[6], sign),
	                m : parseIso(match[7], sign),
	                s : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
	
	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }
	
	        ret = new Duration(duration);
	
	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }
	
	        return ret;
	    }
	
	    createDuration.fn = Duration.prototype;
	    createDuration.invalid = createInvalid$1;
	
	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }
	
	    function positiveMomentsDifference(base, other) {
	        var res = {};
	
	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }
	
	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
	
	        return res;
	    }
	
	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return {milliseconds: 0, months: 0};
	        }
	
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }
	
	        return res;
	    }
	
	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
	                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
	                tmp = val; val = period; period = tmp;
	            }
	
	            val = typeof val === 'string' ? +val : val;
	            dur = createDuration(val, period);
	            addSubtract(this, dur, direction);
	            return this;
	        };
	    }
	
	    function addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);
	
	        if (!mom.isValid()) {
	            // No op
	            return;
	        }
	
	        updateOffset = updateOffset == null ? true : updateOffset;
	
	        if (months) {
	            setMonth(mom, get(mom, 'Month') + months * isAdding);
	        }
	        if (days) {
	            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	        }
	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (updateOffset) {
	            hooks.updateOffset(mom, days || months);
	        }
	    }
	
	    var add      = createAdder(1, 'add');
	    var subtract = createAdder(-1, 'subtract');
	
	    function getCalendarFormat(myMoment, now) {
	        var diff = myMoment.diff(now, 'days', true);
	        return diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	    }
	
	    function calendar$1 (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            format = hooks.calendarFormat(this, sod) || 'sameElse';
	
	        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
	
	        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
	    }
	
	    function clone () {
	        return new Moment(this);
	    }
	
	    function isAfter (input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }
	
	    function isBefore (input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }
	
	    function isBetween (from, to, units, inclusivity) {
	        var localFrom = isMoment(from) ? from : createLocal(from),
	            localTo = isMoment(to) ? to : createLocal(to);
	        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
	            return false;
	        }
	        inclusivity = inclusivity || '()';
	        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
	            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
	    }
	
	    function isSame (input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	        }
	    }
	
	    function isSameOrAfter (input, units) {
	        return this.isSame(input, units) || this.isAfter(input, units);
	    }
	
	    function isSameOrBefore (input, units) {
	        return this.isSame(input, units) || this.isBefore(input, units);
	    }
	
	    function diff (input, units, asFloat) {
	        var that,
	            zoneDelta,
	            output;
	
	        if (!this.isValid()) {
	            return NaN;
	        }
	
	        that = cloneWithOffset(input, this);
	
	        if (!that.isValid()) {
	            return NaN;
	        }
	
	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
	
	        units = normalizeUnits(units);
	
	        switch (units) {
	            case 'year': output = monthDiff(this, that) / 12; break;
	            case 'month': output = monthDiff(this, that); break;
	            case 'quarter': output = monthDiff(this, that) / 3; break;
	            case 'second': output = (this - that) / 1e3; break; // 1000
	            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
	            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
	            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
	            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
	            default: output = this - that;
	        }
	
	        return asFloat ? output : absFloor(output);
	    }
	
	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;
	
	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }
	
	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }
	
	    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
	
	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }
	
	    function toISOString(keepOffset) {
	        if (!this.isValid()) {
	            return null;
	        }
	        var utc = keepOffset !== true;
	        var m = utc ? this.clone().utc() : this;
	        if (m.year() < 0 || m.year() > 9999) {
	            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
	        }
	        if (isFunction(Date.prototype.toISOString)) {
	            // native implementation is ~50x faster, use it when we can
	            if (utc) {
	                return this.toDate().toISOString();
	            } else {
	                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
	            }
	        }
	        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
	    }
	
	    /**
	     * Return a human readable representation of a moment that can
	     * also be evaluated to get a new moment which is the same
	     *
	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	     */
	    function inspect () {
	        if (!this.isValid()) {
	            return 'moment.invalid(/* ' + this._i + ' */)';
	        }
	        var func = 'moment';
	        var zone = '';
	        if (!this.isLocal()) {
	            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	            zone = 'Z';
	        }
	        var prefix = '[' + func + '("]';
	        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
	        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
	        var suffix = zone + '[")]';
	
	        return this.format(prefix + year + datetime + suffix);
	    }
	
	    function format (inputString) {
	        if (!inputString) {
	            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }
	
	    function from (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 createLocal(time).isValid())) {
	            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }
	
	    function fromNow (withoutSuffix) {
	        return this.from(createLocal(), withoutSuffix);
	    }
	
	    function to (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 createLocal(time).isValid())) {
	            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }
	
	    function toNow (withoutSuffix) {
	        return this.to(createLocal(), withoutSuffix);
	    }
	
	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale (key) {
	        var newLocaleData;
	
	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }
	
	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );
	
	    function localeData () {
	        return this._locale;
	    }
	
	    var MS_PER_SECOND = 1000;
	    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
	    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
	    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
	
	    // actual modulo - handles negative numbers (for dates before 1970):
	    function mod$1(dividend, divisor) {
	        return (dividend % divisor + divisor) % divisor;
	    }
	
	    function localStartOfDate(y, m, d) {
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return new Date(y, m, d).valueOf();
	        }
	    }
	
	    function utcStartOfDate(y, m, d) {
	        // Date.UTC remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return Date.UTC(y, m, d);
	        }
	    }
	
	    function startOf (units) {
	        var time;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }
	
	        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
	
	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year(), 0, 1);
	                break;
	            case 'quarter':
	                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month(), 1);
	                break;
	            case 'week':
	                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
	                break;
	            case 'isoWeek':
	                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date());
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_MINUTE);
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_SECOND);
	                break;
	        }
	
	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }
	
	    function endOf (units) {
	        var time;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }
	
	        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
	
	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year() + 1, 0, 1) - 1;
	                break;
	            case 'quarter':
	                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
	                break;
	            case 'week':
	                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
	                break;
	            case 'isoWeek':
	                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
	                break;
	        }
	
	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }
	
	    function valueOf () {
	        return this._d.valueOf() - ((this._offset || 0) * 60000);
	    }
	
	    function unix () {
	        return Math.floor(this.valueOf() / 1000);
	    }
	
	    function toDate () {
	        return new Date(this.valueOf());
	    }
	
	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }
	
	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }
	
	    function toJSON () {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }
	
	    function isValid$2 () {
	        return isValid(this);
	    }
	
	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }
	
	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }
	
	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict
	        };
	    }
	
	    // FORMATTING
	
	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });
	
	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });
	
	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }
	
	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');
	
	    // ALIASES
	
	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');
	
	    // PRIORITY
	
	    addUnitPriority('weekYear', 1);
	    addUnitPriority('isoWeekYear', 1);
	
	
	    // PARSING
	
	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);
	
	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });
	
	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = hooks.parseTwoDigitYear(input);
	    });
	
	    // MOMENTS
	
	    function getSetWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input,
	                this.week(),
	                this.weekday(),
	                this.localeData()._week.dow,
	                this.localeData()._week.doy);
	    }
	
	    function getSetISOWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input, this.isoWeek(), this.isoWeekday(), 1, 4);
	    }
	
	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }
	
	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }
	
	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }
	
	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
	
	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }
	
	    // FORMATTING
	
	    addFormatToken('Q', 0, 'Qo', 'quarter');
	
	    // ALIASES
	
	    addUnitAlias('quarter', 'Q');
	
	    // PRIORITY
	
	    addUnitPriority('quarter', 7);
	
	    // PARSING
	
	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });
	
	    // MOMENTS
	
	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }
	
	    // FORMATTING
	
	    addFormatToken('D', ['DD', 2], 'Do', 'date');
	
	    // ALIASES
	
	    addUnitAlias('date', 'D');
	
	    // PRIORITY
	    addUnitPriority('date', 9);
	
	    // PARSING
	
	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        return isStrict ?
	          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
	          locale._dayOfMonthOrdinalParseLenient;
	    });
	
	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0]);
	    });
	
	    // MOMENTS
	
	    var getSetDayOfMonth = makeGetSet('Date', true);
	
	    // FORMATTING
	
	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
	
	    // ALIASES
	
	    addUnitAlias('dayOfYear', 'DDD');
	
	    // PRIORITY
	    addUnitPriority('dayOfYear', 4);
	
	    // PARSING
	
	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });
	
	    // HELPERS
	
	    // MOMENTS
	
	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }
	
	    // FORMATTING
	
	    addFormatToken('m', ['mm', 2], 0, 'minute');
	
	    // ALIASES
	
	    addUnitAlias('minute', 'm');
	
	    // PRIORITY
	
	    addUnitPriority('minute', 14);
	
	    // PARSING
	
	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);
	
	    // MOMENTS
	
	    var getSetMinute = makeGetSet('Minutes', false);
	
	    // FORMATTING
	
	    addFormatToken('s', ['ss', 2], 0, 'second');
	
	    // ALIASES
	
	    addUnitAlias('second', 's');
	
	    // PRIORITY
	
	    addUnitPriority('second', 15);
	
	    // PARSING
	
	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);
	
	    // MOMENTS
	
	    var getSetSecond = makeGetSet('Seconds', false);
	
	    // FORMATTING
	
	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });
	
	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });
	
	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });
	
	
	    // ALIASES
	
	    addUnitAlias('millisecond', 'ms');
	
	    // PRIORITY
	
	    addUnitPriority('millisecond', 16);
	
	    // PARSING
	
	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);
	
	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }
	
	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }
	
	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS
	
	    var getSetMillisecond = makeGetSet('Milliseconds', false);
	
	    // FORMATTING
	
	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');
	
	    // MOMENTS
	
	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }
	
	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }
	
	    var proto = Moment.prototype;
	
	    proto.add               = add;
	    proto.calendar          = calendar$1;
	    proto.clone             = clone;
	    proto.diff              = diff;
	    proto.endOf             = endOf;
	    proto.format            = format;
	    proto.from              = from;
	    proto.fromNow           = fromNow;
	    proto.to                = to;
	    proto.toNow             = toNow;
	    proto.get               = stringGet;
	    proto.invalidAt         = invalidAt;
	    proto.isAfter           = isAfter;
	    proto.isBefore          = isBefore;
	    proto.isBetween         = isBetween;
	    proto.isSame            = isSame;
	    proto.isSameOrAfter     = isSameOrAfter;
	    proto.isSameOrBefore    = isSameOrBefore;
	    proto.isValid           = isValid$2;
	    proto.lang              = lang;
	    proto.locale            = locale;
	    proto.localeData        = localeData;
	    proto.max               = prototypeMax;
	    proto.min               = prototypeMin;
	    proto.parsingFlags      = parsingFlags;
	    proto.set               = stringSet;
	    proto.startOf           = startOf;
	    proto.subtract          = subtract;
	    proto.toArray           = toArray;
	    proto.toObject          = toObject;
	    proto.toDate            = toDate;
	    proto.toISOString       = toISOString;
	    proto.inspect           = inspect;
	    proto.toJSON            = toJSON;
	    proto.toString          = toString;
	    proto.unix              = unix;
	    proto.valueOf           = valueOf;
	    proto.creationData      = creationData;
	    proto.year       = getSetYear;
	    proto.isLeapYear = getIsLeapYear;
	    proto.weekYear    = getSetWeekYear;
	    proto.isoWeekYear = getSetISOWeekYear;
	    proto.quarter = proto.quarters = getSetQuarter;
	    proto.month       = getSetMonth;
	    proto.daysInMonth = getDaysInMonth;
	    proto.week           = proto.weeks        = getSetWeek;
	    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
	    proto.weeksInYear    = getWeeksInYear;
	    proto.isoWeeksInYear = getISOWeeksInYear;
	    proto.date       = getSetDayOfMonth;
	    proto.day        = proto.days             = getSetDayOfWeek;
	    proto.weekday    = getSetLocaleDayOfWeek;
	    proto.isoWeekday = getSetISODayOfWeek;
	    proto.dayOfYear  = getSetDayOfYear;
	    proto.hour = proto.hours = getSetHour;
	    proto.minute = proto.minutes = getSetMinute;
	    proto.second = proto.seconds = getSetSecond;
	    proto.millisecond = proto.milliseconds = getSetMillisecond;
	    proto.utcOffset            = getSetOffset;
	    proto.utc                  = setOffsetToUTC;
	    proto.local                = setOffsetToLocal;
	    proto.parseZone            = setOffsetToParsedOffset;
	    proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    proto.isDST                = isDaylightSavingTime;
	    proto.isLocal              = isLocal;
	    proto.isUtcOffset          = isUtcOffset;
	    proto.isUtc                = isUtc;
	    proto.isUTC                = isUtc;
	    proto.zoneAbbr = getZoneAbbr;
	    proto.zoneName = getZoneName;
	    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
	    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
	
	    function createUnix (input) {
	        return createLocal(input * 1000);
	    }
	
	    function createInZone () {
	        return createLocal.apply(null, arguments).parseZone();
	    }
	
	    function preParsePostFormat (string) {
	        return string;
	    }
	
	    var proto$1 = Locale.prototype;
	
	    proto$1.calendar        = calendar;
	    proto$1.longDateFormat  = longDateFormat;
	    proto$1.invalidDate     = invalidDate;
	    proto$1.ordinal         = ordinal;
	    proto$1.preparse        = preParsePostFormat;
	    proto$1.postformat      = preParsePostFormat;
	    proto$1.relativeTime    = relativeTime;
	    proto$1.pastFuture      = pastFuture;
	    proto$1.set             = set;
	
	    proto$1.months            =        localeMonths;
	    proto$1.monthsShort       =        localeMonthsShort;
	    proto$1.monthsParse       =        localeMonthsParse;
	    proto$1.monthsRegex       = monthsRegex;
	    proto$1.monthsShortRegex  = monthsShortRegex;
	    proto$1.week = localeWeek;
	    proto$1.firstDayOfYear = localeFirstDayOfYear;
	    proto$1.firstDayOfWeek = localeFirstDayOfWeek;
	
	    proto$1.weekdays       =        localeWeekdays;
	    proto$1.weekdaysMin    =        localeWeekdaysMin;
	    proto$1.weekdaysShort  =        localeWeekdaysShort;
	    proto$1.weekdaysParse  =        localeWeekdaysParse;
	
	    proto$1.weekdaysRegex       =        weekdaysRegex;
	    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
	    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;
	
	    proto$1.isPM = localeIsPM;
	    proto$1.meridiem = localeMeridiem;
	
	    function get$1 (format, index, field, setter) {
	        var locale = getLocale();
	        var utc = createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }
	
	    function listMonthsImpl (format, index, field) {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }
	
	        format = format || '';
	
	        if (index != null) {
	            return get$1(format, index, field, 'month');
	        }
	
	        var i;
	        var out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = get$1(format, i, field, 'month');
	        }
	        return out;
	    }
	
	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl (localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }
	
	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;
	
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }
	
	            format = format || '';
	        }
	
	        var locale = getLocale(),
	            shift = localeSorted ? locale._week.dow : 0;
	
	        if (index != null) {
	            return get$1(format, (index + shift) % 7, field, 'day');
	        }
	
	        var i;
	        var out = [];
	        for (i = 0; i < 7; i++) {
	            out[i] = get$1(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }
	
	    function listMonths (format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }
	
	    function listMonthsShort (format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }
	
	    function listWeekdays (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }
	
	    function listWeekdaysShort (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }
	
	    function listWeekdaysMin (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }
	
	    getSetGlobalLocale('en', {
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    // Side effect imports
	
	    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
	    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
	
	    var mathAbs = Math.abs;
	
	    function abs () {
	        var data           = this._data;
	
	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);
	
	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);
	
	        return this;
	    }
	
	    function addSubtract$1 (duration, input, value, direction) {
	        var other = createDuration(input, value);
	
	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;
	
	        return duration._bubble();
	    }
	
	    // supports only 2.0-style add(1, 's') or add(duration)
	    function add$1 (input, value) {
	        return addSubtract$1(this, input, value, 1);
	    }
	
	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function subtract$1 (input, value) {
	        return addSubtract$1(this, input, value, -1);
	    }
	
	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }
	
	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;
	
	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }
	
	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;
	
	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;
	
	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;
	
	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;
	
	        days += absFloor(hours / 24);
	
	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));
	
	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;
	
	        data.days   = days;
	        data.months = months;
	        data.years  = years;
	
	        return this;
	    }
	
	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }
	
	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }
	
	    function as (units) {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;
	
	        units = normalizeUnits(units);
	
	        if (units === 'month' || units === 'quarter' || units === 'year') {
	            days = this._days + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            switch (units) {
	                case 'month':   return months;
	                case 'quarter': return months / 3;
	                case 'year':    return months / 12;
	            }
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }
	
	    // TODO: Use this.as('ms')?
	    function valueOf$1 () {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }
	
	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }
	
	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asQuarters     = makeAs('Q');
	    var asYears        = makeAs('y');
	
	    function clone$1 () {
	        return createDuration(this);
	    }
	
	    function get$2 (units) {
	        units = normalizeUnits(units);
	        return this.isValid() ? this[units + 's']() : NaN;
	    }
	
	    function makeGetter(name) {
	        return function () {
	            return this.isValid() ? this._data[name] : NaN;
	        };
	    }
	
	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');
	
	    function weeks () {
	        return absFloor(this.days() / 7);
	    }
	
	    var round = Math.round;
	    var thresholds = {
	        ss: 44,         // a few seconds to seconds
	        s : 45,         // seconds to minute
	        m : 45,         // minutes to hour
	        h : 22,         // hours to day
	        d : 26,         // days to month
	        M : 11          // months to year
	    };
	
	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }
	
	    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
	        var duration = createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));
	
	        var a = seconds <= thresholds.ss && ['s', seconds]  ||
	                seconds < thresholds.s   && ['ss', seconds] ||
	                minutes <= 1             && ['m']           ||
	                minutes < thresholds.m   && ['mm', minutes] ||
	                hours   <= 1             && ['h']           ||
	                hours   < thresholds.h   && ['hh', hours]   ||
	                days    <= 1             && ['d']           ||
	                days    < thresholds.d   && ['dd', days]    ||
	                months  <= 1             && ['M']           ||
	                months  < thresholds.M   && ['MM', months]  ||
	                years   <= 1             && ['y']           || ['yy', years];
	
	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }
	
	    // This function allows you to set the rounding function for relative time strings
	    function getSetRelativeTimeRounding (roundingFunction) {
	        if (roundingFunction === undefined) {
	            return round;
	        }
	        if (typeof(roundingFunction) === 'function') {
	            round = roundingFunction;
	            return true;
	        }
	        return false;
	    }
	
	    // This function allows you to set a threshold for relative time strings
	    function getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        if (threshold === 's') {
	            thresholds.ss = limit - 1;
	        }
	        return true;
	    }
	
	    function humanize (withSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	
	        var locale = this.localeData();
	        var output = relativeTime$1(this, !withSuffix, locale);
	
	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }
	
	        return locale.postformat(output);
	    }
	
	    var abs$1 = Math.abs;
	
	    function sign(x) {
	        return ((x > 0) - (x < 0)) || +x;
	    }
	
	    function toISOString$1() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	
	        var seconds = abs$1(this._milliseconds) / 1000;
	        var days         = abs$1(this._days);
	        var months       = abs$1(this._months);
	        var minutes, hours, years;
	
	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;
	
	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;
	
	
	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
	        var total = this.asSeconds();
	
	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }
	
	        var totalSign = total < 0 ? '-' : '';
	        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
	        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
	        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
	
	        return totalSign + 'P' +
	            (Y ? ymSign + Y + 'Y' : '') +
	            (M ? ymSign + M + 'M' : '') +
	            (D ? daysSign + D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? hmsSign + h + 'H' : '') +
	            (m ? hmsSign + m + 'M' : '') +
	            (s ? hmsSign + s + 'S' : '');
	    }
	
	    var proto$2 = Duration.prototype;
	
	    proto$2.isValid        = isValid$1;
	    proto$2.abs            = abs;
	    proto$2.add            = add$1;
	    proto$2.subtract       = subtract$1;
	    proto$2.as             = as;
	    proto$2.asMilliseconds = asMilliseconds;
	    proto$2.asSeconds      = asSeconds;
	    proto$2.asMinutes      = asMinutes;
	    proto$2.asHours        = asHours;
	    proto$2.asDays         = asDays;
	    proto$2.asWeeks        = asWeeks;
	    proto$2.asMonths       = asMonths;
	    proto$2.asQuarters     = asQuarters;
	    proto$2.asYears        = asYears;
	    proto$2.valueOf        = valueOf$1;
	    proto$2._bubble        = bubble;
	    proto$2.clone          = clone$1;
	    proto$2.get            = get$2;
	    proto$2.milliseconds   = milliseconds;
	    proto$2.seconds        = seconds;
	    proto$2.minutes        = minutes;
	    proto$2.hours          = hours;
	    proto$2.days           = days;
	    proto$2.weeks          = weeks;
	    proto$2.months         = months;
	    proto$2.years          = years;
	    proto$2.humanize       = humanize;
	    proto$2.toISOString    = toISOString$1;
	    proto$2.toString       = toISOString$1;
	    proto$2.toJSON         = toISOString$1;
	    proto$2.locale         = locale;
	    proto$2.localeData     = localeData;
	
	    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
	    proto$2.lang = lang;
	
	    // Side effect imports
	
	    // FORMATTING
	
	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');
	
	    // PARSING
	
	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });
	
	    // Side effect imports
	
	
	    hooks.version = '2.24.0';
	
	    setHookCallback(createLocal);
	
	    hooks.fn                    = proto;
	    hooks.min                   = min;
	    hooks.max                   = max;
	    hooks.now                   = now;
	    hooks.utc                   = createUTC;
	    hooks.unix                  = createUnix;
	    hooks.months                = listMonths;
	    hooks.isDate                = isDate;
	    hooks.locale                = getSetGlobalLocale;
	    hooks.invalid               = createInvalid;
	    hooks.duration              = createDuration;
	    hooks.isMoment              = isMoment;
	    hooks.weekdays              = listWeekdays;
	    hooks.parseZone             = createInZone;
	    hooks.localeData            = getLocale;
	    hooks.isDuration            = isDuration;
	    hooks.monthsShort           = listMonthsShort;
	    hooks.weekdaysMin           = listWeekdaysMin;
	    hooks.defineLocale          = defineLocale;
	    hooks.updateLocale          = updateLocale;
	    hooks.locales               = listLocales;
	    hooks.weekdaysShort         = listWeekdaysShort;
	    hooks.normalizeUnits        = normalizeUnits;
	    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
	    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	    hooks.calendarFormat        = getCalendarFormat;
	    hooks.prototype             = proto;
	
	    // currently HTML5 input type only supports 24-hour formats
	    hooks.HTML5_FMT = {
	        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
	        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
	        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
	        DATE: 'YYYY-MM-DD',                             // <input type="date" />
	        TIME: 'HH:mm',                                  // <input type="time" />
	        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
	        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
	        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
	        MONTH: 'YYYY-MM'                                // <input type="month" />
	    };
	
	    return hooks;
	
	})));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47)(module)))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(556);
	} else {
	  module.exports = require('./cjs/react.development.js');
	}


/***/ },
/* 3 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 4 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 5 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(161);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(391),
	    baseMatchesProperty = __webpack_require__(392),
	    identity = __webpack_require__(39),
	    isArray = __webpack_require__(3),
	    property = __webpack_require__(501);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.methodsToAddFromFirestore = exports.defaultConfig = exports.actionTypes = exports.actionsPrefix = void 0;
	var actionsPrefix = '@@reduxFirestore';
	exports.actionsPrefix = actionsPrefix;
	var actionTypes = {
	  START: "".concat(actionsPrefix, "/START"),
	  ERROR: "".concat(actionsPrefix, "/ERROR"),
	  CLEAR_DATA: "".concat(actionsPrefix, "/CLEAR_DATA"),
	  CLEAR_ERROR: "".concat(actionsPrefix, "/CLEAR_ERROR"),
	  CLEAR_ERRORS: "".concat(actionsPrefix, "/CLEAR_ERRORS"),
	  SET_LISTENER: "".concat(actionsPrefix, "/SET_LISTENER"),
	  UNSET_LISTENER: "".concat(actionsPrefix, "/UNSET_LISTENER"),
	  GET_REQUEST: "".concat(actionsPrefix, "/GET_REQUEST"),
	  GET_SUCCESS: "".concat(actionsPrefix, "/GET_SUCCESS"),
	  GET_FAILURE: "".concat(actionsPrefix, "/GET_FAILURE"),
	  SET_REQUEST: "".concat(actionsPrefix, "/SET_REQUEST"),
	  SET_SUCCESS: "".concat(actionsPrefix, "/SET_SUCCESS"),
	  SET_FAILURE: "".concat(actionsPrefix, "/SET_FAILURE"),
	  ADD_REQUEST: "".concat(actionsPrefix, "/ADD_REQUEST"),
	  ADD_SUCCESS: "".concat(actionsPrefix, "/ADD_SUCCESS"),
	  ADD_FAILURE: "".concat(actionsPrefix, "/ADD_FAILURE"),
	  UPDATE_REQUEST: "".concat(actionsPrefix, "/UPDATE_REQUEST"),
	  UPDATE_SUCCESS: "".concat(actionsPrefix, "/UPDATE_SUCCESS"),
	  UPDATE_FAILURE: "".concat(actionsPrefix, "/UPDATE_FAILURE"),
	  DELETE_REQUEST: "".concat(actionsPrefix, "/DELETE_REQUEST"),
	  DELETE_SUCCESS: "".concat(actionsPrefix, "/DELETE_SUCCESS"),
	  DELETE_FAILURE: "".concat(actionsPrefix, "/DELETE_FAILURE"),
	  ATTACH_LISTENER: "".concat(actionsPrefix, "/ATTACH_LISTENER"),
	  LISTENER_RESPONSE: "".concat(actionsPrefix, "/LISTENER_RESPONSE"),
	  LISTENER_ERROR: "".concat(actionsPrefix, "/LISTENER_ERROR"),
	  ON_SNAPSHOT_REQUEST: "".concat(actionsPrefix, "/ON_SNAPSHOT_REQUEST"),
	  ON_SNAPSHOT_SUCCESS: "".concat(actionsPrefix, "/ON_SNAPSHOT_SUCCESS"),
	  ON_SNAPSHOT_FAILURE: "".concat(actionsPrefix, "/ON_SNAPSHOT_FAILURE"),
	  DOCUMENT_ADDED: "".concat(actionsPrefix, "/DOCUMENT_ADDED"),
	  DOCUMENT_MODIFIED: "".concat(actionsPrefix, "/DOCUMENT_MODIFIED"),
	  DOCUMENT_REMOVED: "".concat(actionsPrefix, "/DOCUMENT_REMOVED"),
	  TRANSACTION_START: "".concat(actionsPrefix, "/TRANSACTION_START"),
	  TRANSACTION_SUCCESS: "".concat(actionsPrefix, "/TRANSACTION_SUCCESS"),
	  TRANSACTION_FAILURE: "".concat(actionsPrefix, "/TRANSACTION_FAILURE")
	};
	exports.actionTypes = actionTypes;
	var defaultConfig = {
	  logListenerError: true,
	  enhancerNamespace: 'firestore',
	  helpersNamespace: null,
	  allowMultipleListeners: false,
	  preserveOnDelete: null,
	  preserveOnListenerError: null,
	  onAttemptCollectionDelete: null,
	  mergeOrdered: true,
	  mergeOrderedDocUpdates: true,
	  mergeOrderedCollectionUpdates: true
	};
	exports.defaultConfig = defaultConfig;
	var methodsToAddFromFirestore = ['collection', 'collectionGroup', 'configureClient', 'doc', 'batch', 'disableNetwork', 'enableNetwork', 'enablePersistence', 'ensureClientConfigured', 'setLogLevel', 'settings'];
	exports.methodsToAddFromFirestore = methodsToAddFromFirestore;
	var _default = {
	  actionsPrefix: actionsPrefix,
	  actionTypes: actionTypes,
	  defaultConfig: defaultConfig
	};
	exports.default = _default;

/***/ },
/* 9 */
/***/ function(module, exports) {

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	}
	
	module.exports = _interopRequireDefault;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(26),
	    getRawTag = __webpack_require__(424),
	    objectToString = __webpack_require__(454);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(57);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isString=isString,exports.createCallable=createCallable,exports.invokeArrayQuery=invokeArrayQuery,exports.wrapDisplayName=wrapDisplayName,exports.getChanges=getChanges,Object.defineProperty(exports,"getEventsFromInput",{enumerable:!0,get:function get(){return _events.getEventsFromInput}});var _filter2=_interopRequireDefault(__webpack_require__(181)),_some2=_interopRequireDefault(__webpack_require__(121)),_isEqual2=_interopRequireDefault(__webpack_require__(31)),_constant2=_interopRequireDefault(__webpack_require__(179)),_events=__webpack_require__(536);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isString(varToCheck){return"string"==typeof varToCheck||varToCheck instanceof String}function createCallable(f){return"function"==typeof f?f:(0,_constant2.default)(f)}function invokeArrayQuery(f,props){var result=createCallable(f)(props);return Array.isArray(result)?result:result?[result]:null}function getDisplayName(Component){return"string"==typeof Component?Component:Component?Component.displayName||Component.name||"Component":void 0}function wrapDisplayName(BaseComponent,hocName){return"".concat(hocName,"(").concat(getDisplayName(BaseComponent),")")}function getChanges(){var data=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],prevData=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],result={};return result.added=(0,_filter2.default)(data,function(d){return!(0,_some2.default)(prevData,function(p){return(0,_isEqual2.default)(d,p)})}),result.removed=(0,_filter2.default)(prevData,function(p){return!(0,_some2.default)(data,function(d){return(0,_isEqual2.default)(p,d)})}),result}
	//# sourceMappingURL=index.js.map

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	if (true) {
	  module.exports = __webpack_require__(550);
	} else {
	  module.exports = require("./cjs/react-router-dom.js");
	}


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(66),
	    isLength = __webpack_require__(116);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	if (false) {
	  var ReactIs = require('react-is');
	
	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(522)();
	}


/***/ },
/* 16 */
/***/ function(module, exports) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.v3ErrorMessage=exports.topLevelPaths=exports.supportedAuthProviders=exports.defaultConfig=exports.actionTypes=exports.actionsPrefix=void 0;var actionsPrefix="@@reactReduxFirebase";exports.actionsPrefix="@@reactReduxFirebase";var actionTypes={START:"".concat("@@reactReduxFirebase","/START"),SET:"".concat("@@reactReduxFirebase","/SET"),REMOVE:"".concat("@@reactReduxFirebase","/REMOVE"),MERGE:"".concat("@@reactReduxFirebase","/MERGE"),SET_PROFILE:"".concat("@@reactReduxFirebase","/SET_PROFILE"),LOGIN:"".concat("@@reactReduxFirebase","/LOGIN"),LOGOUT:"".concat("@@reactReduxFirebase","/LOGOUT"),LOGIN_ERROR:"".concat("@@reactReduxFirebase","/LOGIN_ERROR"),NO_VALUE:"".concat("@@reactReduxFirebase","/NO_VALUE"),UNAUTHORIZED_ERROR:"".concat("@@reactReduxFirebase","/UNAUTHORIZED_ERROR"),ERROR:"".concat("@@reactReduxFirebase","/ERROR"),CLEAR_ERRORS:"".concat("@@reactReduxFirebase","/CLEAR_ERRORS"),SET_LISTENER:"".concat("@@reactReduxFirebase","/SET_LISTENER"),UNSET_LISTENER:"".concat("@@reactReduxFirebase","/UNSET_LISTENER"),AUTHENTICATION_INIT_STARTED:"".concat("@@reactReduxFirebase","/AUTHENTICATION_INIT_STARTED"),AUTHENTICATION_INIT_FINISHED:"".concat("@@reactReduxFirebase","/AUTHENTICATION_INIT_FINISHED"),SESSION_START:"".concat("@@reactReduxFirebase","/SESSION_START"),SESSION_END:"".concat("@@reactReduxFirebase","/SESSION_END"),FILE_UPLOAD_START:"".concat("@@reactReduxFirebase","/FILE_UPLOAD_START"),FILE_UPLOAD_ERROR:"".concat("@@reactReduxFirebase","/FILE_UPLOAD_ERROR"),FILE_UPLOAD_PROGRESS:"".concat("@@reactReduxFirebase","/FILE_UPLOAD_PROGRESS"),FILE_UPLOAD_COMPLETE:"".concat("@@reactReduxFirebase","/FILE_UPLOAD_COMPLETE"),FILE_DELETE_START:"".concat("@@reactReduxFirebase","/FILE_DELETE_START"),FILE_DELETE_ERROR:"".concat("@@reactReduxFirebase","/FILE_DELETE_ERROR"),FILE_DELETE_COMPLETE:"".concat("@@reactReduxFirebase","/FILE_DELETE_COMPLETE"),AUTH_UPDATE_START:"".concat("@@reactReduxFirebase","/AUTH_UPDATE_START"),AUTH_UPDATE_SUCCESS:"".concat("@@reactReduxFirebase","/AUTH_UPDATE_SUCCESS"),AUTH_UPDATE_ERROR:"".concat("@@reactReduxFirebase","/AUTH_UPDATE_ERROR"),PROFILE_UPDATE_START:"".concat("@@reactReduxFirebase","/PROFILE_UPDATE_START"),PROFILE_UPDATE_SUCCESS:"".concat("@@reactReduxFirebase","/PROFILE_UPDATE_SUCCESS"),PROFILE_UPDATE_ERROR:"".concat("@@reactReduxFirebase","/PROFILE_UPDATE_ERROR"),EMAIL_UPDATE_START:"".concat("@@reactReduxFirebase","/EMAIL_UPDATE_START"),EMAIL_UPDATE_SUCCESS:"".concat("@@reactReduxFirebase","/EMAIL_UPDATE_SUCCESS"),EMAIL_UPDATE_ERROR:"".concat("@@reactReduxFirebase","/EMAIL_UPDATE_ERROR"),AUTH_RELOAD_START:"".concat("@@reactReduxFirebase","/AUTH_RELOAD_START"),AUTH_RELOAD_ERROR:"".concat("@@reactReduxFirebase","/AUTH_RELOAD_ERROR"),AUTH_RELOAD_SUCCESS:"".concat("@@reactReduxFirebase","/AUTH_RELOAD_SUCCESS"),AUTH_LINK_START:"".concat("@@reactReduxFirebase","/AUTH_LINK_START"),AUTH_LINK_ERROR:"".concat("@@reactReduxFirebase","/AUTH_LINK_ERROR"),AUTH_LINK_SUCCESS:"".concat("@@reactReduxFirebase","/AUTH_LINK_SUCCESS"),AUTH_EMPTY_CHANGE:"".concat("@@reactReduxFirebase","/AUTH_EMPTY_CHANGE")};exports.actionTypes=actionTypes;var defaultConfig={userProfile:null,presence:null,sessions:"sessions",enableLogging:!1,logErrors:!0,preserveOnLogout:null,preserveOnEmptyAuthChange:null,resetBeforeLogin:!0,updateProfileOnLogin:!0,enableRedirectHandling:!0,autoPopulateProfile:!1,setProfilePopulateResults:!1,dispatchOnUnsetListener:!0,dispatchRemoveAction:!1,enableEmptyAuthChanges:!0,firebaseStateName:"firebase",attachAuthIsReady:!1,keysToRemoveFromAuth:["appName","apiKey","authDomain","redirectEventId","stsTokenManager","uid"],keysToPreserveFromProviderData:["email","phoneNumber","photoURL","providerId","uid"]};exports.defaultConfig=defaultConfig;var supportedAuthProviders=["google","github","twitter","facebook"];exports.supportedAuthProviders=supportedAuthProviders;var topLevelPaths=["auth","profile","ordered","data"];exports.topLevelPaths=topLevelPaths;var v3ErrorMessage="Context from react-redux not found. If you are using react-redux v6 a v3.*.* version of react-redux-firebase is required. Please checkout the v3 migration guide: http://bit.ly/2SRNdiO";exports.v3ErrorMessage="Context from react-redux not found. If you are using react-redux v6 a v3.*.* version of react-redux-firebase is required. Please checkout the v3 migration guide: http://bit.ly/2SRNdiO";var _default={actionTypes:actionTypes,defaultConfig:defaultConfig};exports.default=_default;
	//# sourceMappingURL=constants.js.map

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	var _interopRequireWildcard = __webpack_require__(77);
	
	exports.__esModule = true;
	
	var _Provider = _interopRequireWildcard(__webpack_require__(540));
	
	exports.Provider = _Provider.default;
	exports.createProvider = _Provider.createProvider;
	
	var _connectAdvanced = _interopRequireDefault(__webpack_require__(328));
	
	exports.connectAdvanced = _connectAdvanced.default;
	
	var _connect = _interopRequireDefault(__webpack_require__(541));
	
	exports.connect = _connect.default;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(145),
	    createBaseEach = __webpack_require__(411);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(52),
	    baseAssignValue = __webpack_require__(28);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(386),
	    getValue = __webpack_require__(425);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(366),
	    Map = __webpack_require__(83),
	    Promise = __webpack_require__(368),
	    Set = __webpack_require__(135),
	    WeakMap = __webpack_require__(137),
	    baseGetTag = __webpack_require__(10),
	    toSource = __webpack_require__(178);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(42);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(94);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=__webpack_require__(2),ReactReduxFirebaseContext=(0,_react.createContext)(null),_default=ReactReduxFirebaseContext;exports.default=_default,module.exports=exports.default;
	//# sourceMappingURL=ReactReduxFirebaseContext.js.map

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var reactIs = __webpack_require__(123);
	
	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	var REACT_STATICS = {
	  childContextTypes: true,
	  contextType: true,
	  contextTypes: true,
	  defaultProps: true,
	  displayName: true,
	  getDefaultProps: true,
	  getDerivedStateFromError: true,
	  getDerivedStateFromProps: true,
	  mixins: true,
	  propTypes: true,
	  type: true
	};
	var KNOWN_STATICS = {
	  name: true,
	  length: true,
	  prototype: true,
	  caller: true,
	  callee: true,
	  arguments: true,
	  arity: true
	};
	var FORWARD_REF_STATICS = {
	  '$$typeof': true,
	  render: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true
	};
	var MEMO_STATICS = {
	  '$$typeof': true,
	  compare: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true,
	  type: true
	};
	var TYPE_STATICS = {};
	TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
	TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
	
	function getStatics(component) {
	  // React v16.11 and below
	  if (reactIs.isMemo(component)) {
	    return MEMO_STATICS;
	  } // React v16.12 and above
	
	
	  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
	}
	
	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = Object.prototype;
	function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	  if (typeof sourceComponent !== 'string') {
	    // don't hoist over string (html) components
	    if (objectPrototype) {
	      var inheritedComponent = getPrototypeOf(sourceComponent);
	
	      if (inheritedComponent && inheritedComponent !== objectPrototype) {
	        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	      }
	    }
	
	    var keys = getOwnPropertyNames(sourceComponent);
	
	    if (getOwnPropertySymbols) {
	      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	    }
	
	    var targetStatics = getStatics(targetComponent);
	    var sourceStatics = getStatics(sourceComponent);
	
	    for (var i = 0; i < keys.length; ++i) {
	      var key = keys[i];
	
	      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
	        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	
	        try {
	          // Avoid failures from read-only properties
	          defineProperty(targetComponent, key, descriptor);
	        } catch (e) {}
	      }
	    }
	  }
	
	  return targetComponent;
	}
	
	module.exports = hoistNonReactStatics;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(6);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 27 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(159);
	
	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}
	
	module.exports = baseAssignValue;


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(3),
	    isKey = __webpack_require__(107),
	    stringToPath = __webpack_require__(177),
	    toString = __webpack_require__(23);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}
	
	module.exports = castPath;


/***/ },
/* 30 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  var type = typeof value;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	
	  return !!length &&
	    (type == 'number' ||
	      (type != 'symbol' && reIsUint.test(value))) &&
	        (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(90);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(139),
	    baseKeys = __webpack_require__(58),
	    isArrayLike = __webpack_require__(14);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(27),
	    baseIteratee = __webpack_require__(7),
	    baseMap = __webpack_require__(390),
	    isArray = __webpack_require__(3);
	
	/**
	 * Creates an array of values by running each element in `collection` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	 *
	 * The guarded methods are:
	 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * _.map([4, 8], square);
	 * // => [16, 64]
	 *
	 * _.map({ 'a': 4, 'b': 8 }, square);
	 * // => [16, 64] (iteration order is not guaranteed)
	 *
	 * var users = [
	 *   { 'user': 'barney' },
	 *   { 'user': 'fred' }
	 * ];
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, 'user');
	 * // => ['barney', 'fred']
	 */
	function map(collection, iteratee) {
	  var func = isArray(collection) ? arrayMap : baseMap;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = map;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.pathToArr = pathToArr;
	exports.getSlashStrPath = getSlashStrPath;
	exports.getDotStrPath = getDotStrPath;
	exports.combineReducers = combineReducers;
	exports.pathFromMeta = pathFromMeta;
	exports.updateItemInArray = updateItemInArray;
	exports.createReducer = createReducer;
	exports.preserveValuesFromState = preserveValuesFromState;
	
	var _flatten2 = _interopRequireDefault(__webpack_require__(182));
	
	var _trimStart2 = _interopRequireDefault(__webpack_require__(514));
	
	var _replace2 = _interopRequireDefault(__webpack_require__(506));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(70));
	
	var _isBoolean2 = _interopRequireDefault(__webpack_require__(486));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
	
	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
	
	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
	
	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
	
	function pathToArr(path) {
	  return path ? path.split(/\//).filter(function (p) {
	    return !!p;
	  }) : [];
	}
	
	function getSlashStrPath(path) {
	  return (0, _trimStart2.default)((0, _replace2.default)(path, /[.]/g, '/'), '/');
	}
	
	function getDotStrPath(path) {
	  return pathToArr(path).join('.');
	}
	
	function combineReducers(reducers) {
	  return function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments.length > 1 ? arguments[1] : undefined;
	    return Object.keys(reducers).reduce(function (nextState, key) {
	      nextState[key] = reducers[key](state[key], action);
	      return nextState;
	    }, {});
	  };
	}
	
	function pathFromMeta(meta) {
	  if (!meta) {
	    throw new Error('Action meta is required to build path for reducers.');
	  }
	
	  var collection = meta.collection,
	      collectionGroup = meta.collectionGroup,
	      doc = meta.doc,
	      subcollections = meta.subcollections,
	      storeAs = meta.storeAs;
	
	  if (storeAs) {
	    return doc ? [storeAs, doc] : [storeAs];
	  }
	
	  if (meta.path) {
	    return meta.path.split('/');
	  }
	
	  if (!collection && !collectionGroup) {
	    throw new Error('Collection or Collection Group is required to construct reducer path.');
	  }
	
	  var basePath = [collection || collectionGroup];
	
	  if (doc) {
	    basePath = [].concat(_toConsumableArray(basePath), [doc]);
	  }
	
	  if (!subcollections) {
	    return basePath;
	  }
	
	  var mappedCollections = subcollections.map(pathFromMeta);
	  return [].concat(_toConsumableArray(basePath), _toConsumableArray((0, _flatten2.default)(mappedCollections)));
	}
	
	function updateItemInArray(array, itemId, updateItemCallback) {
	  var matchFound = false;
	  var modified = Array.isArray(array) ? array.map(function (item) {
	    if (!item || item.id !== itemId) {
	      return item;
	    }
	
	    matchFound = true;
	    var updatedItem = updateItemCallback(item);
	    return updatedItem;
	  }) : [];
	
	  if (!matchFound) {
	    modified.push(updateItemCallback({
	      id: itemId
	    }));
	  }
	
	  return modified;
	}
	
	function createReducer(initialState, handlers) {
	  return function reducer() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments.length > 1 ? arguments[1] : undefined;
	
	    if (handlers.hasOwnProperty(action.type)) {
	      return handlers[action.type](state, action);
	    }
	
	    return state;
	  };
	}
	
	function preserveValuesFromState(state, preserveSetting, nextState) {
	  if ((0, _isBoolean2.default)(preserveSetting)) {
	    return nextState ? _objectSpread({}, state, {}, nextState) : state;
	  }
	
	  if (typeof preserveSetting === 'function') {
	    return preserveSetting(state, nextState);
	  }
	
	  if (Array.isArray(preserveSetting)) {
	    return (0, _pick2.default)(state, preserveSetting);
	  }
	
	  throw new Error('Invalid preserve parameter. It must be an Object or an Array.');
	}

/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ },
/* 36 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 37 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * The default argument placeholder value for methods.
	 *
	 * @type {Object}
	 */
	module.exports = {};


/***/ },
/* 39 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(381),
	    isObjectLike = __webpack_require__(5);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};
	
	module.exports = isArguments;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(6),
	    stubFalse = __webpack_require__(508);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47)(module)))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var baseSet = __webpack_require__(93);
	
	/**
	 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	 * it's created. Arrays are created for missing index properties while objects
	 * are created for all other missing properties. Use `_.setWith` to customize
	 * `path` creation.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.set(object, 'a[0].b.c', 4);
	 * console.log(object.a[0].b.c);
	 * // => 4
	 *
	 * _.set(object, ['x', '0', 'y', 'z'], 5);
	 * console.log(object.x[0].y.z);
	 * // => 5
	 */
	function set(object, path, value) {
	  return object == null ? object : baseSet(object, path, value);
	}
	
	module.exports = set;


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=__webpack_require__(2),ReduxFirestoreContext=(0,_react.createContext)(null),_default=ReduxFirestoreContext;exports.default=_default,module.exports=exports.default;
	//# sourceMappingURL=ReduxFirestoreContext.js.map

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getSnapshotByObject = getSnapshotByObject;
	exports.firestoreRef = firestoreRef;
	exports.getQueryName = getQueryName;
	exports.getBaseQueryName = getBaseQueryName;
	exports.listenerExists = listenerExists;
	exports.attachListener = attachListener;
	exports.detachListener = detachListener;
	exports.queryStrToObj = queryStrToObj;
	exports.getQueryConfig = getQueryConfig;
	exports.getQueryConfigs = getQueryConfigs;
	exports.orderedFromSnap = orderedFromSnap;
	exports.dataByIdSnapshot = dataByIdSnapshot;
	exports.getPopulateChild = getPopulateChild;
	exports.populateList = populateList;
	exports.promisesForPopulate = promisesForPopulate;
	exports.dispatchListenerResponse = dispatchListenerResponse;
	exports.getPopulateActions = getPopulateActions;
	exports.snapshotCache = void 0;
	
	var _cloneDeep2 = _interopRequireDefault(__webpack_require__(475));
	
	var _set2 = _interopRequireDefault(__webpack_require__(43));
	
	var _get2 = _interopRequireDefault(__webpack_require__(11));
	
	var _map2 = _interopRequireDefault(__webpack_require__(33));
	
	var _has2 = _interopRequireDefault(__webpack_require__(114));
	
	var _forEach2 = _interopRequireDefault(__webpack_require__(64));
	
	var _trim2 = _interopRequireDefault(__webpack_require__(513));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(487));
	
	var _isNumber2 = _interopRequireDefault(__webpack_require__(185));
	
	var _isObject2 = _interopRequireDefault(__webpack_require__(4));
	
	var _constants = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }
	
	function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }
	
	function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
	
	function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
	
	function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
	
	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
	
	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
	
	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
	
	var snapshotCache = new WeakMap();
	exports.snapshotCache = snapshotCache;
	
	function getSnapshotByObject(obj) {
	  return snapshotCache.get(obj);
	}
	
	function addWhereToRef(ref, where) {
	  if (!Array.isArray(where)) {
	    throw new Error('where parameter must be an array.');
	  }
	
	  if (Array.isArray(where[0])) {
	    return where.reduce(function (acc, whereArgs) {
	      return addWhereToRef(acc, whereArgs);
	    }, ref);
	  }
	
	  return ref.where.apply(ref, _toConsumableArray(where));
	}
	
	function addOrderByToRef(ref, orderBy) {
	  if (!Array.isArray(orderBy) && !(typeof orderBy === 'string' || orderBy instanceof String)) {
	    throw new Error('orderBy parameter must be an array or string.');
	  }
	
	  if (typeof orderBy === 'string' || orderBy instanceof String) {
	    return ref.orderBy(orderBy);
	  }
	
	  if (typeof orderBy[0] === 'string' || orderBy[0] instanceof String) {
	    return ref.orderBy.apply(ref, _toConsumableArray(orderBy));
	  }
	
	  return orderBy.reduce(function (acc, orderByArgs) {
	    return addOrderByToRef(acc, orderByArgs);
	  }, ref);
	}
	
	function arrayify(cursor) {
	  return [].concat(cursor);
	}
	
	function handleSubcollections(ref, subcollectionList) {
	  if (Array.isArray(subcollectionList)) {
	    subcollectionList.forEach(function (subcollection) {
	      if (subcollection.collection) {
	        if (typeof ref.collection !== 'function') {
	          throw new Error("Collection can only be run on a document. Check that query config for subcollection: \"".concat(subcollection.collection, "\" contains a doc parameter."));
	        }
	
	        ref = ref.collection(subcollection.collection);
	      }
	
	      if (subcollection.doc) ref = ref.doc(subcollection.doc);
	      if (subcollection.where) ref = addWhereToRef(ref, subcollection.where);
	
	      if (subcollection.orderBy) {
	        ref = addOrderByToRef(ref, subcollection.orderBy);
	      }
	
	      if (subcollection.limit) ref = ref.limit(subcollection.limit);
	
	      if (subcollection.startAt) {
	        var _ref;
	
	        ref = (_ref = ref).startAt.apply(_ref, _toConsumableArray(arrayify(subcollection.startAt)));
	      }
	
	      if (subcollection.startAfter) {
	        var _ref2;
	
	        ref = (_ref2 = ref).startAfter.apply(_ref2, _toConsumableArray(arrayify(subcollection.startAfter)));
	      }
	
	      if (subcollection.endAt) {
	        var _ref3;
	
	        ref = (_ref3 = ref).endAt.apply(_ref3, _toConsumableArray(arrayify(subcollection.endAt)));
	      }
	
	      if (subcollection.endBefore) {
	        var _ref4;
	
	        ref = (_ref4 = ref).endBefore.apply(_ref4, _toConsumableArray(arrayify(subcollection.endBefore)));
	      }
	
	      ref = handleSubcollections(ref, subcollection.subcollections);
	    });
	  }
	
	  return ref;
	}
	
	function firestoreRef(firebase, meta) {
	  var _ref5, _ref6, _ref7, _ref8;
	
	  if (!firebase.firestore) {
	    throw new Error('Firestore must be required and initalized.');
	  }
	
	  var collection = meta.collection,
	      collectionGroup = meta.collectionGroup,
	      doc = meta.doc,
	      subcollections = meta.subcollections,
	      where = meta.where,
	      orderBy = meta.orderBy,
	      limit = meta.limit,
	      startAt = meta.startAt,
	      startAfter = meta.startAfter,
	      endAt = meta.endAt,
	      endBefore = meta.endBefore;
	  var ref = firebase.firestore();
	
	  if (collection && collectionGroup) {
	    throw new Error('Reference cannot contain both Collection and CollectionGroup.');
	  }
	
	  if (collection) ref = ref.collection(collection);
	  if (collectionGroup) ref = ref.collectionGroup(collectionGroup);
	  if (doc) ref = ref.doc(doc);
	  ref = handleSubcollections(ref, subcollections);
	  if (where) ref = addWhereToRef(ref, where);
	  if (orderBy) ref = addOrderByToRef(ref, orderBy);
	  if (limit) ref = ref.limit(limit);
	  if (startAt) ref = (_ref5 = ref).startAt.apply(_ref5, _toConsumableArray(arrayify(startAt)));
	  if (startAfter) ref = (_ref6 = ref).startAfter.apply(_ref6, _toConsumableArray(arrayify(startAfter)));
	  if (endAt) ref = (_ref7 = ref).endAt.apply(_ref7, _toConsumableArray(arrayify(endAt)));
	  if (endBefore) ref = (_ref8 = ref).endBefore.apply(_ref8, _toConsumableArray(arrayify(endBefore)));
	  return ref;
	}
	
	function arrayToStr(key, value) {
	  if (typeof value === 'string' || value instanceof String || (0, _isNumber2.default)(value)) {
	    return "".concat(key, "=").concat(value);
	  }
	
	  if (typeof value[0] === 'string' || value[0] instanceof String) {
	    return "".concat(key, "=").concat(value.join(':'));
	  }
	
	  if (value && typeof value.toString === 'function') {
	    return "".concat(key, "=").concat(value.toString());
	  }
	
	  return value.map(function (val) {
	    return arrayToStr(key, val);
	  });
	}
	
	function pickQueryParams(obj) {
	  return ['where', 'orderBy', 'limit', 'startAfter', 'startAt', 'endAt', 'endBefore'].reduce(function (acc, key) {
	    return obj[key] ? _objectSpread({}, acc, _defineProperty({}, key, obj[key])) : acc;
	  }, {});
	}
	
	function serialize(queryParams) {
	  return Object.keys(queryParams).filter(function (key) {
	    return queryParams[key] !== undefined;
	  }).map(function (key) {
	    return arrayToStr(key, queryParams[key]);
	  }).join('&');
	}
	
	function getQueryName(meta) {
	  if (typeof meta === 'string' || meta instanceof String) {
	    return meta;
	  }
	
	  var collection = meta.collection,
	      collectionGroup = meta.collectionGroup,
	      doc = meta.doc,
	      subcollections = meta.subcollections,
	      storeAs = meta.storeAs,
	      remainingMeta = _objectWithoutProperties(meta, ["collection", "collectionGroup", "doc", "subcollections", "storeAs"]);
	
	  if (!collection && !collectionGroup) {
	    throw new Error('Collection or Collection Group is required to build query name');
	  }
	
	  if (storeAs) {
	    return storeAs;
	  }
	
	  var basePath = collection || collectionGroup;
	
	  if (doc) {
	    basePath = basePath.concat("/".concat(doc));
	  }
	
	  if (collection && subcollections) {
	    console.error('Queries with subcollections must use "storeAs" to prevent invalid store updates. This closley matches the upcoming major release (v1), which stores subcollections at the top level by default.');
	    var mappedCollections = subcollections.map(function (subcollection) {
	      return getQueryName(subcollection);
	    });
	    basePath = "".concat(basePath, "/").concat(mappedCollections.join('/'));
	  }
	
	  var queryParams = pickQueryParams(remainingMeta);
	
	  if (!(0, _isEmpty2.default)(queryParams)) {
	    if (queryParams.where && !Array.isArray(queryParams.where)) {
	      throw new Error('where parameter must be an array.');
	    }
	
	    basePath = basePath.concat('?', serialize(queryParams));
	  }
	
	  return basePath;
	}
	
	function getBaseQueryName(meta) {
	  if (typeof meta === 'string' || meta instanceof String) {
	    return meta;
	  }
	
	  var collection = meta.collection,
	      collectionGroup = meta.collectionGroup,
	      subcollections = meta.subcollections,
	      remainingMeta = _objectWithoutProperties(meta, ["collection", "collectionGroup", "subcollections"]);
	
	  if (!collection && !collectionGroup) {
	    throw new Error('Collection or Collection Group is required to build query name');
	  }
	
	  var basePath = collection || collectionGroup;
	
	  if (collection && subcollections) {
	    var mappedCollections = subcollections.map(function (subcollection) {
	      return getQueryName(subcollection);
	    });
	    basePath = "".concat(basePath, "/").concat(mappedCollections.join('/'));
	  }
	
	  var queryParams = pickQueryParams(remainingMeta);
	
	  if (!(0, _isEmpty2.default)(queryParams)) {
	    if (queryParams.where && !Array.isArray(queryParams.where)) {
	      throw new Error('where parameter must be an array.');
	    }
	
	    basePath = basePath.concat('?', serialize(queryParams));
	  }
	
	  return basePath;
	}
	
	function confirmMetaAndConfig(firebase, meta) {
	  if (!meta) {
	    throw new Error('Meta data is required to attach listener.');
	  }
	
	  if (!firebase || !firebase._ || !firebase._.listeners) {
	    throw new Error('Internal Firebase object required to attach listener. Confirm that reduxFirestore enhancer was added when you were creating your store');
	  }
	}
	
	function listenerExists(firebase, meta) {
	  confirmMetaAndConfig(firebase, meta);
	  var name = getQueryName(meta);
	  return !!firebase._.listeners[name];
	}
	
	function attachListener(firebase, dispatch, meta, unsubscribe) {
	  confirmMetaAndConfig(firebase, meta);
	  var name = getQueryName(meta);
	
	  if (!firebase._.listeners[name]) {
	    firebase._.listeners[name] = unsubscribe;
	  }
	
	  dispatch({
	    type: _constants.actionTypes.SET_LISTENER,
	    meta: meta,
	    payload: {
	      name: name
	    }
	  });
	  return firebase._.listeners;
	}
	
	function detachListener(firebase, dispatch, meta) {
	  var name = getQueryName(meta);
	
	  if (firebase._.listeners[name]) {
	    firebase._.listeners[name]();
	
	    delete firebase._.listeners[name];
	  }
	
	  dispatch({
	    type: _constants.actionTypes.UNSET_LISTENER,
	    meta: meta,
	    payload: {
	      name: name
	    }
	  });
	}
	
	function queryStrToObj(queryPathStr, parsedPath) {
	  var pathArr = parsedPath || (0, _trim2.default)(queryPathStr, ['/']).split('/');
	
	  var _pathArr = _toArray(pathArr),
	      collection = _pathArr[0],
	      doc = _pathArr[1],
	      subcollections = _pathArr.slice(2);
	
	  var queryObj = {};
	  if (collection) queryObj.collection = collection;
	  if (doc) queryObj.doc = doc;
	
	  if (subcollections.length) {
	    queryObj.subcollections = [queryStrToObj('', subcollections)];
	  }
	
	  return queryObj;
	}
	
	function getQueryConfig(query) {
	  if (typeof query === 'string' || query instanceof String) {
	    return queryStrToObj(query);
	  }
	
	  if ((0, _isObject2.default)(query)) {
	    if (!query.collection && !query.collectionGroup && !query.doc) {
	      throw new Error('Collection, Collection Group and/or Doc are required parameters within query definition object.');
	    }
	
	    return query;
	  }
	
	  throw new Error('Invalid Path Definition: Only Strings and Objects are accepted.');
	}
	
	function getQueryConfigs(queries) {
	  if (Array.isArray(queries)) {
	    return queries.map(getQueryConfig);
	  }
	
	  if (typeof queries === 'string' || queries instanceof String) {
	    return queryStrToObj(queries);
	  }
	
	  if ((0, _isObject2.default)(queries)) {
	    return [getQueryConfig(queries)];
	  }
	
	  throw new Error('Querie(s) must be an Array or a string.');
	}
	
	function orderedFromSnap(snap) {
	  var ordered = [];
	
	  if (snap.data && snap.exists) {
	    var obj = (0, _isObject2.default)(snap.data()) ? _objectSpread({
	      id: snap.id
	    }, snap.data() || snap.data) : {
	      id: snap.id,
	      data: snap.data()
	    };
	    snapshotCache.set(obj, snap);
	    ordered.push(obj);
	  } else if (snap.forEach) {
	    snap.forEach(function (doc) {
	      var obj = (0, _isObject2.default)(doc.data()) ? _objectSpread({
	        id: doc.id
	      }, doc.data() || doc.data) : {
	        id: doc.id,
	        data: doc.data()
	      };
	      snapshotCache.set(obj, doc);
	      ordered.push(obj);
	    });
	  }
	
	  snapshotCache.set(ordered, snap);
	  return ordered;
	}
	
	function dataByIdSnapshot(snap) {
	  var data = {};
	
	  if (snap.data) {
	    var snapData = snap.exists ? snap.data() : null;
	
	    if (snapData) {
	      snapshotCache.set(snapData, snap);
	    }
	
	    data[snap.id] = snapData;
	  } else if (snap.forEach) {
	    snap.forEach(function (doc) {
	      var snapData = doc.data() || doc;
	      snapshotCache.set(snapData, doc);
	      data[doc.id] = snapData;
	    });
	  }
	
	  if (!!data && Object.keys(data).length) {
	    snapshotCache.set(data, snap);
	    return data;
	  }
	
	  return null;
	}
	
	function getPopulateChild(firebase, populate, id) {
	  return firestoreRef(firebase, {
	    collection: populate.root,
	    doc: id
	  }).get().then(function (snap) {
	    return _objectSpread({
	      id: id
	    }, snap.data());
	  });
	}
	
	function populateList(firebase, originalObj, p, results) {
	  if (!results[p.root]) {
	    (0, _set2.default)(results, p.root, {});
	  }
	
	  return Promise.all((0, _map2.default)(originalObj, function (id, childKey) {
	    var populateKey = id === true || p.populateByKey ? childKey : id;
	    return getPopulateChild(firebase, p, populateKey).then(function (pc) {
	      if (pc) {
	        return (0, _set2.default)(results, "".concat(p.root, ".").concat(populateKey), pc);
	      }
	
	      return results;
	    });
	  }));
	}
	
	function getPopulateObj(str) {
	  if (typeof str === 'string' || str instanceof String) {
	    return str;
	  }
	
	  var strArray = str.split(':');
	  return {
	    child: strArray[0],
	    root: strArray[1]
	  };
	}
	
	function getPopulateObjs(arr) {
	  if (!Array.isArray(arr)) {
	    return arr;
	  }
	
	  return arr.map(function (o) {
	    return (0, _isObject2.default)(o) ? o : getPopulateObj(o);
	  });
	}
	
	function promisesForPopulate(firebase, dataKey, originalData, populatesIn) {
	  var promisesArray = [];
	  var results = {};
	  var populatesForData = getPopulateObjs(typeof populatesIn === 'function' ? populatesIn(dataKey, originalData) : populatesIn);
	  var dataHasPopulateChilds = populatesForData.some(function (populate) {
	    return (0, _has2.default)(originalData, populate.child);
	  });
	
	  if (dataHasPopulateChilds) {
	    populatesForData.forEach(function (p) {
	      var childDataVal = (0, _get2.default)(originalData, p.child);
	
	      if (typeof childDataVal === 'string' || childDataVal instanceof String) {
	        return promisesArray.push(getPopulateChild(firebase, p, childDataVal).then(function (v) {
	          if (v) {
	            (0, _set2.default)(results, "".concat(p.storeAs ? p.storeAs : p.root, ".").concat(childDataVal), v);
	          }
	        }));
	      }
	
	      return promisesArray.push(populateList(firebase, childDataVal, p, results));
	    });
	  } else {
	    (0, _forEach2.default)(originalData, function (d, key) {
	      var populatesForDataItem = getPopulateObjs(typeof populatesIn === 'function' ? populatesIn(key, d) : populatesIn);
	      (0, _forEach2.default)(populatesForDataItem, function (p) {
	        var idOrList = (0, _get2.default)(d, p.child);
	
	        if (!idOrList) {
	          return;
	        }
	
	        if (typeof idOrList === 'string' || idOrList instanceof String) {
	          return promisesArray.push(getPopulateChild(firebase, p, idOrList).then(function (v) {
	            if (v) {
	              (0, _set2.default)(results, "".concat(p.storeAs ? p.storeAs : p.root, ".").concat(idOrList), v);
	            }
	
	            return results;
	          }));
	        }
	
	        if (Array.isArray(idOrList) || (0, _isObject2.default)(idOrList)) {
	          return promisesArray.push(populateList(firebase, idOrList, p, results));
	        }
	      });
	    });
	  }
	
	  return Promise.all(promisesArray).then(function () {
	    return results;
	  });
	}
	
	var changeTypeToEventType = {
	  added: _constants.actionTypes.DOCUMENT_ADDED,
	  removed: _constants.actionTypes.DOCUMENT_REMOVED,
	  modified: _constants.actionTypes.DOCUMENT_MODIFIED
	};
	
	function docChangeEvent(change) {
	  var originalMeta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  var meta = _objectSpread({}, (0, _cloneDeep2.default)(originalMeta), {
	    path: change.doc.ref.path
	  });
	
	  if (originalMeta.subcollections && !originalMeta.storeAs) {
	    meta.subcollections[0] = _objectSpread({}, meta.subcollections[0], {
	      doc: change.doc.id
	    });
	  } else {
	    meta.doc = change.doc.id;
	  }
	
	  return {
	    type: changeTypeToEventType[change.type] || _constants.actionTypes.DOCUMENT_MODIFIED,
	    meta: meta,
	    payload: {
	      data: change.doc.data(),
	      ordered: {
	        oldIndex: change.oldIndex,
	        newIndex: change.newIndex
	      }
	    }
	  };
	}
	
	function dispatchListenerResponse(_ref9) {
	  var dispatch = _ref9.dispatch,
	      docData = _ref9.docData,
	      meta = _ref9.meta,
	      firebase = _ref9.firebase;
	
	  var _ref10 = firebase._.config || {},
	      mergeOrdered = _ref10.mergeOrdered,
	      mergeOrderedDocUpdates = _ref10.mergeOrderedDocUpdates,
	      mergeOrderedCollectionUpdates = _ref10.mergeOrderedCollectionUpdates;
	
	  var docChanges = typeof docData.docChanges === 'function' ? docData.docChanges() : docData.docChanges;
	
	  if (docChanges && docChanges.length < docData.size) {
	    docChanges.forEach(function (change) {
	      dispatch(docChangeEvent(change, meta));
	    });
	  } else {
	    dispatch({
	      type: _constants.actionTypes.LISTENER_RESPONSE,
	      meta: meta,
	      payload: {
	        data: dataByIdSnapshot(docData),
	        ordered: orderedFromSnap(docData)
	      },
	      merge: {
	        docs: mergeOrdered && mergeOrderedDocUpdates,
	        collections: mergeOrdered && mergeOrderedCollectionUpdates
	      }
	    });
	  }
	}
	
	function getPopulateActions(_ref11) {
	  var firebase = _ref11.firebase,
	      docData = _ref11.docData,
	      meta = _ref11.meta;
	  return promisesForPopulate(firebase, docData.id, dataByIdSnapshot(docData), meta.populates).then(function (populateResults) {
	    return Object.keys(populateResults).map(function (resultKey) {
	      return {
	        meta: {
	          collection: resultKey
	        },
	        payload: {
	          data: populateResults[resultKey]
	        },
	        requesting: false,
	        requested: true
	      };
	    });
	  }).catch(function (populateErr) {
	    console.error('Error with populate:', populateErr, meta);
	    return Promise.reject(populateErr);
	  });
	}

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var $$observable = _interopDefault(__webpack_require__(575));
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var randomString = function randomString() {
	  return Math.random().toString(36).substring(7).split('').join('.');
	};
	
	var ActionTypes = {
	  INIT: "@@redux/INIT" + randomString(),
	  REPLACE: "@@redux/REPLACE" + randomString(),
	  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
	    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
	  }
	};
	
	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */
	function isPlainObject(obj) {
	  if (typeof obj !== 'object' || obj === null) return false;
	  var proto = obj;
	
	  while (Object.getPrototypeOf(proto) !== null) {
	    proto = Object.getPrototypeOf(proto);
	  }
	
	  return Object.getPrototypeOf(obj) === proto;
	}
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
	    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');
	  }
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	  /**
	   * This makes a shallow copy of currentListeners so we can use
	   * nextListeners as a temporary list while dispatching.
	   *
	   * This prevents any bugs around consumers calling
	   * subscribe/unsubscribe in the middle of a dispatch.
	   */
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	
	
	  function getState() {
	    if (isDispatching) {
	      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
	    }
	
	    return currentState;
	  }
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	
	
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected the listener to be a function.');
	    }
	
	    if (isDispatching) {
	      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
	    }
	
	    var isSubscribed = true;
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      if (isDispatching) {
	        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
	      }
	
	      isSubscribed = false;
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	      currentListeners = null;
	    };
	  }
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	
	
	  function dispatch(action) {
	    if (!isPlainObject(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }
	
	    return action;
	  }
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	
	
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
	    // Any reducers that existed in both the new and old rootReducer
	    // will receive the previous state. This effectively populates
	    // the new state tree with any relevant data from the old one.
	
	    dispatch({
	      type: ActionTypes.REPLACE
	    });
	  }
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	
	
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object' || observer === null) {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return {
	          unsubscribe: unsubscribe
	        };
	      }
	    }, _ref[$$observable] = function () {
	      return this;
	    }, _ref;
	  } // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	
	
	  dispatch({
	    type: ActionTypes.INIT
	  });
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[$$observable] = observable, _ref2;
	}
	
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	
	
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	  } catch (e) {} // eslint-disable-line no-empty
	
	}
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
	  return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!isPlainObject(inputState)) {
	    return "The " + argumentName + " has unexpected type of \"" + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	  if (action && action.type === ActionTypes.REPLACE) return;
	
	  if (unexpectedKeys.length > 0) {
	    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
	  }
	}
	
	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, {
	      type: ActionTypes.INIT
	    });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
	    }
	
	    if (typeof reducer(undefined, {
	      type: ActionTypes.PROBE_UNKNOWN_ACTION()
	    }) === 'undefined') {
	      throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
	    }
	  });
	}
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	
	
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        warning("No reducer provided for key \"" + key + "\"");
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	
	  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
	  // keys multiple times.
	
	  var unexpectedKeyCache;
	
	  if (false) {
	    unexpectedKeyCache = {};
	  }
	
	  var shapeAssertionError;
	
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }
	
	  return function combination(state, action) {
	    if (state === void 0) {
	      state = {};
	    }
	
	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	
	      if (warningMessage) {
	        warning(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	
	    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
	    return hasChanged ? nextState : state;
	  };
	}
	
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(this, arguments));
	  };
	}
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass an action creator as the first argument,
	 * and get a dispatch wrapped function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	
	
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
	  }
	
	  var boundActionCreators = {};
	
	  for (var key in actionCreators) {
	    var actionCreator = actionCreators[key];
	
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	
	  return boundActionCreators;
	}
	
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	}
	
	function ownKeys(object, enumerableOnly) {
	  var keys = Object.keys(object);
	
	  if (Object.getOwnPropertySymbols) {
	    keys.push.apply(keys, Object.getOwnPropertySymbols(object));
	  }
	
	  if (enumerableOnly) keys = keys.filter(function (sym) {
	    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
	  });
	  return keys;
	}
	
	function _objectSpread2(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};
	
	    if (i % 2) {
	      ownKeys(source, true).forEach(function (key) {
	        _defineProperty(target, key, source[key]);
	      });
	    } else if (Object.getOwnPropertyDescriptors) {
	      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
	    } else {
	      ownKeys(source).forEach(function (key) {
	        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
	      });
	    }
	  }
	
	  return target;
	}
	
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	function compose() {
	  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(void 0, arguments));
	    };
	  });
	}
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function () {
	      var store = createStore.apply(void 0, arguments);
	
	      var _dispatch = function dispatch() {
	        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
	      };
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch() {
	          return _dispatch.apply(void 0, arguments);
	        }
	      };
	      var chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = compose.apply(void 0, chain)(store.dispatch);
	      return _objectSpread2({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}
	
	/*
	 * This is a dummy function to check if the function name has been altered by minification.
	 * If the function has been minified and NODE_ENV !== 'production', warn the user.
	 */
	
	function isCrushed() {}
	
	if (false) {
	  warning('You are currently using minified code outside of NODE_ENV === "production". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.__DO_NOT_USE__ActionTypes = ActionTypes;
	exports.applyMiddleware = applyMiddleware;
	exports.bindActionCreators = bindActionCreators;
	exports.combineReducers = combineReducers;
	exports.compose = compose;
	exports.createStore = createStore;


/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(439),
	    listCacheDelete = __webpack_require__(440),
	    listCacheGet = __webpack_require__(441),
	    listCacheHas = __webpack_require__(442),
	    listCacheSet = __webpack_require__(443);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(48),
	    stackClear = __webpack_require__(460),
	    stackDelete = __webpack_require__(461),
	    stackGet = __webpack_require__(462),
	    stackHas = __webpack_require__(463),
	    stackSet = __webpack_require__(464);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 50 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(28),
	    eq = __webpack_require__(37);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignValue;


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(37);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(49),
	    arrayEach = __webpack_require__(51),
	    assignValue = __webpack_require__(52),
	    baseAssign = __webpack_require__(142),
	    baseAssignIn = __webpack_require__(375),
	    cloneBuffer = __webpack_require__(152),
	    copyArray = __webpack_require__(35),
	    copySymbols = __webpack_require__(407),
	    copySymbolsIn = __webpack_require__(408),
	    getAllKeys = __webpack_require__(162),
	    getAllKeysIn = __webpack_require__(102),
	    getTag = __webpack_require__(21),
	    initCloneArray = __webpack_require__(432),
	    initCloneByTag = __webpack_require__(433),
	    initCloneObject = __webpack_require__(167),
	    isArray = __webpack_require__(3),
	    isBuffer = __webpack_require__(41),
	    isMap = __webpack_require__(489),
	    isObject = __webpack_require__(4),
	    isSet = __webpack_require__(491),
	    keys = __webpack_require__(32);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Deep clone
	 *  2 - Flatten inherited properties
	 *  4 - Clone symbols
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, bitmask, customizer, key, object, stack) {
	  var result,
	      isDeep = bitmask & CLONE_DEEP_FLAG,
	      isFlat = bitmask & CLONE_FLAT_FLAG,
	      isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      result = (isFlat || isFunc) ? {} : initCloneObject(value);
	      if (!isDeep) {
	        return isFlat
	          ? copySymbolsIn(value, baseAssignIn(result, value))
	          : copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  if (isSet(value)) {
	    value.forEach(function(subValue) {
	      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
	    });
	  } else if (isMap(value)) {
	    value.forEach(function(subValue, key) {
	      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
	    });
	  }
	
	  var keysFunc = isFull
	    ? (isFlat ? getAllKeysIn : getAllKeys)
	    : (isFlat ? keysIn : keys);
	
	  var props = isArr ? undefined : keysFunc(value);
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	  });
	  return result;
	}
	
	module.exports = baseClone;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(4);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());
	
	module.exports = baseCreate;


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(88),
	    isFlattenable = __webpack_require__(435);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(29),
	    toKey = __webpack_require__(22);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(36),
	    nativeKeys = __webpack_require__(452);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(39),
	    overRest = __webpack_require__(172),
	    setToString = __webpack_require__(111);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}
	
	module.exports = baseRest;


/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(55),
	    isObject = __webpack_require__(4);
	
	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtor(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors. See
	    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);
	
	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}
	
	module.exports = createCtor;


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(436);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(51),
	    baseEach = __webpack_require__(18),
	    castFunction = __webpack_require__(402),
	    isArray = __webpack_require__(3);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _.forEach([1, 2], function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, castFunction(iteratee));
	}
	
	module.exports = forEach;


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var baseConvert = __webpack_require__(480),
	    util = __webpack_require__(482);
	
	/**
	 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
	 * version with conversion `options` applied. If `name` is an object its methods
	 * will be converted.
	 *
	 * @param {string} name The name of the function to wrap.
	 * @param {Function} [func] The function to wrap.
	 * @param {Object} [options] The options object. See `baseConvert` for more details.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function convert(name, func, options) {
	  return baseConvert(util, name, func, options);
	}
	
	module.exports = convert;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isObject = __webpack_require__(4);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(388),
	    baseUnary = __webpack_require__(60),
	    nodeUtil = __webpack_require__(108);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(139),
	    baseKeysIn = __webpack_require__(389),
	    isArrayLike = __webpack_require__(14);
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}
	
	module.exports = keysIn;


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(27),
	    baseClone = __webpack_require__(54),
	    baseUnset = __webpack_require__(95),
	    castPath = __webpack_require__(29),
	    copyObject = __webpack_require__(19),
	    customOmitClone = __webpack_require__(419),
	    flatRest = __webpack_require__(101),
	    getAllKeysIn = __webpack_require__(102);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable property paths of `object` that are not omitted.
	 *
	 * **Note:** This method is considerably slower than `_.pick`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = flatRest(function(object, paths) {
	  var result = {};
	  if (object == null) {
	    return result;
	  }
	  var isDeep = false;
	  paths = arrayMap(paths, function(path) {
	    path = castPath(path, object);
	    isDeep || (isDeep = path.length > 1);
	    return path;
	  });
	  copyObject(object, getAllKeysIn(object), result);
	  if (isDeep) {
	    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	  }
	  var length = paths.length;
	  while (length--) {
	    baseUnset(result, paths[length]);
	  }
	  return result;
	});
	
	module.exports = omit;


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(394),
	    flatRest = __webpack_require__(101);
	
	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});
	
	module.exports = pick;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _createFirebaseInstance=_interopRequireWildcard(__webpack_require__(125)),_ReactReduxFirebaseProvider=_interopRequireDefault(__webpack_require__(527)),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24)),_ReduxFirestoreProvider=_interopRequireDefault(__webpack_require__(321)),_ReduxFirestoreContext=_interopRequireDefault(__webpack_require__(44)),_firebaseConnect=_interopRequireDefault(__webpack_require__(530)),_firestoreConnect=_interopRequireDefault(__webpack_require__(531)),_withFirebase=_interopRequireDefault(__webpack_require__(538)),_withFirestore=_interopRequireDefault(__webpack_require__(539)),_useFirebaseConnect=_interopRequireDefault(__webpack_require__(534)),_useFirestoreConnect=_interopRequireDefault(__webpack_require__(535)),_useFirebase=_interopRequireDefault(__webpack_require__(323)),_useFirestore=_interopRequireDefault(__webpack_require__(324)),_reducer=_interopRequireDefault(__webpack_require__(532)),_constants=_interopRequireWildcard(__webpack_require__(16)),_auth=__webpack_require__(326),helpers=_interopRequireWildcard(__webpack_require__(322));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function(){return cache},cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={};if(null!=obj){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var _default=_objectSpread({ReactReduxFirebaseProvider:_ReactReduxFirebaseProvider.default,ReactReduxFirebaseContext:_ReactReduxFirebaseContext.default,ReduxFirestoreContext:_ReduxFirestoreContext.default,ReduxFirestoreProvider:_ReduxFirestoreProvider.default,createFirebaseInstance:_createFirebaseInstance.default,firebaseConnect:_firebaseConnect.default,firestoreConnect:_firestoreConnect.default,withFirebase:_withFirebase.default,withFirestore:_withFirestore.default,useFirebase:_useFirebase.default,useFirebaseConnect:_useFirebaseConnect.default,useFirestore:_useFirestore.default,useFirestoreConnect:_useFirestoreConnect.default,reducer:_reducer.default,firebaseReducer:_reducer.default,constants:_constants.default,actionTypes:_constants.actionTypes,getFirebase:_createFirebaseInstance.getFirebase,authIsReady:_auth.authIsReady},helpers);exports.default=_default,module.exports=exports.default;
	//# sourceMappingURL=index.js.map

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getPopulateObj=getPopulateObj,exports.getChildType=getChildType,exports.getPopulateObjs=getPopulateObjs,exports.getPopulates=getPopulates,exports.getPopulateChild=getPopulateChild,exports.populateList=populateList,exports.promisesForPopulate=promisesForPopulate;var _some2=_interopRequireDefault(__webpack_require__(121)),_has2=_interopRequireDefault(__webpack_require__(114)),_set2=_interopRequireDefault(__webpack_require__(43)),_forEach2=_interopRequireDefault(__webpack_require__(64)),_get2=_interopRequireDefault(__webpack_require__(11)),_map2=_interopRequireDefault(__webpack_require__(33)),_isObject2=_interopRequireDefault(__webpack_require__(4)),_filter2=_interopRequireDefault(__webpack_require__(181)),_index=__webpack_require__(12);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function getPopulateObj(str){if(!(0,_index.isString)(str))return str;var strArray=str.split(":");return{child:strArray[0],root:strArray[1]}}function getChildType(child){return(0,_index.isString)(child)?"string":Array.isArray(child)?"array":(0,_isObject2.default)(child)?"object":"other"}function getPopulateObjs(arr){return Array.isArray(arr)?arr.map(function(o){return(0,_isObject2.default)(o)?o:getPopulateObj(o)}):arr}function getPopulates(queryParams){var populates=(0,_filter2.default)(queryParams,function(param){return-1!==param.indexOf("populate")||(0,_isObject2.default)(param)&&param.populates}).map(function(p){return p.split("=")[1]});return populates.length?populates.map(getPopulateObj):null}function getPopulateChild(firebase,populate,id){return firebase.database().ref().child("".concat(populate.root,"/").concat(id)).once("value").then(function(snap){return snap.val()})}function populateList(firebase,list,p,results){return results[p.root]||(0,_set2.default)(results,p.root,{}),Promise.all((0,_map2.default)(list,function(id,childKey){var populateKey=!0===id||p.populateByKey?childKey:id;return getPopulateChild(firebase,p,populateKey).then(function(pc){return pc?(0,_set2.default)(results,"".concat(p.root,".").concat(populateKey),pc):results})}))}function promisesForPopulate(firebase,dataKey,originalData,populatesIn){var promisesArray=[],results={},populatesForData=getPopulateObjs("function"==typeof populatesIn?populatesIn(dataKey,originalData):populatesIn),dataHasPopulateChilds=(0,_some2.default)(populatesForData,function(populate){return(0,_has2.default)(originalData,populate.child)});return dataHasPopulateChilds?(0,_forEach2.default)(populatesForData,function(p){return(0,_index.isString)((0,_get2.default)(originalData,p.child))?promisesArray.push(getPopulateChild(firebase,p,(0,_get2.default)(originalData,p.child)).then(function(v){v&&(0,_set2.default)(results,"".concat(p.root,".").concat((0,_get2.default)(originalData,p.child)),v)})):promisesArray.push(populateList(firebase,(0,_get2.default)(originalData,p.child),p,results))}):(0,_forEach2.default)(originalData,function(d,key){var populatesForDataItem=getPopulateObj("function"==typeof populatesIn?populatesIn(key,d):populatesIn);(0,_forEach2.default)(populatesForDataItem,function(p){var idOrList=(0,_get2.default)(d,p.child);return idOrList?(0,_index.isString)(idOrList)?promisesArray.push(getPopulateChild(firebase,p,idOrList).then(function(v){return v&&(0,_set2.default)(results,"".concat(p.root,".").concat(idOrList),v),results})):Array.isArray(idOrList)||(0,_isObject2.default)(idOrList)?promisesArray.push(populateList(firebase,idOrList,p,results)):void 0:void 0})}),Promise.all(promisesArray).then(function(){return results})}
	//# sourceMappingURL=populate.js.map

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isProduction = ("production") === 'production';
	function warning(condition, message) {
	  if (!isProduction) {
	    if (condition) {
	      return;
	    }
	
	    var text = "Warning: " + message;
	
	    if (typeof console !== 'undefined') {
	      console.warn(text);
	    }
	
	    try {
	      throw Error(text);
	    } catch (x) {}
	  }
	}
	
	module.exports = warning;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/*! *****************************************************************************
	Copyright (c) Microsoft Corporation. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0
	
	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.
	
	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */
	/* global global, define, System, Reflect, Promise */
	var __extends;
	var __assign;
	var __rest;
	var __decorate;
	var __param;
	var __metadata;
	var __awaiter;
	var __generator;
	var __exportStar;
	var __values;
	var __read;
	var __spread;
	var __spreadArrays;
	var __await;
	var __asyncGenerator;
	var __asyncDelegator;
	var __asyncValues;
	var __makeTemplateObject;
	var __importStar;
	var __importDefault;
	var __classPrivateFieldGet;
	var __classPrivateFieldSet;
	(function (factory) {
	    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (exports) { factory(createExporter(root, createExporter(exports))); }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    }
	    else if (typeof module === "object" && typeof module.exports === "object") {
	        factory(createExporter(root, createExporter(module.exports)));
	    }
	    else {
	        factory(createExporter(root));
	    }
	    function createExporter(exports, previous) {
	        if (exports !== root) {
	            if (typeof Object.create === "function") {
	                Object.defineProperty(exports, "__esModule", { value: true });
	            }
	            else {
	                exports.__esModule = true;
	            }
	        }
	        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
	    }
	})
	(function (exporter) {
	    var extendStatics = Object.setPrototypeOf ||
	        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	
	    __extends = function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	
	    __assign = Object.assign || function (t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	        return t;
	    };
	
	    __rest = function (s, e) {
	        var t = {};
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
	            t[p] = s[p];
	        if (s != null && typeof Object.getOwnPropertySymbols === "function")
	            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
	                    t[p[i]] = s[p[i]];
	            }
	        return t;
	    };
	
	    __decorate = function (decorators, target, key, desc) {
	        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	        return c > 3 && r && Object.defineProperty(target, key, r), r;
	    };
	
	    __param = function (paramIndex, decorator) {
	        return function (target, key) { decorator(target, key, paramIndex); }
	    };
	
	    __metadata = function (metadataKey, metadataValue) {
	        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
	    };
	
	    __awaiter = function (thisArg, _arguments, P, generator) {
	        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
	        return new (P || (P = Promise))(function (resolve, reject) {
	            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
	            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
	            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
	            step((generator = generator.apply(thisArg, _arguments || [])).next());
	        });
	    };
	
	    __generator = function (thisArg, body) {
	        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
	        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
	        function verb(n) { return function (v) { return step([n, v]); }; }
	        function step(op) {
	            if (f) throw new TypeError("Generator is already executing.");
	            while (_) try {
	                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	                if (y = 0, t) op = [op[0] & 2, t.value];
	                switch (op[0]) {
	                    case 0: case 1: t = op; break;
	                    case 4: _.label++; return { value: op[1], done: false };
	                    case 5: _.label++; y = op[1]; op = [0]; continue;
	                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
	                    default:
	                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
	                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
	                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
	                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
	                        if (t[2]) _.ops.pop();
	                        _.trys.pop(); continue;
	                }
	                op = body.call(thisArg, _);
	            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
	            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
	        }
	    };
	
	    __exportStar = function (m, exports) {
	        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	    };
	
	    __values = function (o) {
	        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	        if (m) return m.call(o);
	        if (o && typeof o.length === "number") return {
	            next: function () {
	                if (o && i >= o.length) o = void 0;
	                return { value: o && o[i++], done: !o };
	            }
	        };
	        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	    };
	
	    __read = function (o, n) {
	        var m = typeof Symbol === "function" && o[Symbol.iterator];
	        if (!m) return o;
	        var i = m.call(o), r, ar = [], e;
	        try {
	            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	        }
	        catch (error) { e = { error: error }; }
	        finally {
	            try {
	                if (r && !r.done && (m = i["return"])) m.call(i);
	            }
	            finally { if (e) throw e.error; }
	        }
	        return ar;
	    };
	
	    __spread = function () {
	        for (var ar = [], i = 0; i < arguments.length; i++)
	            ar = ar.concat(__read(arguments[i]));
	        return ar;
	    };
	
	    __spreadArrays = function () {
	        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
	        for (var r = Array(s), k = 0, i = 0; i < il; i++)
	            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
	                r[k] = a[j];
	        return r;
	    };
	
	    __await = function (v) {
	        return this instanceof __await ? (this.v = v, this) : new __await(v);
	    };
	
	    __asyncGenerator = function (thisArg, _arguments, generator) {
	        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	        var g = generator.apply(thisArg, _arguments || []), i, q = [];
	        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
	        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
	        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
	        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
	        function fulfill(value) { resume("next", value); }
	        function reject(value) { resume("throw", value); }
	        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
	    };
	
	    __asyncDelegator = function (o) {
	        var i, p;
	        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
	        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
	    };
	
	    __asyncValues = function (o) {
	        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	        var m = o[Symbol.asyncIterator], i;
	        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
	        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
	        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
	    };
	
	    __makeTemplateObject = function (cooked, raw) {
	        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
	        return cooked;
	    };
	
	    __importStar = function (mod) {
	        if (mod && mod.__esModule) return mod;
	        var result = {};
	        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
	        result["default"] = mod;
	        return result;
	    };
	
	    __importDefault = function (mod) {
	        return (mod && mod.__esModule) ? mod : { "default": mod };
	    };
	
	    __classPrivateFieldGet = function (receiver, privateMap) {
	        if (!privateMap.has(receiver)) {
	            throw new TypeError("attempted to get private field on non-instance");
	        }
	        return privateMap.get(receiver);
	    };
	
	    __classPrivateFieldSet = function (receiver, privateMap, value) {
	        if (!privateMap.has(receiver)) {
	            throw new TypeError("attempted to set private field on non-instance");
	        }
	        privateMap.set(receiver, value);
	        return value;
	    }
	
	    exporter("__extends", __extends);
	    exporter("__assign", __assign);
	    exporter("__rest", __rest);
	    exporter("__decorate", __decorate);
	    exporter("__param", __param);
	    exporter("__metadata", __metadata);
	    exporter("__awaiter", __awaiter);
	    exporter("__generator", __generator);
	    exporter("__exportStar", __exportStar);
	    exporter("__values", __values);
	    exporter("__read", __read);
	    exporter("__spread", __spread);
	    exporter("__spreadArrays", __spreadArrays);
	    exporter("__await", __await);
	    exporter("__asyncGenerator", __asyncGenerator);
	    exporter("__asyncDelegator", __asyncDelegator);
	    exporter("__asyncValues", __asyncValues);
	    exporter("__makeTemplateObject", __makeTemplateObject);
	    exporter("__importStar", __importStar);
	    exporter("__importDefault", __importDefault);
	    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
	    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
	});
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 75 */
/***/ function(module, exports) {

	function _extends() {
	  module.exports = _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	module.exports = _extends;

/***/ },
/* 76 */
/***/ function(module, exports) {

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	module.exports = _inheritsLoose;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	var _typeof = __webpack_require__(337);
	
	function _getRequireWildcardCache() {
	  if (typeof WeakMap !== "function") return null;
	  var cache = new WeakMap();
	
	  _getRequireWildcardCache = function _getRequireWildcardCache() {
	    return cache;
	  };
	
	  return cache;
	}
	
	function _interopRequireWildcard(obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  }
	
	  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
	    return {
	      "default": obj
	    };
	  }
	
	  var cache = _getRequireWildcardCache();
	
	  if (cache && cache.has(obj)) {
	    return cache.get(obj);
	  }
	
	  var newObj = {};
	  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
	
	  for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) {
	      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
	
	      if (desc && (desc.get || desc.set)) {
	        Object.defineProperty(newObj, key, desc);
	      } else {
	        newObj[key] = obj[key];
	      }
	    }
	  }
	
	  newObj["default"] = obj;
	
	  if (cache) {
	    cache.set(obj, newObj);
	  }
	
	  return newObj;
	}
	
	module.exports = _interopRequireWildcard;

/***/ },
/* 78 */
/***/ function(module, exports) {

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  return target;
	}
	
	module.exports = _objectWithoutPropertiesLoose;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	var tslib = __webpack_require__(74);
	var util = __webpack_require__(80);
	var component = __webpack_require__(129);
	var logger$1 = __webpack_require__(130);
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _a;
	var ERRORS = (_a = {},
	    _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " +
	        'call Firebase App.initializeApp()',
	    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}",
	    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists",
	    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted",
	    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +
	        'Firebase App instance.',
	    _a["invalid-log-argument" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',
	    _a);
	var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);
	
	var name$1 = "@firebase/app";
	var version = "0.6.1";
	
	var name$2 = "@firebase/analytics";
	
	var name$3 = "@firebase/auth";
	
	var name$4 = "@firebase/database";
	
	var name$5 = "@firebase/functions";
	
	var name$6 = "@firebase/installations";
	
	var name$7 = "@firebase/messaging";
	
	var name$8 = "@firebase/performance";
	
	var name$9 = "@firebase/remote-config";
	
	var name$a = "@firebase/storage";
	
	var name$b = "@firebase/firestore";
	
	var name$c = "firebase-wrapper";
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _a$1;
	var DEFAULT_ENTRY_NAME = '[DEFAULT]';
	var PLATFORM_LOG_STRING = (_a$1 = {},
	    _a$1[name$1] = 'fire-core',
	    _a$1[name$2] = 'fire-analytics',
	    _a$1[name$3] = 'fire-auth',
	    _a$1[name$4] = 'fire-rtdb',
	    _a$1[name$5] = 'fire-fn',
	    _a$1[name$6] = 'fire-iid',
	    _a$1[name$7] = 'fire-fcm',
	    _a$1[name$8] = 'fire-perf',
	    _a$1[name$9] = 'fire-rc',
	    _a$1[name$a] = 'fire-gcs',
	    _a$1[name$b] = 'fire-fst',
	    _a$1['fire-js'] = 'fire-js',
	    _a$1[name$c] = 'fire-js-all',
	    _a$1);
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var logger = new logger$1.Logger('@firebase/app');
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Global context object for a collection of services using
	 * a shared authentication state.
	 */
	var FirebaseAppImpl = /** @class */ (function () {
	    function FirebaseAppImpl(options, config, firebase_) {
	        var e_1, _a;
	        var _this = this;
	        this.firebase_ = firebase_;
	        this.isDeleted_ = false;
	        this.name_ = config.name;
	        this.automaticDataCollectionEnabled_ =
	            config.automaticDataCollectionEnabled || false;
	        this.options_ = util.deepCopy(options);
	        this.container = new component.ComponentContainer(config.name);
	        // add itself to container
	        this._addComponent(new component.Component('app', function () { return _this; }, "PUBLIC" /* PUBLIC */));
	        try {
	            // populate ComponentContainer with existing components
	            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var component$1 = _c.value;
	                this._addComponent(component$1);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    }
	    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
	        get: function () {
	            this.checkDestroyed_();
	            return this.automaticDataCollectionEnabled_;
	        },
	        set: function (val) {
	            this.checkDestroyed_();
	            this.automaticDataCollectionEnabled_ = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
	        get: function () {
	            this.checkDestroyed_();
	            return this.name_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
	        get: function () {
	            this.checkDestroyed_();
	            return this.options_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    FirebaseAppImpl.prototype.delete = function () {
	        var _this = this;
	        return new Promise(function (resolve) {
	            _this.checkDestroyed_();
	            resolve();
	        })
	            .then(function () {
	            _this.firebase_.INTERNAL.removeApp(_this.name_);
	            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));
	        })
	            .then(function () {
	            _this.isDeleted_ = true;
	        });
	    };
	    /**
	     * Return a service instance associated with this app (creating it
	     * on demand), identified by the passed instanceIdentifier.
	     *
	     * NOTE: Currently storage and functions are the only ones that are leveraging this
	     * functionality. They invoke it by calling:
	     *
	     * ```javascript
	     * firebase.app().storage('STORAGE BUCKET ID')
	     * ```
	     *
	     * The service name is passed to this already
	     * @internal
	     */
	    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
	        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
	        this.checkDestroyed_();
	        // getImmediate will always succeed because _getService is only called for registered components.
	        return this.container.getProvider(name).getImmediate({
	            identifier: instanceIdentifier
	        });
	    };
	    /**
	     * Remove a service instance from the cache, so we will create a new instance for this service
	     * when people try to get this service again.
	     *
	     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
	     *
	     * @param name The service name
	     * @param instanceIdentifier instance identifier in case multiple instances are allowed
	     * @internal
	     */
	    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
	        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        this.container.getProvider(name).clearInstance(instanceIdentifier);
	    };
	    /**
	     * @param component the component being added to this app's container
	     */
	    FirebaseAppImpl.prototype._addComponent = function (component) {
	        try {
	            this.container.addComponent(component);
	        }
	        catch (e) {
	            logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
	        }
	    };
	    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
	        this.container.addOrOverwriteComponent(component);
	    };
	    /**
	     * This function will throw an Error if the App has already been deleted -
	     * use before performing API actions on the App.
	     */
	    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
	        if (this.isDeleted_) {
	            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
	        }
	    };
	    return FirebaseAppImpl;
	}());
	// Prevent dead-code elimination of these methods w/o invalid property
	// copying.
	(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
	    FirebaseAppImpl.prototype.delete ||
	    console.log('dc');
	
	var version$1 = "7.13.2";
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Because auth can't share code with other components, we attach the utility functions
	 * in an internal namespace to share code.
	 * This function return a firebase namespace object without
	 * any utility functions, so it can be shared between the regular firebaseNamespace and
	 * the lite version.
	 */
	function createFirebaseNamespaceCore(firebaseAppImpl) {
	    var apps = {};
	    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    var components = new Map();
	    // A namespace is a plain JavaScript Object.
	    var namespace = {
	        // Hack to prevent Babel from modifying the object returned
	        // as the firebase namespace.
	        // @ts-ignore
	        __esModule: true,
	        initializeApp: initializeApp,
	        // @ts-ignore
	        app: app,
	        registerVersion: registerVersion,
	        setLogLevel: logger$1.setLogLevel,
	        onLog: onLog,
	        // @ts-ignore
	        apps: null,
	        SDK_VERSION: version$1,
	        INTERNAL: {
	            registerComponent: registerComponent,
	            removeApp: removeApp,
	            components: components,
	            useAsService: useAsService
	        }
	    };
	    // Inject a circular default export to allow Babel users who were previously
	    // using:
	    //
	    //   import firebase from 'firebase';
	    //   which becomes: var firebase = require('firebase').default;
	    //
	    // instead of
	    //
	    //   import * as firebase from 'firebase';
	    //   which becomes: var firebase = require('firebase');
	    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    namespace['default'] = namespace;
	    // firebase.apps is a read-only getter.
	    Object.defineProperty(namespace, 'apps', {
	        get: getApps
	    });
	    /**
	     * Called by App.delete() - but before any services associated with the App
	     * are deleted.
	     */
	    function removeApp(name) {
	        delete apps[name];
	    }
	    /**
	     * Get the App object for a given name (or DEFAULT).
	     */
	    function app(name) {
	        name = name || DEFAULT_ENTRY_NAME;
	        if (!util.contains(apps, name)) {
	            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
	        }
	        return apps[name];
	    }
	    // @ts-ignore
	    app['App'] = firebaseAppImpl;
	    function initializeApp(options, rawConfig) {
	        if (rawConfig === void 0) { rawConfig = {}; }
	        if (typeof rawConfig !== 'object' || rawConfig === null) {
	            var name_1 = rawConfig;
	            rawConfig = { name: name_1 };
	        }
	        var config = rawConfig;
	        if (config.name === undefined) {
	            config.name = DEFAULT_ENTRY_NAME;
	        }
	        var name = config.name;
	        if (typeof name !== 'string' || !name) {
	            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
	                appName: String(name)
	            });
	        }
	        if (util.contains(apps, name)) {
	            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
	        }
	        var app = new firebaseAppImpl(options, config, namespace);
	        apps[name] = app;
	        return app;
	    }
	    /*
	     * Return an array of all the non-deleted FirebaseApps.
	     */
	    function getApps() {
	        // Make a copy so caller cannot mutate the apps list.
	        return Object.keys(apps).map(function (name) { return apps[name]; });
	    }
	    function registerComponent(component) {
	        var e_1, _a;
	        var componentName = component.name;
	        if (components.has(componentName)) {
	            logger.debug("There were multiple attempts to register component " + componentName + ".");
	            return component.type === "PUBLIC" /* PUBLIC */
	                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                    namespace[componentName]
	                : null;
	        }
	        components.set(componentName, component);
	        // create service namespace for public components
	        if (component.type === "PUBLIC" /* PUBLIC */) {
	            // The Service namespace is an accessor function ...
	            var serviceNamespace = function (appArg) {
	                if (appArg === void 0) { appArg = app(); }
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                if (typeof appArg[componentName] !== 'function') {
	                    // Invalid argument.
	                    // This happens in the following case: firebase.storage('gs:/')
	                    throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
	                        appName: componentName
	                    });
	                }
	                // Forward service instance lookup to the FirebaseApp.
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                return appArg[componentName]();
	            };
	            // ... and a container for service-level properties.
	            if (component.serviceProps !== undefined) {
	                util.deepExtend(serviceNamespace, component.serviceProps);
	            }
	            // eslint-disable-next-line @typescript-eslint/no-explicit-any
	            namespace[componentName] = serviceNamespace;
	            // Patch the FirebaseAppImpl prototype
	            // eslint-disable-next-line @typescript-eslint/no-explicit-any
	            firebaseAppImpl.prototype[componentName] =
	                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
	                // option added to the no-explicit-any rule when ESlint releases it.
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                function () {
	                    var args = [];
	                    for (var _i = 0; _i < arguments.length; _i++) {
	                        args[_i] = arguments[_i];
	                    }
	                    var serviceFxn = this._getService.bind(this, componentName);
	                    return serviceFxn.apply(this, component.multipleInstances ? args : []);
	                };
	        }
	        try {
	            // add the component to existing app instances
	            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var appName = _c.value;
	                apps[appName]._addComponent(component);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return component.type === "PUBLIC" /* PUBLIC */
	            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                namespace[componentName]
	            : null;
	    }
	    function registerVersion(libraryKeyOrName, version, variant) {
	        var _a;
	        // TODO: We can use this check to whitelist strings when/if we set up
	        // a good whitelist system.
	        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
	        if (variant) {
	            library += "-" + variant;
	        }
	        var libraryMismatch = library.match(/\s|\//);
	        var versionMismatch = version.match(/\s|\//);
	        if (libraryMismatch || versionMismatch) {
	            var warning = [
	                "Unable to register library \"" + library + "\" with version \"" + version + "\":"
	            ];
	            if (libraryMismatch) {
	                warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
	            }
	            if (libraryMismatch && versionMismatch) {
	                warning.push('and');
	            }
	            if (versionMismatch) {
	                warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
	            }
	            logger.warn(warning.join(' '));
	            return;
	        }
	        registerComponent(new component.Component(library + "-version", function () { return ({ library: library, version: version }); }, "VERSION" /* VERSION */));
	    }
	    function onLog(logCallback, options) {
	        if (logCallback !== null && typeof logCallback !== 'function') {
	            throw ERROR_FACTORY.create("invalid-log-argument" /* INVALID_LOG_ARGUMENT */, {
	                appName: name
	            });
	        }
	        logger$1.setUserLogHandler(logCallback, options);
	    }
	    // Map the requested service to a registered service name
	    // (used to map auth to serverAuth service when needed).
	    function useAsService(app, name) {
	        if (name === 'serverAuth') {
	            return null;
	        }
	        var useService = name;
	        return useService;
	    }
	    return namespace;
	}
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Return a firebase namespace object.
	 *
	 * In production, this will be called exactly once and the result
	 * assigned to the 'firebase' global.  It may be called multiple times
	 * in unit tests.
	 */
	function createFirebaseNamespace() {
	    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
	    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
	        extendNamespace: extendNamespace,
	        createSubscribe: util.createSubscribe,
	        ErrorFactory: util.ErrorFactory,
	        deepExtend: util.deepExtend });
	    /**
	     * Patch the top-level firebase namespace with additional properties.
	     *
	     * firebase.INTERNAL.extendNamespace()
	     */
	    function extendNamespace(props) {
	        util.deepExtend(namespace, props);
	    }
	    return namespace;
	}
	var firebase = createFirebaseNamespace();
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var PlatformLoggerService = /** @class */ (function () {
	    function PlatformLoggerService(container) {
	        this.container = container;
	    }
	    // In initial implementation, this will be called by installations on
	    // auth token refresh, and installations will send this string.
	    PlatformLoggerService.prototype.getPlatformInfoString = function () {
	        var providers = this.container.getProviders();
	        // Loop through providers and get library/version pairs from any that are
	        // version components.
	        return providers
	            .map(function (provider) {
	            if (isVersionServiceProvider(provider)) {
	                var service = provider.getImmediate();
	                return service.library + "/" + service.version;
	            }
	            else {
	                return null;
	            }
	        })
	            .filter(function (logString) { return logString; })
	            .join(' ');
	    };
	    return PlatformLoggerService;
	}());
	/**
	 *
	 * @param provider check if this provider provides a VersionService
	 *
	 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
	 * provides VersionService. The provider is not necessarily a 'app-version'
	 * provider.
	 */
	function isVersionServiceProvider(provider) {
	    var component = provider.getComponent();
	    return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* VERSION */;
	}
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function registerCoreComponents(firebase, variant) {
	    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, "PRIVATE" /* PRIVATE */));
	    // Register `app` package.
	    firebase.registerVersion(name$1, version, variant);
	    // Register platform SDK identifier (no version).
	    firebase.registerVersion('fire-js', '');
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Firebase Lite detection test
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	if (util.isBrowser() && self.firebase !== undefined) {
	    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
	    // eslint-disable-next-line
	    var sdkVersion = self.firebase.SDK_VERSION;
	    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
	        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
	    }
	}
	var initializeApp = firebase.initializeApp;
	// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
	// the no-explicit-any rule when ESlint releases it.
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	firebase.initializeApp = function () {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i] = arguments[_i];
	    }
	    // Environment check before initializing app
	    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
	    // in @firebase/logger
	    if (util.isNode()) {
	        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
	    }
	    return initializeApp.apply(undefined, args);
	};
	var firebase$1 = firebase;
	registerCoreComponents(firebase$1);
	
	exports.default = firebase$1;
	exports.firebase = firebase$1;
	//# sourceMappingURL=index.cjs.js.map


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	var tslib = __webpack_require__(74);
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
	 */
	var CONSTANTS = {
	    /**
	     * @define {boolean} Whether this is the client Node.js SDK.
	     */
	    NODE_CLIENT: false,
	    /**
	     * @define {boolean} Whether this is the Admin Node.js SDK.
	     */
	    NODE_ADMIN: false,
	    /**
	     * Firebase SDK Version
	     */
	    SDK_VERSION: '${JSCORE_VERSION}'
	};
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Throws an error if the provided assertion is falsy
	 */
	var assert = function (assertion, message) {
	    if (!assertion) {
	        throw assertionError(message);
	    }
	};
	/**
	 * Returns an Error object suitable for throwing.
	 */
	var assertionError = function (message) {
	    return new Error('Firebase Database (' +
	        CONSTANTS.SDK_VERSION +
	        ') INTERNAL ASSERT FAILED: ' +
	        message);
	};
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var stringToByteArray = function (str) {
	    // TODO(user): Use native implementations if/when available
	    var out = [];
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        if (c < 128) {
	            out[p++] = c;
	        }
	        else if (c < 2048) {
	            out[p++] = (c >> 6) | 192;
	            out[p++] = (c & 63) | 128;
	        }
	        else if ((c & 0xfc00) === 0xd800 &&
	            i + 1 < str.length &&
	            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
	            // Surrogate Pair
	            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
	            out[p++] = (c >> 18) | 240;
	            out[p++] = ((c >> 12) & 63) | 128;
	            out[p++] = ((c >> 6) & 63) | 128;
	            out[p++] = (c & 63) | 128;
	        }
	        else {
	            out[p++] = (c >> 12) | 224;
	            out[p++] = ((c >> 6) & 63) | 128;
	            out[p++] = (c & 63) | 128;
	        }
	    }
	    return out;
	};
	/**
	 * Turns an array of numbers into the string given by the concatenation of the
	 * characters to which the numbers correspond.
	 * @param bytes Array of numbers representing characters.
	 * @return Stringification of the array.
	 */
	var byteArrayToString = function (bytes) {
	    // TODO(user): Use native implementations if/when available
	    var out = [];
	    var pos = 0, c = 0;
	    while (pos < bytes.length) {
	        var c1 = bytes[pos++];
	        if (c1 < 128) {
	            out[c++] = String.fromCharCode(c1);
	        }
	        else if (c1 > 191 && c1 < 224) {
	            var c2 = bytes[pos++];
	            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
	        }
	        else if (c1 > 239 && c1 < 365) {
	            // Surrogate Pair
	            var c2 = bytes[pos++];
	            var c3 = bytes[pos++];
	            var c4 = bytes[pos++];
	            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
	                0x10000;
	            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
	            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
	        }
	        else {
	            var c2 = bytes[pos++];
	            var c3 = bytes[pos++];
	            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
	        }
	    }
	    return out.join('');
	};
	// We define it as an object literal instead of a class because a class compiled down to es5 can't
	// be treeshaked. https://github.com/rollup/rollup/issues/1691
	// Static lookup maps, lazily populated by init_()
	var base64 = {
	    /**
	     * Maps bytes to characters.
	     */
	    byteToCharMap_: null,
	    /**
	     * Maps characters to bytes.
	     */
	    charToByteMap_: null,
	    /**
	     * Maps bytes to websafe characters.
	     * @private
	     */
	    byteToCharMapWebSafe_: null,
	    /**
	     * Maps websafe characters to bytes.
	     * @private
	     */
	    charToByteMapWebSafe_: null,
	    /**
	     * Our default alphabet, shared between
	     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
	     */
	    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
	    /**
	     * Our default alphabet. Value 64 (=) is special; it means "nothing."
	     */
	    get ENCODED_VALS() {
	        return this.ENCODED_VALS_BASE + '+/=';
	    },
	    /**
	     * Our websafe alphabet.
	     */
	    get ENCODED_VALS_WEBSAFE() {
	        return this.ENCODED_VALS_BASE + '-_.';
	    },
	    /**
	     * Whether this browser supports the atob and btoa functions. This extension
	     * started at Mozilla but is now implemented by many browsers. We use the
	     * ASSUME_* variables to avoid pulling in the full useragent detection library
	     * but still allowing the standard per-browser compilations.
	     *
	     */
	    HAS_NATIVE_SUPPORT: typeof atob === 'function',
	    /**
	     * Base64-encode an array of bytes.
	     *
	     * @param input An array of bytes (numbers with
	     *     value in [0, 255]) to encode.
	     * @param webSafe Boolean indicating we should use the
	     *     alternative alphabet.
	     * @return The base64 encoded string.
	     */
	    encodeByteArray: function (input, webSafe) {
	        if (!Array.isArray(input)) {
	            throw Error('encodeByteArray takes an array as a parameter');
	        }
	        this.init_();
	        var byteToCharMap = webSafe
	            ? this.byteToCharMapWebSafe_
	            : this.byteToCharMap_;
	        var output = [];
	        for (var i = 0; i < input.length; i += 3) {
	            var byte1 = input[i];
	            var haveByte2 = i + 1 < input.length;
	            var byte2 = haveByte2 ? input[i + 1] : 0;
	            var haveByte3 = i + 2 < input.length;
	            var byte3 = haveByte3 ? input[i + 2] : 0;
	            var outByte1 = byte1 >> 2;
	            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
	            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
	            var outByte4 = byte3 & 0x3f;
	            if (!haveByte3) {
	                outByte4 = 64;
	                if (!haveByte2) {
	                    outByte3 = 64;
	                }
	            }
	            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
	        }
	        return output.join('');
	    },
	    /**
	     * Base64-encode a string.
	     *
	     * @param input A string to encode.
	     * @param webSafe If true, we should use the
	     *     alternative alphabet.
	     * @return The base64 encoded string.
	     */
	    encodeString: function (input, webSafe) {
	        // Shortcut for Mozilla browsers that implement
	        // a native base64 encoder in the form of "btoa/atob"
	        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
	            return btoa(input);
	        }
	        return this.encodeByteArray(stringToByteArray(input), webSafe);
	    },
	    /**
	     * Base64-decode a string.
	     *
	     * @param input to decode.
	     * @param webSafe True if we should use the
	     *     alternative alphabet.
	     * @return string representing the decoded value.
	     */
	    decodeString: function (input, webSafe) {
	        // Shortcut for Mozilla browsers that implement
	        // a native base64 encoder in the form of "btoa/atob"
	        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
	            return atob(input);
	        }
	        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
	    },
	    /**
	     * Base64-decode a string.
	     *
	     * In base-64 decoding, groups of four characters are converted into three
	     * bytes.  If the encoder did not apply padding, the input length may not
	     * be a multiple of 4.
	     *
	     * In this case, the last group will have fewer than 4 characters, and
	     * padding will be inferred.  If the group has one or two characters, it decodes
	     * to one byte.  If the group has three characters, it decodes to two bytes.
	     *
	     * @param input Input to decode.
	     * @param webSafe True if we should use the web-safe alphabet.
	     * @return bytes representing the decoded value.
	     */
	    decodeStringToByteArray: function (input, webSafe) {
	        this.init_();
	        var charToByteMap = webSafe
	            ? this.charToByteMapWebSafe_
	            : this.charToByteMap_;
	        var output = [];
	        for (var i = 0; i < input.length;) {
	            var byte1 = charToByteMap[input.charAt(i++)];
	            var haveByte2 = i < input.length;
	            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
	            ++i;
	            var haveByte3 = i < input.length;
	            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
	            ++i;
	            var haveByte4 = i < input.length;
	            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
	            ++i;
	            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
	                throw Error();
	            }
	            var outByte1 = (byte1 << 2) | (byte2 >> 4);
	            output.push(outByte1);
	            if (byte3 !== 64) {
	                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
	                output.push(outByte2);
	                if (byte4 !== 64) {
	                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
	                    output.push(outByte3);
	                }
	            }
	        }
	        return output;
	    },
	    /**
	     * Lazy static initialization function. Called before
	     * accessing any of the static map variables.
	     * @private
	     */
	    init_: function () {
	        if (!this.byteToCharMap_) {
	            this.byteToCharMap_ = {};
	            this.charToByteMap_ = {};
	            this.byteToCharMapWebSafe_ = {};
	            this.charToByteMapWebSafe_ = {};
	            // We want quick mappings back and forth, so we precompute two maps.
	            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
	                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
	                this.charToByteMap_[this.byteToCharMap_[i]] = i;
	                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
	                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
	                // Be forgiving when decoding and correctly decode both encodings.
	                if (i >= this.ENCODED_VALS_BASE.length) {
	                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
	                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
	                }
	            }
	        }
	    }
	};
	/**
	 * URL-safe base64 encoding
	 */
	var base64Encode = function (str) {
	    var utf8Bytes = stringToByteArray(str);
	    return base64.encodeByteArray(utf8Bytes, true);
	};
	/**
	 * URL-safe base64 decoding
	 *
	 * NOTE: DO NOT use the global atob() function - it does NOT support the
	 * base64Url variant encoding.
	 *
	 * @param str To be decoded
	 * @return Decoded result, if possible
	 */
	var base64Decode = function (str) {
	    try {
	        return base64.decodeString(str, true);
	    }
	    catch (e) {
	        console.error('base64Decode failed: ', e);
	    }
	    return null;
	};
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Do a deep-copy of basic JavaScript Objects or Arrays.
	 */
	function deepCopy(value) {
	    return deepExtend(undefined, value);
	}
	/**
	 * Copy properties from source to target (recursively allows extension
	 * of Objects and Arrays).  Scalar values in the target are over-written.
	 * If target is undefined, an object of the appropriate type will be created
	 * (and returned).
	 *
	 * We recursively copy all child properties of plain Objects in the source- so
	 * that namespace- like dictionaries are merged.
	 *
	 * Note that the target can be a function, in which case the properties in
	 * the source Object are copied onto it as static properties of the Function.
	 */
	function deepExtend(target, source) {
	    if (!(source instanceof Object)) {
	        return source;
	    }
	    switch (source.constructor) {
	        case Date:
	            // Treat Dates like scalars; if the target date object had any child
	            // properties - they will be lost!
	            var dateValue = source;
	            return new Date(dateValue.getTime());
	        case Object:
	            if (target === undefined) {
	                target = {};
	            }
	            break;
	        case Array:
	            // Always copy the array source and overwrite the target.
	            target = [];
	            break;
	        default:
	            // Not a plain Object - treat it as a scalar.
	            return source;
	    }
	    for (var prop in source) {
	        if (!source.hasOwnProperty(prop)) {
	            continue;
	        }
	        target[prop] = deepExtend(target[prop], source[prop]);
	    }
	    return target;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Deferred = /** @class */ (function () {
	    function Deferred() {
	        var _this = this;
	        this.reject = function () { };
	        this.resolve = function () { };
	        this.promise = new Promise(function (resolve, reject) {
	            _this.resolve = resolve;
	            _this.reject = reject;
	        });
	    }
	    /**
	     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
	     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
	     * and returns a node-style callback which will resolve or reject the Deferred's promise.
	     */
	    Deferred.prototype.wrapCallback = function (callback) {
	        var _this = this;
	        return function (error, value) {
	            if (error) {
	                _this.reject(error);
	            }
	            else {
	                _this.resolve(value);
	            }
	            if (typeof callback === 'function') {
	                // Attaching noop handler just in case developer wasn't expecting
	                // promises
	                _this.promise.catch(function () { });
	                // Some of our callbacks don't expect a value and our own tests
	                // assert that the parameter length is 1
	                if (callback.length === 1) {
	                    callback(error);
	                }
	                else {
	                    callback(error, value);
	                }
	            }
	        };
	    };
	    return Deferred;
	}());
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Returns navigator.userAgent string or '' if it's not defined.
	 * @return user agent string
	 */
	function getUA() {
	    if (typeof navigator !== 'undefined' &&
	        typeof navigator['userAgent'] === 'string') {
	        return navigator['userAgent'];
	    }
	    else {
	        return '';
	    }
	}
	/**
	 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
	 *
	 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
	 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
	 * wait for a callback.
	 */
	function isMobileCordova() {
	    return (typeof window !== 'undefined' &&
	        // @ts-ignore Setting up an broadly applicable index signature for Window
	        // just to deal with this case would probably be a bad idea.
	        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
	        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
	}
	/**
	 * Detect Node.js.
	 *
	 * @return true if Node.js environment is detected.
	 */
	// Node detection logic from: https://github.com/iliakan/detect-node/
	function isNode() {
	    try {
	        return (Object.prototype.toString.call(global.process) === '[object process]');
	    }
	    catch (e) {
	        return false;
	    }
	}
	/**
	 * Detect Browser Environment
	 */
	function isBrowser() {
	    return typeof self === 'object' && self.self === self;
	}
	function isBrowserExtension() {
	    var runtime = typeof chrome === 'object'
	        ? chrome.runtime
	        : typeof browser === 'object'
	            ? browser.runtime
	            : undefined;
	    return typeof runtime === 'object' && runtime.id !== undefined;
	}
	/**
	 * Detect React Native.
	 *
	 * @return true if ReactNative environment is detected.
	 */
	function isReactNative() {
	    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
	}
	/** Detects Electron apps. */
	function isElectron() {
	    return getUA().indexOf('Electron/') >= 0;
	}
	/** Detects Internet Explorer. */
	function isIE() {
	    var ua = getUA();
	    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
	}
	/** Detects Universal Windows Platform apps. */
	function isUWP() {
	    return getUA().indexOf('MSAppHost/') >= 0;
	}
	/**
	 * Detect whether the current SDK build is the Node version.
	 *
	 * @return true if it's the Node SDK build.
	 */
	function isNodeSdk() {
	    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var ERROR_NAME = 'FirebaseError';
	// Based on code from:
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
	var FirebaseError = /** @class */ (function (_super) {
	    tslib.__extends(FirebaseError, _super);
	    function FirebaseError(code, message) {
	        var _this = _super.call(this, message) || this;
	        _this.code = code;
	        _this.name = ERROR_NAME;
	        // Fix For ES5
	        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
	        Object.setPrototypeOf(_this, FirebaseError.prototype);
	        // Maintains proper stack trace for where our error was thrown.
	        // Only available on V8.
	        if (Error.captureStackTrace) {
	            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
	        }
	        return _this;
	    }
	    return FirebaseError;
	}(Error));
	var ErrorFactory = /** @class */ (function () {
	    function ErrorFactory(service, serviceName, errors) {
	        this.service = service;
	        this.serviceName = serviceName;
	        this.errors = errors;
	    }
	    ErrorFactory.prototype.create = function (code) {
	        var data = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            data[_i - 1] = arguments[_i];
	        }
	        var customData = data[0] || {};
	        var fullCode = this.service + "/" + code;
	        var template = this.errors[code];
	        var message = template ? replaceTemplate(template, customData) : 'Error';
	        // Service Name: Error message (service/code).
	        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
	        var error = new FirebaseError(fullCode, fullMessage);
	        // Keys with an underscore at the end of their name are not included in
	        // error.data for some reason.
	        // TODO: Replace with Object.entries when lib is updated to es2017.
	        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
	            var key = _b[_a];
	            if (key.slice(-1) !== '_') {
	                if (key in error) {
	                    console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
	                }
	                error[key] = customData[key];
	            }
	        }
	        return error;
	    };
	    return ErrorFactory;
	}());
	function replaceTemplate(template, data) {
	    return template.replace(PATTERN, function (_, key) {
	        var value = data[key];
	        return value != null ? value.toString() : "<" + key + "?>";
	    });
	}
	var PATTERN = /\{\$([^}]+)}/g;
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Evaluates a JSON string into a javascript object.
	 *
	 * @param {string} str A string containing JSON.
	 * @return {*} The javascript object representing the specified JSON.
	 */
	function jsonEval(str) {
	    return JSON.parse(str);
	}
	/**
	 * Returns JSON representing a javascript object.
	 * @param {*} data Javascript object to be stringified.
	 * @return {string} The JSON contents of the object.
	 */
	function stringify(data) {
	    return JSON.stringify(data);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Decodes a Firebase auth. token into constituent parts.
	 *
	 * Notes:
	 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var decode = function (token) {
	    var header = {}, claims = {}, data = {}, signature = '';
	    try {
	        var parts = token.split('.');
	        header = jsonEval(base64Decode(parts[0]) || '');
	        claims = jsonEval(base64Decode(parts[1]) || '');
	        signature = parts[2];
	        data = claims['d'] || {};
	        delete claims['d'];
	    }
	    catch (e) { }
	    return {
	        header: header,
	        claims: claims,
	        data: data,
	        signature: signature
	    };
	};
	/**
	 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
	 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var isValidTimestamp = function (token) {
	    var claims = decode(token).claims;
	    var now = Math.floor(new Date().getTime() / 1000);
	    var validSince = 0, validUntil = 0;
	    if (typeof claims === 'object') {
	        if (claims.hasOwnProperty('nbf')) {
	            validSince = claims['nbf'];
	        }
	        else if (claims.hasOwnProperty('iat')) {
	            validSince = claims['iat'];
	        }
	        if (claims.hasOwnProperty('exp')) {
	            validUntil = claims['exp'];
	        }
	        else {
	            // token will expire after 24h by default
	            validUntil = validSince + 86400;
	        }
	    }
	    return (!!now &&
	        !!validSince &&
	        !!validUntil &&
	        now >= validSince &&
	        now <= validUntil);
	};
	/**
	 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
	 *
	 * Notes:
	 * - May return null if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var issuedAtTime = function (token) {
	    var claims = decode(token).claims;
	    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
	        return claims['iat'];
	    }
	    return null;
	};
	/**
	 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var isValidFormat = function (token) {
	    var decoded = decode(token), claims = decoded.claims;
	    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
	};
	/**
	 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var isAdmin = function (token) {
	    var claims = decode(token).claims;
	    return typeof claims === 'object' && claims['admin'] === true;
	};
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function contains(obj, key) {
	    return Object.prototype.hasOwnProperty.call(obj, key);
	}
	function safeGet(obj, key) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) {
	        return obj[key];
	    }
	    else {
	        return undefined;
	    }
	}
	function isEmpty(obj) {
	    for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	            return false;
	        }
	    }
	    return true;
	}
	function map(obj, fn, contextObj) {
	    var res = {};
	    for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	            res[key] = fn.call(contextObj, obj[key], key, obj);
	        }
	    }
	    return res;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
	 * params object (e.g. {arg: 'val', arg2: 'val2'})
	 * Note: You must prepend it with ? when adding it to a URL.
	 */
	function querystring(querystringParams) {
	    var params = [];
	    var _loop_1 = function (key, value) {
	        if (Array.isArray(value)) {
	            value.forEach(function (arrayVal) {
	                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
	            });
	        }
	        else {
	            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
	        }
	    };
	    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
	        var _b = _a[_i], key = _b[0], value = _b[1];
	        _loop_1(key, value);
	    }
	    return params.length ? '&' + params.join('&') : '';
	}
	/**
	 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
	 * (e.g. {arg: 'val', arg2: 'val2'})
	 */
	function querystringDecode(querystring) {
	    var obj = {};
	    var tokens = querystring.replace(/^\?/, '').split('&');
	    tokens.forEach(function (token) {
	        if (token) {
	            var key = token.split('=');
	            obj[key[0]] = key[1];
	        }
	    });
	    return obj;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview SHA-1 cryptographic hash.
	 * Variable names follow the notation in FIPS PUB 180-3:
	 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
	 *
	 * Usage:
	 *   var sha1 = new sha1();
	 *   sha1.update(bytes);
	 *   var hash = sha1.digest();
	 *
	 * Performance:
	 *   Chrome 23:   ~400 Mbit/s
	 *   Firefox 16:  ~250 Mbit/s
	 *
	 */
	/**
	 * SHA-1 cryptographic hash constructor.
	 *
	 * The properties declared here are discussed in the above algorithm document.
	 * @constructor
	 * @final
	 * @struct
	 */
	var Sha1 = /** @class */ (function () {
	    function Sha1() {
	        /**
	         * Holds the previous values of accumulated variables a-e in the compress_
	         * function.
	         * @private
	         */
	        this.chain_ = [];
	        /**
	         * A buffer holding the partially computed hash result.
	         * @private
	         */
	        this.buf_ = [];
	        /**
	         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
	         * as the message schedule in the docs.
	         * @private
	         */
	        this.W_ = [];
	        /**
	         * Contains data needed to pad messages less than 64 bytes.
	         * @private
	         */
	        this.pad_ = [];
	        /**
	         * @private {number}
	         */
	        this.inbuf_ = 0;
	        /**
	         * @private {number}
	         */
	        this.total_ = 0;
	        this.blockSize = 512 / 8;
	        this.pad_[0] = 128;
	        for (var i = 1; i < this.blockSize; ++i) {
	            this.pad_[i] = 0;
	        }
	        this.reset();
	    }
	    Sha1.prototype.reset = function () {
	        this.chain_[0] = 0x67452301;
	        this.chain_[1] = 0xefcdab89;
	        this.chain_[2] = 0x98badcfe;
	        this.chain_[3] = 0x10325476;
	        this.chain_[4] = 0xc3d2e1f0;
	        this.inbuf_ = 0;
	        this.total_ = 0;
	    };
	    /**
	     * Internal compress helper function.
	     * @param buf Block to compress.
	     * @param offset Offset of the block in the buffer.
	     * @private
	     */
	    Sha1.prototype.compress_ = function (buf, offset) {
	        if (!offset) {
	            offset = 0;
	        }
	        var W = this.W_;
	        // get 16 big endian words
	        if (typeof buf === 'string') {
	            for (var i = 0; i < 16; i++) {
	                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
	                // have a bug that turns the post-increment ++ operator into pre-increment
	                // during JIT compilation.  We have code that depends heavily on SHA-1 for
	                // correctness and which is affected by this bug, so I've removed all uses
	                // of post-increment ++ in which the result value is used.  We can revert
	                // this change once the Safari bug
	                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
	                // most clients have been updated.
	                W[i] =
	                    (buf.charCodeAt(offset) << 24) |
	                        (buf.charCodeAt(offset + 1) << 16) |
	                        (buf.charCodeAt(offset + 2) << 8) |
	                        buf.charCodeAt(offset + 3);
	                offset += 4;
	            }
	        }
	        else {
	            for (var i = 0; i < 16; i++) {
	                W[i] =
	                    (buf[offset] << 24) |
	                        (buf[offset + 1] << 16) |
	                        (buf[offset + 2] << 8) |
	                        buf[offset + 3];
	                offset += 4;
	            }
	        }
	        // expand to 80 words
	        for (var i = 16; i < 80; i++) {
	            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
	        }
	        var a = this.chain_[0];
	        var b = this.chain_[1];
	        var c = this.chain_[2];
	        var d = this.chain_[3];
	        var e = this.chain_[4];
	        var f, k;
	        // TODO(user): Try to unroll this loop to speed up the computation.
	        for (var i = 0; i < 80; i++) {
	            if (i < 40) {
	                if (i < 20) {
	                    f = d ^ (b & (c ^ d));
	                    k = 0x5a827999;
	                }
	                else {
	                    f = b ^ c ^ d;
	                    k = 0x6ed9eba1;
	                }
	            }
	            else {
	                if (i < 60) {
	                    f = (b & c) | (d & (b | c));
	                    k = 0x8f1bbcdc;
	                }
	                else {
	                    f = b ^ c ^ d;
	                    k = 0xca62c1d6;
	                }
	            }
	            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
	            e = d;
	            d = c;
	            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
	            b = a;
	            a = t;
	        }
	        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
	        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
	        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
	        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
	        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
	    };
	    Sha1.prototype.update = function (bytes, length) {
	        // TODO(johnlenz): tighten the function signature and remove this check
	        if (bytes == null) {
	            return;
	        }
	        if (length === undefined) {
	            length = bytes.length;
	        }
	        var lengthMinusBlock = length - this.blockSize;
	        var n = 0;
	        // Using local instead of member variables gives ~5% speedup on Firefox 16.
	        var buf = this.buf_;
	        var inbuf = this.inbuf_;
	        // The outer while loop should execute at most twice.
	        while (n < length) {
	            // When we have no data in the block to top up, we can directly process the
	            // input buffer (assuming it contains sufficient data). This gives ~25%
	            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
	            // the data is provided in large chunks (or in multiples of 64 bytes).
	            if (inbuf === 0) {
	                while (n <= lengthMinusBlock) {
	                    this.compress_(bytes, n);
	                    n += this.blockSize;
	                }
	            }
	            if (typeof bytes === 'string') {
	                while (n < length) {
	                    buf[inbuf] = bytes.charCodeAt(n);
	                    ++inbuf;
	                    ++n;
	                    if (inbuf === this.blockSize) {
	                        this.compress_(buf);
	                        inbuf = 0;
	                        // Jump to the outer loop so we use the full-block optimization.
	                        break;
	                    }
	                }
	            }
	            else {
	                while (n < length) {
	                    buf[inbuf] = bytes[n];
	                    ++inbuf;
	                    ++n;
	                    if (inbuf === this.blockSize) {
	                        this.compress_(buf);
	                        inbuf = 0;
	                        // Jump to the outer loop so we use the full-block optimization.
	                        break;
	                    }
	                }
	            }
	        }
	        this.inbuf_ = inbuf;
	        this.total_ += length;
	    };
	    /** @override */
	    Sha1.prototype.digest = function () {
	        var digest = [];
	        var totalBits = this.total_ * 8;
	        // Add pad 0x80 0x00*.
	        if (this.inbuf_ < 56) {
	            this.update(this.pad_, 56 - this.inbuf_);
	        }
	        else {
	            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
	        }
	        // Add # bits.
	        for (var i = this.blockSize - 1; i >= 56; i--) {
	            this.buf_[i] = totalBits & 255;
	            totalBits /= 256; // Don't use bit-shifting here!
	        }
	        this.compress_(this.buf_);
	        var n = 0;
	        for (var i = 0; i < 5; i++) {
	            for (var j = 24; j >= 0; j -= 8) {
	                digest[n] = (this.chain_[i] >> j) & 255;
	                ++n;
	            }
	        }
	        return digest;
	    };
	    return Sha1;
	}());
	
	/**
	 * Helper to make a Subscribe function (just like Promise helps make a
	 * Thenable).
	 *
	 * @param executor Function which can make calls to a single Observer
	 *     as a proxy.
	 * @param onNoObservers Callback when count of Observers goes to zero.
	 */
	function createSubscribe(executor, onNoObservers) {
	    var proxy = new ObserverProxy(executor, onNoObservers);
	    return proxy.subscribe.bind(proxy);
	}
	/**
	 * Implement fan-out for any number of Observers attached via a subscribe
	 * function.
	 */
	var ObserverProxy = /** @class */ (function () {
	    /**
	     * @param executor Function which can make calls to a single Observer
	     *     as a proxy.
	     * @param onNoObservers Callback when count of Observers goes to zero.
	     */
	    function ObserverProxy(executor, onNoObservers) {
	        var _this = this;
	        this.observers = [];
	        this.unsubscribes = [];
	        this.observerCount = 0;
	        // Micro-task scheduling by calling task.then().
	        this.task = Promise.resolve();
	        this.finalized = false;
	        this.onNoObservers = onNoObservers;
	        // Call the executor asynchronously so subscribers that are called
	        // synchronously after the creation of the subscribe function
	        // can still receive the very first value generated in the executor.
	        this.task
	            .then(function () {
	            executor(_this);
	        })
	            .catch(function (e) {
	            _this.error(e);
	        });
	    }
	    ObserverProxy.prototype.next = function (value) {
	        this.forEachObserver(function (observer) {
	            observer.next(value);
	        });
	    };
	    ObserverProxy.prototype.error = function (error) {
	        this.forEachObserver(function (observer) {
	            observer.error(error);
	        });
	        this.close(error);
	    };
	    ObserverProxy.prototype.complete = function () {
	        this.forEachObserver(function (observer) {
	            observer.complete();
	        });
	        this.close();
	    };
	    /**
	     * Subscribe function that can be used to add an Observer to the fan-out list.
	     *
	     * - We require that no event is sent to a subscriber sychronously to their
	     *   call to subscribe().
	     */
	    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
	        var _this = this;
	        var observer;
	        if (nextOrObserver === undefined &&
	            error === undefined &&
	            complete === undefined) {
	            throw new Error('Missing Observer.');
	        }
	        // Assemble an Observer object when passed as callback functions.
	        if (implementsAnyMethods(nextOrObserver, [
	            'next',
	            'error',
	            'complete'
	        ])) {
	            observer = nextOrObserver;
	        }
	        else {
	            observer = {
	                next: nextOrObserver,
	                error: error,
	                complete: complete
	            };
	        }
	        if (observer.next === undefined) {
	            observer.next = noop;
	        }
	        if (observer.error === undefined) {
	            observer.error = noop;
	        }
	        if (observer.complete === undefined) {
	            observer.complete = noop;
	        }
	        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
	        // Attempt to subscribe to a terminated Observable - we
	        // just respond to the Observer with the final error or complete
	        // event.
	        if (this.finalized) {
	            // eslint-disable-next-line @typescript-eslint/no-floating-promises
	            this.task.then(function () {
	                try {
	                    if (_this.finalError) {
	                        observer.error(_this.finalError);
	                    }
	                    else {
	                        observer.complete();
	                    }
	                }
	                catch (e) {
	                    // nothing
	                }
	                return;
	            });
	        }
	        this.observers.push(observer);
	        return unsub;
	    };
	    // Unsubscribe is synchronous - we guarantee that no events are sent to
	    // any unsubscribed Observer.
	    ObserverProxy.prototype.unsubscribeOne = function (i) {
	        if (this.observers === undefined || this.observers[i] === undefined) {
	            return;
	        }
	        delete this.observers[i];
	        this.observerCount -= 1;
	        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
	            this.onNoObservers(this);
	        }
	    };
	    ObserverProxy.prototype.forEachObserver = function (fn) {
	        if (this.finalized) {
	            // Already closed by previous event....just eat the additional values.
	            return;
	        }
	        // Since sendOne calls asynchronously - there is no chance that
	        // this.observers will become undefined.
	        for (var i = 0; i < this.observers.length; i++) {
	            this.sendOne(i, fn);
	        }
	    };
	    // Call the Observer via one of it's callback function. We are careful to
	    // confirm that the observe has not been unsubscribed since this asynchronous
	    // function had been queued.
	    ObserverProxy.prototype.sendOne = function (i, fn) {
	        var _this = this;
	        // Execute the callback asynchronously
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.task.then(function () {
	            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
	                try {
	                    fn(_this.observers[i]);
	                }
	                catch (e) {
	                    // Ignore exceptions raised in Observers or missing methods of an
	                    // Observer.
	                    // Log error to console. b/31404806
	                    if (typeof console !== 'undefined' && console.error) {
	                        console.error(e);
	                    }
	                }
	            }
	        });
	    };
	    ObserverProxy.prototype.close = function (err) {
	        var _this = this;
	        if (this.finalized) {
	            return;
	        }
	        this.finalized = true;
	        if (err !== undefined) {
	            this.finalError = err;
	        }
	        // Proxy is no longer needed - garbage collect references
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.task.then(function () {
	            _this.observers = undefined;
	            _this.onNoObservers = undefined;
	        });
	    };
	    return ObserverProxy;
	}());
	/** Turn synchronous function into one called asynchronously. */
	function async(fn, onError) {
	    return function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        Promise.resolve(true)
	            .then(function () {
	            fn.apply(void 0, args);
	        })
	            .catch(function (error) {
	            if (onError) {
	                onError(error);
	            }
	        });
	    };
	}
	/**
	 * Return true if the object passed in implements any of the named methods.
	 */
	function implementsAnyMethods(obj, methods) {
	    if (typeof obj !== 'object' || obj === null) {
	        return false;
	    }
	    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
	        var method = methods_1[_i];
	        if (method in obj && typeof obj[method] === 'function') {
	            return true;
	        }
	    }
	    return false;
	}
	function noop() {
	    // do nothing
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Check to make sure the appropriate number of arguments are provided for a public function.
	 * Throws an error if it fails.
	 *
	 * @param fnName The function name
	 * @param minCount The minimum number of arguments to allow for the function call
	 * @param maxCount The maximum number of argument to allow for the function call
	 * @param argCount The actual number of arguments provided.
	 */
	var validateArgCount = function (fnName, minCount, maxCount, argCount) {
	    var argError;
	    if (argCount < minCount) {
	        argError = 'at least ' + minCount;
	    }
	    else if (argCount > maxCount) {
	        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
	    }
	    if (argError) {
	        var error = fnName +
	            ' failed: Was called with ' +
	            argCount +
	            (argCount === 1 ? ' argument.' : ' arguments.') +
	            ' Expects ' +
	            argError +
	            '.';
	        throw new Error(error);
	    }
	};
	/**
	 * Generates a string to prefix an error message about failed argument validation
	 *
	 * @param fnName The function name
	 * @param argumentNumber The index of the argument
	 * @param optional Whether or not the argument is optional
	 * @return The prefix to add to the error thrown for validation.
	 */
	function errorPrefix(fnName, argumentNumber, optional) {
	    var argName = '';
	    switch (argumentNumber) {
	        case 1:
	            argName = optional ? 'first' : 'First';
	            break;
	        case 2:
	            argName = optional ? 'second' : 'Second';
	            break;
	        case 3:
	            argName = optional ? 'third' : 'Third';
	            break;
	        case 4:
	            argName = optional ? 'fourth' : 'Fourth';
	            break;
	        default:
	            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
	    }
	    var error = fnName + ' failed: ';
	    error += argName + ' argument ';
	    return error;
	}
	/**
	 * @param fnName
	 * @param argumentNumber
	 * @param namespace
	 * @param optional
	 */
	function validateNamespace(fnName, argumentNumber, namespace, optional) {
	    if (optional && !namespace) {
	        return;
	    }
	    if (typeof namespace !== 'string') {
	        //TODO: I should do more validation here. We only allow certain chars in namespaces.
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
	            'must be a valid firebase namespace.');
	    }
	}
	function validateCallback(fnName, argumentNumber, callback, optional) {
	    if (optional && !callback) {
	        return;
	    }
	    if (typeof callback !== 'function') {
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
	            'must be a valid function.');
	    }
	}
	function validateContextObject(fnName, argumentNumber, context, optional) {
	    if (optional && !context) {
	        return;
	    }
	    if (typeof context !== 'object' || context === null) {
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
	            'must be a valid context object.');
	    }
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
	// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
	// so it's been modified.
	// Note that not all Unicode characters appear as single characters in JavaScript strings.
	// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
	// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
	// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
	// pair).
	// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
	/**
	 * @param {string} str
	 * @return {Array}
	 */
	var stringToByteArray$1 = function (str) {
	    var out = [];
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        // Is this the lead surrogate in a surrogate pair?
	        if (c >= 0xd800 && c <= 0xdbff) {
	            var high = c - 0xd800; // the high 10 bits.
	            i++;
	            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
	            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
	            c = 0x10000 + (high << 10) + low;
	        }
	        if (c < 128) {
	            out[p++] = c;
	        }
	        else if (c < 2048) {
	            out[p++] = (c >> 6) | 192;
	            out[p++] = (c & 63) | 128;
	        }
	        else if (c < 65536) {
	            out[p++] = (c >> 12) | 224;
	            out[p++] = ((c >> 6) & 63) | 128;
	            out[p++] = (c & 63) | 128;
	        }
	        else {
	            out[p++] = (c >> 18) | 240;
	            out[p++] = ((c >> 12) & 63) | 128;
	            out[p++] = ((c >> 6) & 63) | 128;
	            out[p++] = (c & 63) | 128;
	        }
	    }
	    return out;
	};
	/**
	 * Calculate length without actually converting; useful for doing cheaper validation.
	 * @param {string} str
	 * @return {number}
	 */
	var stringLength = function (str) {
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        if (c < 128) {
	            p++;
	        }
	        else if (c < 2048) {
	            p += 2;
	        }
	        else if (c >= 0xd800 && c <= 0xdbff) {
	            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
	            p += 4;
	            i++; // skip trail surrogate.
	        }
	        else {
	            p += 3;
	        }
	    }
	    return p;
	};
	
	exports.CONSTANTS = CONSTANTS;
	exports.Deferred = Deferred;
	exports.ErrorFactory = ErrorFactory;
	exports.FirebaseError = FirebaseError;
	exports.Sha1 = Sha1;
	exports.assert = assert;
	exports.assertionError = assertionError;
	exports.async = async;
	exports.base64 = base64;
	exports.base64Decode = base64Decode;
	exports.base64Encode = base64Encode;
	exports.contains = contains;
	exports.createSubscribe = createSubscribe;
	exports.decode = decode;
	exports.deepCopy = deepCopy;
	exports.deepExtend = deepExtend;
	exports.errorPrefix = errorPrefix;
	exports.getUA = getUA;
	exports.isAdmin = isAdmin;
	exports.isBrowser = isBrowser;
	exports.isBrowserExtension = isBrowserExtension;
	exports.isElectron = isElectron;
	exports.isEmpty = isEmpty;
	exports.isIE = isIE;
	exports.isMobileCordova = isMobileCordova;
	exports.isNode = isNode;
	exports.isNodeSdk = isNodeSdk;
	exports.isReactNative = isReactNative;
	exports.isUWP = isUWP;
	exports.isValidFormat = isValidFormat;
	exports.isValidTimestamp = isValidTimestamp;
	exports.issuedAtTime = issuedAtTime;
	exports.jsonEval = jsonEval;
	exports.map = map;
	exports.querystring = querystring;
	exports.querystringDecode = querystringDecode;
	exports.safeGet = safeGet;
	exports.stringLength = stringLength;
	exports.stringToByteArray = stringToByteArray$1;
	exports.stringify = stringify;
	exports.validateArgCount = validateArgCount;
	exports.validateCallback = validateCallback;
	exports.validateContextObject = validateContextObject;
	exports.validateNamespace = validateNamespace;
	//# sourceMappingURL=index.cjs.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 81 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var signIn = exports.signIn = function signIn(credentials) {
	  return function (dispatch, getState, _ref) {
	    var getFirebase = _ref.getFirebase;
	
	    var firebase = getFirebase();
	
	    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(function () {
	      dispatch({ type: 'LOGIN_SUCCESS' });
	    }).catch(function (err) {
	      dispatch({ type: 'LOGIN_ERROR', err: err });
	    });
	  };
	};
	
	var signOut = exports.signOut = function signOut() {
	  return function (dispatch, getState, _ref2) {
	    var getFirebase = _ref2.getFirebase;
	
	    var firebase = getFirebase();
	
	    firebase.auth().signOut().then(function () {
	      dispatch({ type: 'SIGNOUT_SUCCESS' });
	    });
	  };
	};
	
	var signUp = exports.signUp = function signUp(newUser) {
	  return function (dispatch, getState, _ref3) {
	    var getFirebase = _ref3.getFirebase,
	        getFirestore = _ref3.getFirestore;
	
	    var firebase = getFirebase();
	    var firestore = getFirestore();
	
	    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(function (resp) {
	      return firestore.collection('users').doc(resp.user.uid).set({
	        firstName: newUser.firstName,
	        lastName: newUser.lastName,
	        initials: newUser.firstName[0] + newUser.lastName[0]
	      });
	    }).then(function () {
	      dispatch({ type: 'SIGNUP_SUCCESS' });
	    }).catch(function (err) {
	      dispatch({ type: 'SIGNUP_ERROR', err: err });
	    });
	  };
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(55),
	    baseLodash = __webpack_require__(91);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	 *
	 * @private
	 * @constructor
	 * @param {*} value The value to wrap.
	 */
	function LazyWrapper(value) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__dir__ = 1;
	  this.__filtered__ = false;
	  this.__iteratees__ = [];
	  this.__takeCount__ = MAX_ARRAY_LENGTH;
	  this.__views__ = [];
	}
	
	// Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	LazyWrapper.prototype.constructor = LazyWrapper;
	
	module.exports = LazyWrapper;


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20),
	    root = __webpack_require__(6);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(444),
	    mapCacheDelete = __webpack_require__(445),
	    mapCacheGet = __webpack_require__(446),
	    mapCacheHas = __webpack_require__(447),
	    mapCacheSet = __webpack_require__(448);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(84),
	    setCacheAdd = __webpack_require__(458),
	    setCacheHas = __webpack_require__(459);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(89);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ },
/* 88 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(378),
	    baseIsNaN = __webpack_require__(385),
	    strictIndexOf = __webpack_require__(465);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}
	
	module.exports = baseIndexOf;


/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(382),
	    isObjectLike = __webpack_require__(5);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 91 */
/***/ function(module, exports) {

	/**
	 * The function whose prototype chain sequence wrappers inherit from.
	 *
	 * @private
	 */
	function baseLodash() {
	  // No operation performed.
	}
	
	module.exports = baseLodash;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(49),
	    assignMergeValue = __webpack_require__(141),
	    baseFor = __webpack_require__(144),
	    baseMergeDeep = __webpack_require__(393),
	    isObject = __webpack_require__(4),
	    keysIn = __webpack_require__(68),
	    safeGet = __webpack_require__(173);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    stack || (stack = new Stack);
	    if (isObject(srcValue)) {
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}
	
	module.exports = baseMerge;


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(52),
	    castPath = __webpack_require__(29),
	    isIndex = __webpack_require__(30),
	    isObject = __webpack_require__(4),
	    toKey = __webpack_require__(22);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;
	
	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(26),
	    arrayMap = __webpack_require__(27),
	    isArray = __webpack_require__(3),
	    isSymbol = __webpack_require__(42);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(29),
	    last = __webpack_require__(118),
	    parent = __webpack_require__(455),
	    toKey = __webpack_require__(22);
	
	/**
	 * The base implementation of `_.unset`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The property path to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 */
	function baseUnset(object, path) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  return object == null || delete object[toKey(last(path))];
	}
	
	module.exports = baseUnset;


/***/ },
/* 96 */
/***/ function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}
	
	module.exports = cacheHas;


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(150);
	
	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}
	
	module.exports = castSlice;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(136);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(59),
	    isIterateeCall = __webpack_require__(106);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(149),
	    createBind = __webpack_require__(413),
	    createCurry = __webpack_require__(415),
	    createHybrid = __webpack_require__(157),
	    createPartial = __webpack_require__(416),
	    getData = __webpack_require__(163),
	    mergeData = __webpack_require__(451),
	    setData = __webpack_require__(174),
	    setWrapToString = __webpack_require__(175),
	    toInteger = __webpack_require__(190);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags.
	 *    1 - `_.bind`
	 *    2 - `_.bindKey`
	 *    4 - `_.curry` or `_.curryRight` of a bound function
	 *    8 - `_.curry`
	 *   16 - `_.curryRight`
	 *   32 - `_.partial`
	 *   64 - `_.partialRight`
	 *  128 - `_.rearg`
	 *  256 - `_.ary`
	 *  512 - `_.flip`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;
	
	  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;
	
	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);
	
	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];
	
	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] === undefined
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);
	
	  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	    var result = createBind(func, bitmask, thisArg);
	  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	    result = createCurry(func, bitmask, arity);
	  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	    result = createPartial(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybrid.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setWrapToString(setter(result, newData), func, bitmask);
	}
	
	module.exports = createWrap;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var flatten = __webpack_require__(182),
	    overRest = __webpack_require__(172),
	    setToString = __webpack_require__(111);
	
	/**
	 * A specialized version of `baseRest` which flattens the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @returns {Function} Returns the new function.
	 */
	function flatRest(func) {
	  return setToString(overRest(func, undefined, flatten), func + '');
	}
	
	module.exports = flatRest;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(146),
	    getSymbolsIn = __webpack_require__(165),
	    keysIn = __webpack_require__(68);
	
	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}
	
	module.exports = getAllKeysIn;


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(171);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(86),
	    stubArray = __webpack_require__(189);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};
	
	module.exports = getSymbols;


/***/ },
/* 105 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	/**
	 * Checks if `string` contains Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	 */
	function hasUnicode(string) {
	  return reHasUnicode.test(string);
	}
	
	module.exports = hasUnicode;


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(37),
	    isArrayLike = __webpack_require__(14),
	    isIndex = __webpack_require__(30),
	    isObject = __webpack_require__(4);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(3),
	    isSymbol = __webpack_require__(42);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(161);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    // Use `util.types` for Node.js 10+.
	    var types = freeModule && freeModule.require && freeModule.require('util').types;
	
	    if (types) {
	      return types;
	    }
	
	    // Legacy `process.binding('util')` for Node.js < 10.
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47)(module)))

/***/ },
/* 109 */
/***/ function(module, exports) {

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/**
	 * Replaces all `placeholder` elements in `array` with an internal placeholder
	 * and returns an array of their indexes.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {*} placeholder The placeholder to replace.
	 * @returns {Array} Returns the new array of placeholder indexes.
	 */
	function replaceHolders(array, placeholder) {
	  var index = -1,
	      length = array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value === placeholder || value === PLACEHOLDER) {
	      array[index] = PLACEHOLDER;
	      result[resIndex++] = index;
	    }
	  }
	  return result;
	}
	
	module.exports = replaceHolders;


/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(398),
	    shortOut = __webpack_require__(176);
	
	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);
	
	module.exports = setToString;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var asciiToArray = __webpack_require__(373),
	    hasUnicode = __webpack_require__(105),
	    unicodeToArray = __webpack_require__(468);
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return hasUnicode(string)
	    ? unicodeToArray(string)
	    : asciiToArray(string);
	}
	
	module.exports = stringToArray;


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(65),
	    func = convert('merge', __webpack_require__(186));
	
	func.placeholder = __webpack_require__(38);
	module.exports = func;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(379),
	    hasPath = __webpack_require__(166);
	
	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}
	
	module.exports = has;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(14),
	    isObjectLike = __webpack_require__(5);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 116 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    getPrototype = __webpack_require__(103),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ },
/* 118 */
/***/ function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(28),
	    baseForOwn = __webpack_require__(145),
	    baseIteratee = __webpack_require__(7);
	
	/**
	 * Creates an object with the same keys as `object` and values generated
	 * by running each own enumerable string keyed property of `object` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapKeys
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, key, iteratee(value, key, object));
	  });
	  return result;
	}
	
	module.exports = mapValues;


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(58),
	    getTag = __webpack_require__(21),
	    isArrayLike = __webpack_require__(14),
	    isString = __webpack_require__(492),
	    stringSize = __webpack_require__(466);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/**
	 * Gets the size of `collection` by returning its length for array-like
	 * values or the number of own enumerable string keyed properties for objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @returns {number} Returns the collection size.
	 * @example
	 *
	 * _.size([1, 2, 3]);
	 * // => 3
	 *
	 * _.size({ 'a': 1, 'b': 2 });
	 * // => 2
	 *
	 * _.size('pebbles');
	 * // => 7
	 */
	function size(collection) {
	  if (collection == null) {
	    return 0;
	  }
	  if (isArrayLike(collection)) {
	    return isString(collection) ? stringSize(collection) : collection.length;
	  }
	  var tag = getTag(collection);
	  if (tag == mapTag || tag == setTag) {
	    return collection.size;
	  }
	  return baseKeys(collection).length;
	}
	
	module.exports = size;


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	var arraySome = __webpack_require__(140),
	    baseIteratee = __webpack_require__(7),
	    baseSome = __webpack_require__(399),
	    isArray = __webpack_require__(3),
	    isIterateeCall = __webpack_require__(106);
	
	/**
	 * Checks if `predicate` returns truthy for **any** element of `collection`.
	 * Iteration is stopped once `predicate` returns truthy. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 * @example
	 *
	 * _.some([null, 0, 'yes', false], Boolean);
	 * // => true
	 *
	 * var users = [
	 *   { 'user': 'barney', 'active': true },
	 *   { 'user': 'fred',   'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.some(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.some(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.some(users, 'active');
	 * // => true
	 */
	function some(collection, predicate, guard) {
	  var func = isArray(collection) ? arraySome : baseSome;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = some;


/***/ },
/* 122 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(526);
	} else {
	  module.exports = require('./cjs/react-is.development.js');
	}


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.watchEvent=watchEvent,exports.unWatchEvent=unWatchEvent,exports.watchEvents=watchEvents,exports.unWatchEvents=unWatchEvents,exports.remove=remove;var _constants=__webpack_require__(16),_query=__webpack_require__(327);function watchEvent(firebase,dispatch,options){if(!firebase.database||"function"!=typeof firebase.database)throw new Error("Firebase database is required to create watchers");var type=options.type,path=options.path,populates=options.populates,queryParams=options.queryParams,queryId=options.queryId,isQuery=options.isQuery,storeAs=options.storeAs,logErrors=firebase._.config.logErrors,watchPath=storeAs?"".concat(path,"@").concat(storeAs):path,id=queryId||(0,_query.getQueryIdFromPath)(path),counter=(0,_query.getWatcherCount)(firebase,type,watchPath,id);if(0<counter&&id&&(0,_query.unsetWatcher)(firebase,dispatch,type,path,id),(0,_query.setWatcher)(firebase,dispatch,type,watchPath,id),"first_child"===type)return firebase.database().ref().child(path).orderByKey().limitToFirst(1).once("value").then(function(snapshot){return null===snapshot.val()&&dispatch({type:_constants.actionTypes.NO_VALUE,path:storeAs||path}),snapshot}).catch(function(err){return dispatch({type:_constants.actionTypes.ERROR,path:storeAs||path,payload:err}),Promise.reject(err)});var query=firebase.database().ref().child(path);return isQuery&&(query=(0,_query.applyParamsToQuery)(queryParams,query)),dispatch({type:_constants.actionTypes.START,path:storeAs||path}),"once"===type?query.once("value").then(function(snapshot){return null===snapshot.val()?dispatch({type:_constants.actionTypes.NO_VALUE,path:storeAs||path}):populates?(0,_query.populateAndDispatch)(firebase,dispatch,{path:path,storeAs:storeAs,snapshot:snapshot,data:snapshot.val(),populates:populates}):dispatch({type:_constants.actionTypes.SET,path:storeAs||path,data:snapshot.val(),ordered:(0,_query.orderedFromSnapshot)(snapshot)})}).catch(function(err){return dispatch({type:_constants.actionTypes.UNAUTHORIZED_ERROR,payload:err}),Promise.reject(err)}):void query.on(type,function(snapshot){var data="child_removed"===type?void 0:snapshot.val(),resultPath=storeAs||"value"===type?path:"".concat(path,"/").concat(snapshot.key);if(!populates){var ordered="child_added"===type?[{key:snapshot.key,value:snapshot.val()}]:(0,_query.orderedFromSnapshot)(snapshot);return dispatch({type:_constants.actionTypes.SET,path:storeAs||resultPath,data:data,ordered:ordered})}return(0,_query.populateAndDispatch)(firebase,dispatch,{path:path,storeAs:storeAs,snapshot:snapshot,data:snapshot.val(),populates:populates})},function(err){logErrors&&console.log("Error retrieving data for path: ".concat(path,", storeAs: ").concat(storeAs,". Firebase:"),err),dispatch({type:_constants.actionTypes.ERROR,storeAs:storeAs,path:path,payload:err})})}function unWatchEvent(firebase,dispatch,_ref){var type=_ref.type,path=_ref.path,storeAs=_ref.storeAs,queryId=_ref.queryId,watchPath=storeAs?"".concat(path,"@").concat(storeAs):path;(0,_query.unsetWatcher)(firebase,dispatch,type,watchPath,queryId)}function watchEvents(firebase,dispatch,events){if(!Array.isArray(events))throw new Error("Events config must be an Array");return events.map(function(event){return watchEvent(firebase,dispatch,event)})}function unWatchEvents(firebase,dispatch,events){events.forEach(function(event){return unWatchEvent(firebase,dispatch,event)})}function remove(firebase,dispatch,path){var options=3<arguments.length&&arguments[3]!==void 0?arguments[3]:{},_options$dispatchActi=options.dispatchAction,dispatchRemoveAction=firebase._.config.dispatchRemoveAction;return firebase.database().ref(path).remove().then(function(){return dispatchRemoveAction&&(!(void 0!==_options$dispatchActi)||_options$dispatchActi)&&dispatch({type:_constants.actionTypes.REMOVE,path:path}),path}).catch(function(err){return dispatch({type:_constants.actionTypes.ERROR,payload:err}),Promise.reject(err)})}
	//# sourceMappingURL=query.js.map

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=createFirebaseInstance,exports.getFirebase=getFirebase;var _merge2=_interopRequireDefault(__webpack_require__(113)),_isObject2=_interopRequireDefault(__webpack_require__(4)),_utils=__webpack_require__(12),_actions=__webpack_require__(325),authActions=_interopRequireWildcard(__webpack_require__(528)),queryActions=_interopRequireWildcard(__webpack_require__(124)),storageActions=_interopRequireWildcard(__webpack_require__(529));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function(){return cache},cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={};if(null!=obj){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var firebaseInstance;function createFirebaseInstance(firebase,configs,dispatch){configs.enableLogging&&firebase.database&&"function"==typeof firebase.database.enableLogging&&firebase.database.enableLogging(configs.enableLogging);firebase._=(0,_merge2.default)({watchers:{},listeners:{},callbacks:{},queries:{},config:configs,authUid:null},firebase._);var withMeta=function(method,path,value,onComplete){if((0,_isObject2.default)(value)){var prefix="update"===method?"updated":"created",dataWithMeta=_objectSpread({},value,_defineProperty({},"".concat(prefix,"At"),firebase.database.ServerValue.TIMESTAMP));return firebase.auth().currentUser&&(dataWithMeta["".concat(prefix,"By")]=firebase.auth().currentUser.uid),firebase.database().ref(path)[method](dataWithMeta,onComplete)}return firebase.database().ref(path)[method](value,onComplete)},actionCreators=(0,_actions.mapWithFirebaseAndDispatch)(firebase,dispatch,{signInWithPhoneNumber:authActions.signInWithPhoneNumber},{initializeAuth:authActions.init});return firebaseInstance=Object.assign(firebase,_objectSpread({_reactReduxFirebaseExtended:!0,ref:function ref(path){return firebase.database().ref(path)},set:function set(path,value,onComplete){return firebase.database().ref(path).set(value,onComplete)},setWithMeta:function setWithMeta(path,value,onComplete){return withMeta("set",path,value,onComplete)},uniqueSet:function uniqueSet(path,value,onComplete){return firebase.database().ref(path).transaction(function(d){return null===d?value:void 0}).then(function(_ref){var committed=_ref.committed,snapshot=_ref.snapshot;if(!committed){var newError=new Error("Path already exists.");return onComplete&&onComplete(newError),Promise.reject(newError)}return onComplete&&onComplete(snapshot),snapshot})},push:function push(path,value,onComplete){return firebase.database().ref(path).push(value,onComplete)},pushWithMeta:function pushWithMeta(path,value,onComplete){return withMeta("push",path,value,onComplete)},remove:function remove(path,onComplete,options){return queryActions.remove(firebase,dispatch,path,options).then(function(){return"function"==typeof onComplete&&onComplete(),path})},update:function update(path,value,onComplete){return firebase.database().ref(path).update(value,onComplete)},updateWithMeta:function updateWithMeta(path,value,onComplete){return withMeta("update",path,value,onComplete)},login:function login(credentials){return authActions.login(dispatch,firebase,credentials)},handleRedirectResult:function handleRedirectResult(authData){return authActions.handleRedirectResult(dispatch,firebase,authData)},logout:function logout(){return authActions.logout(dispatch,firebase)},updateAuth:function updateAuth(authUpdate,updateInProfile){return authActions.updateAuth(dispatch,firebase,authUpdate,updateInProfile)},updateEmail:function updateEmail(newEmail,updateInProfile){return authActions.updateEmail(dispatch,firebase,newEmail,updateInProfile)},updateProfile:function updateProfile(profileUpdate,options){return authActions.updateProfile(dispatch,firebase,profileUpdate,options)},uploadFile:function uploadFile(path,file,dbPath,options){return storageActions.uploadFile(dispatch,firebase,{path:path,file:file,dbPath:dbPath,options:options})},uploadFiles:function uploadFiles(path,files,dbPath,options){return storageActions.uploadFiles(dispatch,firebase,{path:path,files:files,dbPath:dbPath,options:options})},deleteFile:function deleteFile(path,dbPath){return storageActions.deleteFile(dispatch,firebase,{path:path,dbPath:dbPath})},createUser:function createUser(credentials,profile){return authActions.createUser(dispatch,firebase,credentials,profile)},resetPassword:function resetPassword(credentials){return authActions.resetPassword(dispatch,firebase,credentials)},confirmPasswordReset:function confirmPasswordReset(code,password){return authActions.confirmPasswordReset(dispatch,firebase,code,password)},verifyPasswordResetCode:function verifyPasswordResetCode(code){return authActions.verifyPasswordResetCode(dispatch,firebase,code)},watchEvent:function watchEvent(type,path,storeAs){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};return queryActions.watchEvent(firebase,dispatch,_objectSpread({type:type,path:path,storeAs:storeAs},options))},unWatchEvent:function unWatchEvent(type,path,queryId){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};return queryActions.unWatchEvent(firebase,dispatch,_objectSpread({type:type,path:path,queryId:queryId},options))},reloadAuth:function reloadAuth(){return authActions.reloadAuth(dispatch,firebase)},linkWithCredential:function linkWithCredential(credential){return authActions.linkWithCredential(dispatch,firebase,credential)},promiseEvents:function promiseEvents(watchArray,options){var inputAsFunc=(0,_utils.createCallable)(watchArray),prevData=inputAsFunc(options,firebase),queryConfigs=(0,_utils.getEventsFromInput)(prevData);return Promise.all(queryConfigs.map(function(queryConfig){return queryActions.watchEvent(firebase,dispatch,queryConfig)}))},dispatch:dispatch},actionCreators)),firebaseInstance}function getFirebase(){if(!firebaseInstance)throw new Error("Firebase instance does not yet exist. Check your compose function.");return firebaseInstance}
	//# sourceMappingURL=createFirebaseInstance.js.map

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pathToArr=pathToArr,exports.getSlashStrPath=getSlashStrPath,exports.getDotStrPath=getDotStrPath,exports.combineReducers=combineReducers,exports.preserveValuesFromState=preserveValuesFromState,exports.recursiveUnset=recursiveUnset;var _unset2=_interopRequireDefault(__webpack_require__(484)),_pick2=_interopRequireDefault(__webpack_require__(70)),_size2=_interopRequireDefault(__webpack_require__(120)),_get2=_interopRequireDefault(__webpack_require__(11));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function pathToArr(path){return path?path.split(/\//).filter(function(p){return!!p}):[]}function getSlashStrPath(path){return pathToArr(path).join("/")}function getDotStrPath(path){return pathToArr(path).join(".")}function combineReducers(reducers){return function(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},action=1<arguments.length?arguments[1]:void 0;return Object.keys(reducers).reduce(function(nextState,key){return nextState[key]=reducers[key](state[key],action),nextState},{})}}function preserveValuesFromState(state,preserveSetting,nextState){if("function"==typeof preserveSetting)return preserveSetting(state,nextState);if(!0===preserveSetting)return nextState?_objectSpread({},state,{},nextState):state;if(Array.isArray(preserveSetting))return(0,_pick2.default)(state,preserveSetting);throw new Error("Invalid preserve parameter. It must be an Object or an Array")}function recursiveUnset(path,obj){var isRecursiveCall=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];if(!path)return obj;if(0<(0,_size2.default)((0,_get2.default)(obj,path))&&isRecursiveCall)return obj;var objectWithRemovedKey=(0,_unset2.default)(path,obj),newPath=path.match(/\./)?path.replace(/\.[^.]*$/,""):"";return recursiveUnset(newPath,objectWithRemovedKey,!0)}
	//# sourceMappingURL=reducers.js.map

/***/ },
/* 127 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = warning;
	
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	
	
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	
	}

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", { value: true });
	var isProduction = ("production") === 'production';
	var prefix = 'Invariant failed';
	function invariant(condition, message) {
	    if (condition) {
	        return;
	    }
	    if (isProduction) {
	        throw new Error(prefix);
	    }
	    throw new Error(prefix + ": " + (message || ''));
	}
	exports.default = invariant;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	var tslib = __webpack_require__(74);
	var util = __webpack_require__(80);
	
	/**
	 * Component for service name T, e.g. `auth`, `auth-internal`
	 */
	var Component = /** @class */ (function () {
	    /**
	     *
	     * @param name The public service name, e.g. app, auth, firestore, database
	     * @param instanceFactory Service factory responsible for creating the public interface
	     * @param type whether the service provided by the component is public or private
	     */
	    function Component(name, instanceFactory, type) {
	        this.name = name;
	        this.instanceFactory = instanceFactory;
	        this.type = type;
	        this.multipleInstances = false;
	        /**
	         * Properties to be added to the service namespace
	         */
	        this.serviceProps = {};
	        this.instantiationMode = "LAZY" /* LAZY */;
	    }
	    Component.prototype.setInstantiationMode = function (mode) {
	        this.instantiationMode = mode;
	        return this;
	    };
	    Component.prototype.setMultipleInstances = function (multipleInstances) {
	        this.multipleInstances = multipleInstances;
	        return this;
	    };
	    Component.prototype.setServiceProps = function (props) {
	        this.serviceProps = props;
	        return this;
	    };
	    return Component;
	}());
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var DEFAULT_ENTRY_NAME = '[DEFAULT]';
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
	 * NameServiceMapping[T] is an alias for the type of the instance
	 */
	var Provider = /** @class */ (function () {
	    function Provider(name, container) {
	        this.name = name;
	        this.container = container;
	        this.component = null;
	        this.instances = new Map();
	        this.instancesDeferred = new Map();
	    }
	    /**
	     * @param identifier A provider can provide mulitple instances of a service
	     * if this.component.multipleInstances is true.
	     */
	    Provider.prototype.get = function (identifier) {
	        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
	        // if multipleInstances is not supported, use the default name
	        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
	        if (!this.instancesDeferred.has(normalizedIdentifier)) {
	            var deferred = new util.Deferred();
	            this.instancesDeferred.set(normalizedIdentifier, deferred);
	            // If the service instance is available, resolve the promise with it immediately
	            try {
	                var instance = this.getOrInitializeService(normalizedIdentifier);
	                if (instance) {
	                    deferred.resolve(instance);
	                }
	            }
	            catch (e) {
	                // when the instance factory throws an exception during get(), it should not cause
	                // a fatal error. We just return the unresolved promise in this case.
	            }
	        }
	        return this.instancesDeferred.get(normalizedIdentifier).promise;
	    };
	    Provider.prototype.getImmediate = function (options) {
	        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;
	        // if multipleInstances is not supported, use the default name
	        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
	        try {
	            var instance = this.getOrInitializeService(normalizedIdentifier);
	            if (!instance) {
	                if (optional) {
	                    return null;
	                }
	                throw Error("Service " + this.name + " is not available");
	            }
	            return instance;
	        }
	        catch (e) {
	            if (optional) {
	                return null;
	            }
	            else {
	                throw e;
	            }
	        }
	    };
	    Provider.prototype.getComponent = function () {
	        return this.component;
	    };
	    Provider.prototype.setComponent = function (component) {
	        var e_1, _a;
	        if (component.name !== this.name) {
	            throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
	        }
	        if (this.component) {
	            throw Error("Component for " + this.name + " has already been provided");
	        }
	        this.component = component;
	        // if the service is eager, initialize the default instance
	        if (isComponentEager(component)) {
	            try {
	                this.getOrInitializeService(DEFAULT_ENTRY_NAME);
	            }
	            catch (e) {
	                // when the instance factory for an eager Component throws an exception during the eager
	                // initialization, it should not cause a fatal error.
	                // TODO: Investigate if we need to make it configurable, because some component may want to cause
	                // a fatal error in this case?
	            }
	        }
	        try {
	            // Create service instances for the pending promises and resolve them
	            // NOTE: if this.multipleInstances is false, only the default instance will be created
	            // and all promises with resolve with it regardless of the identifier.
	            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];
	                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
	                try {
	                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
	                    var instance = this.getOrInitializeService(normalizedIdentifier);
	                    instanceDeferred.resolve(instance);
	                }
	                catch (e) {
	                    // when the instance factory throws an exception, it should not cause
	                    // a fatal error. We just leave the promise unresolved.
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    Provider.prototype.clearInstance = function (identifier) {
	        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
	        this.instancesDeferred.delete(identifier);
	        this.instances.delete(identifier);
	    };
	    // app.delete() will call this method on every provider to delete the services
	    // TODO: should we mark the provider as deleted?
	    Provider.prototype.delete = function () {
	        return tslib.__awaiter(this, void 0, void 0, function () {
	            var services;
	            return tslib.__generator(this, function (_a) {
	                switch (_a.label) {
	                    case 0:
	                        services = Array.from(this.instances.values());
	                        return [4 /*yield*/, Promise.all(services
	                                .filter(function (service) { return 'INTERNAL' in service; })
	                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                                .map(function (service) { return service.INTERNAL.delete(); }))];
	                    case 1:
	                        _a.sent();
	                        return [2 /*return*/];
	                }
	            });
	        });
	    };
	    Provider.prototype.isComponentSet = function () {
	        return this.component != null;
	    };
	    Provider.prototype.getOrInitializeService = function (identifier) {
	        var instance = this.instances.get(identifier);
	        if (!instance && this.component) {
	            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));
	            this.instances.set(identifier, instance);
	        }
	        return instance || null;
	    };
	    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
	        if (this.component) {
	            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
	        }
	        else {
	            return identifier; // assume multiple instances are supported before the component is provided.
	        }
	    };
	    return Provider;
	}());
	// undefined should be passed to the service factory for the default instance
	function normalizeIdentifierForFactory(identifier) {
	    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
	}
	function isComponentEager(component) {
	    return component.instantiationMode === "EAGER" /* EAGER */;
	}
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
	 */
	var ComponentContainer = /** @class */ (function () {
	    function ComponentContainer(name) {
	        this.name = name;
	        this.providers = new Map();
	    }
	    /**
	     *
	     * @param component Component being added
	     * @param overwrite When a component with the same name has already been registered,
	     * if overwrite is true: overwrite the existing component with the new component and create a new
	     * provider with the new component. It can be useful in tests where you want to use different mocks
	     * for different tests.
	     * if overwrite is false: throw an exception
	     */
	    ComponentContainer.prototype.addComponent = function (component) {
	        var provider = this.getProvider(component.name);
	        if (provider.isComponentSet()) {
	            throw new Error("Component " + component.name + " has already been registered with " + this.name);
	        }
	        provider.setComponent(component);
	    };
	    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
	        var provider = this.getProvider(component.name);
	        if (provider.isComponentSet()) {
	            // delete the existing provider from the container, so we can register the new component
	            this.providers.delete(component.name);
	        }
	        this.addComponent(component);
	    };
	    /**
	     * getProvider provides a type safe interface where it can only be called with a field name
	     * present in NameServiceMapping interface.
	     *
	     * Firebase SDKs providing services should extend NameServiceMapping interface to register
	     * themselves.
	     */
	    ComponentContainer.prototype.getProvider = function (name) {
	        if (this.providers.has(name)) {
	            return this.providers.get(name);
	        }
	        // create a Provider for a service that hasn't registered with Firebase
	        var provider = new Provider(name, this);
	        this.providers.set(name, provider);
	        return provider;
	    };
	    ComponentContainer.prototype.getProviders = function () {
	        return Array.from(this.providers.values());
	    };
	    return ComponentContainer;
	}());
	
	exports.Component = Component;
	exports.ComponentContainer = ComponentContainer;
	exports.Provider = Provider;
	//# sourceMappingURL=index.cjs.js.map


/***/ },
/* 130 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	/*! *****************************************************************************
	Copyright (c) Microsoft Corporation. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0
	
	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.
	
	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */
	
	function __spreadArrays() {
	    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
	    for (var r = Array(s), k = 0, i = 0; i < il; i++)
	        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
	            r[k] = a[j];
	    return r;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _a;
	/**
	 * A container for all of the Logger instances
	 */
	var instances = [];
	(function (LogLevel) {
	    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
	    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
	    LogLevel[LogLevel["INFO"] = 2] = "INFO";
	    LogLevel[LogLevel["WARN"] = 3] = "WARN";
	    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
	    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
	})(exports.LogLevel || (exports.LogLevel = {}));
	var levelStringToEnum = {
	    'debug': exports.LogLevel.DEBUG,
	    'verbose': exports.LogLevel.VERBOSE,
	    'info': exports.LogLevel.INFO,
	    'warn': exports.LogLevel.WARN,
	    'error': exports.LogLevel.ERROR,
	    'silent': exports.LogLevel.SILENT
	};
	/**
	 * The default log level
	 */
	var defaultLogLevel = exports.LogLevel.INFO;
	/**
	 * By default, `console.debug` is not displayed in the developer console (in
	 * chrome). To avoid forcing users to have to opt-in to these logs twice
	 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
	 * logs to the `console.log` function.
	 */
	var ConsoleMethod = (_a = {},
	    _a[exports.LogLevel.DEBUG] = 'log',
	    _a[exports.LogLevel.VERBOSE] = 'log',
	    _a[exports.LogLevel.INFO] = 'info',
	    _a[exports.LogLevel.WARN] = 'warn',
	    _a[exports.LogLevel.ERROR] = 'error',
	    _a);
	/**
	 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
	 * messages on to their corresponding console counterparts (if the log method
	 * is supported by the current log level)
	 */
	var defaultLogHandler = function (instance, logType) {
	    var args = [];
	    for (var _i = 2; _i < arguments.length; _i++) {
	        args[_i - 2] = arguments[_i];
	    }
	    if (logType < instance.logLevel) {
	        return;
	    }
	    var now = new Date().toISOString();
	    var method = ConsoleMethod[logType];
	    if (method) {
	        console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
	    }
	    else {
	        throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
	    }
	};
	var Logger = /** @class */ (function () {
	    /**
	     * Gives you an instance of a Logger to capture messages according to
	     * Firebase's logging scheme.
	     *
	     * @param name The name that the logs will be associated with
	     */
	    function Logger(name) {
	        this.name = name;
	        /**
	         * The log level of the given Logger instance.
	         */
	        this._logLevel = defaultLogLevel;
	        /**
	         * The main (internal) log handler for the Logger instance.
	         * Can be set to a new function in internal package code but not by user.
	         */
	        this._logHandler = defaultLogHandler;
	        /**
	         * The optional, additional, user-defined log handler for the Logger instance.
	         */
	        this._userLogHandler = null;
	        /**
	         * Capture the current instance for later use
	         */
	        instances.push(this);
	    }
	    Object.defineProperty(Logger.prototype, "logLevel", {
	        get: function () {
	            return this._logLevel;
	        },
	        set: function (val) {
	            if (!(val in exports.LogLevel)) {
	                throw new TypeError('Invalid value assigned to `logLevel`');
	            }
	            this._logLevel = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Logger.prototype, "logHandler", {
	        get: function () {
	            return this._logHandler;
	        },
	        set: function (val) {
	            if (typeof val !== 'function') {
	                throw new TypeError('Value assigned to `logHandler` must be a function');
	            }
	            this._logHandler = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Logger.prototype, "userLogHandler", {
	        get: function () {
	            return this._userLogHandler;
	        },
	        set: function (val) {
	            this._userLogHandler = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * The functions below are all based on the `console` interface
	     */
	    Logger.prototype.debug = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));
	    };
	    Logger.prototype.log = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));
	    };
	    Logger.prototype.info = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));
	    };
	    Logger.prototype.warn = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));
	    };
	    Logger.prototype.error = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));
	    };
	    return Logger;
	}());
	function setLogLevel(level) {
	    var newLevel = typeof level === 'string' ? levelStringToEnum[level] : level;
	    instances.forEach(function (inst) {
	        inst.logLevel = newLevel;
	    });
	}
	function setUserLogHandler(logCallback, options) {
	    var _loop_1 = function (instance) {
	        var customLogLevel = null;
	        if (options && options.level) {
	            customLogLevel = levelStringToEnum[options.level];
	        }
	        if (logCallback === null) {
	            instance.userLogHandler = null;
	        }
	        else {
	            instance.userLogHandler = function (instance, level) {
	                var args = [];
	                for (var _i = 2; _i < arguments.length; _i++) {
	                    args[_i - 2] = arguments[_i];
	                }
	                var message = args
	                    .map(function (arg) {
	                    if (arg == null) {
	                        return null;
	                    }
	                    else if (typeof arg === 'string') {
	                        return arg;
	                    }
	                    else if (typeof arg === 'number' || typeof arg === 'boolean') {
	                        return arg.toString();
	                    }
	                    else if (arg instanceof Error) {
	                        return arg.message;
	                    }
	                    else {
	                        try {
	                            return JSON.stringify(arg);
	                        }
	                        catch (ignored) {
	                            return null;
	                        }
	                    }
	                })
	                    .filter(function (arg) { return arg; })
	                    .join(' ');
	                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
	                    logCallback({
	                        level: exports.LogLevel[level].toLowerCase(),
	                        message: message,
	                        args: args,
	                        type: instance.name
	                    });
	                }
	            };
	        }
	    };
	    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
	        var instance = instances_1[_i];
	        _loop_1(instance);
	    }
	}
	
	exports.Logger = Logger;
	exports.setLogLevel = setLogLevel;
	exports.setUserLogHandler = setUserLogHandler;
	//# sourceMappingURL=index.cjs.js.map


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var firebase = _interopDefault(__webpack_require__(79));
	
	var name = "firebase";
	var version = "7.13.2";
	
	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	firebase.registerVersion(name, version, 'app');
	
	module.exports = firebase;
	//# sourceMappingURL=index.cjs.js.map


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(364);
	} else {
	  module.exports = require('./cjs/history.js');
	}


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	var obj;
	var NOTHING = typeof Symbol !== "undefined" ? Symbol("immer-nothing") : ( obj = {}, obj["immer-nothing"] = true, obj );
	var DRAFTABLE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-draftable") : "__$immer_draftable";
	var DRAFT_STATE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-state") : "__$immer_state";
	function isDraft(value) {
	  return !!value && !!value[DRAFT_STATE];
	}
	function isDraftable(value) {
	  if (!value) { return false; }
	  return isPlainObject(value) || !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE] || isMap(value) || isSet(value);
	}
	function isPlainObject(value) {
	  if (!value || typeof value !== "object") { return false; }
	  if (Array.isArray(value)) { return true; }
	  var proto = Object.getPrototypeOf(value);
	  return !proto || proto === Object.prototype;
	}
	function original(value) {
	  if (value && value[DRAFT_STATE]) {
	    return value[DRAFT_STATE].base;
	  } // otherwise return undefined
	
	} // We use Maps as `drafts` for Sets, not Objects
	// See proxy.js
	
	function assignSet(target, override) {
	  override.forEach(function (value) {
	    // When we add new drafts we have to remove their originals if present
	    var prev = original(value);
	    if (prev) { target.delete(prev); }
	    target.add(value);
	  });
	  return target;
	} // We use Maps as `drafts` for Maps, not Objects
	// See proxy.js
	
	function assignMap(target, override) {
	  override.forEach(function (value, key) { return target.set(key, value); });
	  return target;
	}
	var assign = Object.assign || (function (target) {
	  var overrides = [], len = arguments.length - 1;
	  while ( len-- > 0 ) overrides[ len ] = arguments[ len + 1 ];
	
	  overrides.forEach(function (override) { return Object.keys(override).forEach(function (key) { return target[key] = override[key]; }); });
	  return target;
	});
	var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== "undefined" ? function (obj) { return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj)); } : Object.getOwnPropertyNames;
	function shallowCopy(base, invokeGetters) {
	  if ( invokeGetters === void 0 ) invokeGetters = false;
	
	  if (Array.isArray(base)) { return base.slice(); }
	  if (isMap(base)) { return new Map(base); }
	  if (isSet(base)) { return new Set(base); }
	  var clone = Object.create(Object.getPrototypeOf(base));
	  ownKeys(base).forEach(function (key) {
	    if (key === DRAFT_STATE) {
	      return; // Never copy over draft state.
	    }
	
	    var desc = Object.getOwnPropertyDescriptor(base, key);
	    var value = desc.value;
	
	    if (desc.get) {
	      if (!invokeGetters) {
	        throw new Error("Immer drafts cannot have computed properties");
	      }
	
	      value = desc.get.call(base);
	    }
	
	    if (desc.enumerable) {
	      clone[key] = value;
	    } else {
	      Object.defineProperty(clone, key, {
	        value: value,
	        writable: true,
	        configurable: true
	      });
	    }
	  });
	  return clone;
	}
	function each(obj, iter) {
	  if (Array.isArray(obj) || isMap(obj) || isSet(obj)) {
	    obj.forEach(function (entry, index) { return iter(index, entry, obj); });
	  } else {
	    ownKeys(obj).forEach(function (key) { return iter(key, obj[key], obj); });
	  }
	}
	function isEnumerable(base, prop) {
	  var desc = Object.getOwnPropertyDescriptor(base, prop);
	  return !!desc && desc.enumerable;
	}
	function has(thing, prop) {
	  return isMap(thing) ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);
	}
	function get(thing, prop) {
	  return isMap(thing) ? thing.get(prop) : thing[prop];
	}
	function is(x, y) {
	  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
	  if (x === y) {
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	var hasSymbol = typeof Symbol !== "undefined";
	var hasMap = typeof Map !== "undefined";
	function isMap(target) {
	  return hasMap && target instanceof Map;
	}
	var hasSet = typeof Set !== "undefined";
	function isSet(target) {
	  return hasSet && target instanceof Set;
	}
	function makeIterable(next) {
	  var obj;
	
	  var self;
	  return self = ( obj = {}, obj[Symbol.iterator] = function () { return self; }, obj.next = next, obj );
	}
	/** Map.prototype.values _-or-_ Map.prototype.entries */
	
	function iterateMapValues(state, prop, receiver) {
	  var isEntries = prop !== "values";
	  return function () {
	    var iterator = latest(state)[Symbol.iterator]();
	    return makeIterable(function () {
	      var result = iterator.next();
	
	      if (!result.done) {
	        var ref = result.value;
	        var key = ref[0];
	        var value = receiver.get(key);
	        result.value = isEntries ? [key, value] : value;
	      }
	
	      return result;
	    });
	  };
	}
	function makeIterateSetValues(createProxy) {
	  function iterateSetValues(state, prop) {
	    var isEntries = prop === "entries";
	    return function () {
	      var iterator = latest(state)[Symbol.iterator]();
	      return makeIterable(function () {
	        var result = iterator.next();
	
	        if (!result.done) {
	          var value = wrapSetValue(state, result.value);
	          result.value = isEntries ? [value, value] : value;
	        }
	
	        return result;
	      });
	    };
	  }
	
	  function wrapSetValue(state, value) {
	    var key = original(value) || value;
	    var draft = state.drafts.get(key);
	
	    if (!draft) {
	      if (state.finalized || !isDraftable(value) || state.finalizing) {
	        return value;
	      }
	
	      draft = createProxy(value, state);
	      state.drafts.set(key, draft);
	
	      if (state.modified) {
	        state.copy.add(draft);
	      }
	    }
	
	    return draft;
	  }
	
	  return iterateSetValues;
	}
	
	function latest(state) {
	  return state.copy || state.base;
	}
	
	function clone(obj) {
	  if (!isDraftable(obj)) { return obj; }
	  if (Array.isArray(obj)) { return obj.map(clone); }
	  if (isMap(obj)) { return new Map(obj); }
	  if (isSet(obj)) { return new Set(obj); }
	  var cloned = Object.create(Object.getPrototypeOf(obj));
	
	  for (var key in obj) { cloned[key] = clone(obj[key]); }
	
	  return cloned;
	}
	function freeze(obj, deep) {
	  if ( deep === void 0 ) deep = false;
	
	  if (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) { return; }
	
	  if (isSet(obj)) {
	    obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;
	  } else if (isMap(obj)) {
	    obj.set = obj.clear = obj.delete = dontMutateFrozenCollections;
	  }
	
	  Object.freeze(obj);
	  if (deep) { each(obj, function (_, value) { return freeze(value, true); }); }
	}
	
	function dontMutateFrozenCollections() {
	  throw new Error("This object has been frozen and should not be mutated");
	}
	
	/** Each scope represents a `produce` call. */
	
	var ImmerScope = function ImmerScope(parent) {
	  this.drafts = [];
	  this.parent = parent; // Whenever the modified draft contains a draft from another scope, we
	  // need to prevent auto-freezing so the unowned draft can be finalized.
	
	  this.canAutoFreeze = true; // To avoid prototype lookups:
	
	  this.patches = null;
	};
	
	ImmerScope.prototype.usePatches = function usePatches (patchListener) {
	  if (patchListener) {
	    this.patches = [];
	    this.inversePatches = [];
	    this.patchListener = patchListener;
	  }
	};
	
	ImmerScope.prototype.revoke = function revoke$1 () {
	  this.leave();
	  this.drafts.forEach(revoke);
	  this.drafts = null; // Make draft-related methods throw.
	};
	
	ImmerScope.prototype.leave = function leave () {
	  if (this === ImmerScope.current) {
	    ImmerScope.current = this.parent;
	  }
	};
	ImmerScope.current = null;
	
	ImmerScope.enter = function () {
	  return this.current = new ImmerScope(this.current);
	};
	
	function revoke(draft) {
	  draft[DRAFT_STATE].revoke();
	}
	
	function willFinalize(scope, result, isReplaced) {
	  scope.drafts.forEach(function (draft) {
	    draft[DRAFT_STATE].finalizing = true;
	  });
	
	  if (!isReplaced) {
	    if (scope.patches) {
	      markChangesRecursively(scope.drafts[0]);
	    } // This is faster when we don't care about which attributes changed.
	
	
	    markChangesSweep(scope.drafts);
	  } // When a child draft is returned, look for changes.
	  else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {
	      markChangesSweep(scope.drafts);
	    }
	}
	function createProxy(base, parent) {
	  var isArray = Array.isArray(base);
	  var draft = clonePotentialDraft(base);
	
	  if (isMap(base)) {
	    proxyMap(draft);
	  } else if (isSet(base)) {
	    proxySet(draft);
	  } else {
	    each(draft, function (prop) {
	      proxyProperty(draft, prop, isArray || isEnumerable(base, prop));
	    });
	  } // See "proxy.js" for property documentation.
	
	
	  var scope = parent ? parent.scope : ImmerScope.current;
	  var state = {
	    scope: scope,
	    modified: false,
	    finalizing: false,
	    // es5 only
	    finalized: false,
	    assigned: isMap(base) ? new Map() : {},
	    parent: parent,
	    base: base,
	    draft: draft,
	    drafts: isSet(base) ? new Map() : null,
	    copy: null,
	    revoke: revoke$1,
	    revoked: false // es5 only
	
	  };
	  createHiddenProperty(draft, DRAFT_STATE, state);
	  scope.drafts.push(draft);
	  return draft;
	}
	
	function revoke$1() {
	  this.revoked = true;
	}
	
	function latest$1(state) {
	  return state.copy || state.base;
	} // Access a property without creating an Immer draft.
	
	
	function peek(draft, prop) {
	  var state = draft[DRAFT_STATE];
	
	  if (state && !state.finalizing) {
	    state.finalizing = true;
	    var value = draft[prop];
	    state.finalizing = false;
	    return value;
	  }
	
	  return draft[prop];
	}
	
	function get$1(state, prop) {
	  assertUnrevoked(state);
	  var value = peek(latest$1(state), prop);
	  if (state.finalizing) { return value; } // Create a draft if the value is unmodified.
	
	  if (value === peek(state.base, prop) && isDraftable(value)) {
	    prepareCopy(state);
	    return state.copy[prop] = createProxy(value, state);
	  }
	
	  return value;
	}
	
	function set(state, prop, value) {
	  assertUnrevoked(state);
	  state.assigned[prop] = true;
	
	  if (!state.modified) {
	    if (is(value, peek(latest$1(state), prop))) { return; }
	    markChanged(state);
	    prepareCopy(state);
	  }
	
	  state.copy[prop] = value;
	}
	
	function markChanged(state) {
	  if (!state.modified) {
	    state.modified = true;
	    if (state.parent) { markChanged(state.parent); }
	  }
	}
	
	function prepareCopy(state) {
	  if (!state.copy) { state.copy = clonePotentialDraft(state.base); }
	}
	
	function clonePotentialDraft(base) {
	  var state = base && base[DRAFT_STATE];
	
	  if (state) {
	    state.finalizing = true;
	    var draft = shallowCopy(state.draft, true);
	    state.finalizing = false;
	    return draft;
	  }
	
	  return shallowCopy(base);
	} // property descriptors are recycled to make sure we don't create a get and set closure per property,
	// but share them all instead
	
	
	var descriptors = {};
	
	function proxyProperty(draft, prop, enumerable) {
	  var desc = descriptors[prop];
	
	  if (desc) {
	    desc.enumerable = enumerable;
	  } else {
	    descriptors[prop] = desc = {
	      configurable: true,
	      enumerable: enumerable,
	
	      get: function get$1$1() {
	        return get$1(this[DRAFT_STATE], prop);
	      },
	
	      set: function set$1(value) {
	        set(this[DRAFT_STATE], prop, value);
	      }
	
	    };
	  }
	
	  Object.defineProperty(draft, prop, desc);
	}
	
	function proxyMap(target) {
	  Object.defineProperties(target, mapTraps);
	
	  if (hasSymbol) {
	    Object.defineProperty(target, Symbol.iterator, proxyMethod(iterateMapValues));
	  }
	}
	
	var mapTraps = finalizeTraps({
	  size: function (state) { return latest$1(state).size; },
	  has: function (state) { return function (key) { return latest$1(state).has(key); }; },
	  set: function (state) { return function (key, value) {
	    if (latest$1(state).get(key) !== value) {
	      prepareCopy(state);
	      markChanged(state);
	      state.assigned.set(key, true);
	      state.copy.set(key, value);
	    }
	
	    return state.draft;
	  }; },
	  delete: function (state) { return function (key) {
	    prepareCopy(state);
	    markChanged(state);
	    state.assigned.set(key, false);
	    state.copy.delete(key);
	    return false;
	  }; },
	  clear: function (state) { return function () {
	    if (!state.copy) {
	      prepareCopy(state);
	    }
	
	    markChanged(state);
	    state.assigned = new Map();
	
	    for (var i = 0, list = latest$1(state).keys(); i < list.length; i += 1) {
	      var key = list[i];
	
	      state.assigned.set(key, false);
	    }
	
	    return state.copy.clear();
	  }; },
	  forEach: function (state, key, reciever) { return function (cb) {
	    latest$1(state).forEach(function (value, key, map) {
	      cb(reciever.get(key), key, map);
	    });
	  }; },
	  get: function (state) { return function (key) {
	    var value = latest$1(state).get(key);
	
	    if (state.finalizing || state.finalized || !isDraftable(value)) {
	      return value;
	    }
	
	    if (value !== state.base.get(key)) {
	      return value;
	    }
	
	    var draft = createProxy(value, state);
	    prepareCopy(state);
	    state.copy.set(key, draft);
	    return draft;
	  }; },
	  keys: function (state) { return function () { return latest$1(state).keys(); }; },
	  values: iterateMapValues,
	  entries: iterateMapValues
	});
	
	function proxySet(target) {
	  Object.defineProperties(target, setTraps);
	
	  if (hasSymbol) {
	    Object.defineProperty(target, Symbol.iterator, proxyMethod(iterateSetValues));
	  }
	}
	
	var iterateSetValues = makeIterateSetValues(createProxy);
	var setTraps = finalizeTraps({
	  size: function (state) {
	    return latest$1(state).size;
	  },
	  add: function (state) { return function (value) {
	    if (!latest$1(state).has(value)) {
	      markChanged(state);
	
	      if (!state.copy) {
	        prepareCopy(state);
	      }
	
	      state.copy.add(value);
	    }
	
	    return state.draft;
	  }; },
	  delete: function (state) { return function (value) {
	    markChanged(state);
	
	    if (!state.copy) {
	      prepareCopy(state);
	    }
	
	    return state.copy.delete(value);
	  }; },
	  has: function (state) { return function (key) {
	    return latest$1(state).has(key);
	  }; },
	  clear: function (state) { return function () {
	    markChanged(state);
	
	    if (!state.copy) {
	      prepareCopy(state);
	    }
	
	    return state.copy.clear();
	  }; },
	  keys: iterateSetValues,
	  entries: iterateSetValues,
	  values: iterateSetValues,
	  forEach: function (state) { return function (cb, thisArg) {
	    var iterator = iterateSetValues(state)();
	    var result = iterator.next();
	
	    while (!result.done) {
	      cb.call(thisArg, result.value, result.value, state.draft);
	      result = iterator.next();
	    }
	  }; }
	});
	
	function finalizeTraps(traps) {
	  return Object.keys(traps).reduce(function (acc, key) {
	    var builder = key === "size" ? proxyAttr : proxyMethod;
	    acc[key] = builder(traps[key], key);
	    return acc;
	  }, {});
	}
	
	function proxyAttr(fn) {
	  return {
	    get: function get() {
	      var state = this[DRAFT_STATE];
	      assertUnrevoked(state);
	      return fn(state);
	    }
	
	  };
	}
	
	function proxyMethod(trap, key) {
	  return {
	    get: function get() {
	      return function () {
	        var args = [], len = arguments.length;
	        while ( len-- ) args[ len ] = arguments[ len ];
	
	        var state = this[DRAFT_STATE];
	        assertUnrevoked(state);
	        return trap(state, key, state.draft).apply(void 0, args);
	      };
	    }
	
	  };
	}
	
	function assertUnrevoked(state) {
	  if (state.revoked === true) { throw new Error("Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + JSON.stringify(latest$1(state))); }
	} // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.
	
	
	function markChangesSweep(drafts) {
	  // The natural order of drafts in the `scope` array is based on when they
	  // were accessed. By processing drafts in reverse natural order, we have a
	  // better chance of processing leaf nodes first. When a leaf node is known to
	  // have changed, we can avoid any traversal of its ancestor nodes.
	  for (var i = drafts.length - 1; i >= 0; i--) {
	    var state = drafts[i][DRAFT_STATE];
	
	    if (!state.modified) {
	      if (Array.isArray(state.base)) {
	        if (hasArrayChanges(state)) { markChanged(state); }
	      } else if (isMap(state.base)) {
	        if (hasMapChanges(state)) { markChanged(state); }
	      } else if (isSet(state.base)) {
	        if (hasSetChanges(state)) { markChanged(state); }
	      } else if (hasObjectChanges(state)) {
	        markChanged(state);
	      }
	    }
	  }
	}
	
	function markChangesRecursively(object) {
	  if (!object || typeof object !== "object") { return; }
	  var state = object[DRAFT_STATE];
	  if (!state) { return; }
	  var base = state.base;
	  var draft = state.draft;
	  var assigned = state.assigned;
	
	  if (!Array.isArray(object)) {
	    // Look for added keys.
	    Object.keys(draft).forEach(function (key) {
	      // The `undefined` check is a fast path for pre-existing keys.
	      if (base[key] === undefined && !has(base, key)) {
	        assigned[key] = true;
	        markChanged(state);
	      } else if (!assigned[key]) {
	        // Only untouched properties trigger recursion.
	        markChangesRecursively(draft[key]);
	      }
	    }); // Look for removed keys.
	
	    Object.keys(base).forEach(function (key) {
	      // The `undefined` check is a fast path for pre-existing keys.
	      if (draft[key] === undefined && !has(draft, key)) {
	        assigned[key] = false;
	        markChanged(state);
	      }
	    });
	  } else if (hasArrayChanges(state)) {
	    markChanged(state);
	    assigned.length = true;
	
	    if (draft.length < base.length) {
	      for (var i = draft.length; i < base.length; i++) { assigned[i] = false; }
	    } else {
	      for (var i$1 = base.length; i$1 < draft.length; i$1++) { assigned[i$1] = true; }
	    }
	
	    for (var i$2 = 0; i$2 < draft.length; i$2++) {
	      // Only untouched indices trigger recursion.
	      if (assigned[i$2] === undefined) { markChangesRecursively(draft[i$2]); }
	    }
	  }
	}
	
	function hasObjectChanges(state) {
	  var base = state.base;
	  var draft = state.draft; // Search for added keys and changed keys. Start at the back, because
	  // non-numeric keys are ordered by time of definition on the object.
	
	  var keys = Object.keys(draft);
	
	  for (var i = keys.length - 1; i >= 0; i--) {
	    var key = keys[i];
	    var baseValue = base[key]; // The `undefined` check is a fast path for pre-existing keys.
	
	    if (baseValue === undefined && !has(base, key)) {
	      return true;
	    } // Once a base key is deleted, future changes go undetected, because its
	    // descriptor is erased. This branch detects any missed changes.
	    else {
	        var value = draft[key];
	        var state$1 = value && value[DRAFT_STATE];
	
	        if (state$1 ? state$1.base !== baseValue : !is(value, baseValue)) {
	          return true;
	        }
	      }
	  } // At this point, no keys were added or changed.
	  // Compare key count to determine if keys were deleted.
	
	
	  return keys.length !== Object.keys(base).length;
	}
	
	function hasArrayChanges(state) {
	  var draft = state.draft;
	  if (draft.length !== state.base.length) { return true; } // See #116
	  // If we first shorten the length, our array interceptors will be removed.
	  // If after that new items are added, result in the same original length,
	  // those last items will have no intercepting property.
	  // So if there is no own descriptor on the last position, we know that items were removed and added
	  // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check
	  // the last one
	
	  var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1); // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)
	
	  if (descriptor && !descriptor.get) { return true; } // For all other cases, we don't have to compare, as they would have been picked up by the index setters
	
	  return false;
	}
	
	function hasMapChanges(state) {
	  var base = state.base;
	  var draft = state.draft;
	  if (base.size !== draft.size) { return true; } // IE11 supports only forEach iteration
	
	  var hasChanges = false;
	  draft.forEach(function (value, key) {
	    if (!hasChanges) {
	      hasChanges = isDraftable(value) ? value.modified : value !== base.get(key);
	    }
	  });
	  return hasChanges;
	}
	
	function hasSetChanges(state) {
	  var base = state.base;
	  var draft = state.draft;
	  if (base.size !== draft.size) { return true; } // IE11 supports only forEach iteration
	
	  var hasChanges = false;
	  draft.forEach(function (value, key) {
	    if (!hasChanges) {
	      hasChanges = isDraftable(value) ? value.modified : !base.has(key);
	    }
	  });
	  return hasChanges;
	}
	
	function createHiddenProperty(target, prop, value) {
	  Object.defineProperty(target, prop, {
	    value: value,
	    enumerable: false,
	    writable: true
	  });
	}
	
	var legacyProxy = /*#__PURE__*/Object.freeze({
		willFinalize: willFinalize,
		createProxy: createProxy
	});
	
	var obj$1, obj$1$1;
	
	function willFinalize$1() {}
	/**
	 * Returns a new draft of the `base` object.
	 *
	 * The second argument is the parent draft-state (used internally).
	 */
	
	function createProxy$1(base, parent) {
	  var scope = parent ? parent.scope : ImmerScope.current;
	  var state = {
	    // Track which produce call this is associated with.
	    scope: scope,
	    // True for both shallow and deep changes.
	    modified: false,
	    // Used during finalization.
	    finalized: false,
	    // Track which properties have been assigned (true) or deleted (false).
	    assigned: {},
	    // The parent draft state.
	    parent: parent,
	    // The base state.
	    base: base,
	    // The base proxy.
	    draft: null,
	    // Any property proxies.
	    drafts: {},
	    // The base copy with any updated values.
	    copy: null,
	    // Called by the `produce` function.
	    revoke: null
	  };
	  var target = state;
	  var traps = objectTraps;
	
	  if (Array.isArray(base)) {
	    target = [state];
	    traps = arrayTraps;
	  } // Map drafts must support object keys, so we use Map objects to track changes.
	  else if (isMap(base)) {
	      traps = mapTraps$1;
	      state.drafts = new Map();
	      state.assigned = new Map();
	    } // Set drafts use a Map object to track which of its values are drafted.
	    // And we don't need the "assigned" property, because Set objects have no keys.
	    else if (isSet(base)) {
	        traps = setTraps$1;
	        state.drafts = new Map();
	      }
	
	  var ref = Proxy.revocable(target, traps);
	  var revoke = ref.revoke;
	  var proxy = ref.proxy;
	  state.draft = proxy;
	  state.revoke = revoke;
	  scope.drafts.push(proxy);
	  return proxy;
	}
	/**
	 * Object drafts
	 */
	
	var objectTraps = {
	  get: function get(state, prop) {
	    if (prop === DRAFT_STATE) { return state; }
	    var drafts = state.drafts; // Check for existing draft in unmodified state.
	
	    if (!state.modified && has(drafts, prop)) {
	      return drafts[prop];
	    }
	
	    var value = latest$2(state)[prop];
	
	    if (state.finalized || !isDraftable(value)) {
	      return value;
	    } // Check for existing draft in modified state.
	
	
	    if (state.modified) {
	      // Assigned values are never drafted. This catches any drafts we created, too.
	      if (value !== peek$1(state.base, prop)) { return value; } // Store drafts on the copy (when one exists).
	
	      drafts = state.copy;
	    }
	
	    return drafts[prop] = createProxy$1(value, state);
	  },
	
	  has: function has(state, prop) {
	    return prop in latest$2(state);
	  },
	
	  ownKeys: function ownKeys(state) {
	    return Reflect.ownKeys(latest$2(state));
	  },
	
	  set: function set(state, prop, value) {
	    if (!state.modified) {
	      var baseValue = peek$1(state.base, prop); // Optimize based on value's truthiness. Truthy values are guaranteed to
	      // never be undefined, so we can avoid the `in` operator. Lastly, truthy
	      // values may be drafts, but falsy values are never drafts.
	
	      var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;
	      if (isUnchanged) { return true; }
	      markChanged$1(state);
	    }
	
	    state.assigned[prop] = true;
	    state.copy[prop] = value;
	    return true;
	  },
	
	  deleteProperty: function deleteProperty(state, prop) {
	    // The `undefined` check is a fast path for pre-existing keys.
	    if (peek$1(state.base, prop) !== undefined || prop in state.base) {
	      state.assigned[prop] = false;
	      markChanged$1(state);
	    } else if (state.assigned[prop]) {
	      // if an originally not assigned property was deleted
	      delete state.assigned[prop];
	    }
	
	    if (state.copy) { delete state.copy[prop]; }
	    return true;
	  },
	
	  // Note: We never coerce `desc.value` into an Immer draft, because we can't make
	  // the same guarantee in ES5 mode.
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(state, prop) {
	    var owner = latest$2(state);
	    var desc = Reflect.getOwnPropertyDescriptor(owner, prop);
	
	    if (desc) {
	      desc.writable = true;
	      desc.configurable = !Array.isArray(owner) || prop !== "length";
	    }
	
	    return desc;
	  },
	
	  defineProperty: function defineProperty() {
	    throw new Error("Object.defineProperty() cannot be used on an Immer draft"); // prettier-ignore
	  },
	
	  getPrototypeOf: function getPrototypeOf(state) {
	    return Object.getPrototypeOf(state.base);
	  },
	
	  setPrototypeOf: function setPrototypeOf() {
	    throw new Error("Object.setPrototypeOf() cannot be used on an Immer draft"); // prettier-ignore
	  }
	
	};
	/**
	 * Array drafts
	 */
	
	var arrayTraps = {};
	each(objectTraps, function (key, fn) {
	  arrayTraps[key] = function () {
	    arguments[0] = arguments[0][0];
	    return fn.apply(this, arguments);
	  };
	});
	
	arrayTraps.deleteProperty = function (state, prop) {
	  if (isNaN(parseInt(prop))) {
	    throw new Error("Immer only supports deleting array indices"); // prettier-ignore
	  }
	
	  return objectTraps.deleteProperty.call(this, state[0], prop);
	};
	
	arrayTraps.set = function (state, prop, value) {
	  if (prop !== "length" && isNaN(parseInt(prop))) {
	    throw new Error("Immer only supports setting array indices and the 'length' property"); // prettier-ignore
	  }
	
	  return objectTraps.set.call(this, state[0], prop, value);
	}; // Used by Map and Set drafts
	
	
	var reflectTraps = makeReflectTraps(["ownKeys", "has", "set", "deleteProperty", "defineProperty", "getOwnPropertyDescriptor", "preventExtensions", "isExtensible", "getPrototypeOf"]);
	/**
	 * Map drafts
	 */
	
	var mapTraps$1 = makeTrapsForGetters(( obj$1 = {}, obj$1[DRAFT_STATE] = function (state) { return state; }, obj$1.size = function (state) { return latest$2(state).size; }, obj$1.has = function (state) { return function (key) { return latest$2(state).has(key); }; }, obj$1.set = function (state) { return function (key, value) {
	    var values = latest$2(state);
	
	    if (!values.has(key) || values.get(key) !== value) {
	      markChanged$1(state);
	      state.assigned.set(key, true);
	      state.copy.set(key, value);
	    }
	
	    return state.draft;
	  }; }, obj$1.delete = function (state) { return function (key) {
	    if (latest$2(state).has(key)) {
	      markChanged$1(state);
	      state.assigned.set(key, false);
	      return state.copy.delete(key);
	    }
	
	    return false;
	  }; }, obj$1.clear = function (state) { return function () {
	    markChanged$1(state);
	    state.assigned = new Map();
	
	    for (var i = 0, list = latest$2(state).keys(); i < list.length; i += 1) {
	      var key = list[i];
	
	      state.assigned.set(key, false);
	    }
	
	    return state.copy.clear();
	  }; }, obj$1.forEach = function (state, _, receiver) { return function (cb, thisArg) { return latest$2(state).forEach(function (_, key, map) {
	    var value = receiver.get(key);
	    cb.call(thisArg, value, key, map);
	  }); }; }, obj$1.get = function (state) { return function (key) {
	    var drafts = state[state.modified ? "copy" : "drafts"];
	
	    if (drafts.has(key)) {
	      return drafts.get(key);
	    }
	
	    var value = latest$2(state).get(key);
	
	    if (state.finalized || !isDraftable(value)) {
	      return value;
	    }
	
	    var draft = createProxy$1(value, state);
	    drafts.set(key, draft);
	    return draft;
	  }; }, obj$1.keys = function (state) { return function () { return latest$2(state).keys(); }; }, obj$1.values = iterateMapValues, obj$1.entries = iterateMapValues, obj$1[hasSymbol ? Symbol.iterator : "@@iterator"] = iterateMapValues, obj$1 ));
	var iterateSetValues$1 = makeIterateSetValues(createProxy$1);
	/**
	 * Set drafts
	 */
	
	var setTraps$1 = makeTrapsForGetters(( obj$1$1 = {}, obj$1$1[DRAFT_STATE] = function (state) { return state; }, obj$1$1.size = function (state) { return latest$2(state).size; }, obj$1$1.has = function (state) { return function (key) { return latest$2(state).has(key); }; }, obj$1$1.add = function (state) { return function (value) {
	    if (!latest$2(state).has(value)) {
	      markChanged$1(state);
	      state.copy.add(value);
	    }
	
	    return state.draft;
	  }; }, obj$1$1.delete = function (state) { return function (value) {
	    markChanged$1(state);
	    return state.copy.delete(value);
	  }; }, obj$1$1.clear = function (state) { return function () {
	    markChanged$1(state);
	    return state.copy.clear();
	  }; }, obj$1$1.forEach = function (state) { return function (cb, thisArg) {
	    var iterator = iterateSetValues$1(state)();
	    var result = iterator.next();
	
	    while (!result.done) {
	      cb.call(thisArg, result.value, result.value, state.draft);
	      result = iterator.next();
	    }
	  }; }, obj$1$1.keys = iterateSetValues$1, obj$1$1.values = iterateSetValues$1, obj$1$1.entries = iterateSetValues$1, obj$1$1[hasSymbol ? Symbol.iterator : "@@iterator"] = iterateSetValues$1, obj$1$1 ));
	/**
	 * Helpers
	 */
	// Retrieve the latest values of the draft.
	
	function latest$2(state) {
	  return state.copy || state.base;
	} // Access a property without creating an Immer draft.
	
	
	function peek$1(draft, prop) {
	  var state = draft[DRAFT_STATE];
	  var desc = Reflect.getOwnPropertyDescriptor(state ? latest$2(state) : draft, prop);
	  return desc && desc.value;
	}
	
	function markChanged$1(state) {
	  if (!state.modified) {
	    state.modified = true;
	    var base = state.base;
	    var drafts = state.drafts;
	    var parent = state.parent;
	    var copy = shallowCopy(base);
	
	    if (isSet(base)) {
	      // Note: The `drafts` property is preserved for Set objects, since
	      // we need to keep track of which values are drafted.
	      assignSet(copy, drafts);
	    } else {
	      // Merge nested drafts into the copy.
	      if (isMap(base)) { assignMap(copy, drafts); }else { assign(copy, drafts); }
	      state.drafts = null;
	    }
	
	    state.copy = copy;
	
	    if (parent) {
	      markChanged$1(parent);
	    }
	  }
	}
	/** Create traps that all use the `Reflect` API on the `latest(state)` */
	
	
	function makeReflectTraps(names) {
	  return names.reduce(function (traps, name) {
	    traps[name] = function (state) {
	      var args = [], len = arguments.length - 1;
	      while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
	
	      return Reflect[name].apply(Reflect, [ latest$2(state) ].concat( args ));
	    };
	
	    return traps;
	  }, {});
	}
	
	function makeTrapsForGetters(getters) {
	  return Object.assign({}, reflectTraps, {
	    get: function get(state, prop, receiver) {
	      return getters.hasOwnProperty(prop) ? getters[prop](state, prop, receiver) : Reflect.get(state, prop, receiver);
	    },
	
	    setPrototypeOf: function setPrototypeOf(state) {
	      throw new Error("Object.setPrototypeOf() cannot be used on an Immer draft"); // prettier-ignore
	    }
	
	  });
	}
	
	var modernProxy = /*#__PURE__*/Object.freeze({
		willFinalize: willFinalize$1,
		createProxy: createProxy$1
	});
	
	function generatePatches(state, basePath, patches, inversePatches) {
	  var generatePatchesFn = Array.isArray(state.base) ? generateArrayPatches : isSet(state.base) ? generateSetPatches : generatePatchesFromAssigned;
	  generatePatchesFn(state, basePath, patches, inversePatches);
	}
	
	function generateArrayPatches(state, basePath, patches, inversePatches) {
	  var assign, assign$1;
	
	  var base = state.base;
	  var copy = state.copy;
	  var assigned = state.assigned; // Reduce complexity by ensuring `base` is never longer.
	
	  if (copy.length < base.length) {
	    (assign = [copy, base], base = assign[0], copy = assign[1]);
	    (assign$1 = [inversePatches, patches], patches = assign$1[0], inversePatches = assign$1[1]);
	  }
	
	  var delta = copy.length - base.length; // Find the first replaced index.
	
	  var start = 0;
	
	  while (base[start] === copy[start] && start < base.length) {
	    ++start;
	  } // Find the last replaced index. Search from the end to optimize splice patches.
	
	
	  var end = base.length;
	
	  while (end > start && base[end - 1] === copy[end + delta - 1]) {
	    --end;
	  } // Process replaced indices.
	
	
	  for (var i = start; i < end; ++i) {
	    if (assigned[i] && copy[i] !== base[i]) {
	      var path = basePath.concat([i]);
	      patches.push({
	        op: "replace",
	        path: path,
	        value: copy[i]
	      });
	      inversePatches.push({
	        op: "replace",
	        path: path,
	        value: base[i]
	      });
	    }
	  }
	
	  var replaceCount = patches.length; // Process added indices.
	
	  for (var i$1 = end + delta - 1; i$1 >= end; --i$1) {
	    var path$1 = basePath.concat([i$1]);
	    patches[replaceCount + i$1 - end] = {
	      op: "add",
	      path: path$1,
	      value: copy[i$1]
	    };
	    inversePatches.push({
	      op: "remove",
	      path: path$1
	    });
	  }
	} // This is used for both Map objects and normal objects.
	
	
	function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {
	  var base = state.base;
	  var copy = state.copy;
	  each(state.assigned, function (key, assignedValue) {
	    var origValue = get(base, key);
	    var value = get(copy, key);
	    var op = !assignedValue ? "remove" : has(base, key) ? "replace" : "add";
	    if (origValue === value && op === "replace") { return; }
	    var path = basePath.concat(key);
	    patches.push(op === "remove" ? {
	      op: op,
	      path: path
	    } : {
	      op: op,
	      path: path,
	      value: value
	    });
	    inversePatches.push(op === "add" ? {
	      op: "remove",
	      path: path
	    } : op === "remove" ? {
	      op: "add",
	      path: path,
	      value: origValue
	    } : {
	      op: "replace",
	      path: path,
	      value: origValue
	    });
	  });
	}
	
	function generateSetPatches(state, basePath, patches, inversePatches) {
	  var base = state.base;
	  var copy = state.copy;
	  var i = 0;
	
	  for (var i$1 = 0, list = base; i$1 < list.length; i$1 += 1) {
	    var value = list[i$1];
	
	    if (!copy.has(value)) {
	      var path = basePath.concat([i]);
	      patches.push({
	        op: "remove",
	        path: path,
	        value: value
	      });
	      inversePatches.unshift({
	        op: "add",
	        path: path,
	        value: value
	      });
	    }
	
	    i++;
	  }
	
	  i = 0;
	
	  for (var i$2 = 0, list$1 = copy; i$2 < list$1.length; i$2 += 1) {
	    var value$1 = list$1[i$2];
	
	    if (!base.has(value$1)) {
	      var path$1 = basePath.concat([i]);
	      patches.push({
	        op: "add",
	        path: path$1,
	        value: value$1
	      });
	      inversePatches.unshift({
	        op: "remove",
	        path: path$1,
	        value: value$1
	      });
	    }
	
	    i++;
	  }
	}
	
	var applyPatches = function (draft, patches) {
	  for (var i$1 = 0, list = patches; i$1 < list.length; i$1 += 1) {
	    var patch = list[i$1];
	
	    var path = patch.path;
	    var op = patch.op;
	    if (!path.length) { throw new Error("Illegal state"); }
	    var base = draft;
	
	    for (var i = 0; i < path.length - 1; i++) {
	      base = get(base, path[i]);
	      if (!base || typeof base !== "object") { throw new Error("Cannot apply patch, path doesn't resolve: " + path.join("/")); } // prettier-ignore
	    }
	
	    var value = clone(patch.value); // used to clone patch to ensure original patch is not modified, see #411
	
	    var key = path[path.length - 1];
	
	    switch (op) {
	      case "replace":
	        if (isMap(base)) {
	          base.set(key, value);
	        } else if (isSet(base)) {
	          throw new Error('Sets cannot have "replace" patches.');
	        } else {
	          // if value is an object, then it's assigned by reference
	          // in the following add or remove ops, the value field inside the patch will also be modifyed
	          // so we use value from the cloned patch
	          base[key] = value;
	        }
	
	        break;
	
	      case "add":
	        if (isSet(base)) {
	          base.delete(patch.value);
	        }
	
	        Array.isArray(base) ? base.splice(key, 0, value) : isMap(base) ? base.set(key, value) : isSet(base) ? base.add(value) : base[key] = value;
	        break;
	
	      case "remove":
	        Array.isArray(base) ? base.splice(key, 1) : isMap(base) ? base.delete(key) : isSet(base) ? base.delete(patch.value) : delete base[key];
	        break;
	
	      default:
	        throw new Error("Unsupported patch operation: " + op);
	    }
	  }
	
	  return draft;
	};
	
	function verifyMinified() {}
	
	var configDefaults = {
	  useProxies: typeof Proxy !== "undefined" && typeof Proxy.revocable !== "undefined" && typeof Reflect !== "undefined",
	  autoFreeze: typeof process !== "undefined" ? ("production") !== "production" : verifyMinified.name === "verifyMinified",
	  onAssign: null,
	  onDelete: null,
	  onCopy: null
	};
	var Immer = function Immer(config) {
	  assign(this, configDefaults, config);
	  this.setUseProxies(this.useProxies);
	  this.produce = this.produce.bind(this);
	  this.produceWithPatches = this.produceWithPatches.bind(this);
	};
	
	Immer.prototype.produce = function produce (base, recipe, patchListener) {
	    var this$1 = this;
	
	  // curried invocation
	  if (typeof base === "function" && typeof recipe !== "function") {
	    var defaultBase = recipe;
	    recipe = base;
	    var self = this;
	    return function curriedProduce(base) {
	        var this$1 = this;
	        if ( base === void 0 ) base = defaultBase;
	        var args = [], len = arguments.length - 1;
	        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
	
	      return self.produce(base, function (draft) { return recipe.call.apply(recipe, [ this$1, draft ].concat( args )); }); // prettier-ignore
	    };
	  } // prettier-ignore
	
	
	  {
	    if (typeof recipe !== "function") {
	      throw new Error("The first or second argument to `produce` must be a function");
	    }
	
	    if (patchListener !== undefined && typeof patchListener !== "function") {
	      throw new Error("The third argument to `produce` must be a function or undefined");
	    }
	  }
	  var result; // Only plain objects, arrays, and "immerable classes" are drafted.
	
	  if (isDraftable(base)) {
	    var scope = ImmerScope.enter();
	    var proxy = this.createProxy(base);
	    var hasError = true;
	
	    try {
	      result = recipe(proxy);
	      hasError = false;
	    } finally {
	      // finally instead of catch + rethrow better preserves original stack
	      if (hasError) { scope.revoke(); }else { scope.leave(); }
	    }
	
	    if (typeof Promise !== "undefined" && result instanceof Promise) {
	      return result.then(function (result) {
	        scope.usePatches(patchListener);
	        return this$1.processResult(result, scope);
	      }, function (error) {
	        scope.revoke();
	        throw error;
	      });
	    }
	
	    scope.usePatches(patchListener);
	    return this.processResult(result, scope);
	  } else {
	    result = recipe(base);
	    if (result === NOTHING) { return undefined; }
	    if (result === undefined) { result = base; }
	    this.maybeFreeze(result, true);
	    return result;
	  }
	};
	
	Immer.prototype.produceWithPatches = function produceWithPatches (arg1, arg2, arg3) {
	    var this$1 = this;
	
	  if (typeof arg1 === "function") {
	    return function (state) {
	        var args = [], len = arguments.length - 1;
	        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
	
	        return this$1.produceWithPatches(state, function (draft) { return arg1.apply(void 0, [ draft ].concat( args )); });
	      };
	  } // non-curried form
	
	
	  if (arg3) { throw new Error("A patch listener cannot be passed to produceWithPatches"); }
	  var patches, inversePatches;
	  var nextState = this.produce(arg1, arg2, function (p, ip) {
	    patches = p;
	    inversePatches = ip;
	  });
	  return [nextState, patches, inversePatches];
	};
	
	Immer.prototype.createDraft = function createDraft (base) {
	  if (!isDraftable(base)) {
	    throw new Error("First argument to `createDraft` must be a plain object, an array, or an immerable object"); // prettier-ignore
	  }
	
	  var scope = ImmerScope.enter();
	  var proxy = this.createProxy(base);
	  proxy[DRAFT_STATE].isManual = true;
	  scope.leave();
	  return proxy;
	};
	
	Immer.prototype.finishDraft = function finishDraft (draft, patchListener) {
	  var state = draft && draft[DRAFT_STATE];
	
	  if (!state || !state.isManual) {
	    throw new Error("First argument to `finishDraft` must be a draft returned by `createDraft`"); // prettier-ignore
	  }
	
	  if (state.finalized) {
	    throw new Error("The given draft is already finalized"); // prettier-ignore
	  }
	
	  var scope = state.scope;
	  scope.usePatches(patchListener);
	  return this.processResult(undefined, scope);
	};
	
	Immer.prototype.setAutoFreeze = function setAutoFreeze (value) {
	  this.autoFreeze = value;
	};
	
	Immer.prototype.setUseProxies = function setUseProxies (value) {
	  this.useProxies = value;
	  assign(this, value ? modernProxy : legacyProxy);
	};
	
	Immer.prototype.applyPatches = function applyPatches$1 (base, patches) {
	  // If a patch replaces the entire state, take that replacement as base
	  // before applying patches
	  var i;
	
	  for (i = patches.length - 1; i >= 0; i--) {
	    var patch = patches[i];
	
	    if (patch.path.length === 0 && patch.op === "replace") {
	      base = patch.value;
	      break;
	    }
	  }
	
	  if (isDraft(base)) {
	    // N.B: never hits if some patch a replacement, patches are never drafts
	    return applyPatches(base, patches);
	  } // Otherwise, produce a copy of the base state.
	
	
	  return this.produce(base, function (draft) { return applyPatches(draft, patches.slice(i + 1)); });
	};
	/** @internal */
	
	
	Immer.prototype.processResult = function processResult (result, scope) {
	  var baseDraft = scope.drafts[0];
	  var isReplaced = result !== undefined && result !== baseDraft;
	  this.willFinalize(scope, result, isReplaced);
	
	  if (isReplaced) {
	    if (baseDraft[DRAFT_STATE].modified) {
	      scope.revoke();
	      throw new Error("An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft."); // prettier-ignore
	    }
	
	    if (isDraftable(result)) {
	      // Finalize the result in case it contains (or is) a subset of the draft.
	      result = this.finalize(result, null, scope);
	      this.maybeFreeze(result);
	    }
	
	    if (scope.patches) {
	      scope.patches.push({
	        op: "replace",
	        path: [],
	        value: result
	      });
	      scope.inversePatches.push({
	        op: "replace",
	        path: [],
	        value: baseDraft[DRAFT_STATE].base
	      });
	    }
	  } else {
	    // Finalize the base draft.
	    result = this.finalize(baseDraft, [], scope);
	  }
	
	  scope.revoke();
	
	  if (scope.patches) {
	    scope.patchListener(scope.patches, scope.inversePatches);
	  }
	
	  return result !== NOTHING ? result : undefined;
	};
	/**
	 * @internal
	 * Finalize a draft, returning either the unmodified base state or a modified
	 * copy of the base state.
	 */
	
	
	Immer.prototype.finalize = function finalize (draft, path, scope) {
	    var this$1 = this;
	
	  var state = draft[DRAFT_STATE];
	
	  if (!state) {
	    if (Object.isFrozen(draft)) { return draft; }
	    return this.finalizeTree(draft, null, scope);
	  } // Never finalize drafts owned by another scope.
	
	
	  if (state.scope !== scope) {
	    return draft;
	  }
	
	  if (!state.modified) {
	    this.maybeFreeze(state.base, true);
	    return state.base;
	  }
	
	  if (!state.finalized) {
	    state.finalized = true;
	    this.finalizeTree(state.draft, path, scope); // We cannot really delete anything inside of a Set. We can only replace the whole Set.
	
	    if (this.onDelete && !isSet(state.base)) {
	      // The `assigned` object is unreliable with ES5 drafts.
	      if (this.useProxies) {
	        var assigned = state.assigned;
	        each(assigned, function (prop, exists) {
	          if (!exists) { this$1.onDelete(state, prop); }
	        });
	      } else {
	        // TODO: Figure it out for Maps and Sets if we need to support ES5
	        var base = state.base;
	          var copy = state.copy;
	        each(base, function (prop) {
	          if (!has(copy, prop)) { this$1.onDelete(state, prop); }
	        });
	      }
	    }
	
	    if (this.onCopy) {
	      this.onCopy(state);
	    } // At this point, all descendants of `state.copy` have been finalized,
	    // so we can be sure that `scope.canAutoFreeze` is accurate.
	
	
	    if (this.autoFreeze && scope.canAutoFreeze) {
	      freeze(state.copy, false);
	    }
	
	    if (path && scope.patches) {
	      generatePatches(state, path, scope.patches, scope.inversePatches);
	    }
	  }
	
	  return state.copy;
	};
	/**
	 * @internal
	 * Finalize all drafts in the given state tree.
	 */
	
	
	Immer.prototype.finalizeTree = function finalizeTree (root, rootPath, scope) {
	    var this$1 = this;
	
	  var state = root[DRAFT_STATE];
	
	  if (state) {
	    if (!this.useProxies) {
	      // Create the final copy, with added keys and without deleted keys.
	      state.copy = shallowCopy(state.draft, true);
	    }
	
	    root = state.copy;
	  }
	
	  var needPatches = !!rootPath && !!scope.patches;
	
	  var finalizeProperty = function (prop, value, parent) {
	    if (value === parent) {
	      throw Error("Immer forbids circular references");
	    } // In the `finalizeTree` method, only the `root` object may be a draft.
	
	
	    var isDraftProp = !!state && parent === root;
	    var isSetMember = isSet(parent);
	
	    if (isDraft(value)) {
	      var path = isDraftProp && needPatches && !isSetMember && // Set objects are atomic since they have no keys.
	      !has(state.assigned, prop) // Skip deep patches for assigned keys.
	      ? rootPath.concat(prop) : null; // Drafts owned by `scope` are finalized here.
	
	      value = this$1.finalize(value, path, scope);
	      replace(parent, prop, value); // Drafts from another scope must prevent auto-freezing.
	
	      if (isDraft(value)) {
	        scope.canAutoFreeze = false;
	      } // Unchanged drafts are never passed to the `onAssign` hook.
	
	
	      if (isDraftProp && value === get(state.base, prop)) { return; }
	    } // Unchanged draft properties are ignored.
	    else if (isDraftProp && is(value, get(state.base, prop))) {
	        return;
	      } // Search new objects for unfinalized drafts. Frozen objects should never contain drafts.
	      else if (isDraftable(value) && !Object.isFrozen(value)) {
	          each(value, finalizeProperty);
	          this$1.maybeFreeze(value);
	        }
	
	    if (isDraftProp && this$1.onAssign && !isSetMember) {
	      this$1.onAssign(state, prop, value);
	    }
	  };
	
	  each(root, finalizeProperty);
	  return root;
	};
	
	Immer.prototype.maybeFreeze = function maybeFreeze (value, deep) {
	    if ( deep === void 0 ) deep = false;
	
	  if (this.autoFreeze && !isDraft(value)) {
	    freeze(value, deep);
	  }
	};
	
	function replace(parent, prop, value) {
	  if (isMap(parent)) {
	    parent.set(prop, value);
	  } else if (isSet(parent)) {
	    // In this case, the `prop` is actually a draft.
	    parent.delete(prop);
	    parent.add(value);
	  } else if (Array.isArray(parent) || isEnumerable(parent, prop)) {
	    // Preserve non-enumerable properties.
	    parent[prop] = value;
	  } else {
	    Object.defineProperty(parent, prop, {
	      value: value,
	      writable: true,
	      configurable: true
	    });
	  }
	}
	
	var immer = new Immer();
	/**
	 * The `produce` function takes a value and a "recipe function" (whose
	 * return value often depends on the base state). The recipe function is
	 * free to mutate its first argument however it wants. All mutations are
	 * only ever applied to a __copy__ of the base state.
	 *
	 * Pass only a function to create a "curried producer" which relieves you
	 * from passing the recipe function every time.
	 *
	 * Only plain objects and arrays are made mutable. All other objects are
	 * considered uncopyable.
	 *
	 * Note: This function is __bound__ to its `Immer` instance.
	 *
	 * @param {any} base - the initial state
	 * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified
	 * @param {Function} patchListener - optional function that will be called with all the patches produced here
	 * @returns {any} a new state, or the initial state if nothing was modified
	 */
	
	var produce = immer.produce;
	/**
	 * Like `produce`, but `produceWithPatches` always returns a tuple
	 * [nextState, patches, inversePatches] (instead of just the next state)
	 */
	
	var produceWithPatches = immer.produceWithPatches.bind(immer);
	/**
	 * Pass true to automatically freeze all copies created by Immer.
	 *
	 * By default, auto-freezing is disabled in production.
	 */
	
	var setAutoFreeze = immer.setAutoFreeze.bind(immer);
	/**
	 * Pass true to use the ES2015 `Proxy` class when creating drafts, which is
	 * always faster than using ES5 proxies.
	 *
	 * By default, feature detection is used, so calling this is rarely necessary.
	 */
	
	var setUseProxies = immer.setUseProxies.bind(immer);
	/**
	 * Apply an array of Immer patches to the first argument.
	 *
	 * This function is a producer, which means copy-on-write is in effect.
	 */
	
	var applyPatches$1 = immer.applyPatches.bind(immer);
	/**
	 * Create an Immer draft from the given base state, which may be a draft itself.
	 * The draft can be modified until you finalize it with the `finishDraft` function.
	 */
	
	var createDraft = immer.createDraft.bind(immer);
	/**
	 * Finalize an Immer draft from a `createDraft` call, returning the base state
	 * (if no changes were made) or a modified copy. The draft must *not* be
	 * mutated afterwards.
	 *
	 * Pass a function as the 2nd argument to generate Immer patches based on the
	 * changes that were made.
	 */
	
	var finishDraft = immer.finishDraft.bind(immer);
	
	exports.Immer = Immer;
	exports.applyPatches = applyPatches$1;
	exports.createDraft = createDraft;
	exports.default = produce;
	exports.finishDraft = finishDraft;
	exports.immerable = DRAFTABLE;
	exports.isDraft = isDraft;
	exports.isDraftable = isDraftable;
	exports.nothing = NOTHING;
	exports.original = original;
	exports.produce = produce;
	exports.produceWithPatches = produceWithPatches;
	exports.setAutoFreeze = setAutoFreeze;
	exports.setUseProxies = setUseProxies;
	//# sourceMappingURL=immer.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(319)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(55),
	    baseLodash = __webpack_require__(91);
	
	/**
	 * The base constructor for creating `lodash` wrapper objects.
	 *
	 * @private
	 * @param {*} value The value to wrap.
	 * @param {boolean} [chainAll] Enable explicit method chain sequences.
	 */
	function LodashWrapper(value, chainAll) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__chain__ = !!chainAll;
	  this.__index__ = 0;
	  this.__values__ = undefined;
	}
	
	LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	LodashWrapper.prototype.constructor = LodashWrapper;
	
	module.exports = LodashWrapper;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20),
	    root = __webpack_require__(6);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(6);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20),
	    root = __webpack_require__(6);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 138 */
/***/ function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(400),
	    isArguments = __webpack_require__(40),
	    isArray = __webpack_require__(3),
	    isBuffer = __webpack_require__(41),
	    isIndex = __webpack_require__(30),
	    isTypedArray = __webpack_require__(67);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ },
/* 140 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(28),
	    eq = __webpack_require__(37);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignMergeValue;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(19),
	    keys = __webpack_require__(32);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(18);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(412);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(144),
	    keys = __webpack_require__(32);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(88),
	    isArray = __webpack_require__(3);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(57),
	    baseSet = __webpack_require__(93),
	    castPath = __webpack_require__(29);
	
	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, paths, predicate) {
	  var index = -1,
	      length = paths.length,
	      result = {};
	
	  while (++index < length) {
	    var path = paths[index],
	        value = baseGet(object, path);
	
	    if (predicate(value, path)) {
	      baseSet(result, castPath(path, object), value);
	    }
	  }
	  return result;
	}
	
	module.exports = basePickBy;


/***/ },
/* 148 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(39),
	    metaMap = __webpack_require__(170);
	
	/**
	 * The base implementation of `setData` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetData = !metaMap ? identity : function(func, data) {
	  metaMap.set(func, data);
	  return func;
	};
	
	module.exports = baseSetData;


/***/ },
/* 150 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(89);
	
	/**
	 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the first unmatched string symbol.
	 */
	function charsStartIndex(strSymbols, chrSymbols) {
	  var index = -1,
	      length = strSymbols.length;
	
	  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsStartIndex;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(6);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
	
	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47)(module)))

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(98);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ },
/* 154 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersLength = holders.length,
	      leftIndex = -1,
	      leftLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(leftLength + rangeLength),
	      isUncurried = !isCurried;
	
	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[holders[argsIndex]] = args[argsIndex];
	    }
	  }
	  while (rangeLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgs;


/***/ },
/* 155 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersIndex = -1,
	      holdersLength = holders.length,
	      rightIndex = -1,
	      rightLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(rangeLength + rightLength),
	      isUncurried = !isCurried;
	
	  while (++argsIndex < rangeLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[offset + holders[holdersIndex]] = args[argsIndex++];
	    }
	  }
	  return result;
	}
	
	module.exports = composeArgsRight;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var arrayAggregator = __webpack_require__(369),
	    baseAggregator = __webpack_require__(374),
	    baseIteratee = __webpack_require__(7),
	    isArray = __webpack_require__(3);
	
	/**
	 * Creates a function like `_.groupBy`.
	 *
	 * @private
	 * @param {Function} setter The function to set accumulator values.
	 * @param {Function} [initializer] The accumulator object initializer.
	 * @returns {Function} Returns the new aggregator function.
	 */
	function createAggregator(setter, initializer) {
	  return function(collection, iteratee) {
	    var func = isArray(collection) ? arrayAggregator : baseAggregator,
	        accumulator = initializer ? initializer() : {};
	
	    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
	  };
	}
	
	module.exports = createAggregator;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(154),
	    composeArgsRight = __webpack_require__(155),
	    countHolders = __webpack_require__(410),
	    createCtor = __webpack_require__(61),
	    createRecurry = __webpack_require__(158),
	    getHolder = __webpack_require__(164),
	    reorder = __webpack_require__(457),
	    replaceHolders = __webpack_require__(109),
	    root = __webpack_require__(6);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_ARY_FLAG = 128,
	    WRAP_FLIP_FLAG = 512;
	
	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided
	 *  to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & WRAP_ARY_FLAG,
	      isBind = bitmask & WRAP_BIND_FLAG,
	      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	      isFlip = bitmask & WRAP_FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length;
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (isCurried) {
	      var placeholder = getHolder(wrapper),
	          holdersCount = countHolders(args, placeholder);
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders, isCurried);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	    }
	    length -= holdersCount;
	    if (isCurried && length < arity) {
	      var newHolders = replaceHolders(args, placeholder);
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	        args, newHolders, argPos, ary, arity - length
	      );
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;
	
	    length = args.length;
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtor(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}
	
	module.exports = createHybrid;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	var isLaziable = __webpack_require__(437),
	    setData = __webpack_require__(174),
	    setWrapToString = __webpack_require__(175);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder value.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & WRAP_CURRY_FLAG,
	      newHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;
	
	  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	    newHoldersRight, argPos, ary, arity
	  ];
	
	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return setWrapToString(result, func, bitmask);
	}
	
	module.exports = createRecurry;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20);
	
	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());
	
	module.exports = defineProperty;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(85),
	    arraySome = __webpack_require__(140),
	    cacheHas = __webpack_require__(96);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 161 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(146),
	    getSymbols = __webpack_require__(104),
	    keys = __webpack_require__(32);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	var metaMap = __webpack_require__(170),
	    noop = __webpack_require__(188);
	
	/**
	 * Gets metadata for `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {*} Returns the metadata for `func`.
	 */
	var getData = !metaMap ? noop : function(func) {
	  return metaMap.get(func);
	};
	
	module.exports = getData;


/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * Gets the argument placeholder value for `func`.
	 *
	 * @private
	 * @param {Function} func The function to inspect.
	 * @returns {*} Returns the placeholder value.
	 */
	function getHolder(func) {
	  var object = func;
	  return object.placeholder;
	}
	
	module.exports = getHolder;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(88),
	    getPrototype = __webpack_require__(103),
	    getSymbols = __webpack_require__(104),
	    stubArray = __webpack_require__(189);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own and inherited enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};
	
	module.exports = getSymbolsIn;


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(29),
	    isArguments = __webpack_require__(40),
	    isArray = __webpack_require__(3),
	    isIndex = __webpack_require__(30),
	    isLength = __webpack_require__(116),
	    toKey = __webpack_require__(22);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      result = false;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(55),
	    getPrototype = __webpack_require__(103),
	    isPrototype = __webpack_require__(36);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(4);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ },
/* 169 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	var WeakMap = __webpack_require__(137);
	
	/** Used to store function metadata. */
	var metaMap = WeakMap && new WeakMap;
	
	module.exports = metaMap;


/***/ },
/* 171 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(50);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = overRest;


/***/ },
/* 173 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function safeGet(object, key) {
	  if (key === 'constructor' && typeof object[key] === 'function') {
	    return;
	  }
	
	  if (key == '__proto__') {
	    return;
	  }
	
	  return object[key];
	}
	
	module.exports = safeGet;


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(149),
	    shortOut = __webpack_require__(176);
	
	/**
	 * Sets metadata for `func`.
	 *
	 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	 * period of time, it will trip its breaker and transition to an identity
	 * function to avoid garbage collection pauses in V8. See
	 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	 * for more details.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var setData = shortOut(baseSetData);
	
	module.exports = setData;


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	var getWrapDetails = __webpack_require__(426),
	    insertWrapDetails = __webpack_require__(434),
	    setToString = __webpack_require__(111),
	    updateWrapDetails = __webpack_require__(469);
	
	/**
	 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	 * with wrapper details in a comment at the top of the source body.
	 *
	 * @private
	 * @param {Function} wrapper The function to modify.
	 * @param {Function} reference The reference function.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Function} Returns `wrapper`.
	 */
	function setWrapToString(wrapper, reference, bitmask) {
	  var source = (reference + '');
	  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	}
	
	module.exports = setWrapToString;


/***/ },
/* 176 */
/***/ function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;
	
	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;
	
	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);
	
	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}
	
	module.exports = shortOut;


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(450);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (string.charCodeAt(0) === 46 /* . */) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, subString) {
	    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ },
/* 178 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ },
/* 179 */
/***/ function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(376),
	    baseFlatten = __webpack_require__(56),
	    baseRest = __webpack_require__(59),
	    isArrayLikeObject = __webpack_require__(115),
	    last = __webpack_require__(118);
	
	/**
	 * This method is like `_.difference` except that it accepts `comparator`
	 * which is invoked to compare elements of `array` to `values`. The order and
	 * references of result values are determined by the first array. The comparator
	 * is invoked with two arguments: (arrVal, othVal).
	 *
	 * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 * @example
	 *
	 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	 *
	 * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	 * // => [{ 'x': 2, 'y': 1 }]
	 */
	var differenceWith = baseRest(function(array, values) {
	  var comparator = last(values);
	  if (isArrayLikeObject(comparator)) {
	    comparator = undefined;
	  }
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	    : [];
	});
	
	module.exports = differenceWith;


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(86),
	    baseFilter = __webpack_require__(143),
	    baseIteratee = __webpack_require__(7),
	    isArray = __webpack_require__(3);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(56);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(65),
	    func = convert('setWith', __webpack_require__(507));
	
	func.placeholder = __webpack_require__(38);
	module.exports = func;


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(380),
	    hasPath = __webpack_require__(166);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var numberTag = '[object Number]';
	
	/**
	 * Checks if `value` is classified as a `Number` primitive or object.
	 *
	 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	 * classified as numbers, use the `_.isFinite` method.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	 * @example
	 *
	 * _.isNumber(3);
	 * // => true
	 *
	 * _.isNumber(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isNumber(Infinity);
	 * // => true
	 *
	 * _.isNumber('3');
	 * // => false
	 */
	function isNumber(value) {
	  return typeof value == 'number' ||
	    (isObjectLike(value) && baseGetTag(value) == numberTag);
	}
	
	module.exports = isNumber;


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(92),
	    createAssigner = __webpack_require__(99);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ },
/* 187 */
/***/ function(module, exports) {

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that negates the result of the predicate `func`. The
	 * `func` predicate is invoked with the `this` binding and arguments of the
	 * created function.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {Function} predicate The predicate to negate.
	 * @returns {Function} Returns the new negated function.
	 * @example
	 *
	 * function isEven(n) {
	 *   return n % 2 == 0;
	 * }
	 *
	 * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	 * // => [1, 3, 5]
	 */
	function negate(predicate) {
	  if (typeof predicate != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  return function() {
	    var args = arguments;
	    switch (args.length) {
	      case 0: return !predicate.call(this);
	      case 1: return !predicate.call(this, args[0]);
	      case 2: return !predicate.call(this, args[0], args[1]);
	      case 3: return !predicate.call(this, args[0], args[1], args[2]);
	    }
	    return !predicate.apply(this, args);
	  };
	}
	
	module.exports = negate;


/***/ },
/* 188 */
/***/ function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ },
/* 189 */
/***/ function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(509);
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;
	
	  return result === result ? (remainder ? result - remainder : result) : 0;
	}
	
	module.exports = toInteger;


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var baseUnset = __webpack_require__(95);
	
	/**
	 * Removes the property at `path` of `object`.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	 * _.unset(object, 'a[0].b.c');
	 * // => true
	 *
	 * console.log(object);
	 * // => { 'a': [{ 'b': {} }] };
	 *
	 * _.unset(object, ['a', '0', 'b', 'c']);
	 * // => true
	 *
	 * console.log(object);
	 * // => { 'a': [{ 'b': {} }] };
	 */
	function unset(object, path) {
	  return object == null ? true : baseUnset(object, path);
	}
	
	module.exports = unset;


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            ss : '%d sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });
	
	    return af;
	
	})));


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arDz = moment.defineLocale('ar-dz', {
	        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return arDz;
	
	})));


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arKw = moment.defineLocale('ar-kw', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return arKw;
	
	})));


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '1',
	        '2': '2',
	        '3': '3',
	        '4': '4',
	        '5': '5',
	        '6': '6',
	        '7': '7',
	        '8': '8',
	        '9': '9',
	        '0': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'يناير',
	        'فبراير',
	        'مارس',
	        'أبريل',
	        'مايو',
	        'يونيو',
	        'يوليو',
	        'أغسطس',
	        'سبتمبر',
	        'أكتوبر',
	        'نوفمبر',
	        'ديسمبر'
	    ];
	
	    var arLy = moment.defineLocale('ar-ly', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            ss : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return arLy;
	
	})));


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arMa = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return arMa;
	
	})));


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };
	
	    var arSa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return arSa;
	
	})));


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arTn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            ss : '%d ثانية',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return arTn;
	
	})));


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'يناير',
	        'فبراير',
	        'مارس',
	        'أبريل',
	        'مايو',
	        'يونيو',
	        'يوليو',
	        'أغسطس',
	        'سبتمبر',
	        'أكتوبر',
	        'نوفمبر',
	        'ديسمبر'
	    ];
	
	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            ss : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return ar;
	
	})));


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };
	
	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyə',
	            ss : '%d saniyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return az;
	
	})));


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	
	    var be = moment.defineLocale('be', {
	        months : {
	            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	        },
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : {
	            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
	        },
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[У мінулую] dddd [ў] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	                case 'D':
	                    return number + '-га';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return be;
	
	})));


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[В изминалата] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            ss : '%d секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return bg;
	
	})));


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var bm = moment.defineLocale('bm', {
	        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
	        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
	        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
	        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
	        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'MMMM [tile] D [san] YYYY',
	            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
	            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
	        },
	        calendar : {
	            sameDay : '[Bi lɛrɛ] LT',
	            nextDay : '[Sini lɛrɛ] LT',
	            nextWeek : 'dddd [don lɛrɛ] LT',
	            lastDay : '[Kunu lɛrɛ] LT',
	            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s kɔnɔ',
	            past : 'a bɛ %s bɔ',
	            s : 'sanga dama dama',
	            ss : 'sekondi %d',
	            m : 'miniti kelen',
	            mm : 'miniti %d',
	            h : 'lɛrɛ kelen',
	            hh : 'lɛrɛ %d',
	            d : 'tile kelen',
	            dd : 'tile %d',
	            M : 'kalo kelen',
	            MM : 'kalo %d',
	            y : 'san kelen',
	            yy : 'san %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return bm;
	
	})));


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };
	
	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
	        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কয়েক সেকেন্ড',
	            ss : '%d সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'রাত' && hour >= 4) ||
	                    (meridiem === 'দুপুর' && hour < 5) ||
	                    meridiem === 'বিকাল') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকাল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return bn;
	
	})));


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };
	
	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            ss : '%d སྐར་ཆ།',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                    meridiem === 'དགོང་དག') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return bo;
	
	})));


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	            case 1:
	            case 3:
	            case 4:
	            case 5:
	            case 9:
	                return number + ' bloaz';
	            default:
	                return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }
	
	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            ss : '%d eilenn',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return br;
	
	})));


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'ss':
	                if (number === 1) {
	                    result += 'sekunda';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sekunde';
	                } else {
	                    result += 'sekundi';
	                }
	                return result;
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }
	
	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            ss     : translate,
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return bs;
	
	})));


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ca = moment.defineLocale('ca', {
	        months : {
	            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
	            isFormat: /D[oD]?(\s)+MMMM/
	        },
	        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [de] YYYY',
	            ll : 'D MMM YYYY',
	            LLL : 'D MMMM [de] YYYY [a les] H:mm',
	            lll : 'D MMM YYYY, H:mm',
	            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
	            llll : 'ddd D MMM YYYY, H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'd\'aquí %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            ss : '%d segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ca;
	
	})));


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	
	    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];
	    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
	    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
	    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;
	
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':  // a few seconds / in a few seconds / a few seconds ago
	                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'sekundy' : 'sekund');
	                } else {
	                    return result + 'sekundami';
	                }
	                break;
	            case 'm':  // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minuty' : 'minut');
	                } else {
	                    return result + 'minutami';
	                }
	                break;
	            case 'h':  // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	            case 'hh': // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodin');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':  // a day / in a day / a day ago
	                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	            case 'dd': // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dny' : 'dní');
	                } else {
	                    return result + 'dny';
	                }
	                break;
	            case 'M':  // a month / in a month / a month ago
	                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	            case 'MM': // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'měsíce' : 'měsíců');
	                } else {
	                    return result + 'měsíci';
	                }
	                break;
	            case 'y':  // a year / in a year / a year ago
	                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	            case 'yy': // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'let');
	                } else {
	                    return result + 'lety';
	                }
	                break;
	        }
	    }
	
	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsRegex : monthsRegex,
	        monthsShortRegex : monthsRegex,
	        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
	        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
	        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
	        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm',
	            l : 'D. M. YYYY'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[v neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [v] LT';
	                    case 3:
	                        return '[ve středu v] LT';
	                    case 4:
	                        return '[ve čtvrtek v] LT';
	                    case 5:
	                        return '[v pátek v] LT';
	                    case 6:
	                        return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulou neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[minulé] dddd [v] LT';
	                    case 3:
	                        return '[minulou středu v] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [v] LT';
	                    case 6:
	                        return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return cs;
	
	})));


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            ss : '%d ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return cv;
	
	})));


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            ss: '%d eiliad',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return cy;
	
	})));


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay : '[i dag kl.] LT',
	            nextDay : '[i morgen kl.] LT',
	            nextWeek : 'på dddd [kl.] LT',
	            lastDay : '[i går kl.] LT',
	            lastWeek : '[i] dddd[s kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            ss : '%d sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return da;
	
	})));


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var deAt = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            ss : '%d Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return deAt;
	
	})));


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var deCh = moment.defineLocale('de-ch', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            ss : '%d Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return deCh;
	
	})));


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            ss : '%d Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return de;
	
	})));


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'ޖެނުއަރީ',
	        'ފެބްރުއަރީ',
	        'މާރިޗު',
	        'އޭޕްރީލު',
	        'މޭ',
	        'ޖޫން',
	        'ޖުލައި',
	        'އޯގަސްޓު',
	        'ސެޕްޓެމްބަރު',
	        'އޮކްޓޯބަރު',
	        'ނޮވެމްބަރު',
	        'ޑިސެމްބަރު'
	    ], weekdays = [
	        'އާދިއްތަ',
	        'ހޯމަ',
	        'އަންގާރަ',
	        'ބުދަ',
	        'ބުރާސްފަތި',
	        'ހުކުރު',
	        'ހޮނިހިރު'
	    ];
	
	    var dv = moment.defineLocale('dv', {
	        months : months,
	        monthsShort : months,
	        weekdays : weekdays,
	        weekdaysShort : weekdays,
	        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	        longDateFormat : {
	
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/M/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /މކ|މފ/,
	        isPM : function (input) {
	            return 'މފ' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'މކ';
	            } else {
	                return 'މފ';
	            }
	        },
	        calendar : {
	            sameDay : '[މިއަދު] LT',
	            nextDay : '[މާދަމާ] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[އިއްޔެ] LT',
	            lastWeek : '[ފާއިތުވި] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ތެރޭގައި %s',
	            past : 'ކުރިން %s',
	            s : 'ސިކުންތުކޮޅެއް',
	            ss : 'd% ސިކުންތު',
	            m : 'މިނިޓެއް',
	            mm : 'މިނިޓު %d',
	            h : 'ގަޑިއިރެއް',
	            hh : 'ގަޑިއިރު %d',
	            d : 'ދުވަހެއް',
	            dd : 'ދުވަސް %d',
	            M : 'މަހެއް',
	            MM : 'މަސް %d',
	            y : 'އަހަރެއް',
	            yy : 'އަހަރު %d'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 7,  // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return dv;
	
	})));


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }
	
	
	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (!momentToFormat) {
	                return this._monthsNominativeEl;
	            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (isFunction(output)) {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            ss : '%d δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });
	
	    return el;
	
	})));


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enSG = moment.defineLocale('en-SG', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enSG;
	
	})));


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enAu = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enAu;
	
	})));


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enCa = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY h:mm A',
	            LLLL : 'dddd, MMMM D, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    return enCa;
	
	})));


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enGb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enGb;
	
	})));


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enIe = moment.defineLocale('en-ie', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enIe;
	
	})));


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enIl = moment.defineLocale('en-il', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    return enIl;
	
	})));


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enNz = moment.defineLocale('en-nz', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enNz;
	
	})));


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
	        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-a de] MMMM, YYYY',
	            LLL : 'D[-a de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'post %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            ss : '%d sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return eo;
	
	})));


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	    var esDo = moment.defineLocale('es-do', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortDot;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	        monthsParse: monthsParse,
	        longMonthsParse: monthsParse,
	        shortMonthsParse: monthsParse,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY h:mm A',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return esDo;
	
	})));


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	    var esUs = moment.defineLocale('es-us', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortDot;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	        monthsParse: monthsParse,
	        longMonthsParse: monthsParse,
	        shortMonthsParse: monthsParse,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'MM/DD/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY h:mm A',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return esUs;
	
	})));


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	    var es = moment.defineLocale('es', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortDot;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsRegex : monthsRegex,
	        monthsShortRegex : monthsRegex,
	        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return es;
	
	})));


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'ss': [number + 'sekundi', number + 'sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }
	
	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            ss     : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return et;
	
	})));


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            ss : '%d segundo',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return eu;
	
	})));


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };
	
	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چند ثانیه',
	            ss : 'ثانیه d%',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return fa;
	
	})));


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	            case 's':
	                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	            case 'ss':
	                return isFuture ? 'sekunnin' : 'sekuntia';
	            case 'm':
	                return isFuture ? 'minuutin' : 'minuutti';
	            case 'mm':
	                result = isFuture ? 'minuutin' : 'minuuttia';
	                break;
	            case 'h':
	                return isFuture ? 'tunnin' : 'tunti';
	            case 'hh':
	                result = isFuture ? 'tunnin' : 'tuntia';
	                break;
	            case 'd':
	                return isFuture ? 'päivän' : 'päivä';
	            case 'dd':
	                result = isFuture ? 'päivän' : 'päivää';
	                break;
	            case 'M':
	                return isFuture ? 'kuukauden' : 'kuukausi';
	            case 'MM':
	                result = isFuture ? 'kuukauden' : 'kuukautta';
	                break;
	            case 'y':
	                return isFuture ? 'vuoden' : 'vuosi';
	            case 'yy':
	                result = isFuture ? 'vuoden' : 'vuotta';
	                break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }
	
	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fi;
	
	})));


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            ss : '%d sekundir',
	            m : 'ein minuttur',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaður',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fo;
	
	})));


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var frCa = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Aujourd’hui à] LT',
	            nextDay : '[Demain à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[Hier à] LT',
	            lastWeek : 'dddd [dernier à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            ss : '%d secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // Words with masculine grammatical gender: mois, trimestre, jour
	                default:
	                case 'M':
	                case 'Q':
	                case 'D':
	                case 'DDD':
	                case 'd':
	                    return number + (number === 1 ? 'er' : 'e');
	
	                // Words with feminine grammatical gender: semaine
	                case 'w':
	                case 'W':
	                    return number + (number === 1 ? 're' : 'e');
	            }
	        }
	    });
	
	    return frCa;
	
	})));


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var frCh = moment.defineLocale('fr-ch', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Aujourd’hui à] LT',
	            nextDay : '[Demain à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[Hier à] LT',
	            lastWeek : 'dddd [dernier à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            ss : '%d secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // Words with masculine grammatical gender: mois, trimestre, jour
	                default:
	                case 'M':
	                case 'Q':
	                case 'D':
	                case 'DDD':
	                case 'd':
	                    return number + (number === 1 ? 'er' : 'e');
	
	                // Words with feminine grammatical gender: semaine
	                case 'w':
	                case 'W':
	                    return number + (number === 1 ? 're' : 'e');
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return frCh;
	
	})));


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Aujourd’hui à] LT',
	            nextDay : '[Demain à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[Hier à] LT',
	            lastWeek : 'dddd [dernier à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            ss : '%d secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // TODO: Return 'e' when day of month > 1. Move this case inside
	                // block for masculine words below.
	                // See https://github.com/moment/moment/issues/3375
	                case 'D':
	                    return number + (number === 1 ? 'er' : '');
	
	                // Words with masculine grammatical gender: mois, trimestre, jour
	                default:
	                case 'M':
	                case 'Q':
	                case 'DDD':
	                case 'd':
	                    return number + (number === 1 ? 'er' : 'e');
	
	                // Words with feminine grammatical gender: semaine
	                case 'w':
	                case 'W':
	                    return number + (number === 1 ? 're' : 'e');
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fr;
	
	})));


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
	
	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortWithDots;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            ss : '%d sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fy;
	
	})));


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	
	    var months = [
	        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'
	    ];
	
	    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];
	
	    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];
	
	    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];
	
	    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];
	
	    var ga = moment.defineLocale('ga', {
	        months: months,
	        monthsShort: monthsShort,
	        monthsParseExact: true,
	        weekdays: weekdays,
	        weekdaysShort: weekdaysShort,
	        weekdaysMin: weekdaysMin,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Inniu ag] LT',
	            nextDay: '[Amárach ag] LT',
	            nextWeek: 'dddd [ag] LT',
	            lastDay: '[Inné aig] LT',
	            lastWeek: 'dddd [seo caite] [ag] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'i %s',
	            past: '%s ó shin',
	            s: 'cúpla soicind',
	            ss: '%d soicind',
	            m: 'nóiméad',
	            mm: '%d nóiméad',
	            h: 'uair an chloig',
	            hh: '%d uair an chloig',
	            d: 'lá',
	            dd: '%d lá',
	            M: 'mí',
	            MM: '%d mí',
	            y: 'bliain',
	            yy: '%d bliain'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
	        ordinal: function (number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ga;
	
	})));


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	    ];
	
	    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];
	
	    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];
	
	    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];
	
	    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];
	
	    var gd = moment.defineLocale('gd', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParseExact : true,
	        weekdays : weekdays,
	        weekdaysShort : weekdaysShort,
	        weekdaysMin : weekdaysMin,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[An-diugh aig] LT',
	            nextDay : '[A-màireach aig] LT',
	            nextWeek : 'dddd [aig] LT',
	            lastDay : '[An-dè aig] LT',
	            lastWeek : 'dddd [seo chaidh] [aig] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ann an %s',
	            past : 'bho chionn %s',
	            s : 'beagan diogan',
	            ss : '%d diogan',
	            m : 'mionaid',
	            mm : '%d mionaidean',
	            h : 'uair',
	            hh : '%d uairean',
	            d : 'latha',
	            dd : '%d latha',
	            M : 'mìos',
	            MM : '%d mìosan',
	            y : 'bliadhna',
	            yy : '%d bliadhna'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
	        ordinal : function (number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return gd;
	
	})));


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var gl = moment.defineLocale('gl', {
	        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
	        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str.indexOf('un') === 0) {
	                    return 'n' + str;
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return gl;
	
	})));


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['thodde secondanim', 'thodde second'],
	            'ss': [number + ' secondanim', number + ' second'],
	            'm': ['eka mintan', 'ek minute'],
	            'mm': [number + ' mintanim', number + ' mintam'],
	            'h': ['eka voran', 'ek vor'],
	            'hh': [number + ' voranim', number + ' voram'],
	            'd': ['eka disan', 'ek dis'],
	            'dd': [number + ' disanim', number + ' dis'],
	            'M': ['eka mhoinean', 'ek mhoino'],
	            'MM': [number + ' mhoineanim', number + ' mhoine'],
	            'y': ['eka vorsan', 'ek voros'],
	            'yy': [number + ' vorsanim', number + ' vorsam']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var gomLatn = moment.defineLocale('gom-latn', {
	        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
	        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
	        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
	        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'A h:mm [vazta]',
	            LTS : 'A h:mm:ss [vazta]',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY A h:mm [vazta]',
	            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
	            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
	        },
	        calendar : {
	            sameDay: '[Aiz] LT',
	            nextDay: '[Faleam] LT',
	            nextWeek: '[Ieta to] dddd[,] LT',
	            lastDay: '[Kal] LT',
	            lastWeek: '[Fatlo] dddd[,] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s',
	            past : '%s adim',
	            s : processRelativeTime,
	            ss : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // the ordinal 'er' only applies to day of the month
	                case 'D':
	                    return number + 'er';
	                default:
	                case 'M':
	                case 'Q':
	                case 'DDD':
	                case 'd':
	                case 'w':
	                case 'W':
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        },
	        meridiemParse: /rati|sokalli|donparam|sanje/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'rati') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'sokalli') {
	                return hour;
	            } else if (meridiem === 'donparam') {
	                return hour > 12 ? hour : hour + 12;
	            } else if (meridiem === 'sanje') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'rati';
	            } else if (hour < 12) {
	                return 'sokalli';
	            } else if (hour < 16) {
	                return 'donparam';
	            } else if (hour < 20) {
	                return 'sanje';
	            } else {
	                return 'rati';
	            }
	        }
	    });
	
	    return gomLatn;
	
	})));


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	            '1': '૧',
	            '2': '૨',
	            '3': '૩',
	            '4': '૪',
	            '5': '૫',
	            '6': '૬',
	            '7': '૭',
	            '8': '૮',
	            '9': '૯',
	            '0': '૦'
	        },
	        numberMap = {
	            '૧': '1',
	            '૨': '2',
	            '૩': '3',
	            '૪': '4',
	            '૫': '5',
	            '૬': '6',
	            '૭': '7',
	            '૮': '8',
	            '૯': '9',
	            '૦': '0'
	        };
	
	    var gu = moment.defineLocale('gu', {
	        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
	        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
	        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
	        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm વાગ્યે',
	            LTS: 'A h:mm:ss વાગ્યે',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
	        },
	        calendar: {
	            sameDay: '[આજ] LT',
	            nextDay: '[કાલે] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[ગઇકાલે] LT',
	            lastWeek: '[પાછલા] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s મા',
	            past: '%s પેહલા',
	            s: 'અમુક પળો',
	            ss: '%d સેકંડ',
	            m: 'એક મિનિટ',
	            mm: '%d મિનિટ',
	            h: 'એક કલાક',
	            hh: '%d કલાક',
	            d: 'એક દિવસ',
	            dd: '%d દિવસ',
	            M: 'એક મહિનો',
	            MM: '%d મહિનો',
	            y: 'એક વર્ષ',
	            yy: '%d વર્ષ'
	        },
	        preparse: function (string) {
	            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
	        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'રાત') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'સવાર') {
	                return hour;
	            } else if (meridiem === 'બપોર') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'સાંજ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'રાત';
	            } else if (hour < 10) {
	                return 'સવાર';
	            } else if (hour < 17) {
	                return 'બપોર';
	            } else if (hour < 20) {
	                return 'સાંજ';
	            } else {
	                return 'રાત';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return gu;
	
	})));


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            ss : '%d שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        },
	        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	        isPM : function (input) {
	            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 5) {
	                return 'לפנות בוקר';
	            } else if (hour < 10) {
	                return 'בבוקר';
	            } else if (hour < 12) {
	                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	            } else if (hour < 18) {
	                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	            } else {
	                return 'בערב';
	            }
	        }
	    });
	
	    return he;
	
	})));


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            ss : '%d सेकंड',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return hi;
	
	})));


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'ss':
	                if (number === 1) {
	                    result += 'sekunda';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sekunde';
	                } else {
	                    result += 'sekundi';
	                }
	                return result;
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }
	
	    var hr = moment.defineLocale('hr', {
	        months : {
	            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	        },
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            ss     : translate,
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return hr;
	
	})));


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number;
	        switch (key) {
	            case 's':
	                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	            case 'ss':
	                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
	            case 'm':
	                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'mm':
	                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'h':
	                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'hh':
	                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'd':
	                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'dd':
	                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'M':
	                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'MM':
	                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'y':
	                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	            case 'yy':
	                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }
	
	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return hu;
	
	})));


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var hyAm = moment.defineLocale('hy-am', {
	        months : {
	            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	        },
	        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            ss : '%d վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'DDD':
	                case 'w':
	                case 'W':
	                case 'DDDo':
	                    if (number === 1) {
	                        return number + '-ին';
	                    }
	                    return number + '-րդ';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return hyAm;
	
	})));


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            ss : '%d detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return id;
	
	})));


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	            case 'ss':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
	                }
	                return result + 'sekúnda';
	            case 'm':
	                return withoutSuffix ? 'mínúta' : 'mínútu';
	            case 'mm':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	                } else if (withoutSuffix) {
	                    return result + 'mínúta';
	                }
	                return result + 'mínútu';
	            case 'hh':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	                }
	                return result + 'klukkustund';
	            case 'd':
	                if (withoutSuffix) {
	                    return 'dagur';
	                }
	                return isFuture ? 'dag' : 'degi';
	            case 'dd':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'dagar';
	                    }
	                    return result + (isFuture ? 'daga' : 'dögum');
	                } else if (withoutSuffix) {
	                    return result + 'dagur';
	                }
	                return result + (isFuture ? 'dag' : 'degi');
	            case 'M':
	                if (withoutSuffix) {
	                    return 'mánuður';
	                }
	                return isFuture ? 'mánuð' : 'mánuði';
	            case 'MM':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'mánuðir';
	                    }
	                    return result + (isFuture ? 'mánuði' : 'mánuðum');
	                } else if (withoutSuffix) {
	                    return result + 'mánuður';
	                }
	                return result + (isFuture ? 'mánuð' : 'mánuði');
	            case 'y':
	                return withoutSuffix || isFuture ? 'ár' : 'ári';
	            case 'yy':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	                }
	                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }
	
	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return is;
	
	})));


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var itCh = moment.defineLocale('it-ch', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
	        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
	        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            ss : '%d secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return itCh;
	
	})));


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
	        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
	        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            ss : '%d secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return it;
	
	})));


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ja = moment.defineLocale('ja', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日 HH:mm',
	            LLLL : 'YYYY年M月D日 dddd HH:mm',
	            l : 'YYYY/MM/DD',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日(ddd) HH:mm'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : function (now) {
	                if (now.week() < this.week()) {
	                    return '[来週]dddd LT';
	                } else {
	                    return 'dddd LT';
	                }
	            },
	            lastDay : '[昨日] LT',
	            lastWeek : function (now) {
	                if (this.week() < now.week()) {
	                    return '[先週]dddd LT';
	                } else {
	                    return 'dddd LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}日/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                default:
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            ss : '%d秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });
	
	    return ja;
	
	})));


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            ss : '%d detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return jv;
	
	})));


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ka = moment.defineLocale('ka', {
	        months : {
	            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : {
	            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	            isFormat: /(წინა|შემდეგ)/
	        },
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            ss : '%d წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });
	
	    return ka;
	
	})));


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-ші',
	        1: '-ші',
	        2: '-ші',
	        3: '-ші',
	        4: '-ші',
	        5: '-ші',
	        6: '-шы',
	        7: '-ші',
	        8: '-ші',
	        9: '-шы',
	        10: '-шы',
	        20: '-шы',
	        30: '-шы',
	        40: '-шы',
	        50: '-ші',
	        60: '-шы',
	        70: '-ші',
	        80: '-ші',
	        90: '-шы',
	        100: '-ші'
	    };
	
	    var kk = moment.defineLocale('kk', {
	        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгін сағат] LT',
	            nextDay : '[Ертең сағат] LT',
	            nextWeek : 'dddd [сағат] LT',
	            lastDay : '[Кеше сағат] LT',
	            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ішінде',
	            past : '%s бұрын',
	            s : 'бірнеше секунд',
	            ss : '%d секунд',
	            m : 'бір минут',
	            mm : '%d минут',
	            h : 'бір сағат',
	            hh : '%d сағат',
	            d : 'бір күн',
	            dd : '%d күн',
	            M : 'бір ай',
	            MM : '%d ай',
	            y : 'бір жыл',
	            yy : '%d жыл'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return kk;
	
	})));


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '១',
	        '2': '២',
	        '3': '៣',
	        '4': '៤',
	        '5': '៥',
	        '6': '៦',
	        '7': '៧',
	        '8': '៨',
	        '9': '៩',
	        '0': '០'
	    }, numberMap = {
	        '១': '1',
	        '២': '2',
	        '៣': '3',
	        '៤': '4',
	        '៥': '5',
	        '៦': '6',
	        '៧': '7',
	        '៨': '8',
	        '៩': '9',
	        '០': '0'
	    };
	
	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
	            '_'
	        ),
	        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
	            '_'
	        ),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
	        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ព្រឹក|ល្ងាច/,
	        isPM: function (input) {
	            return input === 'ល្ងាច';
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ព្រឹក';
	            } else {
	                return 'ល្ងាច';
	            }
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            ss: '%d វិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
	        ordinal : 'ទី%d',
	        preparse: function (string) {
	            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return km;
	
	})));


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '೧',
	        '2': '೨',
	        '3': '೩',
	        '4': '೪',
	        '5': '೫',
	        '6': '೬',
	        '7': '೭',
	        '8': '೮',
	        '9': '೯',
	        '0': '೦'
	    },
	    numberMap = {
	        '೧': '1',
	        '೨': '2',
	        '೩': '3',
	        '೪': '4',
	        '೫': '5',
	        '೬': '6',
	        '೭': '7',
	        '೮': '8',
	        '೯': '9',
	        '೦': '0'
	    };
	
	    var kn = moment.defineLocale('kn', {
	        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
	        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
	        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
	        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[ಇಂದು] LT',
	            nextDay : '[ನಾಳೆ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ನಿನ್ನೆ] LT',
	            lastWeek : '[ಕೊನೆಯ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ನಂತರ',
	            past : '%s ಹಿಂದೆ',
	            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
	            ss : '%d ಸೆಕೆಂಡುಗಳು',
	            m : 'ಒಂದು ನಿಮಿಷ',
	            mm : '%d ನಿಮಿಷ',
	            h : 'ಒಂದು ಗಂಟೆ',
	            hh : '%d ಗಂಟೆ',
	            d : 'ಒಂದು ದಿನ',
	            dd : '%d ದಿನ',
	            M : 'ಒಂದು ತಿಂಗಳು',
	            MM : '%d ತಿಂಗಳು',
	            y : 'ಒಂದು ವರ್ಷ',
	            yy : '%d ವರ್ಷ'
	        },
	        preparse: function (string) {
	            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ರಾತ್ರಿ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
	                return hour;
	            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ಸಂಜೆ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ರಾತ್ರಿ';
	            } else if (hour < 10) {
	                return 'ಬೆಳಿಗ್ಗೆ';
	            } else if (hour < 17) {
	                return 'ಮಧ್ಯಾಹ್ನ';
	            } else if (hour < 20) {
	                return 'ಸಂಜೆ';
	            } else {
	                return 'ರಾತ್ರಿ';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
	        ordinal : function (number) {
	            return number + 'ನೇ';
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return kn;
	
	})));


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h:mm',
	            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
	            l : 'YYYY.MM.DD.',
	            ll : 'YYYY년 MMMM D일',
	            lll : 'YYYY년 MMMM D일 A h:mm',
	            llll : 'YYYY년 MMMM D일 dddd A h:mm'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇 초',
	            ss : '%d초',
	            m : '1분',
	            mm : '%d분',
	            h : '한 시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한 달',
	            MM : '%d달',
	            y : '일 년',
	            yy : '%d년'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '일';
	                case 'M':
	                    return number + '월';
	                case 'w':
	                case 'W':
	                    return number + '주';
	                default:
	                    return number;
	            }
	        },
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });
	
	    return ko;
	
	})));


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    },
	    months = [
	        'کانونی دووەم',
	        'شوبات',
	        'ئازار',
	        'نیسان',
	        'ئایار',
	        'حوزەیران',
	        'تەمموز',
	        'ئاب',
	        'ئەیلوول',
	        'تشرینی یەكەم',
	        'تشرینی دووەم',
	        'كانونی یەکەم'
	    ];
	
	
	    var ku = moment.defineLocale('ku', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),
	        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ئێواره‌|به‌یانی/,
	        isPM: function (input) {
	            return /ئێواره‌/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'به‌یانی';
	            } else {
	                return 'ئێواره‌';
	            }
	        },
	        calendar : {
	            sameDay : '[ئه‌مرۆ كاتژمێر] LT',
	            nextDay : '[به‌یانی كاتژمێر] LT',
	            nextWeek : 'dddd [كاتژمێر] LT',
	            lastDay : '[دوێنێ كاتژمێر] LT',
	            lastWeek : 'dddd [كاتژمێر] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'له‌ %s',
	            past : '%s',
	            s : 'چه‌ند چركه‌یه‌ك',
	            ss : 'چركه‌ %d',
	            m : 'یه‌ك خوله‌ك',
	            mm : '%d خوله‌ك',
	            h : 'یه‌ك كاتژمێر',
	            hh : '%d كاتژمێر',
	            d : 'یه‌ك ڕۆژ',
	            dd : '%d ڕۆژ',
	            M : 'یه‌ك مانگ',
	            MM : '%d مانگ',
	            y : 'یه‌ك ساڵ',
	            yy : '%d ساڵ'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return ku;
	
	})));


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-чү',
	        1: '-чи',
	        2: '-чи',
	        3: '-чү',
	        4: '-чү',
	        5: '-чи',
	        6: '-чы',
	        7: '-чи',
	        8: '-чи',
	        9: '-чу',
	        10: '-чу',
	        20: '-чы',
	        30: '-чу',
	        40: '-чы',
	        50: '-чү',
	        60: '-чы',
	        70: '-чи',
	        80: '-чи',
	        90: '-чу',
	        100: '-чү'
	    };
	
	    var ky = moment.defineLocale('ky', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгүн саат] LT',
	            nextDay : '[Эртең саат] LT',
	            nextWeek : 'dddd [саат] LT',
	            lastDay : '[Кечээ саат] LT',
	            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ичинде',
	            past : '%s мурун',
	            s : 'бирнече секунд',
	            ss : '%d секунд',
	            m : 'бир мүнөт',
	            mm : '%d мүнөт',
	            h : 'бир саат',
	            hh : '%d саат',
	            d : 'бир күн',
	            dd : '%d күн',
	            M : 'бир ай',
	            MM : '%d ай',
	            y : 'бир жыл',
	            yy : '%d жыл'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return ky;
	
	})));


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }
	
	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            ss : '%d Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lb;
	
	})));


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var lo = moment.defineLocale('lo', {
	        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	        isPM: function (input) {
	            return input === 'ຕອນແລງ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ຕອນເຊົ້າ';
	            } else {
	                return 'ຕອນແລງ';
	            }
	        },
	        calendar : {
	            sameDay : '[ມື້ນີ້ເວລາ] LT',
	            nextDay : '[ມື້ອື່ນເວລາ] LT',
	            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ອີກ %s',
	            past : '%sຜ່ານມາ',
	            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	            ss : '%d ວິນາທີ' ,
	            m : '1 ນາທີ',
	            mm : '%d ນາທີ',
	            h : '1 ຊົ່ວໂມງ',
	            hh : '%d ຊົ່ວໂມງ',
	            d : '1 ມື້',
	            dd : '%d ມື້',
	            M : '1 ເດືອນ',
	            MM : '%d ເດືອນ',
	            y : '1 ປີ',
	            yy : '%d ປີ'
	        },
	        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
	        ordinal : function (number) {
	            return 'ທີ່' + number;
	        }
	    });
	
	    return lo;
	
	})));


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var units = {
	        'ss' : 'sekundė_sekundžių_sekundes',
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    };
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    var lt = moment.defineLocale('lt', {
	        months : {
	            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
	        },
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : {
	            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	            isFormat: /dddd HH:mm/
	        },
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            ss : translate,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lt;
	
	})));


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var units = {
	        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }
	
	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            ss : relativeTimeWithPlural,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lv;
	
	})));


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            ss: ['sekund', 'sekunda', 'sekundi'],
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var me = moment.defineLocale('me', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',
	
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            ss     : translator.translate,
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return me;
	
	})));


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var mi = moment.defineLocale('mi', {
	        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
	        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
	        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
	        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
	        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [i] HH:mm',
	            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
	        },
	        calendar: {
	            sameDay: '[i teie mahana, i] LT',
	            nextDay: '[apopo i] LT',
	            nextWeek: 'dddd [i] LT',
	            lastDay: '[inanahi i] LT',
	            lastWeek: 'dddd [whakamutunga i] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'i roto i %s',
	            past: '%s i mua',
	            s: 'te hēkona ruarua',
	            ss: '%d hēkona',
	            m: 'he meneti',
	            mm: '%d meneti',
	            h: 'te haora',
	            hh: '%d haora',
	            d: 'he ra',
	            dd: '%d ra',
	            M: 'he marama',
	            MM: '%d marama',
	            y: 'he tau',
	            yy: '%d tau'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return mi;
	
	})));


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : '[Во] dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[Изминатата] dddd [во] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[Изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            ss : '%d секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return mk;
	
	})));


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            ss : '%d സെക്കൻഡ്',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                    meridiem === 'വൈകുന്നേരം') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });
	
	    return ml;
	
	})));


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key, isFuture) {
	        switch (key) {
	            case 's':
	                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
	            case 'ss':
	                return number + (withoutSuffix ? ' секунд' : ' секундын');
	            case 'm':
	            case 'mm':
	                return number + (withoutSuffix ? ' минут' : ' минутын');
	            case 'h':
	            case 'hh':
	                return number + (withoutSuffix ? ' цаг' : ' цагийн');
	            case 'd':
	            case 'dd':
	                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
	            case 'M':
	            case 'MM':
	                return number + (withoutSuffix ? ' сар' : ' сарын');
	            case 'y':
	            case 'yy':
	                return number + (withoutSuffix ? ' жил' : ' жилийн');
	            default:
	                return number;
	        }
	    }
	
	    var mn = moment.defineLocale('mn', {
	        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
	        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
	        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
	        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY оны MMMMын D',
	            LLL : 'YYYY оны MMMMын D HH:mm',
	            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
	        },
	        meridiemParse: /ҮӨ|ҮХ/i,
	        isPM : function (input) {
	            return input === 'ҮХ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ҮӨ';
	            } else {
	                return 'ҮХ';
	            }
	        },
	        calendar : {
	            sameDay : '[Өнөөдөр] LT',
	            nextDay : '[Маргааш] LT',
	            nextWeek : '[Ирэх] dddd LT',
	            lastDay : '[Өчигдөр] LT',
	            lastWeek : '[Өнгөрсөн] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s дараа',
	            past : '%s өмнө',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + ' өдөр';
	                default:
	                    return number;
	            }
	        }
	    });
	
	    return mn;
	
	})));


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    function relativeTimeMr(number, withoutSuffix, string, isFuture)
	    {
	        var output = '';
	        if (withoutSuffix) {
	            switch (string) {
	                case 's': output = 'काही सेकंद'; break;
	                case 'ss': output = '%d सेकंद'; break;
	                case 'm': output = 'एक मिनिट'; break;
	                case 'mm': output = '%d मिनिटे'; break;
	                case 'h': output = 'एक तास'; break;
	                case 'hh': output = '%d तास'; break;
	                case 'd': output = 'एक दिवस'; break;
	                case 'dd': output = '%d दिवस'; break;
	                case 'M': output = 'एक महिना'; break;
	                case 'MM': output = '%d महिने'; break;
	                case 'y': output = 'एक वर्ष'; break;
	                case 'yy': output = '%d वर्षे'; break;
	            }
	        }
	        else {
	            switch (string) {
	                case 's': output = 'काही सेकंदां'; break;
	                case 'ss': output = '%d सेकंदां'; break;
	                case 'm': output = 'एका मिनिटा'; break;
	                case 'mm': output = '%d मिनिटां'; break;
	                case 'h': output = 'एका तासा'; break;
	                case 'hh': output = '%d तासां'; break;
	                case 'd': output = 'एका दिवसा'; break;
	                case 'dd': output = '%d दिवसां'; break;
	                case 'M': output = 'एका महिन्या'; break;
	                case 'MM': output = '%d महिन्यां'; break;
	                case 'y': output = 'एका वर्षा'; break;
	                case 'yy': output = '%d वर्षां'; break;
	            }
	        }
	        return output.replace(/%d/i, number);
	    }
	
	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future: '%sमध्ये',
	            past: '%sपूर्वी',
	            s: relativeTimeMr,
	            ss: relativeTimeMr,
	            m: relativeTimeMr,
	            mm: relativeTimeMr,
	            h: relativeTimeMr,
	            hh: relativeTimeMr,
	            d: relativeTimeMr,
	            dd: relativeTimeMr,
	            M: relativeTimeMr,
	            MM: relativeTimeMr,
	            y: relativeTimeMr,
	            yy: relativeTimeMr
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return mr;
	
	})));


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var msMy = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            ss : '%d saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return msMy;
	
	})));


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            ss : '%d saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return ms;
	
	})));


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var mt = moment.defineLocale('mt', {
	        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
	        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
	        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
	        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
	        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Illum fil-]LT',
	            nextDay : '[Għada fil-]LT',
	            nextWeek : 'dddd [fil-]LT',
	            lastDay : '[Il-bieraħ fil-]LT',
	            lastWeek : 'dddd [li għadda] [fil-]LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'f’ %s',
	            past : '%s ilu',
	            s : 'ftit sekondi',
	            ss : '%d sekondi',
	            m : 'minuta',
	            mm : '%d minuti',
	            h : 'siegħa',
	            hh : '%d siegħat',
	            d : 'ġurnata',
	            dd : '%d ġranet',
	            M : 'xahar',
	            MM : '%d xhur',
	            y : 'sena',
	            yy : '%d sni'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return mt;
	
	})));


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };
	
	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            ss : '%d စက္ကန့်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return my;
	
	})));


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'noen sekunder',
	            ss : '%d sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nb;
	
	})));


/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राति') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राति';
	            } else if (hour < 12) {
	                return 'बिहान';
	            } else if (hour < 16) {
	                return 'दिउँसो';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राति';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोलि] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडि',
	            s : 'केही क्षण',
	            ss : '%d सेकेण्ड',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return ne;
	
	})));


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
	
	    var nlBe = moment.defineLocale('nl-be', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortWithDots;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
	        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
	
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            ss : '%d seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nlBe;
	
	})));


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
	
	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortWithDots;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
	        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
	
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            ss : '%d seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nl;
	
	})));


/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s sidan',
	            s : 'nokre sekund',
	            ss : '%d sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nn;
	
	})));


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '੧',
	        '2': '੨',
	        '3': '੩',
	        '4': '੪',
	        '5': '੫',
	        '6': '੬',
	        '7': '੭',
	        '8': '੮',
	        '9': '੯',
	        '0': '੦'
	    },
	    numberMap = {
	        '੧': '1',
	        '੨': '2',
	        '੩': '3',
	        '੪': '4',
	        '੫': '5',
	        '੬': '6',
	        '੭': '7',
	        '੮': '8',
	        '੯': '9',
	        '੦': '0'
	    };
	
	    var paIn = moment.defineLocale('pa-in', {
	        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
	        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm ਵਜੇ',
	            LTS : 'A h:mm:ss ਵਜੇ',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	        },
	        calendar : {
	            sameDay : '[ਅਜ] LT',
	            nextDay : '[ਕਲ] LT',
	            nextWeek : '[ਅਗਲਾ] dddd, LT',
	            lastDay : '[ਕਲ] LT',
	            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ਵਿੱਚ',
	            past : '%s ਪਿਛਲੇ',
	            s : 'ਕੁਝ ਸਕਿੰਟ',
	            ss : '%d ਸਕਿੰਟ',
	            m : 'ਇਕ ਮਿੰਟ',
	            mm : '%d ਮਿੰਟ',
	            h : 'ਇੱਕ ਘੰਟਾ',
	            hh : '%d ਘੰਟੇ',
	            d : 'ਇੱਕ ਦਿਨ',
	            dd : '%d ਦਿਨ',
	            M : 'ਇੱਕ ਮਹੀਨਾ',
	            MM : '%d ਮਹੀਨੇ',
	            y : 'ਇੱਕ ਸਾਲ',
	            yy : '%d ਸਾਲ'
	        },
	        preparse: function (string) {
	            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ਰਾਤ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ਸਵੇਰ') {
	                return hour;
	            } else if (meridiem === 'ਦੁਪਹਿਰ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ਸ਼ਾਮ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ਰਾਤ';
	            } else if (hour < 10) {
	                return 'ਸਵੇਰ';
	            } else if (hour < 17) {
	                return 'ਦੁਪਹਿਰ';
	            } else if (hour < 20) {
	                return 'ਸ਼ਾਮ';
	            } else {
	                return 'ਰਾਤ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return paIn;
	
	})));


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'ss':
	                return result + (plural(number) ? 'sekundy' : 'sekund');
	            case 'm':
	                return withoutSuffix ? 'minuta' : 'minutę';
	            case 'mm':
	                return result + (plural(number) ? 'minuty' : 'minut');
	            case 'h':
	                return withoutSuffix  ? 'godzina'  : 'godzinę';
	            case 'hh':
	                return result + (plural(number) ? 'godziny' : 'godzin');
	            case 'MM':
	                return result + (plural(number) ? 'miesiące' : 'miesięcy');
	            case 'yy':
	                return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }
	
	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (!momentToFormat) {
	                return monthsNominative;
	            } else if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
	        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[W niedzielę o] LT';
	
	                    case 2:
	                        return '[We wtorek o] LT';
	
	                    case 3:
	                        return '[W środę o] LT';
	
	                    case 6:
	                        return '[W sobotę o] LT';
	
	                    default:
	                        return '[W] dddd [o] LT';
	                }
	            },
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[W zeszłą niedzielę o] LT';
	                    case 3:
	                        return '[W zeszłą środę o] LT';
	                    case 6:
	                        return '[W zeszłą sobotę o] LT';
	                    default:
	                        return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return pl;
	
	})));


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ptBr = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'poucos segundos',
	            ss : '%d segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });
	
	    return ptBr;
	
	})));


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            ss : '%d segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return pt;
	
	})));


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'ss': 'secunde',
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }
	
	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            ss : relativeTimeWithPlural,
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return ro;
	
	})));


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
	
	    // http://new.gramota.ru/spravka/rules/139-prop : § 103
	    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	    var ru = moment.defineLocale('ru', {
	        months : {
	            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	        },
	        monthsShort : {
	            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	        },
	        weekdays : {
	            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	        },
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	
	        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
	        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
	
	        // копия предыдущего
	        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
	
	        // полные названия с падежами
	        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
	
	        // Выражение, которое соотвествует только сокращённым формам
	        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., H:mm',
	            LLLL : 'dddd, D MMMM YYYY г., H:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня, в] LT',
	            nextDay: '[Завтра, в] LT',
	            lastDay: '[Вчера, в] LT',
	            nextWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В следующее] dddd, [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В следующий] dddd, [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В следующую] dddd, [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd, [в] LT';
	                    } else {
	                        return '[В] dddd, [в] LT';
	                    }
	                }
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В прошлое] dddd, [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В прошлый] dddd, [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В прошлую] dddd, [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd, [в] LT';
	                    } else {
	                        return '[В] dddd, [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            ss : relativeTimeWithPlural,
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                case 'w':
	                case 'W':
	                    return number + '-я';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ru;
	
	})));


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'جنوري',
	        'فيبروري',
	        'مارچ',
	        'اپريل',
	        'مئي',
	        'جون',
	        'جولاءِ',
	        'آگسٽ',
	        'سيپٽمبر',
	        'آڪٽوبر',
	        'نومبر',
	        'ڊسمبر'
	    ];
	    var days = [
	        'آچر',
	        'سومر',
	        'اڱارو',
	        'اربع',
	        'خميس',
	        'جمع',
	        'ڇنڇر'
	    ];
	
	    var sd = moment.defineLocale('sd', {
	        months : months,
	        monthsShort : months,
	        weekdays : days,
	        weekdaysShort : days,
	        weekdaysMin : days,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd، D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /صبح|شام/,
	        isPM : function (input) {
	            return 'شام' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'صبح';
	            }
	            return 'شام';
	        },
	        calendar : {
	            sameDay : '[اڄ] LT',
	            nextDay : '[سڀاڻي] LT',
	            nextWeek : 'dddd [اڳين هفتي تي] LT',
	            lastDay : '[ڪالهه] LT',
	            lastWeek : '[گزريل هفتي] dddd [تي] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s پوء',
	            past : '%s اڳ',
	            s : 'چند سيڪنڊ',
	            ss : '%d سيڪنڊ',
	            m : 'هڪ منٽ',
	            mm : '%d منٽ',
	            h : 'هڪ ڪلاڪ',
	            hh : '%d ڪلاڪ',
	            d : 'هڪ ڏينهن',
	            dd : '%d ڏينهن',
	            M : 'هڪ مهينو',
	            MM : '%d مهينا',
	            y : 'هڪ سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sd;
	
	})));


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var se = moment.defineLocale('se', {
	        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'MMMM D. [b.] YYYY',
	            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[otne ti] LT',
	            nextDay: '[ihttin ti] LT',
	            nextWeek: 'dddd [ti] LT',
	            lastDay: '[ikte ti] LT',
	            lastWeek: '[ovddit] dddd [ti] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s geažes',
	            past : 'maŋit %s',
	            s : 'moadde sekunddat',
	            ss: '%d sekunddat',
	            m : 'okta minuhta',
	            mm : '%d minuhtat',
	            h : 'okta diimmu',
	            hh : '%d diimmut',
	            d : 'okta beaivi',
	            dd : '%d beaivvit',
	            M : 'okta mánnu',
	            MM : '%d mánut',
	            y : 'okta jahki',
	            yy : '%d jagit'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return se;
	
	})));


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    /*jshint -W100*/
	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            ss : 'තත්පර %d',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	        isPM : function (input) {
	            return input === 'ප.ව.' || input === 'පස් වරු';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });
	
	    return si;
	
	})));


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':  // a few seconds / in a few seconds / a few seconds ago
	                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
	                } else {
	                    return result + 'sekundami';
	                }
	                break;
	            case 'm':  // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minúty' : 'minút');
	                } else {
	                    return result + 'minútami';
	                }
	                break;
	            case 'h':  // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	            case 'hh': // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodín');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':  // a day / in a day / a day ago
	                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	            case 'dd': // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dni' : 'dní');
	                } else {
	                    return result + 'dňami';
	                }
	                break;
	            case 'M':  // a month / in a month / a month ago
	                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	            case 'MM': // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
	                } else {
	                    return result + 'mesiacmi';
	                }
	                break;
	            case 'y':  // a year / in a year / a year ago
	                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	            case 'yy': // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'rokov');
	                } else {
	                    return result + 'rokmi';
	                }
	                break;
	        }
	    }
	
	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[v nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [o] LT';
	                    case 3:
	                        return '[v stredu o] LT';
	                    case 4:
	                        return '[vo štvrtok o] LT';
	                    case 5:
	                        return '[v piatok o] LT';
	                    case 6:
	                        return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulú nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[minulý] dddd [o] LT';
	                    case 3:
	                        return '[minulú stredu o] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [o] LT';
	                    case 6:
	                        return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sk;
	
	})));


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	            case 'ss':
	                if (number === 1) {
	                    result += withoutSuffix ? 'sekundo' : 'sekundi';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
	                } else {
	                    result += 'sekund';
	                }
	                return result;
	            case 'm':
	                return withoutSuffix ? 'ena minuta' : 'eno minuto';
	            case 'mm':
	                if (number === 1) {
	                    result += withoutSuffix ? 'minuta' : 'minuto';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	                } else {
	                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'ena ura' : 'eno uro';
	            case 'hh':
	                if (number === 1) {
	                    result += withoutSuffix ? 'ura' : 'uro';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
	                } else {
	                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
	                }
	                return result;
	            case 'd':
	                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	            case 'dd':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	                } else {
	                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	                }
	                return result;
	            case 'M':
	                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	            case 'MM':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	                } else {
	                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	                }
	                return result;
	            case 'y':
	                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	            case 'yy':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
	                } else {
	                    result += withoutSuffix || isFuture ? 'let' : 'leti';
	                }
	                return result;
	        }
	    }
	
	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',
	
	            nextWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[v] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[v] [sredo] [ob] LT';
	                    case 6:
	                        return '[v] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[prejšnjo] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[prejšnjo] [sredo] [ob] LT';
	                    case 6:
	                        return '[prejšnjo] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            ss     : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return sl;
	
	})));


/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            ss : '%d sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sq;
	
	})));


/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            ss: ['секунда', 'секунде', 'секунди'],
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var srCyrl = moment.defineLocale('sr-cyrl', {
	        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[у] [недељу] [у] LT';
	                    case 3:
	                        return '[у] [среду] [у] LT';
	                    case 6:
	                        return '[у] [суботу] [у] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            ss     : translator.translate,
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return srCyrl;
	
	})));


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            ss: ['sekunda', 'sekunde', 'sekundi'],
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var sr = moment.defineLocale('sr', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedelju] [u] LT';
	                    case 3:
	                        return '[u] [sredu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            ss     : translator.translate,
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return sr;
	
	})));


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ss = moment.defineLocale('ss', {
	        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Namuhla nga] LT',
	            nextDay : '[Kusasa nga] LT',
	            nextWeek : 'dddd [nga] LT',
	            lastDay : '[Itolo nga] LT',
	            lastWeek : 'dddd [leliphelile] [nga] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'nga %s',
	            past : 'wenteka nga %s',
	            s : 'emizuzwana lomcane',
	            ss : '%d mzuzwana',
	            m : 'umzuzu',
	            mm : '%d emizuzu',
	            h : 'lihora',
	            hh : '%d emahora',
	            d : 'lilanga',
	            dd : '%d emalanga',
	            M : 'inyanga',
	            MM : '%d tinyanga',
	            y : 'umnyaka',
	            yy : '%d iminyaka'
	        },
	        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'ekuseni';
	            } else if (hours < 15) {
	                return 'emini';
	            } else if (hours < 19) {
	                return 'entsambama';
	            } else {
	                return 'ebusuku';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ekuseni') {
	                return hour;
	            } else if (meridiem === 'emini') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	                if (hour === 0) {
	                    return 0;
	                }
	                return hour + 12;
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}/,
	        ordinal : '%d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ss;
	
	})));


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            ss : '%d sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sv;
	
	})));


/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var sw = moment.defineLocale('sw', {
	        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[leo saa] LT',
	            nextDay : '[kesho saa] LT',
	            nextWeek : '[wiki ijayo] dddd [saat] LT',
	            lastDay : '[jana] LT',
	            lastWeek : '[wiki iliyopita] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s baadaye',
	            past : 'tokea %s',
	            s : 'hivi punde',
	            ss : 'sekunde %d',
	            m : 'dakika moja',
	            mm : 'dakika %d',
	            h : 'saa limoja',
	            hh : 'masaa %d',
	            d : 'siku moja',
	            dd : 'masiku %d',
	            M : 'mwezi mmoja',
	            MM : 'miezi %d',
	            y : 'mwaka mmoja',
	            yy : 'miaka %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return sw;
	
	})));


/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '௧',
	        '2': '௨',
	        '3': '௩',
	        '4': '௪',
	        '5': '௫',
	        '6': '௬',
	        '7': '௭',
	        '8': '௮',
	        '9': '௯',
	        '0': '௦'
	    }, numberMap = {
	        '௧': '1',
	        '௨': '2',
	        '௩': '3',
	        '௪': '4',
	        '௫': '5',
	        '௬': '6',
	        '௭': '7',
	        '௮': '8',
	        '௯': '9',
	        '௦': '0'
	    };
	
	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            ss : '%d விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        preparse: function (string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return ta;
	
	})));


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var te = moment.defineLocale('te', {
	        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[నేడు] LT',
	            nextDay : '[రేపు] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[నిన్న] LT',
	            lastWeek : '[గత] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s లో',
	            past : '%s క్రితం',
	            s : 'కొన్ని క్షణాలు',
	            ss : '%d సెకన్లు',
	            m : 'ఒక నిమిషం',
	            mm : '%d నిమిషాలు',
	            h : 'ఒక గంట',
	            hh : '%d గంటలు',
	            d : 'ఒక రోజు',
	            dd : '%d రోజులు',
	            M : 'ఒక నెల',
	            MM : '%d నెలలు',
	            y : 'ఒక సంవత్సరం',
	            yy : '%d సంవత్సరాలు'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}వ/,
	        ordinal : '%dవ',
	        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'రాత్రి') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ఉదయం') {
	                return hour;
	            } else if (meridiem === 'మధ్యాహ్నం') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'సాయంత్రం') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'రాత్రి';
	            } else if (hour < 10) {
	                return 'ఉదయం';
	            } else if (hour < 17) {
	                return 'మధ్యాహ్నం';
	            } else if (hour < 20) {
	                return 'సాయంత్రం';
	            } else {
	                return 'రాత్రి';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 6th is the first week of the year.
	        }
	    });
	
	    return te;
	
	})));


/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tet = moment.defineLocale('tet', {
	        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
	        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ohin iha] LT',
	            nextDay: '[Aban iha] LT',
	            nextWeek: 'dddd [iha] LT',
	            lastDay: '[Horiseik iha] LT',
	            lastWeek: 'dddd [semana kotuk] [iha] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'iha %s',
	            past : '%s liuba',
	            s : 'minutu balun',
	            ss : 'minutu %d',
	            m : 'minutu ida',
	            mm : 'minutu %d',
	            h : 'oras ida',
	            hh : 'oras %d',
	            d : 'loron ida',
	            dd : 'loron %d',
	            M : 'fulan ida',
	            MM : 'fulan %d',
	            y : 'tinan ida',
	            yy : 'tinan %d'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tet;
	
	})));


/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-ум',
	        1: '-ум',
	        2: '-юм',
	        3: '-юм',
	        4: '-ум',
	        5: '-ум',
	        6: '-ум',
	        7: '-ум',
	        8: '-ум',
	        9: '-ум',
	        10: '-ум',
	        12: '-ум',
	        13: '-ум',
	        20: '-ум',
	        30: '-юм',
	        40: '-ум',
	        50: '-ум',
	        60: '-ум',
	        70: '-ум',
	        80: '-ум',
	        90: '-ум',
	        100: '-ум'
	    };
	
	    var tg = moment.defineLocale('tg', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
	        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
	        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Имрӯз соати] LT',
	            nextDay : '[Пагоҳ соати] LT',
	            lastDay : '[Дирӯз соати] LT',
	            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
	            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'баъди %s',
	            past : '%s пеш',
	            s : 'якчанд сония',
	            m : 'як дақиқа',
	            mm : '%d дақиқа',
	            h : 'як соат',
	            hh : '%d соат',
	            d : 'як рӯз',
	            dd : '%d рӯз',
	            M : 'як моҳ',
	            MM : '%d моҳ',
	            y : 'як сол',
	            yy : '%d сол'
	        },
	        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'шаб') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'субҳ') {
	                return hour;
	            } else if (meridiem === 'рӯз') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'бегоҳ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'шаб';
	            } else if (hour < 11) {
	                return 'субҳ';
	            } else if (hour < 16) {
	                return 'рӯз';
	            } else if (hour < 19) {
	                return 'бегоҳ';
	            } else {
	                return 'шаб';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
	        ordinal: function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1th is the first week of the year.
	        }
	    });
	
	    return tg;
	
	})));


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H:mm',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            ss : '%d วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });
	
	    return th;
	
	})));


/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tlPh = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: 'LT [ngayong araw]',
	            nextDay: '[Bukas ng] LT',
	            nextWeek: 'LT [sa susunod na] dddd',
	            lastDay: 'LT [kahapon]',
	            lastWeek: 'LT [noong nakaraang] dddd',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            ss : '%d segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tlPh;
	
	})));


/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
	
	    function translateFuture(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	        time.slice(0, -3) + 'leS' :
	        (output.indexOf('jar') !== -1) ?
	        time.slice(0, -3) + 'waQ' :
	        (output.indexOf('DIS') !== -1) ?
	        time.slice(0, -3) + 'nem' :
	        time + ' pIq';
	        return time;
	    }
	
	    function translatePast(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	        time.slice(0, -3) + 'Hu’' :
	        (output.indexOf('jar') !== -1) ?
	        time.slice(0, -3) + 'wen' :
	        (output.indexOf('DIS') !== -1) ?
	        time.slice(0, -3) + 'ben' :
	        time + ' ret';
	        return time;
	    }
	
	    function translate(number, withoutSuffix, string, isFuture) {
	        var numberNoun = numberAsNoun(number);
	        switch (string) {
	            case 'ss':
	                return numberNoun + ' lup';
	            case 'mm':
	                return numberNoun + ' tup';
	            case 'hh':
	                return numberNoun + ' rep';
	            case 'dd':
	                return numberNoun + ' jaj';
	            case 'MM':
	                return numberNoun + ' jar';
	            case 'yy':
	                return numberNoun + ' DIS';
	        }
	    }
	
	    function numberAsNoun(number) {
	        var hundred = Math.floor((number % 1000) / 100),
	        ten = Math.floor((number % 100) / 10),
	        one = number % 10,
	        word = '';
	        if (hundred > 0) {
	            word += numbersNouns[hundred] + 'vatlh';
	        }
	        if (ten > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	        }
	        if (one > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	        }
	        return (word === '') ? 'pagh' : word;
	    }
	
	    var tlh = moment.defineLocale('tlh', {
	        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[DaHjaj] LT',
	            nextDay: '[wa’leS] LT',
	            nextWeek: 'LLL',
	            lastDay: '[wa’Hu’] LT',
	            lastWeek: 'LLL',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : translateFuture,
	            past : translatePast,
	            s : 'puS lup',
	            ss : translate,
	            m : 'wa’ tup',
	            mm : translate,
	            h : 'wa’ rep',
	            hh : translate,
	            d : 'wa’ jaj',
	            dd : translate,
	            M : 'wa’ jar',
	            MM : translate,
	            y : 'wa’ DIS',
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tlh;
	
	})));


/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };
	
	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[gelecek] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            ss : '%d saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'Do':
	                case 'DD':
	                    return number;
	                default:
	                    if (number === 0) {  // special case for zero
	                        return number + '\'ıncı';
	                    }
	                    var a = number % 10,
	                        b = number % 100 - a,
	                        c = number >= 100 ? 100 : null;
	                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return tr;
	
	})));


/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	    // This is currently too difficult (maybe even impossible) to add.
	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY HH.mm',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	        },
	        meridiemParse: /d\'o|d\'a/i,
	        isPM : function (input) {
	            return 'd\'o' === input.toLowerCase();
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            ss : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'ss': [number + ' secunds', '' + number + ' secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', '' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', '' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', '' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', '' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', '' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	    }
	
	    return tzl;
	
	})));


/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tzmLatn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            ss : '%d imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return tzmLatn;
	
	})));


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            ss : '%d ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 12th is the first week of the year.
	        }
	    });
	
	    return tzm;
	
	})));


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js language configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ugCn = moment.defineLocale('ug-cn', {
	        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
	            '_'
	        ),
	        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
	            '_'
	        ),
	        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
	            '_'
	        ),
	        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
	        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
	            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
	            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
	        },
	        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (
	                meridiem === 'يېرىم كېچە' ||
	                meridiem === 'سەھەر' ||
	                meridiem === 'چۈشتىن بۇرۇن'
	            ) {
	                return hour;
	            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
	                return hour + 12;
	            } else {
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return 'يېرىم كېچە';
	            } else if (hm < 900) {
	                return 'سەھەر';
	            } else if (hm < 1130) {
	                return 'چۈشتىن بۇرۇن';
	            } else if (hm < 1230) {
	                return 'چۈش';
	            } else if (hm < 1800) {
	                return 'چۈشتىن كېيىن';
	            } else {
	                return 'كەچ';
	            }
	        },
	        calendar: {
	            sameDay: '[بۈگۈن سائەت] LT',
	            nextDay: '[ئەتە سائەت] LT',
	            nextWeek: '[كېلەركى] dddd [سائەت] LT',
	            lastDay: '[تۆنۈگۈن] LT',
	            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s كېيىن',
	            past: '%s بۇرۇن',
	            s: 'نەچچە سېكونت',
	            ss: '%d سېكونت',
	            m: 'بىر مىنۇت',
	            mm: '%d مىنۇت',
	            h: 'بىر سائەت',
	            hh: '%d سائەت',
	            d: 'بىر كۈن',
	            dd: '%d كۈن',
	            M: 'بىر ئاي',
	            MM: '%d ئاي',
	            y: 'بىر يىل',
	            yy: '%d يىل'
	        },
	
	        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '-كۈنى';
	                case 'w':
	                case 'W':
	                    return number + '-ھەپتە';
	                default:
	                    return number;
	            }
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week: {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ugCn;
	
	})));


/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
	            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        };
	
	        if (m === true) {
	            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));
	        }
	        if (!m) {
	            return weekdays['nominative'];
	        }
	
	        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }
	
	    var uk = moment.defineLocale('uk', {
	        months : {
	            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	        },
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return processHoursFunction('[Минулої] dddd [').call(this);
	                    case 1:
	                    case 2:
	                    case 4:
	                        return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            ss : relativeTimeWithPlural,
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return uk;
	
	})));


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'جنوری',
	        'فروری',
	        'مارچ',
	        'اپریل',
	        'مئی',
	        'جون',
	        'جولائی',
	        'اگست',
	        'ستمبر',
	        'اکتوبر',
	        'نومبر',
	        'دسمبر'
	    ];
	    var days = [
	        'اتوار',
	        'پیر',
	        'منگل',
	        'بدھ',
	        'جمعرات',
	        'جمعہ',
	        'ہفتہ'
	    ];
	
	    var ur = moment.defineLocale('ur', {
	        months : months,
	        monthsShort : months,
	        weekdays : days,
	        weekdaysShort : days,
	        weekdaysMin : days,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd، D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /صبح|شام/,
	        isPM : function (input) {
	            return 'شام' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'صبح';
	            }
	            return 'شام';
	        },
	        calendar : {
	            sameDay : '[آج بوقت] LT',
	            nextDay : '[کل بوقت] LT',
	            nextWeek : 'dddd [بوقت] LT',
	            lastDay : '[گذشتہ روز بوقت] LT',
	            lastWeek : '[گذشتہ] dddd [بوقت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s بعد',
	            past : '%s قبل',
	            s : 'چند سیکنڈ',
	            ss : '%d سیکنڈ',
	            m : 'ایک منٹ',
	            mm : '%d منٹ',
	            h : 'ایک گھنٹہ',
	            hh : '%d گھنٹے',
	            d : 'ایک دن',
	            dd : '%d دن',
	            M : 'ایک ماہ',
	            MM : '%d ماہ',
	            y : 'ایک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ur;
	
	})));


/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var uzLatn = moment.defineLocale('uz-latn', {
	        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
	        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
	        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
	        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
	        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Bugun soat] LT [da]',
	            nextDay : '[Ertaga] LT [da]',
	            nextWeek : 'dddd [kuni soat] LT [da]',
	            lastDay : '[Kecha soat] LT [da]',
	            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Yaqin %s ichida',
	            past : 'Bir necha %s oldin',
	            s : 'soniya',
	            ss : '%d soniya',
	            m : 'bir daqiqa',
	            mm : '%d daqiqa',
	            h : 'bir soat',
	            hh : '%d soat',
	            d : 'bir kun',
	            dd : '%d kun',
	            M : 'bir oy',
	            MM : '%d oy',
	            y : 'bir yil',
	            yy : '%d yil'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 7th is the first week of the year.
	        }
	    });
	
	    return uzLatn;
	
	})));


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var uz = moment.defineLocale('uz', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            ss : '%d фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return uz;
	
	})));


/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /sa|ch/i,
	        isPM : function (input) {
	            return /^ch$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'sa' : 'SA';
	            } else {
	                return isLower ? 'ch' : 'CH';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            ss : '%d giây' ,
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return vi;
	
	})));


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var xPseudo = moment.defineLocale('x-pseudo', {
	        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[T~ódá~ý át] LT',
	            nextDay : '[T~ómó~rró~w át] LT',
	            nextWeek : 'dddd [át] LT',
	            lastDay : '[Ý~ést~érdá~ý át] LT',
	            lastWeek : '[L~ást] dddd [át] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'í~ñ %s',
	            past : '%s á~gó',
	            s : 'á ~féw ~sécó~ñds',
	            ss : '%d s~écóñ~ds',
	            m : 'á ~míñ~úté',
	            mm : '%d m~íñú~tés',
	            h : 'á~ñ hó~úr',
	            hh : '%d h~óúrs',
	            d : 'á ~dáý',
	            dd : '%d d~áýs',
	            M : 'á ~móñ~th',
	            MM : '%d m~óñt~hs',
	            y : 'á ~ýéár',
	            yy : '%d ý~éárs'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return xPseudo;
	
	})));


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var yo = moment.defineLocale('yo', {
	        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
	        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
	        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
	        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
	        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Ònì ni] LT',
	            nextDay : '[Ọ̀la ni] LT',
	            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
	            lastDay : '[Àna ni] LT',
	            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ní %s',
	            past : '%s kọjá',
	            s : 'ìsẹjú aayá die',
	            ss :'aayá %d',
	            m : 'ìsẹjú kan',
	            mm : 'ìsẹjú %d',
	            h : 'wákati kan',
	            hh : 'wákati %d',
	            d : 'ọjọ́ kan',
	            dd : 'ọjọ́ %d',
	            M : 'osù kan',
	            MM : 'osù %d',
	            y : 'ọdún kan',
	            yy : 'ọdún %d'
	        },
	        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
	        ordinal : 'ọjọ́ %d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return yo;
	
	})));


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var zhCn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah点mm分',
	            LLLL : 'YYYY年M月D日ddddAh点mm分',
	            l : 'YYYY/M/D',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日dddd HH:mm'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '周';
	                default:
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            ss : '%d 秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return zhCn;
	
	})));


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var zhHk = moment.defineLocale('zh-hk', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日 HH:mm',
	            LLLL : 'YYYY年M月D日dddd HH:mm',
	            l : 'YYYY/M/D',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日dddd HH:mm'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd' :
	                case 'D' :
	                case 'DDD' :
	                    return number + '日';
	                case 'M' :
	                    return number + '月';
	                case 'w' :
	                case 'W' :
	                    return number + '週';
	                default :
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            ss : '%d 秒',
	            m : '1 分鐘',
	            mm : '%d 分鐘',
	            h : '1 小時',
	            hh : '%d 小時',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 個月',
	            MM : '%d 個月',
	            y : '1 年',
	            yy : '%d 年'
	        }
	    });
	
	    return zhHk;
	
	})));


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var zhTw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日 HH:mm',
	            LLLL : 'YYYY年M月D日dddd HH:mm',
	            l : 'YYYY/M/D',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日dddd HH:mm'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天] LT',
	            nextDay : '[明天] LT',
	            nextWeek : '[下]dddd LT',
	            lastDay : '[昨天] LT',
	            lastWeek : '[上]dddd LT',
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd' :
	                case 'D' :
	                case 'DDD' :
	                    return number + '日';
	                case 'M' :
	                    return number + '月';
	                case 'w' :
	                case 'W' :
	                    return number + '週';
	                default :
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            ss : '%d 秒',
	            m : '1 分鐘',
	            mm : '%d 分鐘',
	            h : '1 小時',
	            hh : '%d 小時',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 個月',
	            MM : '%d 個月',
	            y : '1 年',
	            yy : '%d 年'
	        }
	    });
	
	    return zhTw;
	
	})));


/***/ },
/* 319 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;
	
	process.listeners = function (name) { return [] }
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var asap = __webpack_require__(341);
	
	function noop() {}
	
	// States:
	//
	// 0 - pending
	// 1 - fulfilled with _value
	// 2 - rejected with _value
	// 3 - adopted the state of another promise, _value
	//
	// once the state is no longer pending (0) it is immutable
	
	// All `_` prefixed properties will be reduced to `_{random number}`
	// at build time to obfuscate them and discourage their use.
	// We don't use symbols or Object.defineProperty to fully hide them
	// because the performance isn't good enough.
	
	
	// to avoid using try/catch inside critical functions, we
	// extract them to here.
	var LAST_ERROR = null;
	var IS_ERROR = {};
	function getThen(obj) {
	  try {
	    return obj.then;
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	
	function tryCallOne(fn, a) {
	  try {
	    return fn(a);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	function tryCallTwo(fn, a, b) {
	  try {
	    fn(a, b);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	
	module.exports = Promise;
	
	function Promise(fn) {
	  if (typeof this !== 'object') {
	    throw new TypeError('Promises must be constructed via new');
	  }
	  if (typeof fn !== 'function') {
	    throw new TypeError('not a function');
	  }
	  this._45 = 0;
	  this._81 = 0;
	  this._65 = null;
	  this._54 = null;
	  if (fn === noop) return;
	  doResolve(fn, this);
	}
	Promise._10 = null;
	Promise._97 = null;
	Promise._61 = noop;
	
	Promise.prototype.then = function(onFulfilled, onRejected) {
	  if (this.constructor !== Promise) {
	    return safeThen(this, onFulfilled, onRejected);
	  }
	  var res = new Promise(noop);
	  handle(this, new Handler(onFulfilled, onRejected, res));
	  return res;
	};
	
	function safeThen(self, onFulfilled, onRejected) {
	  return new self.constructor(function (resolve, reject) {
	    var res = new Promise(noop);
	    res.then(resolve, reject);
	    handle(self, new Handler(onFulfilled, onRejected, res));
	  });
	};
	function handle(self, deferred) {
	  while (self._81 === 3) {
	    self = self._65;
	  }
	  if (Promise._10) {
	    Promise._10(self);
	  }
	  if (self._81 === 0) {
	    if (self._45 === 0) {
	      self._45 = 1;
	      self._54 = deferred;
	      return;
	    }
	    if (self._45 === 1) {
	      self._45 = 2;
	      self._54 = [self._54, deferred];
	      return;
	    }
	    self._54.push(deferred);
	    return;
	  }
	  handleResolved(self, deferred);
	}
	
	function handleResolved(self, deferred) {
	  asap(function() {
	    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;
	    if (cb === null) {
	      if (self._81 === 1) {
	        resolve(deferred.promise, self._65);
	      } else {
	        reject(deferred.promise, self._65);
	      }
	      return;
	    }
	    var ret = tryCallOne(cb, self._65);
	    if (ret === IS_ERROR) {
	      reject(deferred.promise, LAST_ERROR);
	    } else {
	      resolve(deferred.promise, ret);
	    }
	  });
	}
	function resolve(self, newValue) {
	  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
	  if (newValue === self) {
	    return reject(
	      self,
	      new TypeError('A promise cannot be resolved with itself.')
	    );
	  }
	  if (
	    newValue &&
	    (typeof newValue === 'object' || typeof newValue === 'function')
	  ) {
	    var then = getThen(newValue);
	    if (then === IS_ERROR) {
	      return reject(self, LAST_ERROR);
	    }
	    if (
	      then === self.then &&
	      newValue instanceof Promise
	    ) {
	      self._81 = 3;
	      self._65 = newValue;
	      finale(self);
	      return;
	    } else if (typeof then === 'function') {
	      doResolve(then.bind(newValue), self);
	      return;
	    }
	  }
	  self._81 = 1;
	  self._65 = newValue;
	  finale(self);
	}
	
	function reject(self, newValue) {
	  self._81 = 2;
	  self._65 = newValue;
	  if (Promise._97) {
	    Promise._97(self, newValue);
	  }
	  finale(self);
	}
	function finale(self) {
	  if (self._45 === 1) {
	    handle(self, self._54);
	    self._54 = null;
	  }
	  if (self._45 === 2) {
	    for (var i = 0; i < self._54.length; i++) {
	      handle(self, self._54[i]);
	    }
	    self._54 = null;
	  }
	}
	
	function Handler(onFulfilled, onRejected, promise){
	  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
	  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
	  this.promise = promise;
	}
	
	/**
	 * Take a potentially misbehaving resolver function and make sure
	 * onFulfilled and onRejected are only called once.
	 *
	 * Makes no guarantees about asynchrony.
	 */
	function doResolve(fn, promise) {
	  var done = false;
	  var res = tryCallTwo(fn, function (value) {
	    if (done) return;
	    done = true;
	    resolve(promise, value);
	  }, function (reason) {
	    if (done) return;
	    done = true;
	    reject(promise, reason);
	  })
	  if (!done && res === IS_ERROR) {
	    done = true;
	    reject(promise, LAST_ERROR);
	  }
	}


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__(2)),_propTypes=_interopRequireDefault(__webpack_require__(15)),_ReduxFirestoreContext=_interopRequireDefault(__webpack_require__(44)),_createFirebaseInstance=_interopRequireDefault(__webpack_require__(125));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ReduxFirestoreProvider(){var props=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},children=props.children,config=props.config,dispatch=props.dispatch,firebase=props.firebase,createFirestoreInstance=props.createFirestoreInstance,initializeAuth=props.initializeAuth,extendedFirestoreInstance=_react.default.useMemo(function(){var extendedFirebaseInstance=firebase._reactReduxFirebaseExtended?firebase:(0,_createFirebaseInstance.default)(firebase,config,dispatch),extendedFirestoreInstance=createFirestoreInstance(firebase,config,dispatch);return initializeAuth&&extendedFirebaseInstance.initializeAuth(),extendedFirestoreInstance},[firebase,config,dispatch,createFirestoreInstance,initializeAuth]);return _react.default.createElement(_ReduxFirestoreContext.default.Provider,{value:extendedFirestoreInstance},children)}ReduxFirestoreProvider.defaultProps={initializeAuth:!0},ReduxFirestoreProvider.propTypes={children:_propTypes.default.node,config:_propTypes.default.object.isRequired,dispatch:_propTypes.default.func.isRequired,createFirestoreInstance:_propTypes.default.func.isRequired,initializeAuth:_propTypes.default.bool,firebase:_propTypes.default.object.isRequired};var _default=ReduxFirestoreProvider;exports.default=_default,module.exports=exports.default;
	//# sourceMappingURL=ReduxFirestoreProvider.js.map

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getVal=getVal,exports.isLoaded=isLoaded,exports.isEmpty=isEmpty,exports.fixPath=fixPath,exports.populate=populate;var _some2=_interopRequireDefault(__webpack_require__(121)),_defaultsDeep2=_interopRequireDefault(__webpack_require__(477)),_reduce2=_interopRequireDefault(__webpack_require__(503)),_mapValues2=_interopRequireDefault(__webpack_require__(119)),_map2=_interopRequireDefault(__webpack_require__(33)),_has2=_interopRequireDefault(__webpack_require__(114)),_get2=_interopRequireDefault(__webpack_require__(11)),_set2=_interopRequireDefault(__webpack_require__(43)),_size2=_interopRequireDefault(__webpack_require__(120)),_constants=__webpack_require__(16),_populate=__webpack_require__(72),_reducers=__webpack_require__(126);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||"[object Arguments]"===Object.prototype.toString.call(iter))return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function getVal(firebase,path,notSetValue){if(!firebase)return notSetValue;var dotPath=(0,_reducers.getDotStrPath)(path),valueAtPath=(0,_get2.default)(firebase,dotPath,notSetValue);return valueAtPath}function isLoaded(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return!(args&&args.length)||args.every(function(arg){return arg!==void 0&&!1!==(0,_get2.default)(arg,"isLoaded")})}function isEmpty(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return!(args&&args.length)||args.some(function(arg){return!(arg&&(0,_size2.default)(arg))||!0===arg.isEmpty})}function fixPath(path){return("/"===path.substring(0,1)?"":"/")+path}function buildChildList(state,list,p){return(0,_mapValues2.default)(list,function(val,key){var getKey=val;(!0===val||p.populateByKey)&&(getKey=key);var dotRoot=(0,_reducers.getDotStrPath)(p.root),pathArr=[dotRoot,getKey];p.childParam&&pathArr.push(p.childParam);var pathString=pathArr.join(".");return(0,_get2.default)(state.data,pathString)?p.keyProp?_objectSpread(_defineProperty({},p.keyProp,getKey),(0,_get2.default)(state.data,pathString)):(0,_get2.default)(state.data,pathString):!0===val||p.populateByKey?val:getKey})}function populateChild(state,child,p){var childVal=(0,_get2.default)(child,p.child);if(!child||!childVal)return null;if("string"==typeof childVal||childVal instanceof String){var dotRoot=p.root.split("/").filter(Boolean).join("."),pathArr=[dotRoot,childVal];p.childParam&&pathArr.push(p.childParam);var pathString=pathArr.join("."),populateVal=(0,_get2.default)(state.data,pathString);return populateVal?(0,_set2.default)({},p.childAlias||p.child,p.keyProp?_objectSpread(_defineProperty({},p.keyProp,childVal),populateVal):populateVal):child}return(0,_set2.default)({},p.childAlias||p.child,buildChildList(state,childVal,p))}function populate(state,path,populates,notSetValue){var splitPath=path.split("/").filter(Boolean),pathArr=-1===_constants.topLevelPaths.indexOf(splitPath[0])?["data"].concat(_toConsumableArray(splitPath)):splitPath,dotPath=pathArr.join("."),data=(0,_get2.default)(state,dotPath,notSetValue);if(!state||data===notSetValue)return notSetValue;if(null===data)return null;var populatesForData=(0,_populate.getPopulateObjs)("function"==typeof populates?populates(pathArr.slice(-1)[0],data):populates);if(Array.isArray(data)){var someArrayItemHasKey=function(array){return function(key){return(0,_some2.default)(array,function(item){return(0,_has2.default)(item,key)})}},_dataHasPopulateChilds=(0,_some2.default)(populatesForData,function(populate){return someArrayItemHasKey(data)(["value",populate.child])});return _dataHasPopulateChilds?data.map(function(_ref){var key=_ref.key,dataValue=_ref.value,populatedValue=populatesForData.map(function(p){return populateChild(state,dataValue,p)}).reduce(function(acc,v){return(0,_defaultsDeep2.default)(v,acc)},dataValue);return{key:key,value:populatedValue}}):data}var dataHasPopulateChilds=(0,_some2.default)(populatesForData,function(p){return(0,_has2.default)(data,p.child)});return dataHasPopulateChilds?populatesForData.map(function(p){return populateChild(state,data,p)}).reduce(function(acc,v){return(0,_defaultsDeep2.default)(v,acc)},data):-1===pathArr.indexOf("profile")?(0,_mapValues2.default)(data,function(child,childKey){var key="ordered"===pathArr[0]?child.key:childKey,populatesForDataItem=(0,_populate.getPopulateObjs)("function"==typeof populates?populates(key,child):populates),dataHasPopulateChilds=(0,_some2.default)(populatesForDataItem,function(p){return(0,_has2.default)(child,p.child)});return dataHasPopulateChilds?(0,_reduce2.default)((0,_map2.default)(populatesForDataItem,function(p){return populateChild(state,child,p)}),function(obj,v){return(0,_defaultsDeep2.default)(v,obj)},child):child}):data}
	//# sourceMappingURL=helpers.js.map

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useFirebase;var _react=__webpack_require__(2),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function useFirebase(){return(0,_react.useContext)(_ReactReduxFirebaseContext.default)}module.exports=exports.default;
	//# sourceMappingURL=useFirebase.js.map

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useFirestore;var _react=__webpack_require__(2),_ReduxFirestoreContext=_interopRequireDefault(__webpack_require__(44));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function useFirestore(){return(0,_react.useContext)(_ReduxFirestoreContext.default)}module.exports=exports.default;
	//# sourceMappingURL=useFirestore.js.map

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.wrapInDispatch=wrapInDispatch,exports.mapWithFirebaseAndDispatch=mapWithFirebaseAndDispatch;var _mapValues2=_interopRequireDefault(__webpack_require__(119)),_isObject2=_interopRequireDefault(__webpack_require__(4));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||"[object Arguments]"===Object.prototype.toString.call(iter))return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){if(Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function wrapInDispatch(dispatch,_ref){var ref=_ref.ref,meta=_ref.meta,method=_ref.method,_ref$args=_ref.args,args=void 0===_ref$args?[]:_ref$args,types=_ref.types,_types=_slicedToArray(types,3),requestingType=_types[0],successType=_types[1],errorType=_types[2];return dispatch({type:(0,_isObject2.default)(requestingType)?requestingType.type:requestingType,meta:meta,payload:(0,_isObject2.default)(requestingType)?requestingType.payload:{args:args}}),method.apply(void 0,_toConsumableArray(args)).then(function(payload){return dispatch({type:(0,_isObject2.default)(successType)?successType.type:successType,meta:meta,payload:(0,_isObject2.default)(successType)?successType.payload:payload}),payload}).catch(function(err){return dispatch({type:errorType,meta:meta,payload:err}),Promise.reject(err)})}function createWithFirebaseAndDispatch(firebase,dispatch,dispatchFirst){return function(func){return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return func.apply(firebase,dispatchFirst?[dispatch,firebase].concat(args):[firebase,dispatch].concat(args))}}}function mapWithFirebaseAndDispatch(firebase,dispatch,actions,reverseActions){var withFirebaseAndDispatch=createWithFirebaseAndDispatch(firebase,dispatch),withDispatchAndFirebase=createWithFirebaseAndDispatch(firebase,dispatch,!0);return _objectSpread({},(0,_mapValues2.default)(actions,withFirebaseAndDispatch),{},(0,_mapValues2.default)(reverseActions,withDispatchAndFirebase))}
	//# sourceMappingURL=actions.js.map

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getLoginMethodAndParams=getLoginMethodAndParams,exports.authIsReady=authIsReady,exports.createAuthIsReady=createAuthIsReady,exports.updateProfileOnRTDB=updateProfileOnRTDB,exports.updateProfileOnFirestore=updateProfileOnFirestore,exports.setupPresence=setupPresence;var _capitalize2=_interopRequireDefault(__webpack_require__(473)),_constants=__webpack_require__(16);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function createAuthProvider(firebase,providerName,scopes){var capitalProviderName="".concat((0,_capitalize2.default)(providerName),"AuthProvider");if(!firebase.auth[capitalProviderName])throw new Error("".concat(providerName," is not a valid auth provider for your firebase instance. If using react-native, use a RN specific auth library."));var provider=new firebase.auth[capitalProviderName],customAuthParameters=firebase._.config.customAuthParameters;return(customAuthParameters&&customAuthParameters[providerName]&&provider.setCustomParameters(customAuthParameters[providerName]),"twitter"===providerName.toLowerCase()||"function"!=typeof provider.addScope)?provider:(provider.addScope("email"),scopes&&(Array.isArray(scopes)&&scopes.forEach(function(scope){provider.addScope(scope)}),("string"==typeof scopes||scopes instanceof String)&&provider.addScope(scopes)),provider)}function getLoginMethodAndParams(firebase,credentials){var email=credentials.email,password=credentials.password,provider=credentials.provider,type=credentials.type,token=credentials.token,scopes=credentials.scopes,phoneNumber=credentials.phoneNumber,applicationVerifier=credentials.applicationVerifier,credential=credentials.credential;if(credential){var credentialAuth=firebase.auth().signInAndRetrieveDataWithCredential;return credentialAuth?{method:"signInAndRetrieveDataWithCredential",params:[credential]}:{method:"signInWithCredential",params:[credential]}}if(provider){if(-1===_constants.supportedAuthProviders.indexOf(provider.toLowerCase()))throw new Error("".concat(provider," is not a valid Auth Provider"));if(token)throw new Error("provider with token no longer supported, use credential parameter instead");var authProvider=createAuthProvider(firebase,provider,scopes);return"popup"===type?{method:"signInWithPopup",params:[authProvider]}:{method:"signInWithRedirect",params:[authProvider]}}if(token){var tokenAuth=firebase.auth().signInAndRetrieveDataWithCustomToken;return tokenAuth?{method:"signInAndRetrieveDataWithCustomToken",params:[token]}:{method:"signInWithCustomToken",params:[token]}}if(phoneNumber){if(!applicationVerifier)throw new Error("Application verifier is required for phone authentication");return{method:"signInWithPhoneNumber",params:[phoneNumber,applicationVerifier]}}return firebase.auth().signInWithEmailAndPassword?{method:"signInWithEmailAndPassword",params:[email,password]}:{method:"signInAndRetrieveDataWithEmailAndPassword",params:[email,password]}}function isAuthReady(store,stateName){var state=store.getState(),firebaseState=stateName?state[stateName]:state,firebaseAuthState=firebaseState&&firebaseState.auth;if(!firebaseAuthState)throw new Error("The Firebase auth state could not be found in the store under the attribute '".concat(stateName?"".concat(stateName,"."):"","auth'. Make sure your react-redux-firebase reducer is correctly set in the store"));return firebaseState.auth.isLoaded}function authIsReady(store){var stateName=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"firebase";return new Promise(function(resolve){if(isAuthReady(store,stateName))resolve();else var unsubscribe=store.subscribe(function(){isAuthReady(store,stateName)&&(unsubscribe(),resolve())})})}function createAuthIsReady(store,config){return"function"==typeof config.authIsReady?config.authIsReady(store,config):authIsReady(store,config.firebaseStateName)}function updateProfileOnRTDB(firebase,profileUpdate){var database=firebase.database,_firebase$_=firebase._,config=_firebase$_.config,authUid=_firebase$_.authUid,profileRef=database().ref("".concat(config.userProfile,"/").concat(authUid));return profileRef.update(profileUpdate).then(function(){return profileRef.once("value")})}function updateProfileOnFirestore(firebase,profileUpdate){var options=2<arguments.length&&arguments[2]!==void 0?arguments[2]:{},_options$useSet=options.useSet,_options$merge=options.merge,firestore=firebase.firestore,_firebase$_2=firebase._,config=_firebase$_2.config,authUid=_firebase$_2.authUid,profileRef=firestore().doc("".concat(config.userProfile,"/").concat(authUid)),profileUpdatePromise=!(void 0!==_options$useSet)||_options$useSet?profileRef.set(profileUpdate,{merge:!(void 0!==_options$merge)||_options$merge}):profileRef.update(profileUpdate);return profileUpdatePromise.then(function(){return profileRef.get()})}function setupPresence(dispatch,firebase){if(firebase.database&&firebase.database.ServerValue){var ref=firebase.database().ref(),_firebase$_3=firebase._,_firebase$_3$config=_firebase$_3.config,presence=_firebase$_3$config.presence,sessions=_firebase$_3$config.sessions,authUid=_firebase$_3.authUid,amOnline=ref.child(".info/connected"),onlineRef=ref.child("function"==typeof presence?presence(firebase.auth().currentUser,firebase):presence).child(authUid),sessionsRef="function"==typeof sessions?sessions(firebase.auth().currentUser,firebase):sessions;sessionsRef&&(sessionsRef=ref.child(sessions)),amOnline.on("value",function(snapShot){if(snapShot.val()){if(sessionsRef){dispatch({type:_constants.actionTypes.SESSION_START,payload:authUid});var session=sessionsRef.push({startedAt:firebase.database.ServerValue.TIMESTAMP,user:authUid});"function"==typeof session.setPriority&&session.setPriority(authUid),session.child("endedAt").onDisconnect().set(firebase.database.ServerValue.TIMESTAMP,function(){dispatch({type:_constants.actionTypes.SESSION_END})})}onlineRef.set(!0),onlineRef.onDisconnect().remove()}})}}
	//# sourceMappingURL=auth.js.map

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getWatchPath=getWatchPath,exports.getQueryIdFromPath=getQueryIdFromPath,exports.setWatcher=setWatcher,exports.getWatcherCount=getWatcherCount,exports.unsetWatcher=unsetWatcher,exports.applyParamsToQuery=applyParamsToQuery,exports.orderedFromSnapshot=orderedFromSnapshot,exports.populateAndDispatch=populateAndDispatch;var _forEach2=_interopRequireDefault(__webpack_require__(64)),_isNaN2=_interopRequireDefault(__webpack_require__(490)),_constants=__webpack_require__(16),_populate=__webpack_require__(72),_index=__webpack_require__(12);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function tryParseToNumber(value){var result=+value;return(0,_isNaN2.default)(result)?value:result}function getWatchPath(event,path){if(!event||""===event||!path)throw new Error("Event and path are required");return"".concat(event,":").concat("/"===path.substring(0,1)?"":"/").concat(path)}function getQueryIdFromPath(path,event){if(!(0,_index.isString)(path))throw new Error("Query path must be a string");var origPath=path,pathSplitted=path.split("#");path=pathSplitted[0];var isQuery=1<pathSplitted.length,queryParams=isQuery?pathSplitted[1].split("&"):[],queryId=isQuery?queryParams.map(function(param){var splittedParam=param.split("=");if("queryId"===splittedParam[0])return splittedParam[1]}).filter(function(q){return q}):void 0;return queryId&&0<queryId.length?event?"".concat(event,":/").concat(queryId):queryId[0]:isQuery?origPath:void 0}function setWatcher(firebase,dispatch,event,path,queryId){var id=queryId||getQueryIdFromPath(path,event)||getWatchPath(event,path);return firebase._.watchers[id]?firebase._.watchers[id]++:firebase._.watchers[id]=1,dispatch({type:_constants.actionTypes.SET_LISTENER,path:path,payload:{id:id}}),firebase._.watchers[id]}function getWatcherCount(firebase,event,path,queryId){var id=queryId||getQueryIdFromPath(path,event)||getWatchPath(event,path);return firebase._.watchers[id]}function unsetWatcher(firebase,dispatch,event,path,queryId){var id=queryId||getQueryIdFromPath(path,event)||getWatchPath(event,path);path=path.split("#")[0];var watchers=firebase._.watchers;1>=watchers[id]?(delete watchers[id],"first_child"!==event&&"once"!==event&&firebase.database().ref().child(path).off(event)):watchers[id]&&watchers[id]--,dispatch({type:_constants.actionTypes.UNSET_LISTENER,path:path,payload:{id:id}})}function applyParamsToQuery(queryParams,query){var doNotParse=!1;return queryParams&&queryParams.forEach(function(param){switch(param=param.split("="),param[0]){case"orderByValue":query=query.orderByValue(),doNotParse=!0;break;case"orderByPriority":query=query.orderByPriority(),doNotParse=!0;break;case"orderByKey":query=query.orderByKey(),doNotParse=!0;break;case"orderByChild":query=query.orderByChild(param[1]);break;case"limitToFirst":query=query.limitToFirst(parseInt(param[1],10));break;case"limitToLast":query=query.limitToLast(parseInt(param[1],10));break;case"notParsed":doNotParse=!0;break;case"parsed":doNotParse=!1;break;case"equalTo":var equalToParam=doNotParse?param[1]:tryParseToNumber(param[1]);equalToParam="null"===equalToParam?null:equalToParam,equalToParam="false"!==equalToParam&&equalToParam,equalToParam="true"===equalToParam||equalToParam,query=3===param.length?query.equalTo(equalToParam,param[2]):query.equalTo(equalToParam);break;case"startAt":var startAtParam=doNotParse?param[1]:tryParseToNumber(param[1]);startAtParam="null"===startAtParam?null:startAtParam,query=3===param.length?query.startAt(startAtParam,param[2]):query.startAt(startAtParam);break;case"endAt":var endAtParam=doNotParse?param[1]:tryParseToNumber(param[1]);endAtParam="null"===endAtParam?null:endAtParam,query=3===param.length?query.endAt(endAtParam,param[2]):query.endAt(endAtParam);}}),query}function orderedFromSnapshot(snap){if(snap.hasChildren&&!snap.hasChildren())return null;var ordered=[];return snap.forEach&&snap.forEach(function(child){ordered.push({key:child.key,value:child.val()})}),ordered.length?ordered:null}function populateAndDispatch(firebase,dispatch,config){var data=config.data,populates=config.populates,snapshot=config.snapshot,path=config.path,storeAs=config.storeAs;return(0,_populate.promisesForPopulate)(firebase,snapshot.key,data,populates).then(function(results){return(0,_forEach2.default)(results,function(result,path){dispatch({type:_constants.actionTypes.MERGE,path:path,data:result})}),dispatch({type:_constants.actionTypes.SET,path:storeAs||path,data:data,ordered:orderedFromSnapshot(snapshot)}),results}).catch(function(err){return dispatch({type:_constants.actionTypes.ERROR,payload:err}),Promise.reject(err)})}
	//# sourceMappingURL=query.js.map

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(77);
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.default = connectAdvanced;
	
	var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(76));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(336));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(75));
	
	var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(78));
	
	var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(25));
	
	var _invariant = _interopRequireDefault(__webpack_require__(365));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _reactIs = __webpack_require__(123);
	
	var _Subscription = _interopRequireDefault(__webpack_require__(547));
	
	var _PropTypes = __webpack_require__(330);
	
	var prefixUnsafeLifecycleMethods = typeof _react.default.forwardRef !== "undefined";
	var hotReloadingVersion = 0;
	var dummyState = {};
	
	function noop() {}
	
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };
	  return selector;
	}
	
	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory, // options object:
	_ref) {
	  var _contextTypes, _childContextTypes;
	
	  if (_ref === void 0) {
	    _ref = {};
	  }
	
	  var _ref2 = _ref,
	      _ref2$getDisplayName = _ref2.getDisplayName,
	      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
	    return "ConnectAdvanced(" + name + ")";
	  } : _ref2$getDisplayName,
	      _ref2$methodName = _ref2.methodName,
	      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
	      _ref2$renderCountProp = _ref2.renderCountProp,
	      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
	      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
	      _ref2$storeKey = _ref2.storeKey,
	      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
	      _ref2$withRef = _ref2.withRef,
	      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
	      connectOptions = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]);
	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;
	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);
	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant.default)((0, _reactIs.isValidElementType)(WrappedComponent), "You must pass a component to the function returned by " + (methodName + ". Instead received " + JSON.stringify(WrappedComponent)));
	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
	    var displayName = getDisplayName(wrappedComponentName);
	    var selectorFactoryOptions = (0, _extends2.default)({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent // TODO Actually fix our use of componentWillReceiveProps
	
	      /* eslint-disable react/no-deprecated */
	
	    });
	
	    var Connect =
	    /*#__PURE__*/
	    function (_Component) {
	      (0, _inheritsLoose2.default)(Connect, _Component);
	
	      function Connect(props, context) {
	        var _this;
	
	        _this = _Component.call(this, props, context) || this;
	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
	        (0, _invariant.default)(_this.store, "Could not find \"" + storeKey + "\" in either the context or props of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + ("or explicitly pass \"" + storeKey + "\" as a prop to \"" + displayName + "\"."));
	
	        _this.initSelector();
	
	        _this.initSubscription();
	
	        return _this;
	      }
	
	      var _proto = Connect.prototype;
	
	      _proto.getChildContext = function getChildContext() {
	        var _ref3;
	
	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref3 = {}, _ref3[subscriptionKey] = subscription || this.context[subscriptionKey], _ref3;
	      };
	
	      _proto.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return; // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      }; // Note: this is renamed below to the UNSAFE_ version in React >=16.3.0
	
	
	      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };
	
	      _proto.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };
	
	      _proto.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };
	
	      _proto.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant.default)(withRef, "To access the wrapped instance, you need to specify " + ("{ withRef: true } in the options argument of the " + methodName + "() call."));
	        return this.wrappedInstance;
	      };
	
	      _proto.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };
	
	      _proto.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };
	
	      _proto.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return; // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription.default(this.store, parentSub, this.onStateChange.bind(this)); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };
	
	      _proto.onStateChange = function onStateChange() {
	        this.selector.run(this.props);
	
	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };
	
	      _proto.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };
	
	      _proto.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };
	
	      _proto.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props; // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	
	        var withExtras = (0, _extends2.default)({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };
	
	      _proto.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;
	
	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    if (prefixUnsafeLifecycleMethods) {
	      // Use UNSAFE_ event name where supported
	      Connect.prototype.UNSAFE_componentWillReceiveProps = Connect.prototype.componentWillReceiveProps;
	      delete Connect.prototype.componentWillReceiveProps;
	    }
	    /* eslint-enable react/no-deprecated */
	
	
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;
	
	    if (false) {
	      // Use UNSAFE_ event name where supported
	      var eventName = prefixUnsafeLifecycleMethods ? 'UNSAFE_componentWillUpdate' : 'componentWillUpdate';
	
	      Connect.prototype[eventName] = function componentWillUpdate() {
	        var _this2 = this;
	
	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector(); // If any connected descendants don't hot reload (and resubscribe in the process), their
	          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
	          // listeners, this does mean that the old versions of connected descendants will still be
	          // notified of state changes; however, their onStateChange function is a no-op so this
	          // isn't a huge deal.
	
	          var oldListeners = [];
	
	          if (this.subscription) {
	            oldListeners = this.subscription.listeners.get();
	            this.subscription.tryUnsubscribe();
	          }
	
	          this.initSubscription();
	
	          if (shouldHandleStateChanges) {
	            this.subscription.trySubscribe();
	            oldListeners.forEach(function (listener) {
	              return _this2.subscription.listeners.subscribe(listener);
	            });
	          }
	        }
	      };
	    }
	
	    return (0, _hoistNonReactStatics.default)(Connect, WrappedComponent);
	  };
	}

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;
	
	var _verifyPlainObject = _interopRequireDefault(__webpack_require__(331));
	
	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);
	
	    function constantSelector() {
	      return constant;
	    }
	
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	
	
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	
	
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;
	
	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    }; // allow detectFactoryAndVerify to get ownProps
	
	
	    proxy.dependsOnOwnProps = true;
	
	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);
	
	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }
	
	      if (false) (0, _verifyPlainObject.default)(props, displayName, methodName);
	      return props;
	    };
	
	    return proxy;
	  };
	}

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = void 0;
	
	var _propTypes = _interopRequireDefault(__webpack_require__(15));
	
	var subscriptionShape = _propTypes.default.shape({
	  trySubscribe: _propTypes.default.func.isRequired,
	  tryUnsubscribe: _propTypes.default.func.isRequired,
	  notifyNestedSubs: _propTypes.default.func.isRequired,
	  isSubscribed: _propTypes.default.func.isRequired
	});
	
	exports.subscriptionShape = subscriptionShape;
	
	var storeShape = _propTypes.default.shape({
	  subscribe: _propTypes.default.func.isRequired,
	  dispatch: _propTypes.default.func.isRequired,
	  getState: _propTypes.default.func.isRequired
	});
	
	exports.storeShape = storeShape;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.default = verifyPlainObject;
	
	var _isPlainObject = _interopRequireDefault(__webpack_require__(548));
	
	var _warning = _interopRequireDefault(__webpack_require__(127));
	
	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject.default)(value)) {
	    (0, _warning.default)(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
	  }
	}

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.firestoreActions = exports.default = void 0;
	
	var firestoreActions = _interopRequireWildcard(__webpack_require__(558));
	
	exports.firestoreActions = firestoreActions;
	
	function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
	
	var _default = {
	  firestoreActions: firestoreActions
	};
	exports.default = _default;

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createFirestoreInstance;
	
	var _merge2 = _interopRequireDefault(__webpack_require__(113));
	
	var _actions = __webpack_require__(332);
	
	var _actions2 = __webpack_require__(335);
	
	var _constants = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function createFirestoreInstance(firebase, configs, dispatch) {
	  var defaultInternals = {
	    listeners: {},
	    config: _objectSpread({}, _constants.defaultConfig, {}, configs)
	  };
	  firebase._ = (0, _merge2.default)(defaultInternals, firebase._);
	  var aliases = [{
	    action: _actions.firestoreActions.deleteRef,
	    name: 'delete'
	  }, {
	    action: _actions.firestoreActions.setListener,
	    name: 'onSnapshot'
	  }];
	  var methods = (0, _actions2.mapWithFirebaseAndDispatch)(firebase, dispatch, _actions.firestoreActions, aliases);
	
	  var methodsFromFirestore = _constants.methodsToAddFromFirestore.reduce(function (acc, methodName) {
	    return firebase.firestore && typeof firebase.firestore()[methodName] === 'function' ? _objectSpread({}, acc, _defineProperty({}, methodName, firebase.firestore()[methodName].bind(firebase.firestore()))) : acc;
	  }, {});
	
	  return Object.assign(methodsFromFirestore, firebase.firestore, {
	    _: firebase._
	  }, configs.helpersNamespace ? _defineProperty({}, configs.helpersNamespace, methods) : methods);
	}

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "enhancer", {
	  enumerable: true,
	  get: function get() {
	    return _enhancer.default;
	  }
	});
	Object.defineProperty(exports, "reduxFirestore", {
	  enumerable: true,
	  get: function get() {
	    return _enhancer.default;
	  }
	});
	Object.defineProperty(exports, "getFirestore", {
	  enumerable: true,
	  get: function get() {
	    return _enhancer.getFirestore;
	  }
	});
	Object.defineProperty(exports, "reducer", {
	  enumerable: true,
	  get: function get() {
	    return _reducer.default;
	  }
	});
	Object.defineProperty(exports, "firestoreReducer", {
	  enumerable: true,
	  get: function get() {
	    return _reducer.default;
	  }
	});
	Object.defineProperty(exports, "actions", {
	  enumerable: true,
	  get: function get() {
	    return _actions.firestoreActions;
	  }
	});
	Object.defineProperty(exports, "createFirestoreInstance", {
	  enumerable: true,
	  get: function get() {
	    return _createFirestoreInstance.default;
	  }
	});
	Object.defineProperty(exports, "constants", {
	  enumerable: true,
	  get: function get() {
	    return _constants.default;
	  }
	});
	Object.defineProperty(exports, "actionTypes", {
	  enumerable: true,
	  get: function get() {
	    return _constants.actionTypes;
	  }
	});
	Object.defineProperty(exports, "middleware", {
	  enumerable: true,
	  get: function get() {
	    return _middleware.default;
	  }
	});
	Object.defineProperty(exports, "CALL_FIRESTORE", {
	  enumerable: true,
	  get: function get() {
	    return _middleware.CALL_FIRESTORE;
	  }
	});
	Object.defineProperty(exports, "getSnapshotByObject", {
	  enumerable: true,
	  get: function get() {
	    return _query.getSnapshotByObject;
	  }
	});
	exports.default = exports.version = void 0;
	
	var _enhancer = _interopRequireWildcard(__webpack_require__(559));
	
	var _reducer = _interopRequireDefault(__webpack_require__(561));
	
	var _actions = __webpack_require__(332);
	
	var _createFirestoreInstance = _interopRequireDefault(__webpack_require__(333));
	
	var _constants = _interopRequireWildcard(__webpack_require__(8));
	
	var _middleware = _interopRequireWildcard(__webpack_require__(560));
	
	var _query = __webpack_require__(45);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
	
	var version = "0.13.0";
	exports.version = version;
	var _default = {
	  version: version,
	  reducer: _reducer.default,
	  firestoreReducer: _reducer.default,
	  enhancer: _enhancer.default,
	  reduxFirestore: _enhancer.default,
	  createFirestoreInstance: _createFirestoreInstance.default,
	  actions: _actions.firestoreActions,
	  getFirestore: _enhancer.getFirestore,
	  getSnapshotByObject: _query.getSnapshotByObject,
	  constants: _constants.default,
	  actionTypes: _constants.actionTypes,
	  middleware: _middleware.default,
	  CALL_FIRESTORE: _middleware.CALL_FIRESTORE
	};
	exports.default = _default;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapInDispatch = wrapInDispatch;
	exports.mapWithFirebaseAndDispatch = mapWithFirebaseAndDispatch;
	
	var _mapValues2 = _interopRequireDefault(__webpack_require__(119));
	
	var _isObject2 = _interopRequireDefault(__webpack_require__(4));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
	
	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
	
	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
	
	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
	
	function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }
	
	function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }
	
	function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
	
	function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
	
	function makePayload(_ref, valToPass) {
	  var payload = _ref.payload;
	  return typeof payload === 'function' ? payload(valToPass) : payload;
	}
	
	function wrapInDispatch(dispatch, _ref2) {
	  var ref = _ref2.ref,
	      _ref2$meta = _ref2.meta,
	      meta = _ref2$meta === void 0 ? {} : _ref2$meta,
	      method = _ref2.method,
	      _ref2$args = _ref2.args,
	      args = _ref2$args === void 0 ? [] : _ref2$args,
	      types = _ref2.types;
	
	  var _types = _slicedToArray(types, 3),
	      requestingType = _types[0],
	      successType = _types[1],
	      errorType = _types[2];
	
	  dispatch({
	    type: (0, _isObject2.default)(requestingType) ? requestingType.type : requestingType,
	    meta: meta,
	    payload: (0, _isObject2.default)(requestingType) ? requestingType.payload : {
	      args: args
	    }
	  });
	  return ref[method].apply(ref, _toConsumableArray(args)).then(function (result) {
	    var successIsObject = (0, _isObject2.default)(successType);
	    var actionObj = {
	      type: successIsObject ? successType.type : successType,
	      meta: meta,
	      payload: successIsObject && successType.payload ? makePayload(successType, result) : {
	        args: args
	      }
	    };
	
	    if (successIsObject && successType.preserve) {
	      actionObj.preserve = successType.preserve;
	    }
	
	    if (successIsObject && successType.merge) {
	      actionObj.merge = successType.merge;
	    }
	
	    dispatch(actionObj);
	    return result;
	  }).catch(function (err) {
	    dispatch({
	      type: errorType,
	      meta: meta,
	      payload: err
	    });
	    return Promise.reject(err);
	  });
	}
	
	function createWithFirebaseAndDispatch(firebase, dispatch) {
	  return function (func) {
	    return function () {
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return func.apply(firebase, [firebase, dispatch].concat(args));
	    };
	  };
	}
	
	function mapWithFirebaseAndDispatch(firebase, dispatch, actions, aliases) {
	  var withFirebaseAndDispatch = createWithFirebaseAndDispatch(firebase, dispatch);
	  return _objectSpread({}, (0, _mapValues2.default)(actions, withFirebaseAndDispatch), {}, aliases.reduce(function (acc, _ref3) {
	    var action = _ref3.action,
	        name = _ref3.name;
	    return _objectSpread({}, acc, _defineProperty({}, name, withFirebaseAndDispatch(action)));
	  }, {}));
	}

/***/ },
/* 336 */
/***/ function(module, exports) {

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return self;
	}
	
	module.exports = _assertThisInitialized;

/***/ },
/* 337 */
/***/ function(module, exports) {

	function _typeof(obj) {
	  "@babel/helpers - typeof";
	
	  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return typeof obj;
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	    };
	  }
	
	  return _typeof(obj);
	}
	
	module.exports = _typeof;

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {(function() {var firebase = __webpack_require__(79).default;/*
	
	 Copyright The Closure Library Authors.
	 SPDX-License-Identifier: Apache-2.0
	*/
	var k,aa="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};function ba(a){a=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global,a];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}return globalThis}var ca=ba(this);
	function da(a,b){if(b){var c=ca;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}function ea(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function fa(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:ea(a)}}
	da("Promise",function(a){function b(g){this.b=0;this.c=void 0;this.a=[];var h=this.f();try{g(h.resolve,h.reject)}catch(m){h.reject(m)}}function c(){this.a=null}function d(g){return g instanceof b?g:new b(function(h){h(g)})}if(a)return a;c.prototype.b=function(g){if(null==this.a){this.a=[];var h=this;this.c(function(){h.g()})}this.a.push(g)};var e=ca.setTimeout;c.prototype.c=function(g){e(g,0)};c.prototype.g=function(){for(;this.a&&this.a.length;){var g=this.a;this.a=[];for(var h=0;h<g.length;++h){var m=
	g[h];g[h]=null;try{m()}catch(p){this.f(p)}}}this.a=null};c.prototype.f=function(g){this.c(function(){throw g;})};b.prototype.f=function(){function g(p){return function(v){m||(m=!0,p.call(h,v))}}var h=this,m=!1;return{resolve:g(this.m),reject:g(this.g)}};b.prototype.m=function(g){if(g===this)this.g(new TypeError("A Promise cannot resolve to itself"));else if(g instanceof b)this.s(g);else{a:switch(typeof g){case "object":var h=null!=g;break a;case "function":h=!0;break a;default:h=!1}h?this.u(g):this.h(g)}};
	b.prototype.u=function(g){var h=void 0;try{h=g.then}catch(m){this.g(m);return}"function"==typeof h?this.w(h,g):this.h(g)};b.prototype.g=function(g){this.i(2,g)};b.prototype.h=function(g){this.i(1,g)};b.prototype.i=function(g,h){if(0!=this.b)throw Error("Cannot settle("+g+", "+h+"): Promise already settled in state"+this.b);this.b=g;this.c=h;this.l()};b.prototype.l=function(){if(null!=this.a){for(var g=0;g<this.a.length;++g)f.b(this.a[g]);this.a=null}};var f=new c;b.prototype.s=function(g){var h=this.f();
	g.Oa(h.resolve,h.reject)};b.prototype.w=function(g,h){var m=this.f();try{g.call(h,m.resolve,m.reject)}catch(p){m.reject(p)}};b.prototype.then=function(g,h){function m(A,Q){return"function"==typeof A?function(xa){try{p(A(xa))}catch(ud){v(ud)}}:Q}var p,v,C=new b(function(A,Q){p=A;v=Q});this.Oa(m(g,p),m(h,v));return C};b.prototype.catch=function(g){return this.then(void 0,g)};b.prototype.Oa=function(g,h){function m(){switch(p.b){case 1:g(p.c);break;case 2:h(p.c);break;default:throw Error("Unexpected state: "+
	p.b);}}var p=this;null==this.a?f.b(m):this.a.push(m)};b.resolve=d;b.reject=function(g){return new b(function(h,m){m(g)})};b.race=function(g){return new b(function(h,m){for(var p=fa(g),v=p.next();!v.done;v=p.next())d(v.value).Oa(h,m)})};b.all=function(g){var h=fa(g),m=h.next();return m.done?d([]):new b(function(p,v){function C(xa){return function(ud){A[xa]=ud;Q--;0==Q&&p(A)}}var A=[],Q=0;do A.push(void 0),Q++,d(m.value).Oa(C(A.length-1),v),m=h.next();while(!m.done)})};return b});
	var ha=ha||{},l=this||self,ia=/^[\w+/_-]+[=]{0,2}$/,ja=null;function ka(){}
	function la(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
	else if("function"==b&&"undefined"==typeof a.call)return"object";return b}function ma(a){var b=la(a);return"array"==b||"object"==b&&"number"==typeof a.length}function n(a){return"function"==la(a)}function q(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}function na(a){return Object.prototype.hasOwnProperty.call(a,oa)&&a[oa]||(a[oa]=++pa)}var oa="closure_uid_"+(1E9*Math.random()>>>0),pa=0;function qa(a,b,c){return a.call.apply(a.bind,arguments)}
	function ra(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?r=qa:r=ra;return r.apply(null,arguments)}
	function sa(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}var ta=Date.now||function(){return+new Date};function t(a,b){function c(){}c.prototype=b.prototype;a.Za=b.prototype;a.prototype=new c;a.prototype.constructor=a};/*
	
	 Copyright 2017 Google Inc.
	
	 Licensed under the Apache License, Version 2.0 (the "License");
	 you may not use this file except in compliance with the License.
	 You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	 Unless required by applicable law or agreed to in writing, software
	 distributed under the License is distributed on an "AS IS" BASIS,
	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 See the License for the specific language governing permissions and
	 limitations under the License.
	*/
	function u(a,b,c){this.code=ua+a;this.message=b||va[a]||"";this.a=c||null}t(u,Error);u.prototype.v=function(){var a={code:this.code,message:this.message};this.a&&(a.serverResponse=this.a);return a};u.prototype.toJSON=function(){return this.v()};function wa(a){var b=a&&a.code;return b?new u(b.substring(ua.length),a.message,a.serverResponse):null}
	var ua="auth/",va={"admin-restricted-operation":"This operation is restricted to administrators only.","argument-error":"","app-not-authorized":"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.","app-not-installed":"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
	"captcha-check-failed":"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.","code-expired":"The SMS code has expired. Please re-send the verification code to try again.","cordova-not-ready":"Cordova framework is not ready.","cors-unsupported":"This browser is not supported.","credential-already-in-use":"This credential is already associated with a different user account.","custom-token-mismatch":"The custom token corresponds to a different audience.",
	"requires-recent-login":"This operation is sensitive and requires recent authentication. Log in again before retrying this request.","dynamic-link-not-activated":"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.","email-change-needs-verification":"Multi-factor users must always have a verified email.","email-already-in-use":"The email address is already in use by another account.","expired-action-code":"The action code has expired. ","cancelled-popup-request":"This operation has been cancelled due to another conflicting popup being opened.",
	"internal-error":"An internal error has occurred.","invalid-app-credential":"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.","invalid-app-id":"The mobile app identifier is not registed for the current project.","invalid-user-token":"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.","invalid-auth-event":"An internal error has occurred.",
	"invalid-verification-code":"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.","invalid-continue-uri":"The continue URL provided in the request is invalid.","invalid-cordova-configuration":"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
	"invalid-custom-token":"The custom token format is incorrect. Please check the documentation.","invalid-dynamic-link-domain":"The provided dynamic link domain is not configured or authorized for the current project.","invalid-email":"The email address is badly formatted.","invalid-api-key":"Your API key is invalid, please check you have copied it correctly.","invalid-cert-hash":"The SHA-1 certificate hash provided is invalid.","invalid-credential":"The supplied auth credential is malformed or has expired.",
	"invalid-message-payload":"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-multi-factor-session":"The request does not contain a valid proof of first factor successful sign-in.","invalid-oauth-provider":"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.","invalid-oauth-client-id":"The OAuth client ID provided is either invalid or does not match the specified API key.",
	"unauthorized-domain":"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.","invalid-action-code":"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.","wrong-password":"The password is invalid or the user does not have a password.","invalid-persistence-type":"The specified persistence type is invalid. It can only be local, session or none.","invalid-phone-number":"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
	"invalid-provider-id":"The specified provider ID is invalid.","invalid-recipient-email":"The email corresponding to this action failed to send as the provided recipient email address is invalid.","invalid-sender":"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-verification-id":"The verification ID used to create the phone auth credential is invalid.","invalid-tenant-id":"The Auth instance's tenant ID is invalid.",
	"multi-factor-info-not-found":"The user does not have a second factor matching the identifier provided.","multi-factor-auth-required":"Proof of ownership of a second factor is required to complete sign-in.","missing-android-pkg-name":"An Android Package Name must be provided if the Android App is required to be installed.","auth-domain-config-required":"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.","missing-app-credential":"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
	"missing-verification-code":"The phone auth credential was created with an empty SMS verification code.","missing-continue-uri":"A continue URL must be provided in the request.","missing-iframe-start":"An internal error has occurred.","missing-ios-bundle-id":"An iOS Bundle ID must be provided if an App Store ID is provided.","missing-multi-factor-info":"No second factor identifier is provided.","missing-multi-factor-session":"The request is missing proof of first factor successful sign-in.","missing-or-invalid-nonce":"The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",
	"missing-phone-number":"To send verification codes, provide a phone number for the recipient.","missing-verification-id":"The phone auth credential was created with an empty verification ID.","app-deleted":"This instance of FirebaseApp has been deleted.","account-exists-with-different-credential":"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.","network-request-failed":"A network error (such as timeout, interrupted connection or unreachable host) has occurred.",
	"no-auth-event":"An internal error has occurred.","no-such-provider":"User was not linked to an account with the given provider.","null-user":"A null user object was provided as the argument for an operation which requires a non-null user object.","operation-not-allowed":"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.","operation-not-supported-in-this-environment":'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
	"popup-blocked":"Unable to establish a connection with the popup. It may have been blocked by the browser.","popup-closed-by-user":"The popup has been closed by the user before finalizing the operation.","provider-already-linked":"User can only be linked to one identity for the given provider.","quota-exceeded":"The project's quota for this operation has been exceeded.","redirect-cancelled-by-user":"The redirect operation has been cancelled by the user before finalizing.","redirect-operation-pending":"A redirect sign-in operation is already pending.",
	"rejected-credential":"The request contains malformed or mismatching credentials.","second-factor-already-in-use":"The second factor is already enrolled on this account.","maximum-second-factor-count-exceeded":"The maximum allowed number of second factors on a user has been exceeded.","tenant-id-mismatch":"The provided tenant ID does not match the Auth instance's tenant ID",timeout:"The operation has timed out.","user-token-expired":"The user's credential is no longer valid. The user must sign in again.",
	"too-many-requests":"We have blocked all requests from this device due to unusual activity. Try again later.","unauthorized-continue-uri":"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.","unsupported-first-factor":"Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.","unsupported-persistence-type":"The current environment does not support the specified persistence type.","unsupported-tenant-operation":"This operation is not supported in a multi-tenant context.",
	"unverified-email":"The operation requires a verified email.","user-cancelled":"The user did not grant your application the permissions it requested.","user-not-found":"There is no user record corresponding to this identifier. The user may have been deleted.","user-disabled":"The user account has been disabled by an administrator.","user-mismatch":"The supplied credentials do not correspond to the previously signed in user.","user-signed-out":"","weak-password":"The password must be 6 characters long or more.",
	"web-storage-unsupported":"This browser is not supported or 3rd party cookies and data may be disabled."};var ya={hd:{Ra:"https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",Xa:"https://staging-securetoken.sandbox.googleapis.com/v1/token",Ua:"https://staging-identitytoolkit.sandbox.googleapis.com/v2/",id:"b"},pd:{Ra:"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",Xa:"https://securetoken.googleapis.com/v1/token",Ua:"https://identitytoolkit.googleapis.com/v2/",id:"p"},rd:{Ra:"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",
	Xa:"https://staging-securetoken.sandbox.googleapis.com/v1/token",Ua:"https://staging-identitytoolkit.sandbox.googleapis.com/v2/",id:"s"},sd:{Ra:"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",Xa:"https://test-securetoken.sandbox.googleapis.com/v1/token",Ua:"https://test-identitytoolkit.sandbox.googleapis.com/v2/",id:"t"}};
	function za(a){for(var b in ya)if(ya[b].id===a)return a=ya[b],{firebaseEndpoint:a.Ra,secureTokenEndpoint:a.Xa,identityPlatformEndpoint:a.Ua};return null}var Aa;Aa=za("__EID__")?"__EID__":void 0;function Ba(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};function w(a){if(Error.captureStackTrace)Error.captureStackTrace(this,w);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}t(w,Error);w.prototype.name="CustomError";function Ca(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");w.call(this,c+a[d])}t(Ca,w);Ca.prototype.name="AssertionError";function Da(a,b){throw new Ca("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1));};function Ea(a,b){this.c=a;this.f=b;this.b=0;this.a=null}Ea.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function Fa(a,b){a.f(b);100>a.b&&(a.b++,b.next=a.a,a.a=b)};function Ga(){this.b=this.a=null}var Ia=new Ea(function(){return new Ha},function(a){a.reset()});Ga.prototype.add=function(a,b){var c=Ia.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function Ja(){var a=Ka,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function Ha(){this.next=this.b=this.a=null}Ha.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};Ha.prototype.reset=function(){this.next=this.b=this.a=null};var La=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},x=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e="string"===typeof a?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};
	function Ma(a,b){for(var c="string"===typeof a?a.split(""):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)}
	var Na=Array.prototype.filter?function(a,b){return Array.prototype.filter.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=[],e=0,f="string"===typeof a?a.split(""):a,g=0;g<c;g++)if(g in f){var h=f[g];b.call(void 0,h,g,a)&&(d[e++]=h)}return d},Oa=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e="string"===typeof a?a.split(""):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Pa=Array.prototype.some?function(a,
	b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d="string"===typeof a?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};function Qa(a){a:{var b=Ra;for(var c=a.length,d="string"===typeof a?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}function Sa(a,b){return 0<=La(a,b)}
	function Ta(a,b){b=La(a,b);var c;(c=0<=b)&&Array.prototype.splice.call(a,b,1);return c}function Ua(a,b){var c=0;Ma(a,function(d,e){b.call(void 0,d,e,a)&&1==Array.prototype.splice.call(a,e,1).length&&c++})}function Va(a){return Array.prototype.concat.apply([],arguments)}function Wa(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var Xa=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]},Ya=/&/g,Za=/</g,$a=/>/g,ab=/"/g,bb=/'/g,cb=/\x00/g,db=/[\x00&<>"']/;function y(a,b){return-1!=a.indexOf(b)}function eb(a,b){return a<b?-1:a>b?1:0};var fb;a:{var gb=l.navigator;if(gb){var hb=gb.userAgent;if(hb){fb=hb;break a}}fb=""}function z(a){return y(fb,a)};function ib(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function jb(a){for(var b in a)return!1;return!0}function kb(a){var b={},c;for(c in a)b[c]=a[c];return b}var lb="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function B(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<lb.length;f++)c=lb[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function mb(a,b){a:{try{var c=a&&a.ownerDocument,d=c&&(c.defaultView||c.parentWindow);d=d||l;if(d.Element&&d.Location){var e=d;break a}}catch(g){}e=null}if(e&&"undefined"!=typeof e[b]&&(!a||!(a instanceof e[b])&&(a instanceof e.Location||a instanceof e.Element))){if(q(a))try{var f=a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(g){f="<object could not be stringified>"}else f=void 0===a?"undefined":null===a?"null":typeof a;Da("Argument is not a %s (or a non-Element, non-Location mock); got: %s",
	b,f)}};function nb(a,b){this.a=a===ob&&b||"";this.b=pb}nb.prototype.ra=!0;nb.prototype.qa=function(){return this.a};nb.prototype.toString=function(){return"Const{"+this.a+"}"};function qb(a){if(a instanceof nb&&a.constructor===nb&&a.b===pb)return a.a;Da("expected object of type Const, got '"+a+"'");return"type_error:Const"}var pb={},ob={},rb=new nb(ob,"");function sb(a,b){this.a=a===tb&&b||"";this.b=ub}sb.prototype.ra=!0;sb.prototype.qa=function(){return this.a.toString()};sb.prototype.toString=function(){return"TrustedResourceUrl{"+this.a+"}"};function vb(a){if(a instanceof sb&&a.constructor===sb&&a.b===ub)return a.a;Da("expected object of type TrustedResourceUrl, got '"+a+"' of type "+la(a));return"type_error:TrustedResourceUrl"}
	function wb(a,b){var c=qb(a);if(!xb.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(yb,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof nb?qb(d):encodeURIComponent(String(d))});return new sb(tb,a)}
	var yb=/%{(\w+)}/g,xb=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,ub={},tb={};function zb(a,b){this.a=a===Ab&&b||"";this.b=Bb}zb.prototype.ra=!0;zb.prototype.qa=function(){return this.a.toString()};zb.prototype.toString=function(){return"SafeUrl{"+this.a+"}"};function Cb(a){if(a instanceof zb&&a.constructor===zb&&a.b===Bb)return a.a;Da("expected object of type SafeUrl, got '"+a+"' of type "+la(a));return"type_error:SafeUrl"}var Db=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
	function Eb(a){if(a instanceof zb)return a;a="object"==typeof a&&a.ra?a.qa():String(a);Db.test(a)||(a="about:invalid#zClosurez");return new zb(Ab,a)}var Bb={},Ab={};function Fb(){this.a="";this.b=Gb}Fb.prototype.ra=!0;Fb.prototype.qa=function(){return this.a.toString()};Fb.prototype.toString=function(){return"SafeHtml{"+this.a+"}"};function Hb(a){if(a instanceof Fb&&a.constructor===Fb&&a.b===Gb)return a.a;Da("expected object of type SafeHtml, got '"+a+"' of type "+la(a));return"type_error:SafeHtml"}var Gb={};function Ib(a){var b=new Fb;b.a=a;return b}Ib("<!DOCTYPE html>");var Jb=Ib("");Ib("<br>");function Kb(a){var b=new sb(tb,qb(rb));mb(a,"HTMLIFrameElement");a.src=vb(b).toString()}function Lb(a,b){mb(a,"HTMLScriptElement");a.src=vb(b);if(null===ja)b:{b=l.document;if((b=b.querySelector&&b.querySelector("script[nonce]"))&&(b=b.nonce||b.getAttribute("nonce"))&&ia.test(b)){ja=b;break b}ja=""}b=ja;b&&a.setAttribute("nonce",b)};function Mb(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")}function Nb(a){db.test(a)&&(-1!=a.indexOf("&")&&(a=a.replace(Ya,"&amp;")),-1!=a.indexOf("<")&&(a=a.replace(Za,"&lt;")),-1!=a.indexOf(">")&&(a=a.replace($a,"&gt;")),-1!=a.indexOf('"')&&(a=a.replace(ab,"&quot;")),-1!=a.indexOf("'")&&(a=a.replace(bb,"&#39;")),-1!=a.indexOf("\x00")&&(a=a.replace(cb,"&#0;")));return a};function Ob(a){Ob[" "](a);return a}Ob[" "]=ka;function Pb(a,b){var c=Qb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Rb=z("Opera"),Sb=z("Trident")||z("MSIE"),Tb=z("Edge"),Ub=Tb||Sb,Vb=z("Gecko")&&!(y(fb.toLowerCase(),"webkit")&&!z("Edge"))&&!(z("Trident")||z("MSIE"))&&!z("Edge"),Wb=y(fb.toLowerCase(),"webkit")&&!z("Edge");function Xb(){var a=l.document;return a?a.documentMode:void 0}var Yb;
	a:{var Zb="",$b=function(){var a=fb;if(Vb)return/rv:([^\);]+)(\)|;)/.exec(a);if(Tb)return/Edge\/([\d\.]+)/.exec(a);if(Sb)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(Wb)return/WebKit\/(\S+)/.exec(a);if(Rb)return/(?:Version)[ \/]?(\S+)/.exec(a)}();$b&&(Zb=$b?$b[1]:"");if(Sb){var ac=Xb();if(null!=ac&&ac>parseFloat(Zb)){Yb=String(ac);break a}}Yb=Zb}var Qb={};
	function bc(a){return Pb(a,function(){for(var b=0,c=Xa(String(Yb)).split("."),d=Xa(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||"",h=d[f]||"";do{g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];h=/(\d*)(\D*)(.*)/.exec(h)||["","","",""];if(0==g[0].length&&0==h[0].length)break;b=eb(0==g[1].length?0:parseInt(g[1],10),0==h[1].length?0:parseInt(h[1],10))||eb(0==g[2].length,0==h[2].length)||eb(g[2],h[2]);g=g[3];h=h[3]}while(0==b)}return 0<=b})}var cc;
	cc=l.document&&Sb?Xb():void 0;try{(new self.OffscreenCanvas(0,0)).getContext("2d")}catch(a){}var dc=!Sb||9<=Number(cc);function ec(a){var b=document;return"string"===typeof a?b.getElementById(a):a}function fc(a,b){ib(b,function(c,d){c&&"object"==typeof c&&c.ra&&(c=c.qa());"style"==d?a.style.cssText=c:"class"==d?a.className=c:"for"==d?a.htmlFor=c:gc.hasOwnProperty(d)?a.setAttribute(gc[d],c):0==d.lastIndexOf("aria-",0)||0==d.lastIndexOf("data-",0)?a.setAttribute(d,c):a[d]=c})}
	var gc={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};
	function hc(a,b,c){var d=arguments,e=document,f=String(d[0]),g=d[1];if(!dc&&g&&(g.name||g.type)){f=["<",f];g.name&&f.push(' name="',Nb(g.name),'"');if(g.type){f.push(' type="',Nb(g.type),'"');var h={};B(h,g);delete h.type;g=h}f.push(">");f=f.join("")}f=ic(e,f);g&&("string"===typeof g?f.className=g:Array.isArray(g)?f.className=g.join(" "):fc(f,g));2<d.length&&jc(e,f,d);return f}
	function jc(a,b,c){function d(g){g&&b.appendChild("string"===typeof g?a.createTextNode(g):g)}for(var e=2;e<c.length;e++){var f=c[e];!ma(f)||q(f)&&0<f.nodeType?d(f):x(kc(f)?Wa(f):f,d)}}function ic(a,b){b=String(b);"application/xhtml+xml"===a.contentType&&(b=b.toLowerCase());return a.createElement(b)}function kc(a){if(a&&"number"==typeof a.length){if(q(a))return"function"==typeof a.item||"string"==typeof a.item;if(n(a))return"function"==typeof a.item}return!1};function lc(a){l.setTimeout(function(){throw a;},0)}var mc;
	function nc(){var a=l.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!z("Presto")&&(a=function(){var e=ic(document,"IFRAME");e.style.display="none";Kb(e);document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.write(Hb(Jb));e.close();var g="callImmediate"+Math.random(),h="file:"==f.location.protocol?"*":f.location.protocol+"//"+f.location.host;e=r(function(m){if(("*"==h||m.origin==h)&&m.data==g)this.port1.onmessage()},
	this);f.addEventListener("message",e,!1);this.port1={};this.port2={postMessage:function(){f.postMessage(g,h)}}});if("undefined"!==typeof a&&!z("Trident")&&!z("MSIE")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var e=c.Db;c.Db=null;e()}};return function(e){d.next={Db:e};d=d.next;b.port2.postMessage(0)}}return function(e){l.setTimeout(e,0)}};function oc(a,b){pc||qc();rc||(pc(),rc=!0);Ka.add(a,b)}var pc;function qc(){if(l.Promise&&l.Promise.resolve){var a=l.Promise.resolve(void 0);pc=function(){a.then(sc)}}else pc=function(){var b=sc;!n(l.setImmediate)||l.Window&&l.Window.prototype&&!z("Edge")&&l.Window.prototype.setImmediate==l.setImmediate?(mc||(mc=nc()),mc(b)):l.setImmediate(b)}}var rc=!1,Ka=new Ga;function sc(){for(var a;a=Ja();){try{a.a.call(a.b)}catch(b){lc(b)}Fa(Ia,a)}rc=!1};function D(a,b){this.a=tc;this.i=void 0;this.f=this.b=this.c=null;this.g=this.h=!1;if(a!=ka)try{var c=this;a.call(b,function(d){uc(c,vc,d)},function(d){if(!(d instanceof wc))try{if(d instanceof Error)throw d;throw Error("Promise rejected.");}catch(e){}uc(c,xc,d)})}catch(d){uc(this,xc,d)}}var tc=0,vc=2,xc=3;function yc(){this.next=this.f=this.b=this.g=this.a=null;this.c=!1}yc.prototype.reset=function(){this.f=this.b=this.g=this.a=null;this.c=!1};var zc=new Ea(function(){return new yc},function(a){a.reset()});
	function Ac(a,b,c){var d=zc.get();d.g=a;d.b=b;d.f=c;return d}function E(a){if(a instanceof D)return a;var b=new D(ka);uc(b,vc,a);return b}function F(a){return new D(function(b,c){c(a)})}function Bc(a,b,c){Cc(a,b,c,null)||oc(sa(b,a))}function Dc(a){return new D(function(b,c){var d=a.length,e=[];if(d)for(var f=function(p,v){d--;e[p]=v;0==d&&b(e)},g=function(p){c(p)},h=0,m;h<a.length;h++)m=a[h],Bc(m,sa(f,h),g);else b(e)})}
	function Ec(a){return new D(function(b){var c=a.length,d=[];if(c)for(var e=function(h,m,p){c--;d[h]=m?{Mb:!0,value:p}:{Mb:!1,reason:p};0==c&&b(d)},f=0,g;f<a.length;f++)g=a[f],Bc(g,sa(e,f,!0),sa(e,f,!1));else b(d)})}D.prototype.then=function(a,b,c){return Fc(this,n(a)?a:null,n(b)?b:null,c)};D.prototype.$goog_Thenable=!0;k=D.prototype;k.ma=function(a,b){a=Ac(a,a,b);a.c=!0;Gc(this,a);return this};k.o=function(a,b){return Fc(this,null,a,b)};
	k.cancel=function(a){if(this.a==tc){var b=new wc(a);oc(function(){Hc(this,b)},this)}};function Hc(a,b){if(a.a==tc)if(a.c){var c=a.c;if(c.b){for(var d=0,e=null,f=null,g=c.b;g&&(g.c||(d++,g.a==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(c.a==tc&&1==d?Hc(c,b):(f?(d=f,d.next==c.f&&(c.f=d),d.next=d.next.next):Ic(c),Jc(c,e,xc,b)))}a.c=null}else uc(a,xc,b)}function Gc(a,b){a.b||a.a!=vc&&a.a!=xc||Kc(a);a.f?a.f.next=b:a.b=b;a.f=b}
	function Fc(a,b,c,d){var e=Ac(null,null,null);e.a=new D(function(f,g){e.g=b?function(h){try{var m=b.call(d,h);f(m)}catch(p){g(p)}}:f;e.b=c?function(h){try{var m=c.call(d,h);void 0===m&&h instanceof wc?g(h):f(m)}catch(p){g(p)}}:g});e.a.c=a;Gc(a,e);return e.a}k.Yc=function(a){this.a=tc;uc(this,vc,a)};k.Zc=function(a){this.a=tc;uc(this,xc,a)};
	function uc(a,b,c){a.a==tc&&(a===c&&(b=xc,c=new TypeError("Promise cannot resolve to itself")),a.a=1,Cc(c,a.Yc,a.Zc,a)||(a.i=c,a.a=b,a.c=null,Kc(a),b!=xc||c instanceof wc||Lc(a,c)))}function Cc(a,b,c,d){if(a instanceof D)return Gc(a,Ac(b||ka,c||null,d)),!0;if(Ba(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(n(e))return Mc(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1}
	function Mc(a,b,c,d,e){function f(m){h||(h=!0,d.call(e,m))}function g(m){h||(h=!0,c.call(e,m))}var h=!1;try{b.call(a,g,f)}catch(m){f(m)}}function Kc(a){a.h||(a.h=!0,oc(a.ec,a))}function Ic(a){var b=null;a.b&&(b=a.b,a.b=b.next,b.next=null);a.b||(a.f=null);return b}k.ec=function(){for(var a;a=Ic(this);)Jc(this,a,this.a,this.i);this.h=!1};
	function Jc(a,b,c,d){if(c==xc&&b.b&&!b.c)for(;a&&a.g;a=a.c)a.g=!1;if(b.a)b.a.c=null,Nc(b,c,d);else try{b.c?b.g.call(b.f):Nc(b,c,d)}catch(e){Oc.call(null,e)}Fa(zc,b)}function Nc(a,b,c){b==vc?a.g.call(a.f,c):a.b&&a.b.call(a.f,c)}function Lc(a,b){a.g=!0;oc(function(){a.g&&Oc.call(null,b)})}var Oc=lc;function wc(a){w.call(this,a)}t(wc,w);wc.prototype.name="cancel";function Pc(){0!=Qc&&(Rc[na(this)]=this);this.wa=this.wa;this.na=this.na}var Qc=0,Rc={};Pc.prototype.wa=!1;function Sc(a){if(!a.wa&&(a.wa=!0,a.Ba(),0!=Qc)){var b=na(a);if(0!=Qc&&a.na&&0<a.na.length)throw Error(a+" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete Rc[b]}}Pc.prototype.Ba=function(){if(this.na)for(;this.na.length;)this.na.shift()()};var Tc=Object.freeze||function(a){return a};var Uc=!Sb||9<=Number(cc),Vc=Sb&&!bc("9"),Wc=function(){if(!l.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{l.addEventListener("test",ka,b),l.removeEventListener("test",ka,b)}catch(c){}return a}();function Xc(a,b){this.type=a;this.b=this.target=b;this.defaultPrevented=!1}Xc.prototype.preventDefault=function(){this.defaultPrevented=!0};function Yc(a,b){Xc.call(this,a?a.type:"");this.relatedTarget=this.b=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType="";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.b=b;if(b=a.relatedTarget){if(Vb){a:{try{Ob(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else"mouseover"==
	c?b=a.fromElement:"mouseout"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||"";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=
	a.metaKey;this.pointerId=a.pointerId||0;this.pointerType="string"===typeof a.pointerType?a.pointerType:Zc[a.pointerType]||"";this.a=a;a.defaultPrevented&&this.preventDefault()}}t(Yc,Xc);var Zc=Tc({2:"touch",3:"pen",4:"mouse"});Yc.prototype.preventDefault=function(){Yc.Za.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Vc)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};Yc.prototype.f=function(){return this.a};var $c="closure_listenable_"+(1E6*Math.random()|0),ad=0;function bd(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.Ta=e;this.key=++ad;this.ua=this.Na=!1}function cd(a){a.ua=!0;a.listener=null;a.proxy=null;a.src=null;a.Ta=null};function dd(a){this.src=a;this.a={};this.b=0}dd.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var g=ed(a,b,d,e);-1<g?(b=a[g],c||(b.Na=!1)):(b=new bd(b,this.src,f,!!d,e),b.Na=c,a.push(b));return b};function fd(a,b){var c=b.type;c in a.a&&Ta(a.a[c],b)&&(cd(b),0==a.a[c].length&&(delete a.a[c],a.b--))}function ed(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.ua&&f.listener==b&&f.capture==!!c&&f.Ta==d)return e}return-1};var gd="closure_lm_"+(1E6*Math.random()|0),hd={},id=0;function jd(a,b,c,d,e){if(d&&d.once)kd(a,b,c,d,e);else if(Array.isArray(b))for(var f=0;f<b.length;f++)jd(a,b[f],c,d,e);else c=ld(c),a&&a[$c]?md(a,b,c,q(d)?!!d.capture:!!d,e):nd(a,b,c,!1,d,e)}
	function nd(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=q(e)?!!e.capture:!!e,h=od(a);h||(a[gd]=h=new dd(a));c=h.add(b,c,d,g,f);if(!c.proxy){d=pd();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)Wc||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(qd(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");id++}}
	function pd(){var a=rd,b=Uc?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function kd(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)kd(a,b[f],c,d,e);else c=ld(c),a&&a[$c]?sd(a,b,c,q(d)?!!d.capture:!!d,e):nd(a,b,c,!0,d,e)}
	function td(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)td(a,b[f],c,d,e);else(d=q(d)?!!d.capture:!!d,c=ld(c),a&&a[$c])?(a=a.u,b=String(b).toString(),b in a.a&&(f=a.a[b],c=ed(f,c,d,e),-1<c&&(cd(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=od(a))&&(b=a.a[b.toString()],a=-1,b&&(a=ed(b,c,d,e)),(c=-1<a?b[a]:null)&&vd(c))}
	function vd(a){if("number"!==typeof a&&a&&!a.ua){var b=a.src;if(b&&b[$c])fd(b.u,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(qd(c),d):b.addListener&&b.removeListener&&b.removeListener(d);id--;(c=od(b))?(fd(c,a),0==c.b&&(c.src=null,b[gd]=null)):cd(a)}}}function qd(a){return a in hd?hd[a]:hd[a]="on"+a}
	function wd(a,b,c,d){var e=!0;if(a=od(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.ua&&(f=xd(f,d),e=e&&!1!==f)}return e}function xd(a,b){var c=a.listener,d=a.Ta||a.src;a.Na&&vd(a);return c.call(d,b)}
	function rd(a,b){if(a.ua)return!0;if(!Uc){if(!b)a:{b=["window","event"];for(var c=l,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new Yc(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.b;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.b=d[e];var f=wd(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.b=d[e],f=wd(d[e],a,!1,b),c=c&&f}return c}return xd(a,
	new Yc(b,this))}function od(a){a=a[gd];return a instanceof dd?a:null}var yd="__closure_events_fn_"+(1E9*Math.random()>>>0);function ld(a){if(n(a))return a;a[yd]||(a[yd]=function(b){return a.handleEvent(b)});return a[yd]};function G(){Pc.call(this);this.u=new dd(this);this.Yb=this;this.eb=null}t(G,Pc);G.prototype[$c]=!0;G.prototype.addEventListener=function(a,b,c,d){jd(this,a,b,c,d)};G.prototype.removeEventListener=function(a,b,c,d){td(this,a,b,c,d)};
	G.prototype.dispatchEvent=function(a){var b,c=this.eb;if(c)for(b=[];c;c=c.eb)b.push(c);c=this.Yb;var d=a.type||a;if("string"===typeof a)a=new Xc(a,c);else if(a instanceof Xc)a.target=a.target||c;else{var e=a;a=new Xc(d,c);B(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var g=a.b=b[f];e=zd(g,d,!0,a)&&e}g=a.b=c;e=zd(g,d,!0,a)&&e;e=zd(g,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)g=a.b=b[f],e=zd(g,d,!1,a)&&e;return e};
	G.prototype.Ba=function(){G.Za.Ba.call(this);if(this.u){var a=this.u,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,cd(d[e]);delete a.a[c];a.b--}}this.eb=null};function md(a,b,c,d,e){a.u.add(String(b),c,!1,d,e)}function sd(a,b,c,d,e){a.u.add(String(b),c,!0,d,e)}
	function zd(a,b,c,d){b=a.u.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.ua&&g.capture==c){var h=g.listener,m=g.Ta||g.src;g.Na&&fd(a.u,g);e=!1!==h.call(m,d)&&e}}return e&&!d.defaultPrevented};function Ad(a,b,c){if(n(a))c&&(a=r(a,c));else if(a&&"function"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<Number(b)?-1:l.setTimeout(a,b||0)}function Bd(a){var b=null;return(new D(function(c,d){b=Ad(function(){c(void 0)},a);-1==b&&d(Error("Failed to schedule timer."))})).o(function(c){l.clearTimeout(b);throw c;})};function Cd(a){if(a.V&&"function"==typeof a.V)return a.V();if("string"===typeof a)return a.split("");if(ma(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}function Dd(a){if(a.X&&"function"==typeof a.X)return a.X();if(!a.V||"function"!=typeof a.V){if(ma(a)||"string"===typeof a){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(var d in a)b[c++]=d;return b}}
	function Ed(a,b){if(a.forEach&&"function"==typeof a.forEach)a.forEach(b,void 0);else if(ma(a)||"string"===typeof a)x(a,b,void 0);else for(var c=Dd(a),d=Cd(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};function Fd(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof Fd)for(c=a.X(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}k=Fd.prototype;k.V=function(){Gd(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};k.X=function(){Gd(this);return this.a.concat()};
	k.clear=function(){this.b={};this.c=this.a.length=0};function Gd(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];Hd(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],Hd(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}k.get=function(a,b){return Hd(this.b,a)?this.b[a]:b};k.set=function(a,b){Hd(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};
	k.forEach=function(a,b){for(var c=this.X(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function Hd(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var Id=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/\\#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function Jd(a,b){if(a){a=a.split("&");for(var c=0;c<a.length;c++){var d=a[c].indexOf("="),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\+/g," ")):"")}}};function Kd(a,b){this.b=this.i=this.f="";this.l=null;this.g=this.c="";this.h=!1;var c;a instanceof Kd?(this.h=void 0!==b?b:a.h,Ld(this,a.f),this.i=a.i,this.b=a.b,Md(this,a.l),this.c=a.c,Nd(this,Od(a.a)),this.g=a.g):a&&(c=String(a).match(Id))?(this.h=!!b,Ld(this,c[1]||"",!0),this.i=Pd(c[2]||""),this.b=Pd(c[3]||"",!0),Md(this,c[4]),this.c=Pd(c[5]||"",!0),Nd(this,c[6]||"",!0),this.g=Pd(c[7]||"")):(this.h=!!b,this.a=new Qd(null,this.h))}
	Kd.prototype.toString=function(){var a=[],b=this.f;b&&a.push(Rd(b,Sd,!0),":");var c=this.b;if(c||"file"==b)a.push("//"),(b=this.i)&&a.push(Rd(b,Sd,!0),"@"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),c=this.l,null!=c&&a.push(":",String(c));if(c=this.c)this.b&&"/"!=c.charAt(0)&&a.push("/"),a.push(Rd(c,"/"==c.charAt(0)?Td:Ud,!0));(c=this.a.toString())&&a.push("?",c);(c=this.g)&&a.push("#",Rd(c,Vd));return a.join("")};
	Kd.prototype.resolve=function(a){var b=new Kd(this),c=!!a.f;c?Ld(b,a.f):c=!!a.i;c?b.i=a.i:c=!!a.b;c?b.b=a.b:c=null!=a.l;var d=a.c;if(c)Md(b,a.l);else if(c=!!a.c){if("/"!=d.charAt(0))if(this.b&&!this.c)d="/"+d;else{var e=b.c.lastIndexOf("/");-1!=e&&(d=b.c.substr(0,e+1)+d)}e=d;if(".."==e||"."==e)d="";else if(y(e,"./")||y(e,"/.")){d=0==e.lastIndexOf("/",0);e=e.split("/");for(var f=[],g=0;g<e.length;){var h=e[g++];"."==h?d&&g==e.length&&f.push(""):".."==h?((1<f.length||1==f.length&&""!=f[0])&&f.pop(),
	d&&g==e.length&&f.push("")):(f.push(h),d=!0)}d=f.join("/")}else d=e}c?b.c=d:c=""!==a.a.toString();c?Nd(b,Od(a.a)):c=!!a.g;c&&(b.g=a.g);return b};function Ld(a,b,c){a.f=c?Pd(b,!0):b;a.f&&(a.f=a.f.replace(/:$/,""))}function Md(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error("Bad port number "+b);a.l=b}else a.l=null}function Nd(a,b,c){b instanceof Qd?(a.a=b,Wd(a.a,a.h)):(c||(b=Rd(b,Xd)),a.a=new Qd(b,a.h))}function H(a,b,c){a.a.set(b,c)}function Yd(a,b){return a.a.get(b)}
	function Zd(a){return a instanceof Kd?new Kd(a):new Kd(a,void 0)}function $d(a,b){var c=new Kd(null,void 0);Ld(c,"https");a&&(c.b=a);b&&(c.c=b);return c}function Pd(a,b){return a?b?decodeURI(a.replace(/%25/g,"%2525")):decodeURIComponent(a):""}function Rd(a,b,c){return"string"===typeof a?(a=encodeURI(a).replace(b,ae),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),a):null}function ae(a){a=a.charCodeAt(0);return"%"+(a>>4&15).toString(16)+(a&15).toString(16)}
	var Sd=/[#\/\?@]/g,Ud=/[#\?:]/g,Td=/[#\?]/g,Xd=/[#\?@]/g,Vd=/#/g;function Qd(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}function be(a){a.a||(a.a=new Fd,a.b=0,a.c&&Jd(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\+/g," ")),c)}))}function ce(a){var b=Dd(a);if("undefined"==typeof b)throw Error("Keys are undefined");var c=new Qd(null,void 0);a=Cd(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];Array.isArray(f)?de(c,e,f):c.add(e,f)}return c}k=Qd.prototype;
	k.add=function(a,b){be(this);this.c=null;a=ee(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};function fe(a,b){be(a);b=ee(a,b);Hd(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,a=a.a,Hd(a.b,b)&&(delete a.b[b],a.c--,a.a.length>2*a.c&&Gd(a)))}k.clear=function(){this.a=this.c=null;this.b=0};function ge(a,b){be(a);b=ee(a,b);return Hd(a.a.b,b)}k.forEach=function(a,b){be(this);this.a.forEach(function(c,d){x(c,function(e){a.call(b,e,d,this)},this)},this)};
	k.X=function(){be(this);for(var a=this.a.V(),b=this.a.X(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};k.V=function(a){be(this);var b=[];if("string"===typeof a)ge(this,a)&&(b=Va(b,this.a.get(ee(this,a))));else{a=this.a.V();for(var c=0;c<a.length;c++)b=Va(b,a[c])}return b};k.set=function(a,b){be(this);this.c=null;a=ee(this,a);ge(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};
	k.get=function(a,b){if(!a)return b;a=this.V(a);return 0<a.length?String(a[0]):b};function de(a,b,c){fe(a,b);0<c.length&&(a.c=null,a.a.set(ee(a,b),Wa(c)),a.b+=c.length)}k.toString=function(){if(this.c)return this.c;if(!this.a)return"";for(var a=[],b=this.a.X(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.V(d);for(var f=0;f<d.length;f++){var g=e;""!==d[f]&&(g+="="+encodeURIComponent(String(d[f])));a.push(g)}}return this.c=a.join("&")};
	function Od(a){var b=new Qd;b.c=a.c;a.a&&(b.a=new Fd(a.a),b.b=a.b);return b}function ee(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function Wd(a,b){b&&!a.f&&(be(a),a.c=null,a.a.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(fe(this,d),de(this,e,c))},a));a.f=b};function he(a){var b=[];ie(new je,a,b);return b.join("")}function je(){}
	function ie(a,b,c){if(null==b)c.push("null");else{if("object"==typeof b){if(Array.isArray(b)){var d=b;b=d.length;c.push("[");for(var e="",f=0;f<b;f++)c.push(e),ie(a,d[f],c),e=",";c.push("]");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push("{");e="";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],"function"!=typeof f&&(c.push(e),ke(d,c),c.push(":"),ie(a,f,c),e=","));c.push("}");return}}switch(typeof b){case "string":ke(b,c);break;case "number":c.push(isFinite(b)&&
	!isNaN(b)?String(b):"null");break;case "boolean":c.push(String(b));break;case "function":c.push("null");break;default:throw Error("Unknown type: "+typeof b);}}}var le={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},me=/\uffff/.test("\uffff")?/[\\"\x00-\x1f\x7f-\uffff]/g:/[\\"\x00-\x1f\x7f-\xff]/g;
	function ke(a,b){b.push('"',a.replace(me,function(c){var d=le[c];d||(d="\\u"+(c.charCodeAt(0)|65536).toString(16).substr(1),le[c]=d);return d}),'"')};function ne(){var a=I();return Sb&&!!cc&&11==cc||/Edge\/\d+/.test(a)}function oe(){return l.window&&l.window.location.href||self&&self.location&&self.location.href||""}function pe(a,b){b=b||l.window;var c="about:blank";a&&(c=Cb(Eb(a)));b.location.href=c}function qe(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):"object"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<qe(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c}
	function re(){var a=I();a=se(a)!=te?null:(a=a.match(/\sChrome\/(\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!Sb||!cc||9<cc}function ue(a){a=(a||I()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1}function ve(a){a=a||l.window;try{a.close()}catch(b){}}
	function we(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=I().toLowerCase();d&&(b.target=d,y(c,"crios/")&&(b.target="_blank"));se(I())==xe&&(a=a||"http://localhost",b.scrollbars=!0);c=a||"";(a=b)||(a={});d=window;b=c instanceof zb?c:Eb("undefined"!=typeof c.href?c.href:String(c));c=a.target||c.target;e=[];
	for(g in a)switch(g){case "width":case "height":case "top":case "left":e.push(g+"="+a[g]);break;case "target":case "noopener":case "noreferrer":break;default:e.push(g+"="+(a[g]?1:0))}var g=e.join(",");if((z("iPhone")&&!z("iPod")&&!z("iPad")||z("iPad")||z("iPod"))&&d.navigator&&d.navigator.standalone&&c&&"_self"!=c)g=ic(document,"A"),mb(g,"HTMLAnchorElement"),b instanceof zb||b instanceof zb||(b="object"==typeof b&&b.ra?b.qa():String(b),Db.test(b)||(b="about:invalid#zClosurez"),b=new zb(Ab,b)),g.href=
	Cb(b),g.setAttribute("target",c),a.noreferrer&&g.setAttribute("rel","noreferrer"),a=document.createEvent("MouseEvent"),a.initMouseEvent("click",!0,!0,d,1),g.dispatchEvent(a),g={};else if(a.noreferrer){if(g=d.open("",c,g),a=Cb(b),g&&(Ub&&y(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'"),g.opener=null,a=Ib('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+Nb(a)+'">'),d=g.document))d.write(Hb(a)),d.close()}else(g=d.open(Cb(b),c,g))&&a.noopener&&(g.opener=null);if(g)try{g.focus()}catch(h){}return g}
	function ye(a){return new D(function(b){function c(){Bd(2E3).then(function(){if(!a||a.closed)b();else return c()})}return c()})}var ze=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,Ae=/^[^@]+@[^@]+$/;function Be(){var a=null;return(new D(function(b){"complete"==l.document.readyState?b():(a=function(){b()},kd(window,"load",a))})).o(function(b){td(window,"load",a);throw b;})}
	function Ce(){return De(void 0)?Be().then(function(){return new D(function(a,b){var c=l.document,d=setTimeout(function(){b(Error("Cordova framework is not ready."))},1E3);c.addEventListener("deviceready",function(){clearTimeout(d);a()},!1)})}):F(Error("Cordova must run in an Android or iOS file scheme."))}function De(a){a=a||I();return!("file:"!==Ee()&&"ionic:"!==Ee()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))}function Fe(){var a=l.window;try{return!(!a||a==a.top)}catch(b){return!1}}
	function Ge(){return"undefined"!==typeof l.WorkerGlobalScope&&"function"===typeof l.importScripts}function He(){return firebase.INTERNAL.hasOwnProperty("reactNative")?"ReactNative":firebase.INTERNAL.hasOwnProperty("node")?"Node":Ge()?"Worker":"Browser"}function Ie(){var a=He();return"ReactNative"===a||"Node"===a}function Je(){for(var a=50,b=[];0<a;)b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),a--;return b.join("")}
	var xe="Firefox",te="Chrome";
	function se(a){var b=a.toLowerCase();if(y(b,"opera/")||y(b,"opr/")||y(b,"opios/"))return"Opera";if(y(b,"iemobile"))return"IEMobile";if(y(b,"msie")||y(b,"trident/"))return"IE";if(y(b,"edge/"))return"Edge";if(y(b,"firefox/"))return xe;if(y(b,"silk/"))return"Silk";if(y(b,"blackberry"))return"Blackberry";if(y(b,"webos"))return"Webos";if(!y(b,"safari/")||y(b,"chrome/")||y(b,"crios/")||y(b,"android"))if(!y(b,"chrome/")&&!y(b,"crios/")||y(b,"edge/")){if(y(b,"android"))return"Android";if((a=a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/))&&
	2==a.length)return a[1]}else return te;else return"Safari";return"Other"}var Ke={jd:"FirebaseCore-web",ld:"FirebaseUI-web"};function Le(a,b){b=b||[];var c=[],d={},e;for(e in Ke)d[Ke[e]]=!0;for(e=0;e<b.length;e++)"undefined"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));c.sort();b=c;b.length||(b=["FirebaseCore-web"]);c=He();"Browser"===c?(d=I(),c=se(d)):"Worker"===c&&(d=I(),c=se(d)+"-"+c);return c+"/JsCore/"+a+"/"+b.join(",")}function I(){return l.navigator&&l.navigator.userAgent||""}
	function J(a,b){a=a.split(".");b=b||l;for(var c=0;c<a.length&&"object"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b}function Me(){try{var a=l.localStorage,b=Ne();if(a)return a.setItem(b,"1"),a.removeItem(b),ne()?!!l.indexedDB:!0}catch(c){return Ge()&&!!l.indexedDB}return!1}function Oe(){return(Pe()||"chrome-extension:"===Ee()||De())&&!Ie()&&Me()&&!Ge()}function Pe(){return"http:"===Ee()||"https:"===Ee()}function Ee(){return l.location&&l.location.protocol||null}
	function Qe(a){a=a||I();return ue(a)||se(a)==xe?!1:!0}function Re(a){return"undefined"===typeof a?null:he(a)}function Se(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b}function Te(a){if(null!==a)return JSON.parse(a)}function Ne(a){return a?a:Math.floor(1E9*Math.random()).toString()}function Ue(a){a=a||I();return"Safari"==se(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0}
	function Ve(){var a=l.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null}function We(a,b){if(a>b)throw Error("Short delay should be less than long delay!");this.a=a;this.c=b;a=I();b=He();this.b=ue(a)||"ReactNative"===b}
	We.prototype.get=function(){var a=l.navigator;return(a&&"boolean"===typeof a.onLine&&(Pe()||"chrome-extension:"===Ee()||"undefined"!==typeof a.connection)?a.onLine:1)?this.b?this.c:this.a:Math.min(5E3,this.a)};function Xe(){var a=l.document;return a&&"undefined"!==typeof a.visibilityState?"visible"==a.visibilityState:!0}
	function Ye(){var a=l.document,b=null;return Xe()||!a?E():(new D(function(c){b=function(){Xe()&&(a.removeEventListener("visibilitychange",b,!1),c())};a.addEventListener("visibilitychange",b,!1)})).o(function(c){a.removeEventListener("visibilitychange",b,!1);throw c;})}function Ze(a){try{var b=new Date(parseInt(a,10));if(!isNaN(b.getTime())&&!/[^0-9]/.test(a))return b.toUTCString()}catch(c){}return null}function $e(){return!(!J("fireauth.oauthhelper",l)&&!J("fireauth.iframe",l))}
	function af(){var a=l.navigator;return a&&a.serviceWorker&&a.serviceWorker.controller||null}function bf(){var a=l.navigator;return a&&a.serviceWorker?E().then(function(){return a.serviceWorker.ready}).then(function(b){return b.active||null}).o(function(){return null}):E(null)};var cf={};function df(a){cf[a]||(cf[a]=!0,"undefined"!==typeof console&&"function"===typeof console.warn&&console.warn(a))};var ef;try{var ff={};Object.defineProperty(ff,"abcd",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(ff,"abcd",{configurable:!0,enumerable:!0,value:2});ef=2==ff.abcd}catch(a){ef=!1}function K(a,b,c){ef?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c}function L(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&K(a,c,b[c])}function gf(a){var b={};L(b,a);return b}function hf(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}
	function jf(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||""===d)return!1}return!0}function kf(a){var b=a;if("object"==typeof a&&null!=a){b="length"in a?[]:{};for(var c in a)K(b,c,kf(a[c]))}return b};/*
	
	 Copyright 2019 Google Inc.
	
	 Licensed under the Apache License, Version 2.0 (the "License");
	 you may not use this file except in compliance with the License.
	 You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	 Unless required by applicable law or agreed to in writing, software
	 distributed under the License is distributed on an "AS IS" BASIS,
	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 See the License for the specific language governing permissions and
	 limitations under the License.
	*/
	function lf(a){var b=a&&(a[mf]?"phone":null);if(b&&a&&a[nf]){K(this,"uid",a[nf]);K(this,"displayName",a[of]||null);var c=null;a[pf]&&(c=(new Date(a[pf])).toUTCString());K(this,"enrollmentTime",c);K(this,"factorId",b)}else throw new u("internal-error","Internal assert: invalid MultiFactorInfo object");}lf.prototype.v=function(){return{uid:this.uid,displayName:this.displayName,factorId:this.factorId,enrollmentTime:this.enrollmentTime}};function qf(a){try{var b=new rf(a)}catch(c){b=null}return b}
	var of="displayName",pf="enrolledAt",nf="mfaEnrollmentId",mf="phoneInfo";function rf(a){lf.call(this,a);K(this,"phoneNumber",a[mf])}t(rf,lf);rf.prototype.v=function(){var a=rf.Za.v.call(this);a.phoneNumber=this.phoneNumber;return a};function sf(a){var b={},c=a[tf],d=a[uf],e=a[vf];a=qf(a[wf]);if(!e||e!=xf&&e!=yf&&!c||e==yf&&!d||e==zf&&!a)throw Error("Invalid checkActionCode response!");e==yf?(b[Af]=c||null,b[Bf]=c||null,b[Cf]=d):(b[Af]=d||null,b[Bf]=d||null,b[Cf]=c||null);b[Df]=a||null;K(this,Ef,e);K(this,Ff,kf(b))}
	var zf="REVERT_SECOND_FACTOR_ADDITION",xf="EMAIL_SIGNIN",yf="VERIFY_AND_CHANGE_EMAIL",tf="email",wf="mfaInfo",uf="newEmail",vf="requestType",Cf="email",Af="fromEmail",Df="multiFactorInfo",Bf="previousEmail",Ff="data",Ef="operation";function Gf(a){a=Zd(a);var b=Yd(a,Hf)||null,c=Yd(a,If)||null,d=Yd(a,Jf)||null;d=d?Kf[d]||null:null;if(!b||!c||!d)throw new u("argument-error",Hf+", "+If+"and "+Jf+" are required in a valid action code URL.");L(this,{apiKey:b,operation:d,code:c,continueUrl:Yd(a,Lf)||null,languageCode:Yd(a,Mf)||null,tenantId:Yd(a,Nf)||null})}
	var Hf="apiKey",If="oobCode",Lf="continueUrl",Mf="languageCode",Jf="mode",Nf="tenantId",Kf={recoverEmail:"RECOVER_EMAIL",resetPassword:"PASSWORD_RESET",revertSecondFactorAddition:zf,signIn:xf,verifyAndChangeEmail:yf,verifyEmail:"VERIFY_EMAIL"};function Of(a){try{return new Gf(a)}catch(b){return null}};function Pf(a){var b=a[Qf];if("undefined"===typeof b)throw new u("missing-continue-uri");if("string"!==typeof b||"string"===typeof b&&!b.length)throw new u("invalid-continue-uri");this.h=b;this.b=this.a=null;this.g=!1;var c=a[Rf];if(c&&"object"===typeof c){b=c[Sf];var d=c[Tf];c=c[Uf];if("string"===typeof b&&b.length){this.a=b;if("undefined"!==typeof d&&"boolean"!==typeof d)throw new u("argument-error",Tf+" property must be a boolean when specified.");this.g=!!d;if("undefined"!==typeof c&&("string"!==
	typeof c||"string"===typeof c&&!c.length))throw new u("argument-error",Uf+" property must be a non empty string when specified.");this.b=c||null}else{if("undefined"!==typeof b)throw new u("argument-error",Sf+" property must be a non empty string when specified.");if("undefined"!==typeof d||"undefined"!==typeof c)throw new u("missing-android-pkg-name");}}else if("undefined"!==typeof c)throw new u("argument-error",Rf+" property must be a non null object when specified.");this.f=null;if((b=a[Vf])&&"object"===
	typeof b)if(b=b[Wf],"string"===typeof b&&b.length)this.f=b;else{if("undefined"!==typeof b)throw new u("argument-error",Wf+" property must be a non empty string when specified.");}else if("undefined"!==typeof b)throw new u("argument-error",Vf+" property must be a non null object when specified.");b=a[Xf];if("undefined"!==typeof b&&"boolean"!==typeof b)throw new u("argument-error",Xf+" property must be a boolean when specified.");this.c=!!b;a=a[Yf];if("undefined"!==typeof a&&("string"!==typeof a||"string"===
	typeof a&&!a.length))throw new u("argument-error",Yf+" property must be a non empty string when specified.");this.i=a||null}var Rf="android",Yf="dynamicLinkDomain",Xf="handleCodeInApp",Vf="iOS",Qf="url",Tf="installApp",Uf="minimumVersion",Sf="packageName",Wf="bundleId";
	function Zf(a){var b={};b.continueUrl=a.h;b.canHandleCodeInApp=a.c;if(b.androidPackageName=a.a)b.androidMinimumVersion=a.b,b.androidInstallApp=a.g;b.iOSBundleId=a.f;b.dynamicLinkDomain=a.i;for(var c in b)null===b[c]&&delete b[c];return b};function $f(a){return Oa(a,function(b){b=b.toString(16);return 1<b.length?b:"0"+b}).join("")};var ag=null;function bg(a){var b="";cg(a,function(c){b+=String.fromCharCode(c)});return b}function cg(a,b){function c(m){for(;d<a.length;){var p=a.charAt(d++),v=ag[p];if(null!=v)return v;if(!/^[\s\xa0]*$/.test(p))throw Error("Unknown base64 encoding at char: "+p);}return m}dg();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}}
	function dg(){if(!ag){ag={};for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++)for(var d=a.concat(b[c].split("")),e=0;e<d.length;e++){var f=d[e];void 0===ag[f]&&(ag[f]=e)}}};function eg(a){var b=fg(a);if(!(b&&b.sub&&b.iss&&b.aud&&b.exp))throw Error("Invalid JWT");this.g=a;this.c=b.exp;this.h=b.sub;ta();this.a=b.provider_id||b.firebase&&b.firebase.sign_in_provider||null;this.f=b.firebase&&b.firebase.tenant||null;this.b=!!b.is_anonymous||"anonymous"==this.a}eg.prototype.S=function(){return this.f};eg.prototype.i=function(){return this.b};eg.prototype.toString=function(){return this.g};function gg(a){try{return new eg(a)}catch(b){return null}}
	function fg(a){if(!a)return null;a=a.split(".");if(3!=a.length)return null;a=a[1];for(var b=(4-a.length%4)%4,c=0;c<b;c++)a+=".";try{return JSON.parse(bg(a))}catch(d){}return null};var hg="oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),ig=["client_id","response_type","scope","redirect_uri","state"],jg={kd:{Ha:"locale",ta:700,sa:600,ea:"facebook.com",Va:ig},md:{Ha:null,ta:500,sa:750,ea:"github.com",Va:ig},nd:{Ha:"hl",ta:515,sa:680,ea:"google.com",Va:ig},td:{Ha:"lang",ta:485,sa:705,ea:"twitter.com",Va:hg},gd:{Ha:"locale",ta:600,sa:600,ea:"apple.com",Va:[]}};
	function kg(a){for(var b in jg)if(jg[b].ea==a)return jg[b];return null};function lg(a){var b={};b["facebook.com"]=mg;b["google.com"]=ng;b["github.com"]=og;b["twitter.com"]=pg;var c=a&&a[qg];try{if(c)return b[c]?new b[c](a):new rg(a);if("undefined"!==typeof a[sg])return new tg(a)}catch(d){}return null}var sg="idToken",qg="providerId";
	function tg(a){var b=a[qg];if(!b&&a[sg]){var c=gg(a[sg]);c&&c.a&&(b=c.a)}if(!b)throw Error("Invalid additional user info!");if("anonymous"==b||"custom"==b)b=null;c=!1;"undefined"!==typeof a.isNewUser?c=!!a.isNewUser:"identitytoolkit#SignupNewUserResponse"===a.kind&&(c=!0);K(this,"providerId",b);K(this,"isNewUser",c)}function rg(a){tg.call(this,a);a=Te(a.rawUserInfo||"{}");K(this,"profile",kf(a||{}))}t(rg,tg);
	function mg(a){rg.call(this,a);if("facebook.com"!=this.providerId)throw Error("Invalid provider ID!");}t(mg,rg);function og(a){rg.call(this,a);if("github.com"!=this.providerId)throw Error("Invalid provider ID!");K(this,"username",this.profile&&this.profile.login||null)}t(og,rg);function ng(a){rg.call(this,a);if("google.com"!=this.providerId)throw Error("Invalid provider ID!");}t(ng,rg);
	function pg(a){rg.call(this,a);if("twitter.com"!=this.providerId)throw Error("Invalid provider ID!");K(this,"username",a.screenName||null)}t(pg,rg);function ug(a){var b=Zd(a),c=Yd(b,"link"),d=Yd(Zd(c),"link");b=Yd(b,"deep_link_id");return Yd(Zd(b),"link")||b||d||c||a};function vg(a,b){if(!a&&!b)throw new u("internal-error","Internal assert: no raw session string available");if(a&&b)throw new u("internal-error","Internal assert: unable to determine the session type");this.a=a||null;this.b=b||null;this.type=this.a?wg:xg}var wg="enroll",xg="signin";vg.prototype.Fa=function(){return this.a?E(this.a):E(this.b)};vg.prototype.v=function(){return this.type==wg?{multiFactorSession:{idToken:this.a}}:{multiFactorSession:{pendingCredential:this.b}}};function yg(){}yg.prototype.ia=function(){};yg.prototype.b=function(){};yg.prototype.c=function(){};yg.prototype.v=function(){};function zg(a,b){return a.then(function(c){if(c[Ag]){var d=gg(c[Ag]);if(!d||b!=d.h)throw new u("user-mismatch");return c}throw new u("user-mismatch");}).o(function(c){throw c&&c.code&&c.code==ua+"user-not-found"?new u("user-mismatch"):c;})}
	function Bg(a,b){if(b)this.a=b;else throw new u("internal-error","failed to construct a credential");K(this,"providerId",a);K(this,"signInMethod",a)}Bg.prototype.ia=function(a){return Cg(a,Dg(this))};Bg.prototype.b=function(a,b){var c=Dg(this);c.idToken=b;return Eg(a,c)};Bg.prototype.c=function(a,b){return zg(Fg(a,Dg(this)),b)};function Dg(a){return{pendingToken:a.a,requestUri:"http://localhost"}}Bg.prototype.v=function(){return{providerId:this.providerId,signInMethod:this.signInMethod,pendingToken:this.a}};
	function Gg(a){if(a&&a.providerId&&a.signInMethod&&0==a.providerId.indexOf("saml.")&&a.pendingToken)try{return new Bg(a.providerId,a.pendingToken)}catch(b){}return null}
	function Hg(a,b,c){this.a=null;if(b.idToken||b.accessToken)b.idToken&&K(this,"idToken",b.idToken),b.accessToken&&K(this,"accessToken",b.accessToken),b.nonce&&!b.pendingToken&&K(this,"nonce",b.nonce),b.pendingToken&&(this.a=b.pendingToken);else if(b.oauthToken&&b.oauthTokenSecret)K(this,"accessToken",b.oauthToken),K(this,"secret",b.oauthTokenSecret);else throw new u("internal-error","failed to construct a credential");K(this,"providerId",a);K(this,"signInMethod",c)}
	Hg.prototype.ia=function(a){return Cg(a,Ig(this))};Hg.prototype.b=function(a,b){var c=Ig(this);c.idToken=b;return Eg(a,c)};Hg.prototype.c=function(a,b){var c=Ig(this);return zg(Fg(a,c),b)};
	function Ig(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;a.nonce&&!a.a&&(b.nonce=a.nonce);b={postBody:ce(b).toString(),requestUri:"http://localhost"};a.a&&(delete b.postBody,b.pendingToken=a.a);return b}
	Hg.prototype.v=function(){var a={providerId:this.providerId,signInMethod:this.signInMethod};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);this.nonce&&(a.nonce=this.nonce);this.a&&(a.pendingToken=this.a);return a};
	function Jg(a){if(a&&a.providerId&&a.signInMethod){var b={idToken:a.oauthIdToken,accessToken:a.oauthTokenSecret?null:a.oauthAccessToken,oauthTokenSecret:a.oauthTokenSecret,oauthToken:a.oauthTokenSecret&&a.oauthAccessToken,nonce:a.nonce,pendingToken:a.pendingToken};try{return new Hg(a.providerId,b,a.signInMethod)}catch(c){}}return null}function Kg(a,b){this.Oc=b||[];L(this,{providerId:a,isOAuthProvider:!0});this.Fb={};this.lb=(kg(a)||{}).Ha||null;this.kb=null}
	Kg.prototype.Ia=function(a){this.Fb=kb(a);return this};function Lg(a){if("string"!==typeof a||0!=a.indexOf("saml."))throw new u("argument-error",'SAML provider IDs must be prefixed with "saml."');Kg.call(this,a,[])}t(Lg,Kg);function M(a){Kg.call(this,a,ig);this.a=[]}t(M,Kg);M.prototype.Aa=function(a){Sa(this.a,a)||this.a.push(a);return this};M.prototype.Nb=function(){return Wa(this.a)};
	M.prototype.credential=function(a,b){var c;q(a)?c={idToken:a.idToken||null,accessToken:a.accessToken||null,nonce:a.rawNonce||null}:c={idToken:a||null,accessToken:b||null};if(!c.idToken&&!c.accessToken)throw new u("argument-error","credential failed: must provide the ID token and/or the access token.");return new Hg(this.providerId,c,this.providerId)};function Mg(){M.call(this,"facebook.com")}t(Mg,M);K(Mg,"PROVIDER_ID","facebook.com");K(Mg,"FACEBOOK_SIGN_IN_METHOD","facebook.com");
	function Ng(a){if(!a)throw new u("argument-error","credential failed: expected 1 argument (the OAuth access token).");var b=a;q(a)&&(b=a.accessToken);return(new Mg).credential({accessToken:b})}function Og(){M.call(this,"github.com")}t(Og,M);K(Og,"PROVIDER_ID","github.com");K(Og,"GITHUB_SIGN_IN_METHOD","github.com");
	function Pg(a){if(!a)throw new u("argument-error","credential failed: expected 1 argument (the OAuth access token).");var b=a;q(a)&&(b=a.accessToken);return(new Og).credential({accessToken:b})}function Qg(){M.call(this,"google.com");this.Aa("profile")}t(Qg,M);K(Qg,"PROVIDER_ID","google.com");K(Qg,"GOOGLE_SIGN_IN_METHOD","google.com");function Rg(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Qg).credential({idToken:c,accessToken:b})}function Sg(){Kg.call(this,"twitter.com",hg)}t(Sg,Kg);
	K(Sg,"PROVIDER_ID","twitter.com");K(Sg,"TWITTER_SIGN_IN_METHOD","twitter.com");function Tg(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new u("argument-error","credential failed: expected 2 arguments (the OAuth access token and secret).");return new Hg("twitter.com",c,"twitter.com")}
	function Ug(a,b,c){this.a=a;this.f=b;K(this,"providerId","password");K(this,"signInMethod",c===Vg.EMAIL_LINK_SIGN_IN_METHOD?Vg.EMAIL_LINK_SIGN_IN_METHOD:Vg.EMAIL_PASSWORD_SIGN_IN_METHOD)}Ug.prototype.ia=function(a){return this.signInMethod==Vg.EMAIL_LINK_SIGN_IN_METHOD?N(a,Wg,{email:this.a,oobCode:this.f}):N(a,Xg,{email:this.a,password:this.f})};
	Ug.prototype.b=function(a,b){return this.signInMethod==Vg.EMAIL_LINK_SIGN_IN_METHOD?N(a,Yg,{idToken:b,email:this.a,oobCode:this.f}):N(a,Zg,{idToken:b,email:this.a,password:this.f})};Ug.prototype.c=function(a,b){return zg(this.ia(a),b)};Ug.prototype.v=function(){return{email:this.a,password:this.f,signInMethod:this.signInMethod}};function $g(a){return a&&a.email&&a.password?new Ug(a.email,a.password,a.signInMethod):null}function Vg(){L(this,{providerId:"password",isOAuthProvider:!1})}
	function ah(a,b){b=bh(b);if(!b)throw new u("argument-error","Invalid email link!");return new Ug(a,b.code,Vg.EMAIL_LINK_SIGN_IN_METHOD)}function bh(a){a=ug(a);return(a=Of(a))&&a.operation===xf?a:null}L(Vg,{PROVIDER_ID:"password"});L(Vg,{EMAIL_LINK_SIGN_IN_METHOD:"emailLink"});L(Vg,{EMAIL_PASSWORD_SIGN_IN_METHOD:"password"});function ch(a){if(!(a.bb&&a.ab||a.Ja&&a.da))throw new u("internal-error");this.a=a;K(this,"providerId","phone");this.ea="phone";K(this,"signInMethod","phone")}
	ch.prototype.ia=function(a){return a.cb(dh(this))};ch.prototype.b=function(a,b){var c=dh(this);c.idToken=b;return N(a,eh,c)};ch.prototype.c=function(a,b){var c=dh(this);c.operation="REAUTH";a=N(a,fh,c);return zg(a,b)};ch.prototype.v=function(){var a={providerId:"phone"};this.a.bb&&(a.verificationId=this.a.bb);this.a.ab&&(a.verificationCode=this.a.ab);this.a.Ja&&(a.temporaryProof=this.a.Ja);this.a.da&&(a.phoneNumber=this.a.da);return a};
	function gh(a){if(a&&"phone"===a.providerId&&(a.verificationId&&a.verificationCode||a.temporaryProof&&a.phoneNumber)){var b={};x(["verificationId","verificationCode","temporaryProof","phoneNumber"],function(c){a[c]&&(b[c]=a[c])});return new ch(b)}return null}function dh(a){return a.a.Ja&&a.a.da?{temporaryProof:a.a.Ja,phoneNumber:a.a.da}:{sessionInfo:a.a.bb,code:a.a.ab}}
	function hh(a){try{this.a=a||firebase.auth()}catch(b){throw new u("argument-error","Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");}L(this,{providerId:"phone",isOAuthProvider:!1})}
	hh.prototype.cb=function(a,b){var c=this.a.b;return E(b.verify()).then(function(d){if("string"!==typeof d)throw new u("argument-error","An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");switch(b.type){case "recaptcha":var e=q(a)?a.session:null,f=q(a)?a.phoneNumber:a,g;e&&e.type==wg?g=e.Fa().then(function(h){return ih(c,{idToken:h,phoneEnrollmentInfo:{phoneNumber:f,recaptchaToken:d}})}):e&&e.type==xg?g=e.Fa().then(function(h){return jh(c,
	{mfaPendingCredential:h,mfaEnrollmentId:a.multiFactorHint&&a.multiFactorHint.uid||a.multiFactorUid,phoneSignInInfo:{recaptchaToken:d}})}):g=kh(c,{phoneNumber:f,recaptchaToken:d});return g.then(function(h){"function"===typeof b.reset&&b.reset();return h},function(h){"function"===typeof b.reset&&b.reset();throw h;});default:throw new u("argument-error",'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');}})};
	function lh(a,b){if(!a)throw new u("missing-verification-id");if(!b)throw new u("missing-verification-code");return new ch({bb:a,ab:b})}L(hh,{PROVIDER_ID:"phone"});L(hh,{PHONE_SIGN_IN_METHOD:"phone"});
	function mh(a){if(a.temporaryProof&&a.phoneNumber)return new ch({Ja:a.temporaryProof,da:a.phoneNumber});var b=a&&a.providerId;if(!b||"password"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret,e=a&&a.nonce,f=a&&a.oauthIdToken,g=a&&a.pendingToken;try{switch(b){case "google.com":return Rg(f,c);case "facebook.com":return Ng(c);case "github.com":return Pg(c);case "twitter.com":return Tg(c,d);default:return c||d||f||g?g?0==b.indexOf("saml.")?new Bg(b,g):new Hg(b,{pendingToken:g,idToken:a.oauthIdToken,
	accessToken:a.oauthAccessToken},b):(new M(b)).credential({idToken:f,accessToken:c,rawNonce:e}):null}}catch(h){return null}}function nh(a){if(!a.isOAuthProvider)throw new u("invalid-oauth-provider");};function oh(a,b,c,d,e,f,g){this.c=a;this.b=b||null;this.g=c||null;this.f=d||null;this.i=f||null;this.h=g||null;this.a=e||null;if(this.g||this.a){if(this.g&&this.a)throw new u("invalid-auth-event");if(this.g&&!this.f)throw new u("invalid-auth-event");}else throw new u("invalid-auth-event");}oh.prototype.getUid=function(){var a=[];a.push(this.c);this.b&&a.push(this.b);this.f&&a.push(this.f);this.h&&a.push(this.h);return a.join("-")};oh.prototype.S=function(){return this.h};
	oh.prototype.v=function(){return{type:this.c,eventId:this.b,urlResponse:this.g,sessionId:this.f,postBody:this.i,tenantId:this.h,error:this.a&&this.a.v()}};function ph(a){a=a||{};return a.type?new oh(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&wa(a.error),a.postBody,a.tenantId):null};/*
	
	 Copyright 2018 Google Inc.
	
	 Licensed under the Apache License, Version 2.0 (the "License");
	 you may not use this file except in compliance with the License.
	 You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	 Unless required by applicable law or agreed to in writing, software
	 distributed under the License is distributed on an "AS IS" BASIS,
	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 See the License for the specific language governing permissions and
	 limitations under the License.
	*/
	function qh(){this.b=null;this.a=[]}var rh=null;function sh(a){var b=rh;b.a.push(a);b.b||(b.b=function(c){for(var d=0;d<b.a.length;d++)b.a[d](c)},a=J("universalLinks.subscribe",l),"function"===typeof a&&a(null,b.b))};function th(a){var b="unauthorized-domain",c=void 0,d=Zd(a);a=d.b;d=d.f;"chrome-extension"==d?c=Mb("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",a):"http"==d||"https"==d?c=Mb("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",a):b="operation-not-supported-in-this-environment";
	u.call(this,b,c)}t(th,u);function uh(a,b,c){u.call(this,a,c);a=b||{};a.Gb&&K(this,"email",a.Gb);a.da&&K(this,"phoneNumber",a.da);a.credential&&K(this,"credential",a.credential);a.Wb&&K(this,"tenantId",a.Wb)}t(uh,u);uh.prototype.v=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);this.tenantId&&(a.tenantId=this.tenantId);var b=this.credential&&this.credential.v();b&&B(a,b);return a};uh.prototype.toJSON=function(){return this.v()};
	function vh(a){if(a.code){var b=a.code||"";0==b.indexOf(ua)&&(b=b.substring(ua.length));var c={credential:mh(a),Wb:a.tenantId};if(a.email)c.Gb=a.email;else if(a.phoneNumber)c.da=a.phoneNumber;else if(!c.credential)return new u(b,a.message||void 0);return new uh(b,c,a.message)}return null};function wh(){}wh.prototype.c=null;function xh(a){return a.c||(a.c=a.b())};var yh;function zh(){}t(zh,wh);zh.prototype.a=function(){var a=Ah(this);return a?new ActiveXObject(a):new XMLHttpRequest};zh.prototype.b=function(){var a={};Ah(this)&&(a[0]=!0,a[1]=!0);return a};
	function Ah(a){if(!a.f&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var b=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.f=d}catch(e){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");}return a.f}yh=new zh;function Bh(){}t(Bh,wh);Bh.prototype.a=function(){var a=new XMLHttpRequest;if("withCredentials"in a)return a;if("undefined"!=typeof XDomainRequest)return new Ch;throw Error("Unsupported browser");};Bh.prototype.b=function(){return{}};
	function Ch(){this.a=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseType=this.responseText=this.response="";this.status=-1;this.statusText="";this.a.onload=r(this.oc,this);this.a.onerror=r(this.Pb,this);this.a.onprogress=r(this.pc,this);this.a.ontimeout=r(this.tc,this)}k=Ch.prototype;k.open=function(a,b,c){if(null!=c&&!c)throw Error("Only async requests are supported.");this.a.open(a,b)};
	k.send=function(a){if(a)if("string"==typeof a)this.a.send(a);else throw Error("Only string data is supported");else this.a.send()};k.abort=function(){this.a.abort()};k.setRequestHeader=function(){};k.getResponseHeader=function(a){return"content-type"==a.toLowerCase()?this.a.contentType:""};k.oc=function(){this.status=200;this.response=this.responseText=this.a.responseText;Dh(this,4)};k.Pb=function(){this.status=500;this.response=this.responseText="";Dh(this,4)};k.tc=function(){this.Pb()};
	k.pc=function(){this.status=200;Dh(this,1)};function Dh(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()}k.getAllResponseHeaders=function(){return"content-type: "+this.a.contentType};function Eh(a,b,c){this.reset(a,b,c,void 0,void 0)}Eh.prototype.a=null;var Fh=0;Eh.prototype.reset=function(a,b,c,d,e){"number"==typeof e||Fh++;d||ta();delete this.a};function Gh(a){this.f=a;this.b=this.c=this.a=null}function Hh(a,b){this.name=a;this.value=b}Hh.prototype.toString=function(){return this.name};var Ih=new Hh("SEVERE",1E3),Jh=new Hh("WARNING",900),Kh=new Hh("CONFIG",700),Lh=new Hh("FINE",500);function Mh(a){if(a.c)return a.c;if(a.a)return Mh(a.a);Da("Root logger has no level set.");return null}Gh.prototype.log=function(a,b,c){if(a.value>=Mh(this).value)for(n(b)&&(b=b()),a=new Eh(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var Nh={},Oh=null;
	function Ph(a){Oh||(Oh=new Gh(""),Nh[""]=Oh,Oh.c=Kh);var b;if(!(b=Nh[a])){b=new Gh(a);var c=a.lastIndexOf("."),d=a.substr(c+1);c=Ph(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;Nh[a]=b}return b};function Qh(a,b){a&&a.log(Lh,b,void 0)};function Rh(a){this.f=a}t(Rh,wh);Rh.prototype.a=function(){return new Sh(this.f)};Rh.prototype.b=function(a){return function(){return a}}({});function Sh(a){G.call(this);this.s=a;this.readyState=Th;this.status=0;this.responseType=this.responseText=this.response=this.statusText="";this.onreadystatechange=null;this.i=new Headers;this.b=null;this.m="GET";this.g="";this.a=!1;this.h=Ph("goog.net.FetchXmlHttp");this.l=this.c=this.f=null}t(Sh,G);var Th=0;k=Sh.prototype;
	k.open=function(a,b){if(this.readyState!=Th)throw this.abort(),Error("Error reopening a connection");this.m=a;this.g=b;this.readyState=1;Uh(this)};k.send=function(a){if(1!=this.readyState)throw this.abort(),Error("need to call open() first. ");this.a=!0;var b={headers:this.i,method:this.m,credentials:void 0,cache:void 0};a&&(b.body=a);this.s.fetch(new Request(this.g,b)).then(this.sc.bind(this),this.Sa.bind(this))};
	k.abort=function(){this.response=this.responseText="";this.i=new Headers;this.status=0;this.c&&this.c.cancel("Request was aborted.");1<=this.readyState&&this.a&&4!=this.readyState&&(this.a=!1,Vh(this,!1));this.readyState=Th};
	k.sc=function(a){this.a&&(this.f=a,this.b||(this.b=a.headers,this.readyState=2,Uh(this)),this.a&&(this.readyState=3,Uh(this),this.a&&("arraybuffer"===this.responseType?a.arrayBuffer().then(this.qc.bind(this),this.Sa.bind(this)):"undefined"!==typeof l.ReadableStream&&"body"in a?(this.response=this.responseText="",this.c=a.body.getReader(),this.l=new TextDecoder,Wh(this)):a.text().then(this.rc.bind(this),this.Sa.bind(this)))))};function Wh(a){a.c.read().then(a.nc.bind(a)).catch(a.Sa.bind(a))}
	k.nc=function(a){if(this.a){var b=this.l.decode(a.value?a.value:new Uint8Array(0),{stream:!a.done});b&&(this.response=this.responseText+=b);a.done?Vh(this,!0):Uh(this);3==this.readyState&&Wh(this)}};k.rc=function(a){this.a&&(this.response=this.responseText=a,Vh(this,!0))};k.qc=function(a){this.a&&(this.response=a,Vh(this,!0))};k.Sa=function(a){var b=this.h;b&&b.log(Jh,"Failed to fetch url "+this.g,a instanceof Error?a:Error(a));this.a&&Vh(this,!0)};
	function Vh(a,b){b&&a.f&&(a.status=a.f.status,a.statusText=a.f.statusText);a.readyState=4;a.f=null;a.c=null;a.l=null;Uh(a)}k.setRequestHeader=function(a,b){this.i.append(a,b)};k.getResponseHeader=function(a){return this.b?this.b.get(a.toLowerCase())||"":((a=this.h)&&a.log(Jh,"Attempting to get response header but no headers have been received for url: "+this.g,void 0),"")};
	k.getAllResponseHeaders=function(){if(!this.b){var a=this.h;a&&a.log(Jh,"Attempting to get all response headers but no headers have been received for url: "+this.g,void 0);return""}a=[];for(var b=this.b.entries(),c=b.next();!c.done;)c=c.value,a.push(c[0]+": "+c[1]),c=b.next();return a.join("\r\n")};function Uh(a){a.onreadystatechange&&a.onreadystatechange.call(a)};function Xh(a){G.call(this);this.headers=new Fd;this.D=a||null;this.c=!1;this.B=this.a=null;this.h=this.P=this.l="";this.f=this.O=this.i=this.N=!1;this.g=0;this.s=null;this.m=Yh;this.w=this.R=!1}t(Xh,G);var Yh="";Xh.prototype.b=Ph("goog.net.XhrIo");var Zh=/^https?$/i,$h=["POST","PUT"];
	function ai(a,b,c,d,e){if(a.a)throw Error("[goog.net.XhrIo] Object is active with another request="+a.l+"; newUri="+b);c=c?c.toUpperCase():"GET";a.l=b;a.h="";a.P=c;a.N=!1;a.c=!0;a.a=a.D?a.D.a():yh.a();a.B=a.D?xh(a.D):xh(yh);a.a.onreadystatechange=r(a.Sb,a);try{Qh(a.b,bi(a,"Opening Xhr")),a.O=!0,a.a.open(c,String(b),!0),a.O=!1}catch(g){Qh(a.b,bi(a,"Error opening Xhr: "+g.message));ci(a,g);return}b=d||"";var f=new Fd(a.headers);e&&Ed(e,function(g,h){f.set(h,g)});e=Qa(f.X());d=l.FormData&&b instanceof
	l.FormData;!Sa($h,c)||e||d||f.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8");f.forEach(function(g,h){this.a.setRequestHeader(h,g)},a);a.m&&(a.a.responseType=a.m);"withCredentials"in a.a&&a.a.withCredentials!==a.R&&(a.a.withCredentials=a.R);try{di(a),0<a.g&&(a.w=ei(a.a),Qh(a.b,bi(a,"Will abort after "+a.g+"ms if incomplete, xhr2 "+a.w)),a.w?(a.a.timeout=a.g,a.a.ontimeout=r(a.Ka,a)):a.s=Ad(a.Ka,a.g,a)),Qh(a.b,bi(a,"Sending request")),a.i=!0,a.a.send(b),a.i=!1}catch(g){Qh(a.b,
	bi(a,"Send error: "+g.message)),ci(a,g)}}function ei(a){return Sb&&bc(9)&&"number"===typeof a.timeout&&void 0!==a.ontimeout}function Ra(a){return"content-type"==a.toLowerCase()}k=Xh.prototype;k.Ka=function(){"undefined"!=typeof ha&&this.a&&(this.h="Timed out after "+this.g+"ms, aborting",Qh(this.b,bi(this,this.h)),this.dispatchEvent("timeout"),this.abort(8))};function ci(a,b){a.c=!1;a.a&&(a.f=!0,a.a.abort(),a.f=!1);a.h=b;fi(a);gi(a)}
	function fi(a){a.N||(a.N=!0,a.dispatchEvent("complete"),a.dispatchEvent("error"))}k.abort=function(){this.a&&this.c&&(Qh(this.b,bi(this,"Aborting")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),gi(this))};k.Ba=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),gi(this,!0));Xh.Za.Ba.call(this)};k.Sb=function(){this.wa||(this.O||this.i||this.f?hi(this):this.Hc())};k.Hc=function(){hi(this)};
	function hi(a){if(a.c&&"undefined"!=typeof ha)if(a.B[1]&&4==ii(a)&&2==ji(a))Qh(a.b,bi(a,"Local request error detected and ignored"));else if(a.i&&4==ii(a))Ad(a.Sb,0,a);else if(a.dispatchEvent("readystatechange"),4==ii(a)){Qh(a.b,bi(a,"Request complete"));a.c=!1;try{var b=ji(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.l).match(Id)[1]||null;if(!f&&l.self&&l.self.location){var g=l.self.location.protocol;
	f=g.substr(0,g.length-1)}e=!Zh.test(f?f.toLowerCase():"")}d=e}if(d)a.dispatchEvent("complete"),a.dispatchEvent("success");else{try{var h=2<ii(a)?a.a.statusText:""}catch(m){Qh(a.b,"Can not get status: "+m.message),h=""}a.h=h+" ["+ji(a)+"]";fi(a)}}finally{gi(a)}}}function gi(a,b){if(a.a){di(a);var c=a.a,d=a.B[0]?ka:null;a.a=null;a.B=null;b||a.dispatchEvent("ready");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(Ih,"Problem encountered resetting onreadystatechange: "+e.message,void 0)}}}
	function di(a){a.a&&a.w&&(a.a.ontimeout=null);a.s&&(l.clearTimeout(a.s),a.s=null)}function ii(a){return a.a?a.a.readyState:0}function ji(a){try{return 2<ii(a)?a.a.status:-1}catch(b){return-1}}function ki(a){try{return a.a?a.a.responseText:""}catch(b){return Qh(a.b,"Can not get responseText: "+b.message),""}}
	k.getResponse=function(){try{if(!this.a)return null;if("response"in this.a)return this.a.response;switch(this.m){case Yh:case "text":return this.a.responseText;case "arraybuffer":if("mozResponseArrayBuffer"in this.a)return this.a.mozResponseArrayBuffer}var a=this.b;a&&a.log(Ih,"Response type "+this.m+" is not supported on this browser",void 0);return null}catch(b){return Qh(this.b,"Can not get response: "+b.message),null}};function bi(a,b){return b+" ["+a.P+" "+a.l+" "+ji(a)+"]"};/*
	 Portions of this code are from MochiKit, received by
	 The Closure Authors under the MIT license. All other code is Copyright
	 2005-2009 The Closure Authors. All Rights Reserved.
	*/
	function li(a){var b=mi;this.g=[];this.w=b;this.s=a||null;this.f=this.a=!1;this.c=void 0;this.u=this.B=this.i=!1;this.h=0;this.b=null;this.l=0}li.prototype.cancel=function(a){if(this.a)this.c instanceof li&&this.c.cancel();else{if(this.b){var b=this.b;delete this.b;a?b.cancel(a):(b.l--,0>=b.l&&b.cancel())}this.w?this.w.call(this.s,this):this.u=!0;this.a||(a=new ni(this),oi(this),pi(this,!1,a))}};li.prototype.m=function(a,b){this.i=!1;pi(this,a,b)};function pi(a,b,c){a.a=!0;a.c=c;a.f=!b;qi(a)}
	function oi(a){if(a.a){if(!a.u)throw new ri(a);a.u=!1}}function si(a,b){ti(a,null,b,void 0)}function ti(a,b,c,d){a.g.push([b,c,d]);a.a&&qi(a)}li.prototype.then=function(a,b,c){var d,e,f=new D(function(g,h){d=g;e=h});ti(this,d,function(g){g instanceof ni?f.cancel():e(g)});return f.then(a,b,c)};li.prototype.$goog_Thenable=!0;function ui(a){return Pa(a.g,function(b){return n(b[1])})}
	function qi(a){if(a.h&&a.a&&ui(a)){var b=a.h,c=vi[b];c&&(l.clearTimeout(c.a),delete vi[b]);a.h=0}a.b&&(a.b.l--,delete a.b);b=a.c;for(var d=c=!1;a.g.length&&!a.i;){var e=a.g.shift(),f=e[0],g=e[1];e=e[2];if(f=a.f?g:f)try{var h=f.call(e||a.s,b);void 0!==h&&(a.f=a.f&&(h==b||h instanceof Error),a.c=b=h);if(Ba(b)||"function"===typeof l.Promise&&b instanceof l.Promise)d=!0,a.i=!0}catch(m){b=m,a.f=!0,ui(a)||(c=!0)}}a.c=b;d&&(h=r(a.m,a,!0),d=r(a.m,a,!1),b instanceof li?(ti(b,h,d),b.B=!0):b.then(h,d));c&&(b=
	new wi(b),vi[b.a]=b,a.h=b.a)}function ri(){w.call(this)}t(ri,w);ri.prototype.message="Deferred has already fired";ri.prototype.name="AlreadyCalledError";function ni(){w.call(this)}t(ni,w);ni.prototype.message="Deferred was canceled";ni.prototype.name="CanceledError";function wi(a){this.a=l.setTimeout(r(this.c,this),0);this.b=a}wi.prototype.c=function(){delete vi[this.a];throw this.b;};var vi={};function xi(a){var b={},c=b.document||document,d=vb(a).toString(),e=ic(document,"SCRIPT"),f={Tb:e,Ka:void 0},g=new li(f),h=null,m=null!=b.timeout?b.timeout:5E3;0<m&&(h=window.setTimeout(function(){yi(e,!0);var p=new zi(Ai,"Timeout reached for loading script "+d);oi(g);pi(g,!1,p)},m),f.Ka=h);e.onload=e.onreadystatechange=function(){e.readyState&&"loaded"!=e.readyState&&"complete"!=e.readyState||(yi(e,b.ud||!1,h),oi(g),pi(g,!0,null))};e.onerror=function(){yi(e,!0,h);var p=new zi(Bi,"Error while loading script "+
	d);oi(g);pi(g,!1,p)};f=b.attributes||{};B(f,{type:"text/javascript",charset:"UTF-8"});fc(e,f);Lb(e,a);Ci(c).appendChild(e);return g}function Ci(a){var b;return(b=(a||document).getElementsByTagName("HEAD"))&&0!=b.length?b[0]:a.documentElement}function mi(){if(this&&this.Tb){var a=this.Tb;a&&"SCRIPT"==a.tagName&&yi(a,!0,this.Ka)}}
	function yi(a,b,c){null!=c&&l.clearTimeout(c);a.onload=ka;a.onerror=ka;a.onreadystatechange=ka;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)}var Bi=0,Ai=1;function zi(a,b){var c="Jsloader error (code #"+a+")";b&&(c+=": "+b);w.call(this,c);this.code=a}t(zi,w);function Di(a){this.f=a}t(Di,wh);Di.prototype.a=function(){return new this.f};Di.prototype.b=function(){return{}};
	function Ei(a,b,c){this.c=a;a=b||{};this.u=a.secureTokenEndpoint||"https://securetoken.googleapis.com/v1/token";this.m=a.secureTokenTimeout||Fi;this.g=kb(a.secureTokenHeaders||Gi);this.h=a.firebaseEndpoint||"https://www.googleapis.com/identitytoolkit/v3/relyingparty/";this.l=a.identityPlatformEndpoint||"https://identitytoolkit.googleapis.com/v2/";this.i=a.firebaseTimeout||Hi;this.a=kb(a.firebaseHeaders||Ii);c&&(this.a["X-Client-Version"]=c,this.g["X-Client-Version"]=c);c="Node"==He();c=l.XMLHttpRequest||
	c&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!c&&!Ge())throw new u("internal-error","The XMLHttpRequest compatibility library was not found.");this.f=void 0;Ge()?this.f=new Rh(self):Ie()?this.f=new Di(c):this.f=new Bh;this.b=null}var Ji,Ag="idToken",Fi=new We(3E4,6E4),Gi={"Content-Type":"application/x-www-form-urlencoded"},Hi=new We(3E4,6E4),Ii={"Content-Type":"application/json"};function Ki(a,b){b?a.a["X-Firebase-Locale"]=b:delete a.a["X-Firebase-Locale"]}
	function Li(a,b){b?(a.a["X-Client-Version"]=b,a.g["X-Client-Version"]=b):(delete a.a["X-Client-Version"],delete a.g["X-Client-Version"])}Ei.prototype.S=function(){return this.b};function Mi(a,b,c,d,e,f,g){re()||Ge()?a=r(a.w,a):(Ji||(Ji=new D(function(h,m){Ni(h,m)})),a=r(a.s,a));a(b,c,d,e,f,g)}
	Ei.prototype.w=function(a,b,c,d,e,f){if(Ge()&&("undefined"===typeof l.fetch||"undefined"===typeof l.Headers||"undefined"===typeof l.Request))throw new u("operation-not-supported-in-this-environment","fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");var g=new Xh(this.f);if(f){g.g=Math.max(0,f);var h=setTimeout(function(){g.dispatchEvent("timeout")},f)}md(g,"complete",function(){h&&clearTimeout(h);var m=null;try{m=
	JSON.parse(ki(this))||null}catch(p){m=null}b&&b(m)});sd(g,"ready",function(){h&&clearTimeout(h);Sc(this)});sd(g,"timeout",function(){h&&clearTimeout(h);Sc(this);b&&b(null)});ai(g,a,c,d,e)};var Oi=new nb(ob,"https://apis.google.com/js/client.js?onload=%{onload}"),Pi="__fcb"+Math.floor(1E6*Math.random()).toString();
	function Ni(a,b){if(((window.gapi||{}).client||{}).request)a();else{l[Pi]=function(){((window.gapi||{}).client||{}).request?a():b(Error("CORS_UNSUPPORTED"))};var c=wb(Oi,{onload:Pi});si(xi(c),function(){b(Error("CORS_UNSUPPORTED"))})}}
	Ei.prototype.s=function(a,b,c,d,e){var f=this;Ji.then(function(){window.gapi.client.setApiKey(f.c);var g=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:"none",callback:function(h){window.gapi.auth.setToken(g);b&&b(h)}})}).o(function(g){b&&b({error:{message:g&&g.message||"CORS_UNSUPPORTED"}})})};
	function Qi(a,b){return new D(function(c,d){"refresh_token"==b.grant_type&&b.refresh_token||"authorization_code"==b.grant_type&&b.code?Mi(a,a.u+"?key="+encodeURIComponent(a.c),function(e){e?e.error?d(Ri(e)):e.access_token&&e.refresh_token?c(e):d(new u("internal-error")):d(new u("network-request-failed"))},"POST",ce(b).toString(),a.g,a.m.get()):d(new u("internal-error"))})}
	function Si(a,b,c,d,e,f,g){var h=Zd(b+c);H(h,"key",a.c);g&&H(h,"cb",ta().toString());var m="GET"==d;if(m)for(var p in e)e.hasOwnProperty(p)&&H(h,p,e[p]);return new D(function(v,C){Mi(a,h.toString(),function(A){A?A.error?C(Ri(A,f||{})):v(A):C(new u("network-request-failed"))},d,m?void 0:he(Se(e)),a.a,a.i.get())})}function Ti(a){a=a.email;if("string"!==typeof a||!Ae.test(a))throw new u("invalid-email");}function Ui(a){"email"in a&&Ti(a)}
	function Vi(a,b){return N(a,Wi,{identifier:b,continueUri:Pe()?oe():"http://localhost"}).then(function(c){return c.signinMethods||[]})}function Xi(a){return N(a,Yi,{}).then(function(b){return b.authorizedDomains||[]})}function O(a){if(!a[Ag]){if(a.mfaPendingCredential)throw new u("multi-factor-auth-required",null,kb(a));throw new u("internal-error");}}
	function Zi(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new u("internal-error");}else{if(!a.sessionInfo)throw new u("missing-verification-id");if(!a.code)throw new u("missing-verification-code");}}Ei.prototype.vb=function(){return N(this,$i,{})};Ei.prototype.xb=function(a,b){return N(this,aj,{idToken:a,email:b})};Ei.prototype.yb=function(a,b){return N(this,Zg,{idToken:a,password:b})};var bj={displayName:"DISPLAY_NAME",photoUrl:"PHOTO_URL"};k=Ei.prototype;
	k.zb=function(a,b){var c={idToken:a},d=[];ib(bj,function(e,f){var g=b[f];null===g?d.push(e):f in b&&(c[f]=g)});d.length&&(c.deleteAttribute=d);return N(this,aj,c)};k.rb=function(a,b){a={requestType:"PASSWORD_RESET",email:a};B(a,b);return N(this,cj,a)};k.sb=function(a,b){a={requestType:"EMAIL_SIGNIN",email:a};B(a,b);return N(this,dj,a)};k.qb=function(a,b){a={requestType:"VERIFY_EMAIL",idToken:a};B(a,b);return N(this,ej,a)};
	k.Ab=function(a,b,c){a={requestType:"VERIFY_AND_CHANGE_EMAIL",idToken:a,newEmail:b};B(a,c);return N(this,fj,a)};function kh(a,b){return N(a,gj,b)}k.cb=function(a){return N(this,hj,a)};function ih(a,b){return N(a,ij,b).then(function(c){return c.phoneSessionInfo.sessionInfo})}
	function jj(a){if(!a.phoneVerificationInfo)throw new u("internal-error");if(!a.phoneVerificationInfo.sessionInfo)throw new u("missing-verification-id");if(!a.phoneVerificationInfo.code)throw new u("missing-verification-code");}function jh(a,b){return N(a,kj,b).then(function(c){return c.phoneResponseInfo.sessionInfo})}function lj(a,b,c){return N(a,mj,{idToken:b,deleteProvider:c})}function nj(a){if(!a.requestUri||!a.sessionId&&!a.postBody&&!a.pendingToken)throw new u("internal-error");}
	function oj(a,b){b.oauthIdToken&&b.providerId&&0==b.providerId.indexOf("oidc.")&&!b.pendingToken&&(a.sessionId?b.nonce=a.sessionId:a.postBody&&(a=new Qd(a.postBody),ge(a,"nonce")&&(b.nonce=a.get("nonce"))));return b}
	function pj(a){var b=null;a.needConfirmation?(a.code="account-exists-with-different-credential",b=vh(a)):"FEDERATED_USER_ID_ALREADY_LINKED"==a.errorMessage?(a.code="credential-already-in-use",b=vh(a)):"EMAIL_EXISTS"==a.errorMessage?(a.code="email-already-in-use",b=vh(a)):a.errorMessage&&(b=qj(a.errorMessage));if(b)throw b;O(a)}function Cg(a,b){b.returnIdpCredential=!0;return N(a,rj,b)}function Eg(a,b){b.returnIdpCredential=!0;return N(a,sj,b)}
	function Fg(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return N(a,tj,b)}function uj(a){if(!a.oobCode)throw new u("invalid-action-code");}k.jb=function(a,b){return N(this,vj,{oobCode:a,newPassword:b})};k.Pa=function(a){return N(this,wj,{oobCode:a})};k.fb=function(a){return N(this,xj,{oobCode:a})};
	var xj={endpoint:"setAccountInfo",A:uj,Y:"email",C:!0},wj={endpoint:"resetPassword",A:uj,G:function(a){var b=a.requestType;if(!b||!a.email&&"EMAIL_SIGNIN"!=b&&"VERIFY_AND_CHANGE_EMAIL"!=b)throw new u("internal-error");},C:!0},yj={endpoint:"signupNewUser",A:function(a){Ti(a);if(!a.password)throw new u("weak-password");},G:O,U:!0,C:!0},Wi={endpoint:"createAuthUri",C:!0},zj={endpoint:"deleteAccount",M:["idToken"]},mj={endpoint:"setAccountInfo",M:["idToken","deleteProvider"],A:function(a){if("array"!=
	la(a.deleteProvider))throw new u("internal-error");}},Wg={endpoint:"emailLinkSignin",M:["email","oobCode"],A:Ti,G:O,U:!0,C:!0},Yg={endpoint:"emailLinkSignin",M:["idToken","email","oobCode"],A:Ti,G:O,U:!0},Aj={endpoint:"accounts/mfaEnrollment:finalize",M:["idToken","phoneVerificationInfo"],A:jj,G:O,C:!0,La:!0},Bj={endpoint:"accounts/mfaSignIn:finalize",M:["mfaPendingCredential","phoneVerificationInfo"],A:jj,G:O,C:!0,La:!0},Cj={endpoint:"getAccountInfo"},dj={endpoint:"getOobConfirmationCode",M:["requestType"],
	A:function(a){if("EMAIL_SIGNIN"!=a.requestType)throw new u("internal-error");Ti(a)},Y:"email",C:!0},ej={endpoint:"getOobConfirmationCode",M:["idToken","requestType"],A:function(a){if("VERIFY_EMAIL"!=a.requestType)throw new u("internal-error");},Y:"email",C:!0},fj={endpoint:"getOobConfirmationCode",M:["idToken","newEmail","requestType"],A:function(a){if("VERIFY_AND_CHANGE_EMAIL"!=a.requestType)throw new u("internal-error");},Y:"email",C:!0},cj={endpoint:"getOobConfirmationCode",M:["requestType"],A:function(a){if("PASSWORD_RESET"!=
	a.requestType)throw new u("internal-error");Ti(a)},Y:"email",C:!0},Yi={hb:!0,endpoint:"getProjectConfig",Rb:"GET"},Dj={hb:!0,endpoint:"getRecaptchaParam",Rb:"GET",G:function(a){if(!a.recaptchaSiteKey)throw new u("internal-error");}},vj={endpoint:"resetPassword",A:uj,Y:"email",C:!0},gj={endpoint:"sendVerificationCode",M:["phoneNumber","recaptchaToken"],Y:"sessionInfo",C:!0},aj={endpoint:"setAccountInfo",M:["idToken"],A:Ui,U:!0},Zg={endpoint:"setAccountInfo",M:["idToken"],A:function(a){Ui(a);if(!a.password)throw new u("weak-password");
	},G:O,U:!0},$i={endpoint:"signupNewUser",G:O,U:!0,C:!0},ij={endpoint:"accounts/mfaEnrollment:start",M:["idToken","phoneEnrollmentInfo"],A:function(a){if(!a.phoneEnrollmentInfo)throw new u("internal-error");if(!a.phoneEnrollmentInfo.phoneNumber)throw new u("missing-phone-number");if(!a.phoneEnrollmentInfo.recaptchaToken)throw new u("missing-app-credential");},G:function(a){if(!a.phoneSessionInfo||!a.phoneSessionInfo.sessionInfo)throw new u("internal-error");},C:!0,La:!0},kj={endpoint:"accounts/mfaSignIn:start",
	M:["mfaPendingCredential","mfaEnrollmentId","phoneSignInInfo"],A:function(a){if(!a.phoneSignInInfo||!a.phoneSignInInfo.recaptchaToken)throw new u("missing-app-credential");},G:function(a){if(!a.phoneResponseInfo||!a.phoneResponseInfo.sessionInfo)throw new u("internal-error");},C:!0,La:!0},rj={endpoint:"verifyAssertion",A:nj,Wa:oj,G:pj,U:!0,C:!0},tj={endpoint:"verifyAssertion",A:nj,Wa:oj,G:function(a){if(a.errorMessage&&"USER_NOT_FOUND"==a.errorMessage)throw new u("user-not-found");if(a.errorMessage)throw qj(a.errorMessage);
	O(a)},U:!0,C:!0},sj={endpoint:"verifyAssertion",A:function(a){nj(a);if(!a.idToken)throw new u("internal-error");},Wa:oj,G:pj,U:!0},Ej={endpoint:"verifyCustomToken",A:function(a){if(!a.token)throw new u("invalid-custom-token");},G:O,U:!0,C:!0},Xg={endpoint:"verifyPassword",A:function(a){Ti(a);if(!a.password)throw new u("wrong-password");},G:O,U:!0,C:!0},hj={endpoint:"verifyPhoneNumber",A:Zi,G:O,C:!0},eh={endpoint:"verifyPhoneNumber",A:function(a){if(!a.idToken)throw new u("internal-error");Zi(a)},
	G:function(a){if(a.temporaryProof)throw a.code="credential-already-in-use",vh(a);O(a)}},fh={Eb:{USER_NOT_FOUND:"user-not-found"},endpoint:"verifyPhoneNumber",A:Zi,G:O,C:!0},Fj={endpoint:"accounts/mfaEnrollment:withdraw",M:["idToken","mfaEnrollmentId"],G:function(a){if(!!a[Ag]^!!a.refreshToken)throw new u("internal-error");},C:!0,La:!0};
	function N(a,b,c){if(!jf(c,b.M))return F(new u("internal-error"));var d=!!b.La,e=b.Rb||"POST",f;return E(c).then(b.A).then(function(){b.U&&(c.returnSecureToken=!0);b.C&&a.b&&"undefined"===typeof c.tenantId&&(c.tenantId=a.b);return d?Si(a,a.l,b.endpoint,e,c,b.Eb,b.hb||!1):Si(a,a.h,b.endpoint,e,c,b.Eb,b.hb||!1)}).then(function(g){f=g;return b.Wa?b.Wa(c,f):f}).then(b.G).then(function(){if(!b.Y)return f;if(!(b.Y in f))throw new u("internal-error");return f[b.Y]})}
	function qj(a){return Ri({error:{errors:[{message:a}],code:400,message:a}})}
	function Ri(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||"";var d={keyInvalid:"invalid-api-key",ipRefererBlocked:"app-not-authorized"};if(c=d[c]?new u(d[c]):null)return c;c=a.error&&a.error.message||"";d={INVALID_CUSTOM_TOKEN:"invalid-custom-token",CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_EMAIL:"invalid-email",INVALID_PASSWORD:"wrong-password",USER_DISABLED:"user-disabled",
	MISSING_PASSWORD:"internal-error",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",INVALID_PENDING_TOKEN:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",MISSING_OR_INVALID_NONCE:"missing-or-invalid-nonce",INVALID_MESSAGE_PAYLOAD:"invalid-message-payload",INVALID_RECIPIENT_EMAIL:"invalid-recipient-email",INVALID_SENDER:"invalid-sender",EMAIL_NOT_FOUND:"user-not-found",RESET_PASSWORD_EXCEED_LIMIT:"too-many-requests",
	EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",INVALID_PROVIDER_ID:"invalid-provider-id",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",CORS_UNSUPPORTED:"cors-unsupported",DYNAMIC_LINK_NOT_ACTIVATED:"dynamic-link-not-activated",INVALID_APP_ID:"invalid-app-id",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",WEAK_PASSWORD:"weak-password",
	OPERATION_NOT_ALLOWED:"operation-not-allowed",USER_CANCELLED:"user-cancelled",CAPTCHA_CHECK_FAILED:"captcha-check-failed",INVALID_APP_CREDENTIAL:"invalid-app-credential",INVALID_CODE:"invalid-verification-code",INVALID_PHONE_NUMBER:"invalid-phone-number",INVALID_SESSION_INFO:"invalid-verification-id",INVALID_TEMPORARY_PROOF:"invalid-credential",MISSING_APP_CREDENTIAL:"missing-app-credential",MISSING_CODE:"missing-verification-code",MISSING_PHONE_NUMBER:"missing-phone-number",MISSING_SESSION_INFO:"missing-verification-id",
	QUOTA_EXCEEDED:"quota-exceeded",SESSION_EXPIRED:"code-expired",REJECTED_CREDENTIAL:"rejected-credential",INVALID_CONTINUE_URI:"invalid-continue-uri",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",MISSING_IOS_BUNDLE_ID:"missing-ios-bundle-id",UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",INVALID_DYNAMIC_LINK_DOMAIN:"invalid-dynamic-link-domain",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id",INVALID_CERT_HASH:"invalid-cert-hash",UNSUPPORTED_TENANT_OPERATION:"unsupported-tenant-operation",
	INVALID_TENANT_ID:"invalid-tenant-id",TENANT_ID_MISMATCH:"tenant-id-mismatch",ADMIN_ONLY_OPERATION:"admin-restricted-operation",INVALID_MFA_PENDING_CREDENTIAL:"invalid-multi-factor-session",MFA_ENROLLMENT_NOT_FOUND:"multi-factor-info-not-found",MISSING_MFA_PENDING_CREDENTIAL:"missing-multi-factor-session",MISSING_MFA_ENROLLMENT_ID:"missing-multi-factor-info",EMAIL_CHANGE_NEEDS_VERIFICATION:"email-change-needs-verification",SECOND_FACTOR_EXISTS:"second-factor-already-in-use",SECOND_FACTOR_LIMIT_EXCEEDED:"maximum-second-factor-count-exceeded",
	UNSUPPORTED_FIRST_FACTOR:"unsupported-first-factor",UNVERIFIED_EMAIL:"unverified-email"};B(d,b||{});b=(b=c.match(/^[^\s]+\s*:\s*([\s\S]*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new u(d[e],b);!b&&a&&(b=Re(a));return new u("internal-error",b)};function Gj(a){this.b=a;this.a=null;this.nb=Hj(this)}
	function Hj(a){return Ij().then(function(){return new D(function(b,c){J("gapi.iframes.getContext")().open({where:document.body,url:a.b,messageHandlersFilter:J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),attributes:{style:{position:"absolute",top:"-100px",width:"1px",height:"1px"}},dontclear:!0},function(d){function e(){clearTimeout(f);b()}a.a=d;a.a.restyle({setHideOnLeave:!1});var f=setTimeout(function(){c(Error("Network Error"))},Jj.get());d.ping(e).then(e,function(){c(Error("Network Error"))})})})})}
	function Kj(a,b){return a.nb.then(function(){return new D(function(c){a.a.send(b.type,b,c,J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})})}function Lj(a,b){a.nb.then(function(){a.a.register("authEvent",b,J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})}var Mj=new nb(ob,"https://apis.google.com/js/api.js?onload=%{onload}"),Nj=new We(3E4,6E4),Jj=new We(5E3,15E3),Oj=null;
	function Ij(){return Oj?Oj:Oj=(new D(function(a,b){function c(){Ve();J("gapi.load")("gapi.iframes",{callback:a,ontimeout:function(){Ve();b(Error("Network Error"))},timeout:Nj.get()})}if(J("gapi.iframes.Iframe"))a();else if(J("gapi.load"))c();else{var d="__iframefcb"+Math.floor(1E6*Math.random()).toString();l[d]=function(){J("gapi.load")?c():b(Error("Network Error"))};d=wb(Mj,{onload:d});E(xi(d)).o(function(){b(Error("Network Error"))})}})).o(function(a){Oj=null;throw a;})};function Pj(a,b,c){this.i=a;this.g=b;this.h=c;this.f=null;this.a=$d(this.i,"/__/auth/iframe");H(this.a,"apiKey",this.g);H(this.a,"appName",this.h);this.b=null;this.c=[]}Pj.prototype.toString=function(){this.f?H(this.a,"v",this.f):fe(this.a.a,"v");this.b?H(this.a,"eid",this.b):fe(this.a.a,"eid");this.c.length?H(this.a,"fw",this.c.join(",")):fe(this.a.a,"fw");return this.a.toString()};function Qj(a,b,c,d,e){this.s=a;this.m=b;this.c=c;this.u=d;this.i=this.g=this.l=null;this.a=e;this.h=this.f=null}
	Qj.prototype.ub=function(a){this.h=a;return this};
	Qj.prototype.toString=function(){var a=$d(this.s,"/__/auth/handler");H(a,"apiKey",this.m);H(a,"appName",this.c);H(a,"authType",this.u);if(this.a.isOAuthProvider){var b=this.a;try{var c=firebase.app(this.c).auth().ja()}catch(h){c=null}b.kb=c;H(a,"providerId",this.a.providerId);b=this.a;c=Se(b.Fb);for(var d in c)c[d]=c[d].toString();d=b.Oc;c=kb(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.lb&&b.kb&&!c[b.lb]&&(c[b.lb]=b.kb);jb(c)||H(a,"customParameters",Re(c))}"function"===typeof this.a.Nb&&
	(b=this.a.Nb(),b.length&&H(a,"scopes",b.join(",")));this.l?H(a,"redirectUrl",this.l):fe(a.a,"redirectUrl");this.g?H(a,"eventId",this.g):fe(a.a,"eventId");this.i?H(a,"v",this.i):fe(a.a,"v");if(this.b)for(var g in this.b)this.b.hasOwnProperty(g)&&!Yd(a,g)&&H(a,g,this.b[g]);this.h?H(a,"tid",this.h):fe(a.a,"tid");this.f?H(a,"eid",this.f):fe(a.a,"eid");g=Rj(this.c);g.length&&H(a,"fw",g.join(","));return a.toString()};function Rj(a){try{return firebase.app(a).auth().Ea()}catch(b){return[]}}
	function Sj(a,b,c,d,e){this.u=a;this.f=b;this.b=c;this.c=d||null;this.h=e||null;this.m=this.s=this.w=null;this.g=[];this.l=this.a=null}
	function Tj(a){var b=oe();return Xi(a).then(function(c){a:{var d=Zd(b),e=d.f;d=d.b;for(var f=0;f<c.length;f++){var g=c[f];var h=d;var m=e;0==g.indexOf("chrome-extension://")?h=Zd(g).b==h&&"chrome-extension"==m:"http"!=m&&"https"!=m?h=!1:ze.test(g)?h=h==g:(g=g.split(".").join("\\."),h=(new RegExp("^(.+\\."+g+"|"+g+")$","i")).test(h));if(h){c=!0;break a}}c=!1}if(!c)throw new th(oe());})}
	function Uj(a){if(a.l)return a.l;a.l=Be().then(function(){if(!a.s){var b=a.c,c=a.h,d=Rj(a.b),e=new Pj(a.u,a.f,a.b);e.f=b;e.b=c;e.c=Wa(d||[]);a.s=e.toString()}a.i=new Gj(a.s);Vj(a)});return a.l}k=Sj.prototype;k.Lb=function(a,b,c){var d=new u("popup-closed-by-user"),e=new u("web-storage-unsupported"),f=this,g=!1;return this.ka().then(function(){Wj(f).then(function(h){h||(a&&ve(a),b(e),g=!0)})}).o(function(){}).then(function(){if(!g)return ye(a)}).then(function(){if(!g)return Bd(c).then(function(){b(d)})})};
	k.Ub=function(){var a=I();return!Qe(a)&&!Ue(a)};k.Qb=function(){return!1};
	k.Jb=function(a,b,c,d,e,f,g,h){if(!a)return F(new u("popup-blocked"));if(g&&!Qe())return this.ka().o(function(p){ve(a);e(p)}),d(),E();this.a||(this.a=Tj(Xj(this)));var m=this;return this.a.then(function(){var p=m.ka().o(function(v){ve(a);e(v);throw v;});d();return p}).then(function(){nh(c);if(!g){var p=Yj(m.u,m.f,m.b,b,c,null,f,m.c,void 0,m.h,h);pe(p,a)}}).o(function(p){"auth/network-request-failed"==p.code&&(m.a=null);throw p;})};
	function Xj(a){a.m||(a.w=a.c?Le(a.c,Rj(a.b)):null,a.m=new Ei(a.f,za(a.h),a.w));return a.m}k.Kb=function(a,b,c,d){this.a||(this.a=Tj(Xj(this)));var e=this;return this.a.then(function(){nh(b);var f=Yj(e.u,e.f,e.b,a,b,oe(),c,e.c,void 0,e.h,d);pe(f)}).o(function(f){"auth/network-request-failed"==f.code&&(e.a=null);throw f;})};k.ka=function(){var a=this;return Uj(this).then(function(){return a.i.nb}).o(function(){a.a=null;throw new u("network-request-failed");})};k.Xb=function(){return!0};
	function Yj(a,b,c,d,e,f,g,h,m,p,v){a=new Qj(a,b,c,d,e);a.l=f;a.g=g;a.i=h;a.b=kb(m||null);a.f=p;return a.ub(v).toString()}function Vj(a){if(!a.i)throw Error("IfcHandler must be initialized!");Lj(a.i,function(b){var c={};if(b&&b.authEvent){var d=!1;b=ph(b.authEvent);for(c=0;c<a.g.length;c++)d=a.g[c](b)||d;c={};c.status=d?"ACK":"ERROR";return E(c)}c.status="ERROR";return E(c)})}
	function Wj(a){var b={type:"webStorageSupport"};return Uj(a).then(function(){return Kj(a.i,b)}).then(function(c){if(c&&c.length&&"undefined"!==typeof c[0].webStorageSupport)return c[0].webStorageSupport;throw Error();})}k.Ca=function(a){this.g.push(a)};k.Qa=function(a){Ua(this.g,function(b){return b==a})};function Zj(a){this.a=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.a)throw new u("internal-error","The React Native compatibility library was not found.");this.type="asyncStorage"}k=Zj.prototype;k.get=function(a){return E(this.a.getItem(a)).then(function(b){return b&&Te(b)})};k.set=function(a,b){return E(this.a.setItem(a,Re(b)))};k.T=function(a){return E(this.a.removeItem(a))};k.ba=function(){};k.ha=function(){};function ak(a){this.b=a;this.a={};this.f=r(this.c,this)}var bk=[];function ck(){var a=Ge()?self:null;x(bk,function(c){c.b==a&&(b=c)});if(!b){var b=new ak(a);bk.push(b)}return b}
	ak.prototype.c=function(a){var b=a.data.eventType,c=a.data.eventId,d=this.a[b];if(d&&0<d.length){a.ports[0].postMessage({status:"ack",eventId:c,eventType:b,response:null});var e=[];x(d,function(f){e.push(E().then(function(){return f(a.origin,a.data.data)}))});Ec(e).then(function(f){var g=[];x(f,function(h){g.push({fulfilled:h.Mb,value:h.value,reason:h.reason?h.reason.message:void 0})});x(g,function(h){for(var m in h)"undefined"===typeof h[m]&&delete h[m]});a.ports[0].postMessage({status:"done",eventId:c,
	eventType:b,response:g})})}};function dk(a,b,c){jb(a.a)&&a.b.addEventListener("message",a.f);"undefined"===typeof a.a[b]&&(a.a[b]=[]);a.a[b].push(c)};function ek(a){this.a=a}ek.prototype.postMessage=function(a,b){this.a.postMessage(a,b)};function fk(a){this.c=a;this.b=!1;this.a=[]}
	function gk(a,b,c,d){var e,f=c||{},g,h,m,p=null;if(a.b)return F(Error("connection_unavailable"));var v=d?800:50,C="undefined"!==typeof MessageChannel?new MessageChannel:null;return(new D(function(A,Q){C?(e=Math.floor(Math.random()*Math.pow(10,20)).toString(),C.port1.start(),h=setTimeout(function(){Q(Error("unsupported_event"))},v),g=function(xa){xa.data.eventId===e&&("ack"===xa.data.status?(clearTimeout(h),m=setTimeout(function(){Q(Error("timeout"))},3E3)):"done"===xa.data.status?(clearTimeout(m),
	"undefined"!==typeof xa.data.response?A(xa.data.response):Q(Error("unknown_error"))):(clearTimeout(h),clearTimeout(m),Q(Error("invalid_response"))))},p={messageChannel:C,onMessage:g},a.a.push(p),C.port1.addEventListener("message",g),a.c.postMessage({eventType:b,eventId:e,data:f},[C.port2])):Q(Error("connection_unavailable"))})).then(function(A){hk(a,p);return A}).o(function(A){hk(a,p);throw A;})}
	function hk(a,b){if(b){var c=b.messageChannel,d=b.onMessage;c&&(c.port1.removeEventListener("message",d),c.port1.close());Ua(a.a,function(e){return e==b})}}fk.prototype.close=function(){for(;0<this.a.length;)hk(this,this.a[0]);this.b=!0};function ik(){if(!jk())throw new u("web-storage-unsupported");this.c={};this.a=[];this.b=0;this.u=l.indexedDB;this.type="indexedDB";this.g=this.l=this.f=this.i=null;this.s=!1;this.h=null;var a=this;Ge()&&self?(this.l=ck(),dk(this.l,"keyChanged",function(b,c){return kk(a).then(function(d){0<d.length&&x(a.a,function(e){e(d)});return{keyProcessed:Sa(d,c.key)}})}),dk(this.l,"ping",function(){return E(["keyChanged"])})):bf().then(function(b){if(a.h=b)a.g=new fk(new ek(b)),gk(a.g,"ping",null,!0).then(function(c){c[0].fulfilled&&
	Sa(c[0].value,"keyChanged")&&(a.s=!0)}).o(function(){})})}var lk;function mk(a){return new D(function(b,c){var d=a.u.deleteDatabase("firebaseLocalStorageDb");d.onsuccess=function(){b()};d.onerror=function(e){c(Error(e.target.error))}})}
	function nk(a){return new D(function(b,c){var d=a.u.open("firebaseLocalStorageDb",1);d.onerror=function(e){try{e.preventDefault()}catch(f){}c(Error(e.target.error))};d.onupgradeneeded=function(e){e=e.target.result;try{e.createObjectStore("firebaseLocalStorage",{keyPath:"fbase_key"})}catch(f){c(f)}};d.onsuccess=function(e){e=e.target.result;e.objectStoreNames.contains("firebaseLocalStorage")?b(e):mk(a).then(function(){return nk(a)}).then(function(f){b(f)}).o(function(f){c(f)})}})}
	function ok(a){a.m||(a.m=nk(a));return a.m}function jk(){try{return!!l.indexedDB}catch(a){return!1}}function pk(a){return a.objectStore("firebaseLocalStorage")}function qk(a,b){return a.transaction(["firebaseLocalStorage"],b?"readwrite":"readonly")}function rk(a){return new D(function(b,c){a.onsuccess=function(d){d&&d.target?b(d.target.result):b()};a.onerror=function(d){c(d.target.error)}})}k=ik.prototype;
	k.set=function(a,b){var c=!1,d,e=this;return ok(this).then(function(f){d=f;f=pk(qk(d,!0));return rk(f.get(a))}).then(function(f){var g=pk(qk(d,!0));if(f)return f.value=b,rk(g.put(f));e.b++;c=!0;f={};f.fbase_key=a;f.value=b;return rk(g.add(f))}).then(function(){e.c[a]=b;return sk(e,a)}).ma(function(){c&&e.b--})};function sk(a,b){return a.g&&a.h&&af()===a.h?gk(a.g,"keyChanged",{key:b},a.s).then(function(){}).o(function(){}):E()}
	k.get=function(a){return ok(this).then(function(b){return rk(pk(qk(b,!1)).get(a))}).then(function(b){return b&&b.value})};k.T=function(a){var b=!1,c=this;return ok(this).then(function(d){b=!0;c.b++;return rk(pk(qk(d,!0))["delete"](a))}).then(function(){delete c.c[a];return sk(c,a)}).ma(function(){b&&c.b--})};
	function kk(a){return ok(a).then(function(b){var c=pk(qk(b,!1));return c.getAll?rk(c.getAll()):new D(function(d,e){var f=[],g=c.openCursor();g.onsuccess=function(h){(h=h.target.result)?(f.push(h.value),h["continue"]()):d(f)};g.onerror=function(h){e(h.target.error)}})}).then(function(b){var c={},d=[];if(0==a.b){for(d=0;d<b.length;d++)c[b[d].fbase_key]=b[d].value;d=qe(a.c,c);a.c=c}return d})}k.ba=function(a){0==this.a.length&&tk(this);this.a.push(a)};
	k.ha=function(a){Ua(this.a,function(b){return b==a});0==this.a.length&&uk(this)};function tk(a){function b(){a.f=setTimeout(function(){a.i=kk(a).then(function(c){0<c.length&&x(a.a,function(d){d(c)})}).then(function(){b()}).o(function(c){"STOP_EVENT"!=c.message&&b()})},800)}uk(a);b()}function uk(a){a.i&&a.i.cancel("STOP_EVENT");a.f&&(clearTimeout(a.f),a.f=null)};function vk(a){var b=this,c=null;this.a=[];this.type="indexedDB";this.c=a;this.b=E().then(function(){if(jk()){var d=Ne(),e="__sak"+d;lk||(lk=new ik);c=lk;return c.set(e,d).then(function(){return c.get(e)}).then(function(f){if(f!==d)throw Error("indexedDB not supported!");return c.T(e)}).then(function(){return c}).o(function(){return b.c})}return b.c}).then(function(d){b.type=d.type;d.ba(function(e){x(b.a,function(f){f(e)})});return d})}k=vk.prototype;k.get=function(a){return this.b.then(function(b){return b.get(a)})};
	k.set=function(a,b){return this.b.then(function(c){return c.set(a,b)})};k.T=function(a){return this.b.then(function(b){return b.T(a)})};k.ba=function(a){this.a.push(a)};k.ha=function(a){Ua(this.a,function(b){return b==a})};function wk(){this.a={};this.type="inMemory"}k=wk.prototype;k.get=function(a){return E(this.a[a])};k.set=function(a,b){this.a[a]=b;return E()};k.T=function(a){delete this.a[a];return E()};k.ba=function(){};k.ha=function(){};function xk(){if(!yk()){if("Node"==He())throw new u("internal-error","The LocalStorage compatibility library was not found.");throw new u("web-storage-unsupported");}this.a=zk()||firebase.INTERNAL.node.localStorage;this.type="localStorage"}function zk(){try{var a=l.localStorage,b=Ne();a&&(a.setItem(b,"1"),a.removeItem(b));return a}catch(c){return null}}
	function yk(){var a="Node"==He();a=zk()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem("__sak","1"),a.removeItem("__sak"),!0}catch(b){return!1}}k=xk.prototype;k.get=function(a){var b=this;return E().then(function(){var c=b.a.getItem(a);return Te(c)})};k.set=function(a,b){var c=this;return E().then(function(){var d=Re(b);null===d?c.T(a):c.a.setItem(a,d)})};k.T=function(a){var b=this;return E().then(function(){b.a.removeItem(a)})};
	k.ba=function(a){l.window&&jd(l.window,"storage",a)};k.ha=function(a){l.window&&td(l.window,"storage",a)};function Ak(){this.type="nullStorage"}k=Ak.prototype;k.get=function(){return E(null)};k.set=function(){return E()};k.T=function(){return E()};k.ba=function(){};k.ha=function(){};function Bk(){if(!Ck()){if("Node"==He())throw new u("internal-error","The SessionStorage compatibility library was not found.");throw new u("web-storage-unsupported");}this.a=Dk()||firebase.INTERNAL.node.sessionStorage;this.type="sessionStorage"}function Dk(){try{var a=l.sessionStorage,b=Ne();a&&(a.setItem(b,"1"),a.removeItem(b));return a}catch(c){return null}}
	function Ck(){var a="Node"==He();a=Dk()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem("__sak","1"),a.removeItem("__sak"),!0}catch(b){return!1}}k=Bk.prototype;k.get=function(a){var b=this;return E().then(function(){var c=b.a.getItem(a);return Te(c)})};k.set=function(a,b){var c=this;return E().then(function(){var d=Re(b);null===d?c.T(a):c.a.setItem(a,d)})};k.T=function(a){var b=this;return E().then(function(){b.a.removeItem(a)})};k.ba=function(){};
	k.ha=function(){};function Ek(){var a={};a.Browser=Fk;a.Node=Gk;a.ReactNative=Hk;a.Worker=Ik;this.a=a[He()]}var Jk,Fk={F:xk,$a:Bk},Gk={F:xk,$a:Bk},Hk={F:Zj,$a:Ak},Ik={F:xk,$a:Ak};var Kk={od:"local",NONE:"none",qd:"session"};function Lk(a){var b=new u("invalid-persistence-type"),c=new u("unsupported-persistence-type");a:{for(d in Kk)if(Kk[d]==a){var d=!0;break a}d=!1}if(!d||"string"!==typeof a)throw b;switch(He()){case "ReactNative":if("session"===a)throw c;break;case "Node":if("none"!==a)throw c;break;default:if(!Me()&&"none"!==a)throw c;}}
	function Mk(){var a=!Ue(I())&&Fe()?!0:!1,b=Qe(),c=Me();this.m=a;this.h=b;this.l=c;this.a={};Jk||(Jk=new Ek);a=Jk;try{this.g=!ne()&&$e()||!l.indexedDB?new a.a.F:new vk(Ge()?new wk:new a.a.F)}catch(d){this.g=new wk,this.h=!0}try{this.i=new a.a.$a}catch(d){this.i=new wk}this.u=new wk;this.f=r(this.Vb,this);this.b={}}var Nk;function Ok(){Nk||(Nk=new Mk);return Nk}function Pk(a,b){switch(b){case "session":return a.i;case "none":return a.u;default:return a.g}}
	function Qk(a,b){return"firebase:"+a.name+(b?":"+b:"")}function Rk(a,b,c){var d=Qk(b,c),e=Pk(a,b.F);return a.get(b,c).then(function(f){var g=null;try{g=Te(l.localStorage.getItem(d))}catch(h){}if(g&&!f)return l.localStorage.removeItem(d),a.set(b,g,c);g&&f&&"localStorage"!=e.type&&l.localStorage.removeItem(d)})}k=Mk.prototype;k.get=function(a,b){return Pk(this,a.F).get(Qk(a,b))};function Sk(a,b,c){c=Qk(b,c);"local"==b.F&&(a.b[c]=null);return Pk(a,b.F).T(c)}
	k.set=function(a,b,c){var d=Qk(a,c),e=this,f=Pk(this,a.F);return f.set(d,b).then(function(){return f.get(d)}).then(function(g){"local"==a.F&&(e.b[d]=g)})};k.addListener=function(a,b,c){a=Qk(a,b);this.l&&(this.b[a]=l.localStorage.getItem(a));jb(this.a)&&(Pk(this,"local").ba(this.f),this.h||(ne()||!$e())&&l.indexedDB||!this.l||Tk(this));this.a[a]||(this.a[a]=[]);this.a[a].push(c)};
	k.removeListener=function(a,b,c){a=Qk(a,b);this.a[a]&&(Ua(this.a[a],function(d){return d==c}),0==this.a[a].length&&delete this.a[a]);jb(this.a)&&(Pk(this,"local").ha(this.f),Uk(this))};function Tk(a){Uk(a);a.c=setInterval(function(){for(var b in a.a){var c=l.localStorage.getItem(b),d=a.b[b];c!=d&&(a.b[b]=c,c=new Yc({type:"storage",key:b,target:window,oldValue:d,newValue:c,a:!0}),a.Vb(c))}},1E3)}function Uk(a){a.c&&(clearInterval(a.c),a.c=null)}
	k.Vb=function(a){if(a&&a.f){var b=a.a.key;if(null==b)for(var c in this.a){var d=this.b[c];"undefined"===typeof d&&(d=null);var e=l.localStorage.getItem(c);e!==d&&(this.b[c]=e,this.ib(c))}else if(0==b.indexOf("firebase:")&&this.a[b]){"undefined"!==typeof a.a.a?Pk(this,"local").ha(this.f):Uk(this);if(this.m)if(c=l.localStorage.getItem(b),d=a.a.newValue,d!==c)null!==d?l.localStorage.setItem(b,d):l.localStorage.removeItem(b);else if(this.b[b]===d&&"undefined"===typeof a.a.a)return;var f=this;c=function(){if("undefined"!==
	typeof a.a.a||f.b[b]!==l.localStorage.getItem(b))f.b[b]=l.localStorage.getItem(b),f.ib(b)};Sb&&cc&&10==cc&&l.localStorage.getItem(b)!==a.a.newValue&&a.a.newValue!==a.a.oldValue?setTimeout(c,10):c()}}else x(a,r(this.ib,this))};k.ib=function(a){this.a[a]&&x(this.a[a],function(b){b()})};function Vk(a){this.a=a;this.b=Ok()}var Wk={name:"authEvent",F:"local"};function Xk(a){return a.b.get(Wk,a.a).then(function(b){return ph(b)})};function Yk(){this.a=Ok()};function Zk(){this.b=-1};function $k(a,b){this.b=al;this.f=l.Uint8Array?new Uint8Array(this.b):Array(this.b);this.g=this.c=0;this.a=[];this.i=a;this.h=b;this.l=l.Int32Array?new Int32Array(64):Array(64);void 0===bl&&(l.Int32Array?bl=new Int32Array(cl):bl=cl);this.reset()}var bl;t($k,Zk);for(var al=64,dl=al-1,el=[],fl=0;fl<dl;fl++)el[fl]=0;var gl=Va(128,el);$k.prototype.reset=function(){this.g=this.c=0;this.a=l.Int32Array?new Int32Array(this.h):Wa(this.h)};
	function hl(a){for(var b=a.f,c=a.l,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,g=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+g|0}d=a.a[0]|0;e=a.a[1]|0;var h=a.a[2]|0,m=a.a[3]|0,p=a.a[4]|0,v=a.a[5]|0,C=a.a[6]|0;f=a.a[7]|0;for(b=0;64>b;b++){var A=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&h^e&h)|0;g=p&v^~p&C;f=f+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<
	7))|0;g=g+(bl[b]|0)|0;g=f+(g+(c[b]|0)|0)|0;f=C;C=v;v=p;p=m+g|0;m=h;h=e;e=d;d=g+A|0}a.a[0]=a.a[0]+d|0;a.a[1]=a.a[1]+e|0;a.a[2]=a.a[2]+h|0;a.a[3]=a.a[3]+m|0;a.a[4]=a.a[4]+p|0;a.a[5]=a.a[5]+v|0;a.a[6]=a.a[6]+C|0;a.a[7]=a.a[7]+f|0}
	function il(a,b,c){void 0===c&&(c=b.length);var d=0,e=a.c;if("string"===typeof b)for(;d<c;)a.f[e++]=b.charCodeAt(d++),e==a.b&&(hl(a),e=0);else if(ma(b))for(;d<c;){var f=b[d++];if(!("number"==typeof f&&0<=f&&255>=f&&f==(f|0)))throw Error("message must be a byte array");a.f[e++]=f;e==a.b&&(hl(a),e=0)}else throw Error("message must be string or array");a.c=e;a.g+=c}
	var cl=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,
	4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function jl(){$k.call(this,8,kl)}t(jl,$k);var kl=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function ll(a,b,c,d,e){this.u=a;this.i=b;this.l=c;this.m=d||null;this.s=e||null;this.h=b+":"+c;this.w=new Yk;this.g=new Vk(this.h);this.f=null;this.b=[];this.a=this.c=null}function ml(a){return new u("invalid-cordova-configuration",a)}k=ll.prototype;
	k.ka=function(){return this.Ga?this.Ga:this.Ga=Ce().then(function(){if("function"!==typeof J("universalLinks.subscribe",l))throw ml("cordova-universal-links-plugin-fix is not installed");if("undefined"===typeof J("BuildInfo.packageName",l))throw ml("cordova-plugin-buildinfo is not installed");if("function"!==typeof J("cordova.plugins.browsertab.openUrl",l))throw ml("cordova-plugin-browsertab is not installed");if("function"!==typeof J("cordova.InAppBrowser.open",l))throw ml("cordova-plugin-inappbrowser is not installed");
	},function(){throw new u("cordova-not-ready");})};function nl(){for(var a=20,b=[];0<a;)b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),a--;return b.join("")}function ol(a){var b=new jl;il(b,a);a=[];var c=8*b.g;56>b.c?il(b,gl,56-b.c):il(b,gl,b.b-(b.c-56));for(var d=63;56<=d;d--)b.f[d]=c&255,c/=256;hl(b);for(d=c=0;d<b.i;d++)for(var e=24;0<=e;e-=8)a[c++]=b.a[d]>>e&255;return $f(a)}
	k.Lb=function(a,b){b(new u("operation-not-supported-in-this-environment"));return E()};k.Jb=function(){return F(new u("operation-not-supported-in-this-environment"))};k.Xb=function(){return!1};k.Ub=function(){return!0};k.Qb=function(){return!0};
	k.Kb=function(a,b,c,d){if(this.c)return F(new u("redirect-operation-pending"));var e=this,f=l.document,g=null,h=null,m=null,p=null;return this.c=E().then(function(){nh(b);return pl(e)}).then(function(){return ql(e,a,b,c,d)}).then(function(){return(new D(function(v,C){h=function(){var A=J("cordova.plugins.browsertab.close",l);v();"function"===typeof A&&A();e.a&&"function"===typeof e.a.close&&(e.a.close(),e.a=null);return!1};e.Ca(h);m=function(){g||(g=Bd(2E3).then(function(){C(new u("redirect-cancelled-by-user"))}))};
	p=function(){Xe()&&m()};f.addEventListener("resume",m,!1);I().toLowerCase().match(/android/)||f.addEventListener("visibilitychange",p,!1)})).o(function(v){return rl(e).then(function(){throw v;})})}).ma(function(){m&&f.removeEventListener("resume",m,!1);p&&f.removeEventListener("visibilitychange",p,!1);g&&g.cancel();h&&e.Qa(h);e.c=null})};
	function ql(a,b,c,d,e){var f=nl(),g=new oh(b,d,null,f,new u("no-auth-event"),null,e),h=J("BuildInfo.packageName",l);if("string"!==typeof h)throw new u("invalid-cordova-configuration");var m=J("BuildInfo.displayName",l),p={};if(I().toLowerCase().match(/iphone|ipad|ipod/))p.ibi=h;else if(I().toLowerCase().match(/android/))p.apn=h;else return F(new u("operation-not-supported-in-this-environment"));m&&(p.appDisplayName=m);f=ol(f);p.sessionId=f;var v=Yj(a.u,a.i,a.l,b,c,null,d,a.m,p,a.s,e);return a.ka().then(function(){var C=
	a.h;return a.w.a.set(Wk,g.v(),C)}).then(function(){var C=J("cordova.plugins.browsertab.isAvailable",l);if("function"!==typeof C)throw new u("invalid-cordova-configuration");var A=null;C(function(Q){if(Q){A=J("cordova.plugins.browsertab.openUrl",l);if("function"!==typeof A)throw new u("invalid-cordova-configuration");A(v)}else{A=J("cordova.InAppBrowser.open",l);if("function"!==typeof A)throw new u("invalid-cordova-configuration");Q=I();a.a=A(v,Q.match(/(iPad|iPhone|iPod).*OS 7_\d/i)||Q.match(/(iPad|iPhone|iPod).*OS 8_\d/i)?
	"_blank":"_system","location=yes")}})})}function sl(a,b){for(var c=0;c<a.b.length;c++)try{a.b[c](b)}catch(d){}}function pl(a){a.f||(a.f=a.ka().then(function(){return new D(function(b){function c(d){b(d);a.Qa(c);return!1}a.Ca(c);tl(a)})}));return a.f}function rl(a){var b=null;return Xk(a.g).then(function(c){b=c;c=a.g;return Sk(c.b,Wk,c.a)}).then(function(){return b})}
	function tl(a){function b(g){d=!0;e&&e.cancel();rl(a).then(function(h){var m=c;if(h&&g&&g.url){var p=null;m=ug(g.url);-1!=m.indexOf("/__/auth/callback")&&(p=Zd(m),p=Te(Yd(p,"firebaseError")||null),p=(p="object"===typeof p?wa(p):null)?new oh(h.c,h.b,null,null,p,null,h.S()):new oh(h.c,h.b,m,h.f,null,null,h.S()));m=p||c}sl(a,m)})}var c=new oh("unknown",null,null,null,new u("no-auth-event")),d=!1,e=Bd(500).then(function(){return rl(a).then(function(){d||sl(a,c)})}),f=l.handleOpenURL;l.handleOpenURL=function(g){0==
	g.toLowerCase().indexOf(J("BuildInfo.packageName",l).toLowerCase()+"://")&&b({url:g});if("function"===typeof f)try{f(g)}catch(h){console.error(h)}};rh||(rh=new qh);sh(b)}k.Ca=function(a){this.b.push(a);pl(this).o(function(b){"auth/invalid-cordova-configuration"===b.code&&(b=new oh("unknown",null,null,null,new u("no-auth-event")),a(b))})};k.Qa=function(a){Ua(this.b,function(b){return b==a})};function ul(a){this.a=a;this.b=Ok()}var vl={name:"pendingRedirect",F:"session"};function wl(a){return a.b.set(vl,"pending",a.a)}function xl(a){return Sk(a.b,vl,a.a)}function yl(a){return a.b.get(vl,a.a).then(function(b){return"pending"==b})};function zl(a,b,c){this.i={};this.w=0;this.D=a;this.u=b;this.m=c;this.h=[];this.f=!1;this.l=r(this.s,this);this.b=new Al;this.B=new Bl;this.g=new ul(this.u+":"+this.m);this.c={};this.c.unknown=this.b;this.c.signInViaRedirect=this.b;this.c.linkViaRedirect=this.b;this.c.reauthViaRedirect=this.b;this.c.signInViaPopup=this.B;this.c.linkViaPopup=this.B;this.c.reauthViaPopup=this.B;this.a=Cl(this.D,this.u,this.m,Aa)}
	function Cl(a,b,c,d){var e=firebase.SDK_VERSION||null;return De()?new ll(a,b,c,e,d):new Sj(a,b,c,e,d)}zl.prototype.reset=function(){this.f=!1;this.a.Qa(this.l);this.a=Cl(this.D,this.u,this.m);this.i={}};function Dl(a){a.f||(a.f=!0,a.a.Ca(a.l));var b=a.a;return a.a.ka().o(function(c){a.a==b&&a.reset();throw c;})}function El(a){a.a.Ub()&&Dl(a).o(function(b){var c=new oh("unknown",null,null,null,new u("operation-not-supported-in-this-environment"));Fl(b)&&a.s(c)});a.a.Qb()||Gl(a.b)}
	function Hl(a,b){Sa(a.h,b)||a.h.push(b);a.f||yl(a.g).then(function(c){c?xl(a.g).then(function(){Dl(a).o(function(d){var e=new oh("unknown",null,null,null,new u("operation-not-supported-in-this-environment"));Fl(d)&&a.s(e)})}):El(a)}).o(function(){El(a)})}function Il(a,b){Ua(a.h,function(c){return c==b})}
	zl.prototype.s=function(a){if(!a)throw new u("invalid-auth-event");6E5<=ta()-this.w&&(this.i={},this.w=0);if(a&&a.getUid()&&this.i.hasOwnProperty(a.getUid()))return!1;for(var b=!1,c=0;c<this.h.length;c++){var d=this.h[c];if(d.Cb(a.c,a.b)){if(b=this.c[a.c])b.h(a,d),a&&(a.f||a.b)&&(this.i[a.getUid()]=!0,this.w=ta());b=!0;break}}Gl(this.b);return b};var Jl=new We(2E3,1E4),Kl=new We(3E4,6E4);zl.prototype.pa=function(){return this.b.pa()};
	function Ll(a,b,c,d,e,f,g){return a.a.Jb(b,c,d,function(){a.f||(a.f=!0,a.a.Ca(a.l))},function(){a.reset()},e,f,g)}function Fl(a){return a&&"auth/cordova-not-ready"==a.code?!0:!1}
	function Ml(a,b,c,d,e){var f;return wl(a.g).then(function(){return a.a.Kb(b,c,d,e).o(function(g){if(Fl(g))throw new u("operation-not-supported-in-this-environment");f=g;return xl(a.g).then(function(){throw f;})}).then(function(){return a.a.Xb()?new D(function(){}):xl(a.g).then(function(){return a.pa()}).then(function(){}).o(function(){})})})}function Nl(a,b,c,d,e){return a.a.Lb(d,function(f){b.la(c,null,f,e)},Jl.get())}var Ol={};
	function Pl(a,b,c){var d=b+":"+c;Ol[d]||(Ol[d]=new zl(a,b,c));return Ol[d]}function Al(){this.b=null;this.f=[];this.c=[];this.a=null;this.i=this.g=!1}Al.prototype.reset=function(){this.b=null;this.a&&(this.a.cancel(),this.a=null)};
	Al.prototype.h=function(a,b){if(a){this.reset();this.g=!0;var c=a.c,d=a.b,e=a.a&&"auth/web-storage-unsupported"==a.a.code,f=a.a&&"auth/operation-not-supported-in-this-environment"==a.a.code;this.i=!(!e&&!f);"unknown"!=c||e||f?a.a?(Ql(this,!0,null,a.a),E()):b.Da(c,d)?Rl(this,a,b):F(new u("invalid-auth-event")):(Ql(this,!1,null,null),E())}else F(new u("invalid-auth-event"))};function Gl(a){a.g||(a.g=!0,Ql(a,!1,null,null))}function Sl(a){a.g&&!a.i&&Ql(a,!1,null,null)}
	function Rl(a,b,c){c=c.Da(b.c,b.b);var d=b.g,e=b.f,f=b.i,g=b.S(),h=!!b.c.match(/Redirect$/);c(d,e,g,f).then(function(m){Ql(a,h,m,null)}).o(function(m){Ql(a,h,null,m)})}function Tl(a,b){a.b=function(){return F(b)};if(a.c.length)for(var c=0;c<a.c.length;c++)a.c[c](b)}function Ul(a,b){a.b=function(){return E(b)};if(a.f.length)for(var c=0;c<a.f.length;c++)a.f[c](b)}function Ql(a,b,c,d){b?d?Tl(a,d):Ul(a,c):Ul(a,{user:null});a.f=[];a.c=[]}
	Al.prototype.pa=function(){var a=this;return new D(function(b,c){a.b?a.b().then(b,c):(a.f.push(b),a.c.push(c),Vl(a))})};function Vl(a){var b=new u("timeout");a.a&&a.a.cancel();a.a=Bd(Kl.get()).then(function(){a.b||(a.g=!0,Ql(a,!0,null,b))})}function Bl(){}Bl.prototype.h=function(a,b){if(a){var c=a.c,d=a.b;a.a?(b.la(a.c,null,a.a,a.b),E()):b.Da(c,d)?Wl(a,b):F(new u("invalid-auth-event"))}else F(new u("invalid-auth-event"))};
	function Wl(a,b){var c=a.b,d=a.c;b.Da(d,c)(a.g,a.f,a.S(),a.i).then(function(e){b.la(d,e,null,c)}).o(function(e){b.la(d,null,e,c)})};function Xl(){this.Bb=!1;Object.defineProperty(this,"appVerificationDisabled",{get:function(){return this.Bb},set:function(a){this.Bb=a},enumerable:!1})};function Yl(a,b){this.a=b;K(this,"verificationId",a)}Yl.prototype.confirm=function(a){a=lh(this.verificationId,a);return this.a(a)};function Zl(a,b,c,d){return(new hh(a)).cb(b,c).then(function(e){return new Yl(e,d)})};function $l(a){var b=fg(a);if(!(b&&b.exp&&b.auth_time&&b.iat))throw new u("internal-error","An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");L(this,{token:a,expirationTime:Ze(1E3*b.exp),authTime:Ze(1E3*b.auth_time),issuedAtTime:Ze(1E3*b.iat),signInProvider:b.firebase&&b.firebase.sign_in_provider?b.firebase.sign_in_provider:null,signInSecondFactor:b.firebase&&b.firebase.sign_in_second_factor?b.firebase.sign_in_second_factor:null,claims:b})}
	;function am(a,b,c){var d=b&&b[bm];if(!d)throw new u("argument-error","Internal assert: Invalid MultiFactorResolver");this.a=a;this.f=kb(b);this.g=c;this.c=new vg(null,d);this.b=[];var e=this;x(b[cm]||[],function(f){(f=qf(f))&&e.b.push(f)});K(this,"auth",this.a);K(this,"session",this.c);K(this,"hints",this.b)}var cm="mfaInfo",bm="mfaPendingCredential";am.prototype.Pc=function(a){var b=this;return a.ob(this.a.b,this.c).then(function(c){var d=kb(b.f);delete d[cm];delete d[bm];B(d,c);return b.g(d)})};function dm(a,b,c,d){u.call(this,"multi-factor-auth-required",d,b);this.b=new am(a,b,c);K(this,"resolver",this.b)}t(dm,u);function em(a,b,c){if(a&&q(a.serverResponse)&&"auth/multi-factor-auth-required"===a.code)try{return new dm(b,a.serverResponse,c,a.message)}catch(d){}return null};function fm(){}fm.prototype.ob=function(a,b,c){return b.type==wg?gm(this,a,b,c):hm(this,a,b)};function gm(a,b,c,d){return c.Fa().then(function(e){e={idToken:e};"undefined"!==typeof d&&(e.displayName=d);B(e,{phoneVerificationInfo:dh(a.a)});return N(b,Aj,e)})}function hm(a,b,c){return c.Fa().then(function(d){d={mfaPendingCredential:d};B(d,{phoneVerificationInfo:dh(a.a)});return N(b,Bj,d)})}function im(a){K(this,"factorId",a.ea);this.a=a}t(im,fm);
	function jm(a){im.call(this,a);if(this.a.ea!=hh.PROVIDER_ID)throw new u("argument-error","firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential");}t(jm,im);function km(a,b){Xc.call(this,a);for(var c in b)this[c]=b[c]}t(km,Xc);function lm(a,b){this.a=a;this.b=[];this.c=r(this.wc,this);jd(this.a,"userReloaded",this.c);var c=[];b&&b.multiFactor&&b.multiFactor.enrolledFactors&&x(b.multiFactor.enrolledFactors,function(d){var e=null,f={};if(d){d.uid&&(f[nf]=d.uid);d.displayName&&(f[of]=d.displayName);d.enrollmentTime&&(f[pf]=(new Date(d.enrollmentTime)).toISOString());d.phoneNumber&&(f[mf]=d.phoneNumber);try{e=new rf(f)}catch(g){}d=e}else d=null;d&&c.push(d)});mm(this,c)}
	function nm(a){var b=[];x(a.mfaInfo||[],function(c){(c=qf(c))&&b.push(c)});return b}k=lm.prototype;k.wc=function(a){mm(this,nm(a.ed))};function mm(a,b){a.b=b;K(a,"enrolledFactors",b)}k.Ob=function(){return this.a.I().then(function(a){return new vg(a,null)})};k.dc=function(a,b){var c=this,d=this.a.a;return this.Ob().then(function(e){return a.ob(d,e,b)}).then(function(e){om(c.a,e);return c.a.reload()})};
	k.$c=function(a){var b=this,c="string"===typeof a?a:a.uid,d=this.a.a;return this.a.I().then(function(e){return N(d,Fj,{idToken:e,mfaEnrollmentId:c})}).then(function(e){var f=Na(b.b,function(g){return g.uid!=c});mm(b,f);om(b.a,e);return b.a.reload().o(function(g){if("auth/user-token-expired"!=g.code)throw g;})})};k.v=function(){return{multiFactor:{enrolledFactors:Oa(this.b,function(a){return a.v()})}}};function pm(a,b,c){this.h=a;this.i=b;this.g=c;this.c=3E4;this.f=96E4;this.b=null;this.a=this.c;if(this.f<this.c)throw Error("Proactive refresh lower bound greater than upper bound!");}pm.prototype.start=function(){this.a=this.c;qm(this,!0)};function rm(a,b){if(b)return a.a=a.c,a.g();b=a.a;a.a*=2;a.a>a.f&&(a.a=a.f);return b}function qm(a,b){a.stop();a.b=Bd(rm(a,b)).then(function(){return Ye()}).then(function(){return a.h()}).then(function(){qm(a,!0)}).o(function(c){a.i(c)&&qm(a,!1)})}
	pm.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)};function sm(a){this.c=a;this.b=this.a=null}sm.prototype.v=function(){return{apiKey:this.c.c,refreshToken:this.a,accessToken:this.b&&this.b.toString(),expirationTime:tm(this)}};function tm(a){return a.b&&1E3*a.b.c||0}function um(a,b){var c=b.refreshToken;a.b=gg(b[Ag]||"");a.a=c}function vm(a,b){a.b=b.b;a.a=b.a}
	function wm(a,b){return Qi(a.c,b).then(function(c){a.b=gg(c.access_token);a.a=c.refresh_token;return{accessToken:a.b.toString(),refreshToken:a.a}}).o(function(c){"auth/user-token-expired"==c.code&&(a.a=null);throw c;})}sm.prototype.getToken=function(a){a=!!a;return this.b&&!this.a?F(new u("user-token-expired")):a||!this.b||ta()>tm(this)-3E4?this.a?wm(this,{grant_type:"refresh_token",refresh_token:this.a}):E(null):E({accessToken:this.b.toString(),refreshToken:this.a})};function xm(a,b){this.a=a||null;this.b=b||null;L(this,{lastSignInTime:Ze(b||null),creationTime:Ze(a||null)})}function ym(a){return new xm(a.a,a.b)}xm.prototype.v=function(){return{lastLoginAt:this.b,createdAt:this.a}};function zm(a,b,c,d,e,f){L(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})}
	function P(a,b,c){this.N=[];this.l=a.apiKey;this.m=a.appName;this.s=a.authDomain||null;a=firebase.SDK_VERSION?Le(firebase.SDK_VERSION):null;this.a=new Ei(this.l,za(Aa),a);this.b=new sm(this.a);Am(this,b[Ag]);um(this.b,b);K(this,"refreshToken",this.b.a);Bm(this,c||{});G.call(this);this.P=!1;this.s&&Oe()&&(this.i=Pl(this.s,this.l,this.m));this.R=[];this.h=null;this.B=Cm(this);this.Z=r(this.Ma,this);var d=this;this.oa=null;this.za=function(e){d.va(e.g)};this.aa=null;this.W=[];this.ya=function(e){Dm(d,
	e.c)};this.$=null;this.O=new lm(this,c);K(this,"multiFactor",this.O)}t(P,G);P.prototype.va=function(a){this.oa=a;Ki(this.a,a)};P.prototype.ja=function(){return this.oa};function Em(a,b){a.aa&&td(a.aa,"languageCodeChanged",a.za);(a.aa=b)&&jd(b,"languageCodeChanged",a.za)}function Dm(a,b){a.W=b;Li(a.a,firebase.SDK_VERSION?Le(firebase.SDK_VERSION,a.W):null)}P.prototype.Ea=function(){return Wa(this.W)};function Fm(a,b){a.$&&td(a.$,"frameworkChanged",a.ya);(a.$=b)&&jd(b,"frameworkChanged",a.ya)}
	P.prototype.Ma=function(){this.B.b&&(this.B.stop(),this.B.start())};function Gm(a){try{return firebase.app(a.m).auth()}catch(b){throw new u("internal-error","No firebase.auth.Auth instance is available for the Firebase App '"+a.m+"'!");}}function Cm(a){return new pm(function(){return a.I(!0)},function(b){return b&&"auth/network-request-failed"==b.code?!0:!1},function(){var b=tm(a.b)-ta()-3E5;return 0<b?b:0})}
	function Hm(a){a.D||a.B.b||(a.B.start(),td(a,"tokenChanged",a.Z),jd(a,"tokenChanged",a.Z))}function Im(a){td(a,"tokenChanged",a.Z);a.B.stop()}function Am(a,b){a.xa=b;K(a,"_lat",b)}function Jm(a,b){Ua(a.R,function(c){return c==b})}function Km(a){for(var b=[],c=0;c<a.R.length;c++)b.push(a.R[c](a));return Ec(b).then(function(){return a})}function Lm(a){a.i&&!a.P&&(a.P=!0,Hl(a.i,a))}
	function Bm(a,b){L(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,tenantId:b.tenantId||null,metadata:new xm(b.createdAt,b.lastLoginAt),providerData:[]});a.a.b=a.tenantId}K(P.prototype,"providerId","firebase");function Mm(){}function Nm(a){return E().then(function(){if(a.D)throw new u("app-deleted");})}
	function Om(a){return Oa(a.providerData,function(b){return b.providerId})}function Pm(a,b){b&&(Qm(a,b.providerId),a.providerData.push(b))}function Qm(a,b){Ua(a.providerData,function(c){return c.providerId==b})}function Rm(a,b,c){("uid"!=b||c)&&a.hasOwnProperty(b)&&K(a,b,c)}
	function Sm(a,b){a!=b&&(L(a,{uid:b.uid,displayName:b.displayName,photoURL:b.photoURL,email:b.email,emailVerified:b.emailVerified,phoneNumber:b.phoneNumber,isAnonymous:b.isAnonymous,tenantId:b.tenantId,providerData:[]}),b.metadata?K(a,"metadata",ym(b.metadata)):K(a,"metadata",new xm),x(b.providerData,function(c){Pm(a,c)}),vm(a.b,b.b),K(a,"refreshToken",a.b.a),mm(a.O,b.O.b))}k=P.prototype;k.reload=function(){var a=this;return R(this,Nm(this).then(function(){return Tm(a).then(function(){return Km(a)}).then(Mm)}))};
	function Tm(a){return a.I().then(function(b){var c=a.isAnonymous;return Um(a,b).then(function(){c||Rm(a,"isAnonymous",!1);return b})})}k.mc=function(a){return this.I(a).then(function(b){return new $l(b)})};k.I=function(a){var b=this;return R(this,Nm(this).then(function(){return b.b.getToken(a)}).then(function(c){if(!c)throw new u("internal-error");c.accessToken!=b.xa&&(Am(b,c.accessToken),b.dispatchEvent(new km("tokenChanged")));Rm(b,"refreshToken",c.refreshToken);return c.accessToken}))};
	function om(a,b){b[Ag]&&a.xa!=b[Ag]&&(um(a.b,b),a.dispatchEvent(new km("tokenChanged")),Am(a,b[Ag]),Rm(a,"refreshToken",a.b.a))}function Um(a,b){return N(a.a,Cj,{idToken:b}).then(r(a.Ic,a))}
	k.Ic=function(a){a=a.users;if(!a||!a.length)throw new u("internal-error");a=a[0];Bm(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber,lastLoginAt:a.lastLoginAt,createdAt:a.createdAt,tenantId:a.tenantId});for(var b=Vm(a),c=0;c<b.length;c++)Pm(this,b[c]);Rm(this,"isAnonymous",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length));this.dispatchEvent(new km("userReloaded",{ed:a}))};
	function Vm(a){return(a=a.providerUserInfo)&&a.length?Oa(a,function(b){return new zm(b.rawId,b.providerId,b.email,b.displayName,b.photoUrl,b.phoneNumber)}):[]}k.Jc=function(a){df("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.");return this.pb(a)};
	k.pb=function(a){var b=this,c=null;return R(this,a.c(this.a,this.uid).then(function(d){om(b,d);c=Wm(b,d,"reauthenticate");b.h=null;return b.reload()}).then(function(){return c}),!0)};function Xm(a,b){return Tm(a).then(function(){if(Sa(Om(a),b))return Km(a).then(function(){throw new u("provider-already-linked");})})}k.Ac=function(a){df("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.");return this.mb(a)};
	k.mb=function(a){var b=this,c=null;return R(this,Xm(this,a.providerId).then(function(){return b.I()}).then(function(d){return a.b(b.a,d)}).then(function(d){c=Wm(b,d,"link");return Ym(b,d)}).then(function(){return c}))};k.Bc=function(a,b){var c=this;return R(this,Xm(this,"phone").then(function(){return Zl(Gm(c),a,b,r(c.mb,c))}))};k.Kc=function(a,b){var c=this;return R(this,E().then(function(){return Zl(Gm(c),a,b,r(c.pb,c))}),!0)};
	function Wm(a,b,c){var d=mh(b);b=lg(b);return gf({user:a,credential:d,additionalUserInfo:b,operationType:c})}function Ym(a,b){om(a,b);return a.reload().then(function(){return a})}k.xb=function(a){var b=this;return R(this,this.I().then(function(c){return b.a.xb(c,a)}).then(function(c){om(b,c);return b.reload()}))};k.cd=function(a){var b=this;return R(this,this.I().then(function(c){return a.b(b.a,c)}).then(function(c){om(b,c);return b.reload()}))};
	k.yb=function(a){var b=this;return R(this,this.I().then(function(c){return b.a.yb(c,a)}).then(function(c){om(b,c);return b.reload()}))};
	k.zb=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return Nm(this);var b=this;return R(this,this.I().then(function(c){return b.a.zb(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(c){om(b,c);Rm(b,"displayName",c.displayName||null);Rm(b,"photoURL",c.photoUrl||null);x(b.providerData,function(d){"password"===d.providerId&&(K(d,"displayName",b.displayName),K(d,"photoURL",b.photoURL))});return Km(b)}).then(Mm))};
	k.ad=function(a){var b=this;return R(this,Tm(this).then(function(c){return Sa(Om(b),a)?lj(b.a,c,[a]).then(function(d){var e={};x(d.providerUserInfo||[],function(f){e[f.providerId]=!0});x(Om(b),function(f){e[f]||Qm(b,f)});e[hh.PROVIDER_ID]||K(b,"phoneNumber",null);return Km(b)}):Km(b).then(function(){throw new u("no-such-provider");})}))};
	k.delete=function(){var a=this;return R(this,this.I().then(function(b){return N(a.a,zj,{idToken:b})}).then(function(){a.dispatchEvent(new km("userDeleted"))})).then(function(){for(var b=0;b<a.N.length;b++)a.N[b].cancel("app-deleted");Em(a,null);Fm(a,null);a.N=[];a.D=!0;Im(a);K(a,"refreshToken",null);a.i&&Il(a.i,a)})};
	k.Cb=function(a,b){return"linkViaPopup"==a&&(this.g||null)==b&&this.f||"reauthViaPopup"==a&&(this.g||null)==b&&this.f||"linkViaRedirect"==a&&(this.fa||null)==b||"reauthViaRedirect"==a&&(this.fa||null)==b?!0:!1};k.la=function(a,b,c,d){"linkViaPopup"!=a&&"reauthViaPopup"!=a||d!=(this.g||null)||(c&&this.w?this.w(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.w)};
	k.Da=function(a,b){return"linkViaPopup"==a&&b==(this.g||null)?r(this.Hb,this):"reauthViaPopup"==a&&b==(this.g||null)?r(this.Ib,this):"linkViaRedirect"==a&&(this.fa||null)==b?r(this.Hb,this):"reauthViaRedirect"==a&&(this.fa||null)==b?r(this.Ib,this):null};k.Cc=function(a){var b=this;return Zm(this,"linkViaPopup",a,function(){return Xm(b,a.providerId).then(function(){return Km(b)})},!1)};k.Lc=function(a){return Zm(this,"reauthViaPopup",a,function(){return E()},!0)};
	function Zm(a,b,c,d,e){if(!Oe())return F(new u("operation-not-supported-in-this-environment"));if(a.h&&!e)return F(a.h);var f=kg(c.providerId),g=Ne(a.uid+":::"),h=null;(!Qe()||Fe())&&a.s&&c.isOAuthProvider&&(h=Yj(a.s,a.l,a.m,b,c,null,g,firebase.SDK_VERSION||null,null,null,a.tenantId));var m=we(h,f&&f.ta,f&&f.sa);d=d().then(function(){$m(a);if(!e)return a.I().then(function(){})}).then(function(){return Ll(a.i,m,b,c,g,!!h,a.tenantId)}).then(function(){return new D(function(p,v){a.la(b,null,new u("cancelled-popup-request"),
	a.g||null);a.f=p;a.w=v;a.g=g;a.c=Nl(a.i,a,b,m,g)})}).then(function(p){m&&ve(m);return p?gf(p):null}).o(function(p){m&&ve(m);throw p;});return R(a,d,e)}k.Dc=function(a){var b=this;return an(this,"linkViaRedirect",a,function(){return Xm(b,a.providerId)},!1)};k.Mc=function(a){return an(this,"reauthViaRedirect",a,function(){return E()},!0)};
	function an(a,b,c,d,e){if(!Oe())return F(new u("operation-not-supported-in-this-environment"));if(a.h&&!e)return F(a.h);var f=null,g=Ne(a.uid+":::");d=d().then(function(){$m(a);if(!e)return a.I().then(function(){})}).then(function(){a.fa=g;return Km(a)}).then(function(h){a.ga&&(h=a.ga,h=h.b.set(bn,a.v(),h.a));return h}).then(function(){return Ml(a.i,b,c,g,a.tenantId)}).o(function(h){f=h;if(a.ga)return cn(a.ga);throw f;}).then(function(){if(f)throw f;});return R(a,d,e)}
	function $m(a){if(!a.i||!a.P){if(a.i&&!a.P)throw new u("internal-error");throw new u("auth-domain-config-required");}}k.Hb=function(a,b,c,d){var e=this;this.c&&(this.c.cancel(),this.c=null);var f=null;c=this.I().then(function(g){return Eg(e.a,{requestUri:a,postBody:d,sessionId:b,idToken:g})}).then(function(g){f=Wm(e,g,"link");return Ym(e,g)}).then(function(){return f});return R(this,c)};
	k.Ib=function(a,b,c,d){var e=this;this.c&&(this.c.cancel(),this.c=null);var f=null,g=E().then(function(){return zg(Fg(e.a,{requestUri:a,sessionId:b,postBody:d,tenantId:c}),e.uid)}).then(function(h){f=Wm(e,h,"reauthenticate");om(e,h);e.h=null;return e.reload()}).then(function(){return f});return R(this,g,!0)};
	k.qb=function(a){var b=this,c=null;return R(this,this.I().then(function(d){c=d;return"undefined"===typeof a||jb(a)?{}:Zf(new Pf(a))}).then(function(d){return b.a.qb(c,d)}).then(function(d){if(b.email!=d)return b.reload()}).then(function(){}))};k.Ab=function(a,b){var c=this,d=null;return R(this,this.I().then(function(e){d=e;return"undefined"===typeof b||jb(b)?{}:Zf(new Pf(b))}).then(function(e){return c.a.Ab(d,a,e)}).then(function(e){if(c.email!=e)return c.reload()}).then(function(){}))};
	function R(a,b,c){var d=dn(a,b,c);a.N.push(d);d.ma(function(){Ta(a.N,d)});return d.o(function(e){var f=null;e&&"auth/multi-factor-auth-required"===e.code&&(f=em(e.v(),Gm(a),r(a.hc,a)));throw f||e;})}k.hc=function(a){var b=null,c=this;a=zg(E(a),c.uid).then(function(d){b=Wm(c,d,"reauthenticate");om(c,d);c.h=null;return c.reload()}).then(function(){return b});return R(this,a,!0)};
	function dn(a,b,c){return a.h&&!c?(b.cancel(),F(a.h)):b.o(function(d){!d||"auth/user-disabled"!=d.code&&"auth/user-token-expired"!=d.code||(a.h||a.dispatchEvent(new km("userInvalidated")),a.h=d);throw d;})}k.toJSON=function(){return this.v()};
	k.v=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,tenantId:this.tenantId,providerData:[],apiKey:this.l,appName:this.m,authDomain:this.s,stsTokenManager:this.b.v(),redirectEventId:this.fa||null};this.metadata&&B(a,this.metadata.v());x(this.providerData,function(b){a.providerData.push(hf(b))});B(a,this.O.v());return a};
	function en(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken)c[Ag]=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null;else return null;var d=new P(b,c,a);a.providerData&&x(a.providerData,function(e){e&&Pm(d,gf(e))});a.redirectEventId&&(d.fa=a.redirectEventId);return d}
	function fn(a,b,c,d){var e=new P(a,b);c&&(e.ga=c);d&&Dm(e,d);return e.reload().then(function(){return e})}function gn(a,b,c,d){var e=a.b,f={};f[Ag]=e.b&&e.b.toString();f.refreshToken=e.a;b=new P(b||{apiKey:a.l,authDomain:a.s,appName:a.m},f);c&&(b.ga=c);d&&Dm(b,d);Sm(b,a);return b};function hn(a){this.a=a;this.b=Ok()}var bn={name:"redirectUser",F:"session"};function cn(a){return Sk(a.b,bn,a.a)}function jn(a,b){return a.b.get(bn,a.a).then(function(c){c&&b&&(c.authDomain=b);return en(c||{})})};function kn(a){this.a=a;this.b=Ok();this.c=null;this.f=ln(this);this.b.addListener(mn("local"),this.a,r(this.g,this))}kn.prototype.g=function(){var a=this,b=mn("local");nn(this,function(){return E().then(function(){return a.c&&"local"!=a.c.F?a.b.get(b,a.a):null}).then(function(c){if(c)return on(a,"local").then(function(){a.c=b})})})};function on(a,b){var c=[],d;for(d in Kk)Kk[d]!==b&&c.push(Sk(a.b,mn(Kk[d]),a.a));c.push(Sk(a.b,pn,a.a));return Dc(c)}
	function ln(a){var b=mn("local"),c=mn("session"),d=mn("none");return Rk(a.b,b,a.a).then(function(){return a.b.get(c,a.a)}).then(function(e){return e?c:a.b.get(d,a.a).then(function(f){return f?d:a.b.get(b,a.a).then(function(g){return g?b:a.b.get(pn,a.a).then(function(h){return h?mn(h):b})})})}).then(function(e){a.c=e;return on(a,e.F)}).o(function(){a.c||(a.c=b)})}var pn={name:"persistence",F:"session"};function mn(a){return{name:"authUser",F:a}}
	kn.prototype.tb=function(a){var b=null,c=this;Lk(a);return nn(this,function(){return a!=c.c.F?c.b.get(c.c,c.a).then(function(d){b=d;return on(c,a)}).then(function(){c.c=mn(a);if(b)return c.b.set(c.c,b,c.a)}):E()})};function qn(a){return nn(a,function(){return a.b.set(pn,a.c.F,a.a)})}function rn(a,b){return nn(a,function(){return a.b.set(a.c,b.v(),a.a)})}function sn(a){return nn(a,function(){return Sk(a.b,a.c,a.a)})}
	function tn(a,b){return nn(a,function(){return a.b.get(a.c,a.a).then(function(c){c&&b&&(c.authDomain=b);return en(c||{})})})}function nn(a,b){a.f=a.f.then(b,b);return a.f};function un(a){this.l=!1;K(this,"settings",new Xl);K(this,"app",a);if(S(this).options&&S(this).options.apiKey)a=firebase.SDK_VERSION?Le(firebase.SDK_VERSION):null,this.b=new Ei(S(this).options&&S(this).options.apiKey,za(Aa),a);else throw new u("invalid-api-key");this.P=[];this.m=[];this.O=[];this.$b=firebase.INTERNAL.createSubscribe(r(this.xc,this));this.W=void 0;this.ac=firebase.INTERNAL.createSubscribe(r(this.yc,this));vn(this,null);this.i=new kn(S(this).options.apiKey+":"+S(this).name);this.B=
	new hn(S(this).options.apiKey+":"+S(this).name);this.Z=T(this,wn(this));this.h=T(this,xn(this));this.aa=!1;this.oa=r(this.Xc,this);this.Ma=r(this.ca,this);this.xa=r(this.jc,this);this.ya=r(this.uc,this);this.za=r(this.vc,this);this.a=null;yn(this);this.INTERNAL={};this.INTERNAL["delete"]=r(this.delete,this);this.INTERNAL.logFramework=r(this.Ec,this);this.s=0;G.call(this);zn(this);this.N=[]}t(un,G);function An(a){Xc.call(this,"languageCodeChanged");this.g=a}t(An,Xc);
	function Bn(a){Xc.call(this,"frameworkChanged");this.c=a}t(Bn,Xc);k=un.prototype;k.tb=function(a){a=this.i.tb(a);return T(this,a)};k.va=function(a){this.$===a||this.l||(this.$=a,Ki(this.b,this.$),this.dispatchEvent(new An(this.ja())))};k.ja=function(){return this.$};k.dd=function(){var a=l.navigator;this.va(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};k.Ec=function(a){this.N.push(a);Li(this.b,firebase.SDK_VERSION?Le(firebase.SDK_VERSION,this.N):null);this.dispatchEvent(new Bn(this.N))};
	k.Ea=function(){return Wa(this.N)};k.ub=function(a){this.R===a||this.l||(this.R=a,this.b.b=this.R)};k.S=function(){return this.R};function zn(a){Object.defineProperty(a,"lc",{get:function(){return this.ja()},set:function(b){this.va(b)},enumerable:!1});a.$=null;Object.defineProperty(a,"ti",{get:function(){return this.S()},set:function(b){this.ub(b)},enumerable:!1});a.R=null}
	k.toJSON=function(){return{apiKey:S(this).options.apiKey,authDomain:S(this).options.authDomain,appName:S(this).name,currentUser:U(this)&&U(this).v()}};function Cn(a){return a.Zb||F(new u("auth-domain-config-required"))}function yn(a){var b=S(a).options.authDomain,c=S(a).options.apiKey;b&&Oe()&&(a.Zb=a.Z.then(function(){if(!a.l){a.a=Pl(b,c,S(a).name);Hl(a.a,a);U(a)&&Lm(U(a));if(a.D){Lm(a.D);var d=a.D;d.va(a.ja());Em(d,a);d=a.D;Dm(d,a.N);Fm(d,a);a.D=null}return a.a}}))}
	k.Cb=function(a,b){switch(a){case "unknown":case "signInViaRedirect":return!0;case "signInViaPopup":return this.g==b&&!!this.f;default:return!1}};k.la=function(a,b,c,d){"signInViaPopup"==a&&this.g==d&&(c&&this.w?this.w(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.w)};k.Da=function(a,b){return"signInViaRedirect"==a||"signInViaPopup"==a&&this.g==b&&this.f?r(this.gc,this):null};
	k.gc=function(a,b,c,d){var e=this,f={requestUri:a,postBody:d,sessionId:b,tenantId:c};this.c&&(this.c.cancel(),this.c=null);return e.Z.then(function(){return Dn(e,Cg(e.b,f))})};
	k.Vc=function(a){if(!Oe())return F(new u("operation-not-supported-in-this-environment"));var b=this,c=kg(a.providerId),d=Ne(),e=null;(!Qe()||Fe())&&S(this).options.authDomain&&a.isOAuthProvider&&(e=Yj(S(this).options.authDomain,S(this).options.apiKey,S(this).name,"signInViaPopup",a,null,d,firebase.SDK_VERSION||null,null,null,this.S()));var f=we(e,c&&c.ta,c&&c.sa);c=Cn(this).then(function(g){return Ll(g,f,"signInViaPopup",a,d,!!e,b.S())}).then(function(){return new D(function(g,h){b.la("signInViaPopup",
	null,new u("cancelled-popup-request"),b.g);b.f=g;b.w=h;b.g=d;b.c=Nl(b.a,b,"signInViaPopup",f,d)})}).then(function(g){f&&ve(f);return g?gf(g):null}).o(function(g){f&&ve(f);throw g;});return T(this,c)};k.Wc=function(a){if(!Oe())return F(new u("operation-not-supported-in-this-environment"));var b=this,c=Cn(this).then(function(){return qn(b.i)}).then(function(){return Ml(b.a,"signInViaRedirect",a,void 0,b.S())});return T(this,c)};
	function En(a){if(!Oe())return F(new u("operation-not-supported-in-this-environment"));var b=Cn(a).then(function(){return a.a.pa()}).then(function(c){return c?gf(c):null});return T(a,b)}k.pa=function(){var a=this;return En(this).then(function(b){a.a&&Sl(a.a.b);return b}).o(function(b){a.a&&Sl(a.a.b);throw b;})};
	k.bd=function(a){if(!a)return F(new u("null-user"));if(this.R!=a.tenantId)return F(new u("tenant-id-mismatch"));var b=this,c={};c.apiKey=S(this).options.apiKey;c.authDomain=S(this).options.authDomain;c.appName=S(this).name;var d=gn(a,c,b.B,b.Ea());return T(this,this.h.then(function(){if(S(b).options.apiKey!=a.l)return d.reload()}).then(function(){if(U(b)&&a.uid==U(b).uid)return Sm(U(b),a),b.ca(a);vn(b,d);Lm(d);return b.ca(d)}).then(function(){Fn(b)}))};
	function Gn(a,b){var c={};c.apiKey=S(a).options.apiKey;c.authDomain=S(a).options.authDomain;c.appName=S(a).name;return a.Z.then(function(){return fn(c,b,a.B,a.Ea())}).then(function(d){if(U(a)&&d.uid==U(a).uid)return Sm(U(a),d),a.ca(d);vn(a,d);Lm(d);return a.ca(d)}).then(function(){Fn(a)})}
	function vn(a,b){U(a)&&(Jm(U(a),a.Ma),td(U(a),"tokenChanged",a.xa),td(U(a),"userDeleted",a.ya),td(U(a),"userInvalidated",a.za),Im(U(a)));b&&(b.R.push(a.Ma),jd(b,"tokenChanged",a.xa),jd(b,"userDeleted",a.ya),jd(b,"userInvalidated",a.za),0<a.s&&Hm(b));K(a,"currentUser",b);b&&(b.va(a.ja()),Em(b,a),Dm(b,a.N),Fm(b,a))}k.wb=function(){var a=this,b=this.h.then(function(){a.a&&Sl(a.a.b);if(!U(a))return E();vn(a,null);return sn(a.i).then(function(){Fn(a)})});return T(this,b)};
	function Hn(a){var b=jn(a.B,S(a).options.authDomain).then(function(c){if(a.D=c)c.ga=a.B;return cn(a.B)});return T(a,b)}function wn(a){var b=S(a).options.authDomain,c=Hn(a).then(function(){return tn(a.i,b)}).then(function(d){return d?(d.ga=a.B,a.D&&(a.D.fa||null)==(d.fa||null)?d:d.reload().then(function(){return rn(a.i,d).then(function(){return d})}).o(function(e){return"auth/network-request-failed"==e.code?d:sn(a.i)})):null}).then(function(d){vn(a,d||null)});return T(a,c)}
	function xn(a){return a.Z.then(function(){return En(a)}).o(function(){}).then(function(){if(!a.l)return a.oa()}).o(function(){}).then(function(){if(!a.l){a.aa=!0;var b=a.i;b.b.addListener(mn("local"),b.a,a.oa)}})}
	k.Xc=function(){var a=this;return tn(this.i,S(this).options.authDomain).then(function(b){if(!a.l){var c;if(c=U(a)&&b){c=U(a).uid;var d=b.uid;c=void 0===c||null===c||""===c||void 0===d||null===d||""===d?!1:c==d}if(c)return Sm(U(a),b),U(a).I();if(U(a)||b)vn(a,b),b&&(Lm(b),b.ga=a.B),a.a&&Hl(a.a,a),Fn(a)}})};k.ca=function(a){return rn(this.i,a)};k.jc=function(){Fn(this);this.ca(U(this))};k.uc=function(){this.wb()};k.vc=function(){this.wb()};
	function Dn(a,b){var c=null,d=null;return T(a,b.then(function(e){c=mh(e);d=lg(e);return Gn(a,e)},function(e){var f=null;e&&"auth/multi-factor-auth-required"===e.code&&(f=em(e.v(),a,r(a.ic,a)));throw f||e;}).then(function(){return gf({user:U(a),credential:c,additionalUserInfo:d,operationType:"signIn"})}))}k.ic=function(a){var b=this;return this.h.then(function(){return Dn(b,E(a))})};k.xc=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};
	k.yc=function(a){var b=this;In(this,function(){a.next(U(b))})};k.Gc=function(a,b,c){var d=this;this.aa&&Promise.resolve().then(function(){n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.$b(a,b,c)};k.Fc=function(a,b,c){var d=this;this.aa&&Promise.resolve().then(function(){d.W=d.getUid();n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.ac(a,b,c)};k.kc=function(a){var b=this,c=this.h.then(function(){return U(b)?U(b).I(a).then(function(d){return{accessToken:d}}):null});return T(this,c)};
	k.Rc=function(a){var b=this;return this.h.then(function(){return Dn(b,N(b.b,Ej,{token:a}))}).then(function(c){var d=c.user;Rm(d,"isAnonymous",!1);b.ca(d);return c})};k.Sc=function(a,b){var c=this;return this.h.then(function(){return Dn(c,N(c.b,Xg,{email:a,password:b}))})};k.cc=function(a,b){var c=this;return this.h.then(function(){return Dn(c,N(c.b,yj,{email:a,password:b}))})};k.Ya=function(a){var b=this;return this.h.then(function(){return Dn(b,a.ia(b.b))})};
	k.Qc=function(a){df("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.");return this.Ya(a)};k.vb=function(){var a=this;return this.h.then(function(){var b=U(a);if(b&&b.isAnonymous){var c=gf({providerId:null,isNewUser:!1});return gf({user:b,credential:null,additionalUserInfo:c,operationType:"signIn"})}return Dn(a,a.b.vb()).then(function(d){var e=d.user;Rm(e,"isAnonymous",!0);a.ca(e);return d})})};
	function S(a){return a.app}function U(a){return a.currentUser}k.getUid=function(){return U(this)&&U(this).uid||null};function Jn(a){return U(a)&&U(a)._lat||null}function Fn(a){if(a.aa){for(var b=0;b<a.m.length;b++)if(a.m[b])a.m[b](Jn(a));if(a.W!==a.getUid()&&a.O.length)for(a.W=a.getUid(),b=0;b<a.O.length;b++)if(a.O[b])a.O[b](Jn(a))}}k.bc=function(a){this.addAuthTokenListener(a);this.s++;0<this.s&&U(this)&&Hm(U(this))};
	k.Nc=function(a){var b=this;x(this.m,function(c){c==a&&b.s--});0>this.s&&(this.s=0);0==this.s&&U(this)&&Im(U(this));this.removeAuthTokenListener(a)};k.addAuthTokenListener=function(a){var b=this;this.m.push(a);T(this,this.h.then(function(){b.l||Sa(b.m,a)&&a(Jn(b))}))};k.removeAuthTokenListener=function(a){Ua(this.m,function(b){return b==a})};function In(a,b){a.O.push(b);T(a,a.h.then(function(){!a.l&&Sa(a.O,b)&&a.W!==a.getUid()&&(a.W=a.getUid(),b(Jn(a)))}))}
	k.delete=function(){this.l=!0;for(var a=0;a<this.P.length;a++)this.P[a].cancel("app-deleted");this.P=[];this.i&&(a=this.i,a.b.removeListener(mn("local"),a.a,this.oa));this.a&&(Il(this.a,this),Sl(this.a.b));return Promise.resolve()};function T(a,b){a.P.push(b);b.ma(function(){Ta(a.P,b)});return b}k.fc=function(a){return T(this,Vi(this.b,a))};k.zc=function(a){return!!bh(a)};
	k.sb=function(a,b){var c=this;return T(this,E().then(function(){var d=new Pf(b);if(!d.c)throw new u("argument-error",Xf+" must be true when sending sign in link to email");return Zf(d)}).then(function(d){return c.b.sb(a,d)}).then(function(){}))};k.fd=function(a){return this.Pa(a).then(function(b){return b.data.email})};k.jb=function(a,b){return T(this,this.b.jb(a,b).then(function(){}))};k.Pa=function(a){return T(this,this.b.Pa(a).then(function(b){return new sf(b)}))};
	k.fb=function(a){return T(this,this.b.fb(a).then(function(){}))};k.rb=function(a,b){var c=this;return T(this,E().then(function(){return"undefined"===typeof b||jb(b)?{}:Zf(new Pf(b))}).then(function(d){return c.b.rb(a,d)}).then(function(){}))};k.Uc=function(a,b){return T(this,Zl(this,a,b,r(this.Ya,this)))};
	k.Tc=function(a,b){var c=this;return T(this,E().then(function(){var d=b||oe(),e=ah(a,d);d=bh(d);if(!d)throw new u("argument-error","Invalid email link!");if(d.tenantId!==c.S())throw new u("tenant-id-mismatch");return c.Ya(e)}))};function Kn(){}Kn.prototype.render=function(){};Kn.prototype.reset=function(){};Kn.prototype.getResponse=function(){};Kn.prototype.execute=function(){};function Ln(){this.a={};this.b=1E12}var Mn=null;Ln.prototype.render=function(a,b){this.a[this.b.toString()]=new Nn(a,b);return this.b++};Ln.prototype.reset=function(a){var b=On(this,a);a=Pn(a);b&&a&&(b.delete(),delete this.a[a])};Ln.prototype.getResponse=function(a){return(a=On(this,a))?a.getResponse():null};Ln.prototype.execute=function(a){(a=On(this,a))&&a.execute()};function On(a,b){return(b=Pn(b))?a.a[b]||null:null}function Pn(a){return(a="undefined"===typeof a?1E12:a)?a.toString():null}
	function Nn(a,b){this.g=!1;this.c=b;this.a=this.b=null;this.h="invisible"!==this.c.size;this.f=ec(a);var c=this;this.i=function(){c.execute()};this.h?this.execute():jd(this.f,"click",this.i)}Nn.prototype.getResponse=function(){Qn(this);return this.b};
	Nn.prototype.execute=function(){Qn(this);var a=this;this.a||(this.a=setTimeout(function(){a.b=Je();var b=a.c.callback,c=a.c["expired-callback"];if(b)try{b(a.b)}catch(d){}a.a=setTimeout(function(){a.a=null;a.b=null;if(c)try{c()}catch(d){}a.h&&a.execute()},6E4)},500))};Nn.prototype.delete=function(){Qn(this);this.g=!0;clearTimeout(this.a);this.a=null;td(this.f,"click",this.i)};function Qn(a){if(a.g)throw Error("reCAPTCHA mock was already deleted!");};function Rn(){}K(Rn,"FACTOR_ID","phone");function Sn(){}Sn.prototype.g=function(){Mn||(Mn=new Ln);return E(Mn)};Sn.prototype.c=function(){};var Tn=null;function Un(){this.b=l.grecaptcha?Infinity:0;this.f=null;this.a="__rcb"+Math.floor(1E6*Math.random()).toString()}var Vn=new nb(ob,"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),Wn=new We(3E4,6E4);
	Un.prototype.g=function(a){var b=this;return new D(function(c,d){var e=setTimeout(function(){d(new u("network-request-failed"))},Wn.get());if(!l.grecaptcha||a!==b.f&&!b.b){l[b.a]=function(){if(l.grecaptcha){b.f=a;var g=l.grecaptcha.render;l.grecaptcha.render=function(h,m){h=g(h,m);b.b++;return h};clearTimeout(e);c(l.grecaptcha)}else clearTimeout(e),d(new u("internal-error"));delete l[b.a]};var f=wb(Vn,{onload:b.a,hl:a||""});E(xi(f)).o(function(){clearTimeout(e);d(new u("internal-error","Unable to load external reCAPTCHA dependencies!"))})}else clearTimeout(e),
	c(l.grecaptcha)})};Un.prototype.c=function(){this.b--};var Xn=null;function Yn(a,b,c,d,e,f,g){K(this,"type","recaptcha");this.c=this.f=null;this.D=!1;this.u=b;this.g=null;g?(Tn||(Tn=new Sn),g=Tn):(Xn||(Xn=new Un),g=Xn);this.m=g;this.a=c||{theme:"light",type:"image"};this.h=[];if(this.a[Zn])throw new u("argument-error","sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");this.i="invisible"===this.a[$n];if(!l.document)throw new u("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");
	if(!ec(b)||!this.i&&ec(b).hasChildNodes())throw new u("argument-error","reCAPTCHA container is either not found or already contains inner elements!");this.s=new Ei(a,f||null,e||null);this.w=d||function(){return null};var h=this;this.l=[];var m=this.a[ao];this.a[ao]=function(v){bo(h,v);if("function"===typeof m)m(v);else if("string"===typeof m){var C=J(m,l);"function"===typeof C&&C(v)}};var p=this.a[co];this.a[co]=function(){bo(h,null);if("function"===typeof p)p();else if("string"===typeof p){var v=
	J(p,l);"function"===typeof v&&v()}}}var ao="callback",co="expired-callback",Zn="sitekey",$n="size";function bo(a,b){for(var c=0;c<a.l.length;c++)try{a.l[c](b)}catch(d){}}function eo(a,b){Ua(a.l,function(c){return c==b})}function fo(a,b){a.h.push(b);b.ma(function(){Ta(a.h,b)});return b}k=Yn.prototype;
	k.Ga=function(){var a=this;return this.f?this.f:this.f=fo(this,E().then(function(){if(Pe()&&!Ge())return Be();throw new u("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");}).then(function(){return a.m.g(a.w())}).then(function(b){a.g=b;return N(a.s,Dj,{})}).then(function(b){a.a[Zn]=b.recaptchaSiteKey}).o(function(b){a.f=null;throw b;}))};
	k.render=function(){go(this);var a=this;return fo(this,this.Ga().then(function(){if(null===a.c){var b=a.u;if(!a.i){var c=ec(b);b=hc("DIV");c.appendChild(b)}a.c=a.g.render(b,a.a)}return a.c}))};k.verify=function(){go(this);var a=this;return fo(this,this.render().then(function(b){return new D(function(c){var d=a.g.getResponse(b);if(d)c(d);else{var e=function(f){f&&(eo(a,e),c(f))};a.l.push(e);a.i&&a.g.execute(a.c)}})}))};k.reset=function(){go(this);null!==this.c&&this.g.reset(this.c)};
	function go(a){if(a.D)throw new u("internal-error","RecaptchaVerifier instance has been destroyed.");}k.clear=function(){go(this);this.D=!0;this.m.c();for(var a=0;a<this.h.length;a++)this.h[a].cancel("RecaptchaVerifier instance has been destroyed.");if(!this.i){a=ec(this.u);for(var b;b=a.firstChild;)a.removeChild(b)}};
	function ho(a,b,c){var d=!1;try{this.b=c||firebase.app()}catch(g){throw new u("argument-error","No firebase.app.App instance is currently initialized.");}if(this.b.options&&this.b.options.apiKey)c=this.b.options.apiKey;else throw new u("invalid-api-key");var e=this,f=null;try{f=this.b.auth().Ea()}catch(g){}try{d=this.b.auth().settings.appVerificationDisabledForTesting}catch(g){}f=firebase.SDK_VERSION?Le(firebase.SDK_VERSION,f):null;Yn.call(this,c,a,b,function(){try{var g=e.b.auth().ja()}catch(h){g=
	null}return g},f,za(Aa),d)}t(ho,Yn);function io(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,g=0;g<b.length;g++)if(b[g].optional)f=!0;else{if(f)throw new u("internal-error","Argument validator encountered a required argument after an optional argument.");e++}f=b.length;if(c.length<e||f<c.length)d="Expected "+(e==f?1==e?"1 argument":e+" arguments":e+"-"+f+" arguments")+" but got "+c.length+".";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].K(c[e])&&!f){b=b[e];if(0>e||e>=jo.length)throw new u("internal-error",
	"Argument validator received an unsupported number of arguments.");c=jo[e];d=(d?"":c+" argument ")+(b.name?'"'+b.name+'" ':"")+"must be "+b.J+".";break a}d=null}}if(d)throw new u("argument-error",a+" failed: "+d);}var jo="First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");function V(a,b){return{name:a||"",J:"a valid string",optional:!!b,K:function(c){return"string"===typeof c}}}
	function ko(a,b){return{name:a||"",J:"a boolean",optional:!!b,K:function(c){return"boolean"===typeof c}}}function W(a,b){return{name:a||"",J:"a valid object",optional:!!b,K:q}}function lo(a,b){return{name:a||"",J:"a function",optional:!!b,K:n}}function mo(a,b){return{name:a||"",J:"null",optional:!!b,K:function(c){return null===c}}}function no(){return{name:"",J:"an HTML element",optional:!1,K:function(a){return!!(a&&a instanceof Element)}}}
	function oo(){return{name:"auth",J:"an instance of Firebase Auth",optional:!0,K:function(a){return!!(a&&a instanceof un)}}}function po(){return{name:"app",J:"an instance of Firebase App",optional:!0,K:function(a){return!!(a&&a instanceof firebase.app.App)}}}function qo(a){return{name:a?a+"Credential":"credential",J:a?"a valid "+a+" credential":"a valid credential",optional:!1,K:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.ia||!c)}}}
	function ro(){return{name:"multiFactorAssertion",J:"a valid multiFactorAssertion",optional:!1,K:function(a){return a?!!a.ob:!1}}}function so(){return{name:"authProvider",J:"a valid Auth provider",optional:!1,K:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty("isOAuthProvider"))}}}function to(a,b){return q(a)&&"string"===typeof a.type&&a.type===b&&n(a.Fa)}function uo(a){return q(a)&&"string"===typeof a.uid}
	function vo(){return{name:"applicationVerifier",J:"an implementation of firebase.auth.ApplicationVerifier",optional:!1,K:function(a){return!(!a||"string"!==typeof a.type||!n(a.verify))}}}function X(a,b,c,d){return{name:c||"",J:a.J+" or "+b.J,optional:!!d,K:function(e){return a.K(e)||b.K(e)}}};function Y(a,b){for(var c in b){var d=b[c].name;a[d]=wo(d,a[c],b[c].j)}}function xo(a,b){for(var c in b){var d=b[c].name;d!==c&&Object.defineProperty(a,d,{get:sa(function(e){return this[e]},c),set:sa(function(e,f,g,h){io(e,[g],[h],!0);this[f]=h},d,c,b[c].gb),enumerable:!0})}}function Z(a,b,c,d){a[b]=wo(b,c,d)}
	function wo(a,b,c){function d(){var g=Array.prototype.slice.call(arguments);io(e,c,g);return b.apply(this,g)}if(!c)return b;var e=yo(a),f;for(f in b)d[f]=b[f];for(f in b.prototype)d.prototype[f]=b.prototype[f];return d}function yo(a){a=a.split(".");return a[a.length-1]};Y(un.prototype,{fb:{name:"applyActionCode",j:[V("code")]},Pa:{name:"checkActionCode",j:[V("code")]},jb:{name:"confirmPasswordReset",j:[V("code"),V("newPassword")]},cc:{name:"createUserWithEmailAndPassword",j:[V("email"),V("password")]},fc:{name:"fetchSignInMethodsForEmail",j:[V("email")]},pa:{name:"getRedirectResult",j:[]},zc:{name:"isSignInWithEmailLink",j:[V("emailLink")]},Fc:{name:"onAuthStateChanged",j:[X(W(),lo(),"nextOrObserver"),lo("opt_error",!0),lo("opt_completed",!0)]},Gc:{name:"onIdTokenChanged",
	j:[X(W(),lo(),"nextOrObserver"),lo("opt_error",!0),lo("opt_completed",!0)]},rb:{name:"sendPasswordResetEmail",j:[V("email"),X(W("opt_actionCodeSettings",!0),mo(null,!0),"opt_actionCodeSettings",!0)]},sb:{name:"sendSignInLinkToEmail",j:[V("email"),W("actionCodeSettings")]},tb:{name:"setPersistence",j:[V("persistence")]},Qc:{name:"signInAndRetrieveDataWithCredential",j:[qo()]},vb:{name:"signInAnonymously",j:[]},Ya:{name:"signInWithCredential",j:[qo()]},Rc:{name:"signInWithCustomToken",j:[V("token")]},
	Sc:{name:"signInWithEmailAndPassword",j:[V("email"),V("password")]},Tc:{name:"signInWithEmailLink",j:[V("email"),V("emailLink",!0)]},Uc:{name:"signInWithPhoneNumber",j:[V("phoneNumber"),vo()]},Vc:{name:"signInWithPopup",j:[so()]},Wc:{name:"signInWithRedirect",j:[so()]},bd:{name:"updateCurrentUser",j:[X(function(a){return{name:"user",J:"an instance of Firebase User",optional:!!a,K:function(b){return!!(b&&b instanceof P)}}}(),mo(),"user")]},wb:{name:"signOut",j:[]},toJSON:{name:"toJSON",j:[V(null,!0)]},
	dd:{name:"useDeviceLanguage",j:[]},fd:{name:"verifyPasswordResetCode",j:[V("code")]}});xo(un.prototype,{lc:{name:"languageCode",gb:X(V(),mo(),"languageCode")},ti:{name:"tenantId",gb:X(V(),mo(),"tenantId")}});un.Persistence=Kk;un.Persistence.LOCAL="local";un.Persistence.SESSION="session";un.Persistence.NONE="none";
	Y(P.prototype,{"delete":{name:"delete",j:[]},mc:{name:"getIdTokenResult",j:[ko("opt_forceRefresh",!0)]},I:{name:"getIdToken",j:[ko("opt_forceRefresh",!0)]},Ac:{name:"linkAndRetrieveDataWithCredential",j:[qo()]},mb:{name:"linkWithCredential",j:[qo()]},Bc:{name:"linkWithPhoneNumber",j:[V("phoneNumber"),vo()]},Cc:{name:"linkWithPopup",j:[so()]},Dc:{name:"linkWithRedirect",j:[so()]},Jc:{name:"reauthenticateAndRetrieveDataWithCredential",j:[qo()]},pb:{name:"reauthenticateWithCredential",j:[qo()]},Kc:{name:"reauthenticateWithPhoneNumber",
	j:[V("phoneNumber"),vo()]},Lc:{name:"reauthenticateWithPopup",j:[so()]},Mc:{name:"reauthenticateWithRedirect",j:[so()]},reload:{name:"reload",j:[]},qb:{name:"sendEmailVerification",j:[X(W("opt_actionCodeSettings",!0),mo(null,!0),"opt_actionCodeSettings",!0)]},toJSON:{name:"toJSON",j:[V(null,!0)]},ad:{name:"unlink",j:[V("provider")]},xb:{name:"updateEmail",j:[V("email")]},yb:{name:"updatePassword",j:[V("password")]},cd:{name:"updatePhoneNumber",j:[qo("phone")]},zb:{name:"updateProfile",j:[W("profile")]},
	Ab:{name:"verifyBeforeUpdateEmail",j:[V("email"),X(W("opt_actionCodeSettings",!0),mo(null,!0),"opt_actionCodeSettings",!0)]}});Y(Ln.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}});Y(Kn.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}});Y(D.prototype,{ma:{name:"finally"},o:{name:"catch"},then:{name:"then"}});
	xo(Xl.prototype,{appVerificationDisabled:{name:"appVerificationDisabledForTesting",gb:ko("appVerificationDisabledForTesting")}});Y(Yl.prototype,{confirm:{name:"confirm",j:[V("verificationCode")]}});Z(yg,"fromJSON",function(a){a="string"===typeof a?JSON.parse(a):a;for(var b,c=[Jg,$g,gh,Gg],d=0;d<c.length;d++)if(b=c[d](a))return b;return null},[X(V(),W(),"json")]);Z(Vg,"credential",function(a,b){return new Ug(a,b)},[V("email"),V("password")]);Y(Ug.prototype,{v:{name:"toJSON",j:[V(null,!0)]}});
	Y(Mg.prototype,{Aa:{name:"addScope",j:[V("scope")]},Ia:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(Mg,"credential",Ng,[X(V(),W(),"token")]);Z(Vg,"credentialWithLink",ah,[V("email"),V("emailLink")]);Y(Og.prototype,{Aa:{name:"addScope",j:[V("scope")]},Ia:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(Og,"credential",Pg,[X(V(),W(),"token")]);Y(Qg.prototype,{Aa:{name:"addScope",j:[V("scope")]},Ia:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});
	Z(Qg,"credential",Rg,[X(V(),X(W(),mo()),"idToken"),X(V(),mo(),"accessToken",!0)]);Y(Sg.prototype,{Ia:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(Sg,"credential",Tg,[X(V(),W(),"token"),V("secret",!0)]);Y(M.prototype,{Aa:{name:"addScope",j:[V("scope")]},credential:{name:"credential",j:[X(V(),X(W(),mo()),"optionsOrIdToken"),X(V(),mo(),"accessToken",!0)]},Ia:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Y(Hg.prototype,{v:{name:"toJSON",j:[V(null,!0)]}});
	Y(Bg.prototype,{v:{name:"toJSON",j:[V(null,!0)]}});Z(hh,"credential",lh,[V("verificationId"),V("verificationCode")]);
	Y(hh.prototype,{cb:{name:"verifyPhoneNumber",j:[X(V(),function(a,b){return{name:a||"phoneInfoOptions",J:"valid phone info options",optional:!!b,K:function(c){return c?c.session&&c.phoneNumber?to(c.session,wg)&&"string"===typeof c.phoneNumber:c.session&&c.multiFactorHint?to(c.session,xg)&&uo(c.multiFactorHint):c.session&&c.multiFactorUid?to(c.session,xg)&&"string"===typeof c.multiFactorUid:c.phoneNumber?"string"===typeof c.phoneNumber:!1:!1}}}(),"phoneInfoOptions"),vo()]}});
	Y(ch.prototype,{v:{name:"toJSON",j:[V(null,!0)]}});Y(u.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(uh.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(th.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(dm.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(am.prototype,{Pc:{name:"resolveSignIn",j:[ro()]}});
	Y(lm.prototype,{Ob:{name:"getSession",j:[]},dc:{name:"enroll",j:[ro(),V("displayName",!0)]},$c:{name:"unenroll",j:[X({name:"multiFactorInfo",J:"a valid multiFactorInfo",optional:!1,K:uo},V(),"multiFactorInfoIdentifier")]}});Y(ho.prototype,{clear:{name:"clear",j:[]},render:{name:"render",j:[]},verify:{name:"verify",j:[]}});Z(Gf,"parseLink",Of,[V("link")]);Z(Rn,"assertion",function(a){return new jm(a)},[qo("phone")]);
	(function(){if("undefined"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerComponent){var a={ActionCodeInfo:{Operation:{EMAIL_SIGNIN:xf,PASSWORD_RESET:"PASSWORD_RESET",RECOVER_EMAIL:"RECOVER_EMAIL",REVERT_SECOND_FACTOR_ADDITION:zf,VERIFY_AND_CHANGE_EMAIL:yf,VERIFY_EMAIL:"VERIFY_EMAIL"}},Auth:un,AuthCredential:yg,Error:u};Z(a,"EmailAuthProvider",Vg,[]);Z(a,"FacebookAuthProvider",Mg,[]);Z(a,"GithubAuthProvider",Og,[]);Z(a,"GoogleAuthProvider",Qg,[]);Z(a,"TwitterAuthProvider",Sg,[]);
	Z(a,"OAuthProvider",M,[V("providerId")]);Z(a,"SAMLAuthProvider",Lg,[V("providerId")]);Z(a,"PhoneAuthProvider",hh,[oo()]);Z(a,"RecaptchaVerifier",ho,[X(V(),no(),"recaptchaContainer"),W("recaptchaParameters",!0),po()]);Z(a,"ActionCodeURL",Gf,[]);Z(a,"PhoneMultiFactorGenerator",Rn,[]);firebase.INTERNAL.registerComponent({name:"auth",instanceFactory:function(b){b=b.getProvider("app").getImmediate();return new un(b)},multipleInstances:!1,serviceProps:a,instantiationMode:"LAZY",type:"PUBLIC"});firebase.INTERNAL.registerComponent({name:"auth-internal",
	instanceFactory:function(b){b=b.getProvider("auth").getImmediate();return{getUid:r(b.getUid,b),getToken:r(b.kc,b),addAuthTokenListener:r(b.bc,b),removeAuthTokenListener:r(b.Nc,b)}},multipleInstances:!1,instantiationMode:"LAZY",type:"PRIVATE"});firebase.registerVersion("@firebase/auth","0.14.2");firebase.INTERNAL.extendNamespace({User:P})}else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");})();}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});
	
	//# sourceMappingURL=auth.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var t = _interopDefault(__webpack_require__(79));
	var tslib = __webpack_require__(74);
	var logger = __webpack_require__(130);
	var util = __webpack_require__(80);
	var component = __webpack_require__(129);
	var webchannelWrapper = __webpack_require__(340);
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/** The semver (www.semver.org) version of the SDK. */ var _ = t.SDK_VERSION, I = /** @class */ function() {
	    function t(t) {
	        this.uid = t;
	    }
	    return t.prototype.t = function() {
	        return null != this.uid;
	    }, 
	    /**
	     * Returns a key representing this user, suitable for inclusion in a
	     * dictionary.
	     */
	    t.prototype.i = function() {
	        return this.t() ? "uid:" + this.uid : "anonymous-user";
	    }, t.prototype.isEqual = function(t) {
	        return t.uid === this.uid;
	    }, 
	    /** A user with a null UID. */
	    t.UNAUTHENTICATED = new t(null), 
	    // TODO(mikelehen): Look into getting a proper uid-equivalent for
	    // non-FirebaseAuth providers.
	    t.u = new t("google-credentials-uid"), t.s = new t("first-party-uid"), t;
	}(), T = {
	    // Causes are copied from:
	    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
	    /** Not an error; returned on success. */
	    OK: "ok",
	    /** The operation was cancelled (typically by the caller). */
	    CANCELLED: "cancelled",
	    /** Unknown error or an error from a different error domain. */
	    UNKNOWN: "unknown",
	    /**
	     * Client specified an invalid argument. Note that this differs from
	     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
	     * problematic regardless of the state of the system (e.g., a malformed file
	     * name).
	     */
	    INVALID_ARGUMENT: "invalid-argument",
	    /**
	     * Deadline expired before operation could complete. For operations that
	     * change the state of the system, this error may be returned even if the
	     * operation has completed successfully. For example, a successful response
	     * from a server could have been delayed long enough for the deadline to
	     * expire.
	     */
	    DEADLINE_EXCEEDED: "deadline-exceeded",
	    /** Some requested entity (e.g., file or directory) was not found. */
	    NOT_FOUND: "not-found",
	    /**
	     * Some entity that we attempted to create (e.g., file or directory) already
	     * exists.
	     */
	    ALREADY_EXISTS: "already-exists",
	    /**
	     * The caller does not have permission to execute the specified operation.
	     * PERMISSION_DENIED must not be used for rejections caused by exhausting
	     * some resource (use RESOURCE_EXHAUSTED instead for those errors).
	     * PERMISSION_DENIED must not be used if the caller can not be identified
	     * (use UNAUTHENTICATED instead for those errors).
	     */
	    PERMISSION_DENIED: "permission-denied",
	    /**
	     * The request does not have valid authentication credentials for the
	     * operation.
	     */
	    UNAUTHENTICATED: "unauthenticated",
	    /**
	     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
	     * entire file system is out of space.
	     */
	    RESOURCE_EXHAUSTED: "resource-exhausted",
	    /**
	     * Operation was rejected because the system is not in a state required for
	     * the operation's execution. For example, directory to be deleted may be
	     * non-empty, an rmdir operation is applied to a non-directory, etc.
	     *
	     * A litmus test that may help a service implementor in deciding
	     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
	     *  (a) Use UNAVAILABLE if the client can retry just the failing call.
	     *  (b) Use ABORTED if the client should retry at a higher-level
	     *      (e.g., restarting a read-modify-write sequence).
	     *  (c) Use FAILED_PRECONDITION if the client should not retry until
	     *      the system state has been explicitly fixed. E.g., if an "rmdir"
	     *      fails because the directory is non-empty, FAILED_PRECONDITION
	     *      should be returned since the client should not retry unless
	     *      they have first fixed up the directory by deleting files from it.
	     *  (d) Use FAILED_PRECONDITION if the client performs conditional
	     *      REST Get/Update/Delete on a resource and the resource on the
	     *      server does not match the condition. E.g., conflicting
	     *      read-modify-write on the same resource.
	     */
	    FAILED_PRECONDITION: "failed-precondition",
	    /**
	     * The operation was aborted, typically due to a concurrency issue like
	     * sequencer check failures, transaction aborts, etc.
	     *
	     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
	     * and UNAVAILABLE.
	     */
	    ABORTED: "aborted",
	    /**
	     * Operation was attempted past the valid range. E.g., seeking or reading
	     * past end of file.
	     *
	     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
	     * if the system state changes. For example, a 32-bit file system will
	     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
	     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
	     * an offset past the current file size.
	     *
	     * There is a fair bit of overlap between FAILED_PRECONDITION and
	     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
	     * when it applies so that callers who are iterating through a space can
	     * easily look for an OUT_OF_RANGE error to detect when they are done.
	     */
	    OUT_OF_RANGE: "out-of-range",
	    /** Operation is not implemented or not supported/enabled in this service. */
	    UNIMPLEMENTED: "unimplemented",
	    /**
	     * Internal errors. Means some invariants expected by underlying System has
	     * been broken. If you see one of these errors, Something is very broken.
	     */
	    INTERNAL: "internal",
	    /**
	     * The service is currently unavailable. This is a most likely a transient
	     * condition and may be corrected by retrying with a backoff.
	     *
	     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
	     * and UNAVAILABLE.
	     */
	    UNAVAILABLE: "unavailable",
	    /** Unrecoverable data loss or corruption. */
	    DATA_LOSS: "data-loss"
	}, E = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this, i) || this;
	        return e.code = n, e.message = i, e.name = "FirebaseError", 
	        // HACK: We write a toString property directly because Error is not a real
	        // class and so inheritance does not work correctly. We could alternatively
	        // do the same "back-door inheritance" trick that FirebaseError does.
	        e.toString = function() {
	            return e.name + ": [code=" + e.code + "]: " + e.message;
	        }, e;
	    }
	    return tslib.__extends(i, t), i;
	}(Error), D = function(t, n) {
	    this.user = n, this.type = "OAuth", this.o = {}, 
	    // Set the headers using Object Literal notation to avoid minification
	    this.o.Authorization = "Bearer " + t;
	}, R = /** @class */ function() {
	    function t() {
	        /**
	         * Stores the listener registered with setChangeListener()
	         * This isn't actually necessary since the UID never changes, but we use this
	         * to verify the listen contract is adhered to in tests.
	         */
	        this.h = null;
	    }
	    return t.prototype.getToken = function() {
	        return Promise.resolve(null);
	    }, t.prototype.l = function() {}, t.prototype.v = function(t) {
	        Wn(!this.h, "Can only call setChangeListener() once."), this.h = t, 
	        // Fire with initial user.
	        t(I.UNAUTHENTICATED);
	    }, t.prototype.m = function() {
	        Wn(null !== this.h, "removeChangeListener() when no listener registered"), this.h = null;
	    }, t;
	}(), S = /** @class */ function() {
	    function t(t) {
	        var n = this;
	        /**
	         * The auth token listener registered with FirebaseApp, retained here so we
	         * can unregister it.
	         */        this.p = null, 
	        /** Tracks the current User. */
	        this.currentUser = I.UNAUTHENTICATED, this.g = !1, 
	        /**
	         * Counter used to detect if the token changed while a getToken request was
	         * outstanding.
	         */
	        this._ = 0, 
	        /** The listener registered with setChangeListener(). */
	        this.h = null, this.forceRefresh = !1, this.p = function() {
	            n._++, n.currentUser = n.I(), n.g = !0, n.h && n.h(n.currentUser);
	        }, this._ = 0, this.auth = t.getImmediate({
	            optional: !0
	        }), this.auth ? this.auth.addAuthTokenListener(this.p) : (
	        // if auth is not available, invoke tokenListener once with null token
	        this.p(null), t.get().then((function(t) {
	            n.auth = t, n.p && 
	            // tokenListener can be removed by removeChangeListener()
	            n.auth.addAuthTokenListener(n.p);
	        }), (function() {
	            /* this.authProvider.get() never rejects */})));
	    }
	    return t.prototype.getToken = function() {
	        var t = this;
	        Wn(null != this.p, "getToken cannot be called after listener removed.");
	        // Take note of the current value of the tokenCounter so that this method
	        // can fail (with an ABORTED error) if there is a token change while the
	        // request is outstanding.
	        var n = this._, i = this.forceRefresh;
	        return this.forceRefresh = !1, this.auth ? this.auth.getToken(i).then((function(i) {
	            // Cancel the request since the token changed while the request was
	            // outstanding so the response is potentially for a previous user (which
	            // user, we can't be sure).
	            if (t._ !== n) throw new E(T.ABORTED, "getToken aborted due to token change.");
	            return i ? (Wn("string" == typeof i.accessToken, "Invalid tokenData returned from getToken():" + i), 
	            new D(i.accessToken, t.currentUser)) : null;
	        })) : Promise.resolve(null);
	    }, t.prototype.l = function() {
	        this.forceRefresh = !0;
	    }, t.prototype.v = function(t) {
	        Wn(!this.h, "Can only call setChangeListener() once."), this.h = t, 
	        // Fire the initial event
	        this.g && t(this.currentUser);
	    }, t.prototype.m = function() {
	        Wn(null != this.p, "removeChangeListener() called twice"), Wn(null !== this.h, "removeChangeListener() called when no listener registered"), 
	        this.auth && this.auth.removeAuthTokenListener(this.p), this.p = null, this.h = null;
	    }, 
	    // Auth.getUid() can return null even with a user logged in. It is because
	    // getUid() is synchronous, but the auth code populating Uid is asynchronous.
	    // This method should only be called in the AuthTokenListener callback
	    // to guarantee to get the actual user.
	    t.prototype.I = function() {
	        var t = this.auth && this.auth.getUid();
	        return Wn(null === t || "string" == typeof t, "Received invalid UID: " + t), new I(t);
	    }, t;
	}(), A = /** @class */ function() {
	    function t(t, n) {
	        this.T = t, this.D = n, this.type = "FirstParty", this.user = I.s;
	    }
	    return Object.defineProperty(t.prototype, "o", {
	        get: function() {
	            var t = {
	                "X-Goog-AuthUser": this.D
	            }, n = this.T.auth.R([]);
	            return n && (t.Authorization = n), t;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t;
	}(), C = /** @class */ function() {
	    function t(t, n) {
	        this.T = t, this.D = n;
	    }
	    return t.prototype.getToken = function() {
	        return Promise.resolve(new A(this.T, this.D));
	    }, t.prototype.v = function(t) {
	        // Fire with initial uid.
	        t(I.s);
	    }, t.prototype.m = function() {}, t.prototype.l = function() {}, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Simple wrapper around a nullable UID. Mostly exists to make code more
	 * readable.
	 */
	/**
	 * Builds a CredentialsProvider depending on the type of
	 * the credentials passed in.
	 */
	function P(t) {
	    if (!t) return new R;
	    switch (t.type) {
	      case "gapi":
	        var n = t.S;
	        // Make sure this really is a Gapi client.
	                return Wn(!("object" != typeof n || null === n || !n.auth || !n.auth.getAuthHeaderValueForFirstParty), "unexpected gapi interface"), 
	        new C(n, t.D || "0");
	
	      case "provider":
	        return t.S;
	
	      default:
	        throw new E(T.INVALID_ARGUMENT, "makeCredentialsProvider failed due to invalid credential type");
	    }
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// The earlist date supported by Firestore timestamps (0001-01-01T00:00:00Z).
	var V = /** @class */ function() {
	    function t(t, n) {
	        if (this.seconds = t, this.nanoseconds = n, n < 0) throw new E(T.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + n);
	        if (n >= 1e9) throw new E(T.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + n);
	        if (t < -62135596800) throw new E(T.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
	        // This will break in the year 10,000.
	                if (t >= 253402300800) throw new E(T.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
	    }
	    return t.now = function() {
	        return t.fromMillis(Date.now());
	    }, t.fromDate = function(n) {
	        return t.fromMillis(n.getTime());
	    }, t.fromMillis = function(n) {
	        var i = Math.floor(n / 1e3);
	        return new t(i, 1e6 * (n - 1e3 * i));
	    }, t.prototype.toDate = function() {
	        return new Date(this.toMillis());
	    }, t.prototype.toMillis = function() {
	        return 1e3 * this.seconds + this.nanoseconds / 1e6;
	    }, t.prototype.A = function(t) {
	        return this.seconds === t.seconds ? Kn(this.nanoseconds, t.nanoseconds) : Kn(this.seconds, t.seconds);
	    }, t.prototype.isEqual = function(t) {
	        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;
	    }, t.prototype.toString = function() {
	        return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
	    }, t.prototype.valueOf = function() {
	        // This method returns a string of the form <seconds>.<nanoseconds> where <seconds> is
	        // translated to have a non-negative value and both <seconds> and <nanoseconds> are left-padded
	        // with zeroes to be a consistent length. Strings with this format then have a lexiographical
	        // ordering that matches the expected ordering. The <seconds> translation is done to avoid
	        // having a leading negative sign (i.e. a leading '-' character) in its string representation,
	        // which would affect its lexiographical ordering.
	        var t = this.seconds - -62135596800;
	        // Note: Up to 12 decimal digits are required to represent all valid 'seconds' values.
	                return String(t).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
	    }, t;
	}(), k = /** @class */ function() {
	    function t(t) {
	        this.timestamp = t;
	    }
	    // TODO(b/34176344): Once we no longer need to use the old alpha protos,
	    // delete this constructor and use a timestamp-backed version everywhere.
	        return t.C = function(n) {
	        var i = Math.floor(n / 1e6);
	        return new t(new V(i, n % 1e6 * 1e3));
	    }, t.P = function(n) {
	        return new t(n);
	    }, t.V = function() {
	        return t.MIN;
	    }, t.prototype.k = function(t) {
	        return this.timestamp.A(t.timestamp);
	    }, t.prototype.isEqual = function(t) {
	        return this.timestamp.isEqual(t.timestamp);
	    }, 
	    /** Returns a number representation of the version for use in spec tests. */
	    t.prototype.N = function() {
	        // Convert to microseconds.
	        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
	    }, t.prototype.toString = function() {
	        return "SnapshotVersion(" + this.timestamp.toString() + ")";
	    }, t.prototype.O = function() {
	        return this.timestamp;
	    }, t.MIN = new t(new V(0, 0)), t;
	}(), N = /** @class */ function() {
	    function t(t, n, i) {
	        void 0 === n ? n = 0 : n > t.length && Gn("offset " + n + " out of range " + t.length), 
	        void 0 === i ? i = t.length - n : i > t.length - n && Gn("length " + i + " out of range " + (t.length - n)), 
	        this.segments = t, this.offset = n, this.len = i;
	    }
	    return Object.defineProperty(t.prototype, "length", {
	        get: function() {
	            return this.len;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.isEqual = function(n) {
	        return 0 === t.F(this, n);
	    }, t.prototype.child = function(n) {
	        var i = this.segments.slice(this.offset, this.limit());
	        return n instanceof t ? n.forEach((function(t) {
	            i.push(t);
	        })) : i.push(n), this.U(i);
	    }, 
	    /** The index of one past the last segment of the path. */
	    t.prototype.limit = function() {
	        return this.offset + this.length;
	    }, t.prototype.j = function(t) {
	        return t = void 0 === t ? 1 : t, Wn(this.length >= t, "Can't call popFirst() with less segments"), 
	        this.U(this.segments, this.offset + t, this.length - t);
	    }, t.prototype.L = function() {
	        return Wn(!this.M(), "Can't call popLast() on empty path"), this.U(this.segments, this.offset, this.length - 1);
	    }, t.prototype.q = function() {
	        return Wn(!this.M(), "Can't call firstSegment() on empty path"), this.segments[this.offset];
	    }, t.prototype.B = function() {
	        return this.get(this.length - 1);
	    }, t.prototype.get = function(t) {
	        return Wn(t < this.length, "Index out of range"), this.segments[this.offset + t];
	    }, t.prototype.M = function() {
	        return 0 === this.length;
	    }, t.prototype.G = function(t) {
	        if (t.length < this.length) return !1;
	        for (var n = 0; n < this.length; n++) if (this.get(n) !== t.get(n)) return !1;
	        return !0;
	    }, t.prototype.W = function(t) {
	        if (this.length + 1 !== t.length) return !1;
	        for (var n = 0; n < this.length; n++) if (this.get(n) !== t.get(n)) return !1;
	        return !0;
	    }, t.prototype.forEach = function(t) {
	        for (var n = this.offset, i = this.limit(); n < i; n++) t(this.segments[n]);
	    }, t.prototype.K = function() {
	        return this.segments.slice(this.offset, this.limit());
	    }, t.F = function(t, n) {
	        for (var i = Math.min(t.length, n.length), e = 0; e < i; e++) {
	            var r = t.get(e), u = n.get(e);
	            if (r < u) return -1;
	            if (r > u) return 1;
	        }
	        return t.length < n.length ? -1 : t.length > n.length ? 1 : 0;
	    }, t;
	}(), O = /** @class */ function(t) {
	    function i() {
	        return null !== t && t.apply(this, arguments) || this;
	    }
	    return tslib.__extends(i, t), i.prototype.U = function(t, n, e) {
	        return new i(t, n, e);
	    }, i.prototype.J = function() {
	        // NOTE: The client is ignorant of any path segments containing escape
	        // sequences (e.g. __id123__) and just passes them through raw (they exist
	        // for legacy reasons and should not be used frequently).
	        return this.K().join("/");
	    }, i.prototype.toString = function() {
	        return this.J();
	    }, 
	    /**
	     * Creates a resource path from the given slash-delimited string.
	     */
	    i.H = function(t) {
	        // NOTE: The client is ignorant of any path segments containing escape
	        // sequences (e.g. __id123__) and just passes them through raw (they exist
	        // for legacy reasons and should not be used frequently).
	        if (t.indexOf("//") >= 0) throw new E(T.INVALID_ARGUMENT, "Invalid path (" + t + "). Paths must not contain // in them.");
	        // We may still have an empty segment at the beginning or end if they had a
	        // leading or trailing slash (which we allow).
	                return new i(t.split("/").filter((function(t) {
	            return t.length > 0;
	        })));
	    }, i.Y = new i([]), i;
	}(N), F = /^[_a-zA-Z][_a-zA-Z0-9]*$/, U = /** @class */ function(t) {
	    function i() {
	        return null !== t && t.apply(this, arguments) || this;
	    }
	    return tslib.__extends(i, t), i.prototype.U = function(t, n, e) {
	        return new i(t, n, e);
	    }, 
	    /**
	     * Returns true if the string could be used as a segment in a field path
	     * without escaping.
	     */
	    i.X = function(t) {
	        return F.test(t);
	    }, i.prototype.J = function() {
	        return this.K().map((function(t) {
	            return t = t.replace("\\", "\\\\").replace("`", "\\`"), i.X(t) || (t = "`" + t + "`"), 
	            t;
	        })).join(".");
	    }, i.prototype.toString = function() {
	        return this.J();
	    }, 
	    /**
	     * Returns true if this field references the key of a document.
	     */
	    i.prototype.$ = function() {
	        return 1 === this.length && "__name__" === this.get(0);
	    }, 
	    /**
	     * The field designating the key of a document.
	     */
	    i.Z = function() {
	        return new i([ "__name__" ]);
	    }, 
	    /**
	     * Parses a field string from the given server-formatted string.
	     *
	     * - Splitting the empty string is not allowed (for now at least).
	     * - Empty segments within the string (e.g. if there are two consecutive
	     *   separators) are not allowed.
	     *
	     * TODO(b/37244157): we should make this more strict. Right now, it allows
	     * non-identifier path components, even if they aren't escaped.
	     */
	    i.tt = function(t) {
	        for (var n = [], e = "", r = 0, u = function() {
	            if (0 === e.length) throw new E(T.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
	            n.push(e), e = "";
	        }, s = !1; r < t.length; ) {
	            var o = t[r];
	            if ("\\" === o) {
	                if (r + 1 === t.length) throw new E(T.INVALID_ARGUMENT, "Path has trailing escape character: " + t);
	                var h = t[r + 1];
	                if ("\\" !== h && "." !== h && "`" !== h) throw new E(T.INVALID_ARGUMENT, "Path has invalid escape sequence: " + t);
	                e += h, r += 2;
	            } else "`" === o ? (s = !s, r++) : "." !== o || s ? (e += o, r++) : (u(), r++);
	        }
	        if (u(), s) throw new E(T.INVALID_ARGUMENT, "Unterminated ` in path: " + t);
	        return new i(n);
	    }, i.Y = new i([]), i;
	}(N), j = /** @class */ function() {
	    function t(n) {
	        this.path = n, Wn(t.nt(n), "Invalid DocumentKey with an odd number of segments: " + n.K().join("/"));
	    }
	    return t.it = function(n) {
	        return new t(O.H(n).j(5));
	    }, 
	    /** Returns true if the document is in the specified collectionId. */
	    t.prototype.et = function(t) {
	        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;
	    }, t.prototype.isEqual = function(t) {
	        return null !== t && 0 === O.F(this.path, t.path);
	    }, t.prototype.toString = function() {
	        return this.path.toString();
	    }, t.F = function(t, n) {
	        return O.F(t.path, n.path);
	    }, t.nt = function(t) {
	        return t.length % 2 == 0;
	    }, 
	    /**
	     * Creates and returns a new document key with the given segments.
	     *
	     * @param segments The segments of the path to the document
	     * @return A new instance of DocumentKey
	     */
	    t.rt = function(n) {
	        return new t(new O(n.slice()));
	    }, t.EMPTY = new t(new O([])), t;
	}(), x = /** @class */ function() {
	    function t(t, n) {
	        this.F = t, this.root = n || M.EMPTY;
	    }
	    // Returns a copy of the map, with the specified key/value added or replaced.
	        return t.prototype.ut = function(n, i) {
	        return new t(this.F, this.root.ut(n, i, this.F).copy(null, null, M.st, null, null));
	    }, 
	    // Returns a copy of the map, with the specified key removed.
	    t.prototype.remove = function(n) {
	        return new t(this.F, this.root.remove(n, this.F).copy(null, null, M.st, null, null));
	    }, 
	    // Returns the value of the node with the given key, or null.
	    t.prototype.get = function(t) {
	        for (var n = this.root; !n.M(); ) {
	            var i = this.F(t, n.key);
	            if (0 === i) return n.value;
	            i < 0 ? n = n.left : i > 0 && (n = n.right);
	        }
	        return null;
	    }, 
	    // Returns the index of the element in this sorted map, or -1 if it doesn't
	    // exist.
	    t.prototype.indexOf = function(t) {
	        for (
	        // Number of nodes that were pruned when descending right
	        var n = 0, i = this.root; !i.M(); ) {
	            var e = this.F(t, i.key);
	            if (0 === e) return n + i.left.size;
	            e < 0 ? i = i.left : (
	            // Count all nodes left of the node plus the node itself
	            n += i.left.size + 1, i = i.right);
	        }
	        // Node not found
	                return -1;
	    }, t.prototype.M = function() {
	        return this.root.M();
	    }, Object.defineProperty(t.prototype, "size", {
	        // Returns the total number of nodes in the map.
	        get: function() {
	            return this.root.size;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    // Returns the minimum key in the map.
	    t.prototype.ot = function() {
	        return this.root.ot();
	    }, 
	    // Returns the maximum key in the map.
	    t.prototype.ht = function() {
	        return this.root.ht();
	    }, 
	    // Traverses the map in key order and calls the specified action function
	    // for each key/value pair. If action returns true, traversal is aborted.
	    // Returns the first truthy value returned by action, or the last falsey
	    // value returned by action.
	    t.prototype.ct = function(t) {
	        return this.root.ct(t);
	    }, t.prototype.forEach = function(t) {
	        this.ct((function(n, i) {
	            return t(n, i), !1;
	        }));
	    }, t.prototype.toString = function() {
	        var t = [];
	        return this.ct((function(n, i) {
	            return t.push(n + ":" + i), !1;
	        })), "{" + t.join(", ") + "}";
	    }, 
	    // Traverses the map in reverse key order and calls the specified action
	    // function for each key/value pair. If action returns true, traversal is
	    // aborted.
	    // Returns the first truthy value returned by action, or the last falsey
	    // value returned by action.
	    t.prototype.at = function(t) {
	        return this.root.at(t);
	    }, 
	    // Returns an iterator over the SortedMap.
	    t.prototype.ft = function() {
	        return new L(this.root, null, this.F, !1);
	    }, t.prototype.lt = function(t) {
	        return new L(this.root, t, this.F, !1);
	    }, t.prototype.dt = function() {
	        return new L(this.root, null, this.F, !0);
	    }, t.prototype.vt = function(t) {
	        return new L(this.root, t, this.F, !0);
	    }, t;
	}(), L = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.wt = e, this.pt = [];
	        for (var r = 1; !t.M(); ) if (r = n ? i(t.key, n) : 1, 
	        // flip the comparison if we're going in reverse
	        e && (r *= -1), r < 0) 
	        // This node is less than our start key. ignore it
	        t = this.wt ? t.left : t.right; else {
	            if (0 === r) {
	                // This node is exactly equal to our start key. Push it on the stack,
	                // but stop iterating;
	                this.pt.push(t);
	                break;
	            }
	            // This node is greater than our start key, add it to the stack and move
	            // to the next one
	            this.pt.push(t), t = this.wt ? t.right : t.left;
	        }
	    }
	    return t.prototype.bt = function() {
	        Wn(this.pt.length > 0, "getNext() called on iterator when hasNext() is false.");
	        var t = this.pt.pop(), n = {
	            key: t.key,
	            value: t.value
	        };
	        if (this.wt) for (t = t.left; !t.M(); ) this.pt.push(t), t = t.right; else for (t = t.right; !t.M(); ) this.pt.push(t), 
	        t = t.left;
	        return n;
	    }, t.prototype.gt = function() {
	        return this.pt.length > 0;
	    }, t.prototype.yt = function() {
	        if (0 === this.pt.length) return null;
	        var t = this.pt[this.pt.length - 1];
	        return {
	            key: t.key,
	            value: t.value
	        };
	    }, t;
	}(), M = /** @class */ function() {
	    function t(n, i, e, r, u) {
	        this.key = n, this.value = i, this.color = null != e ? e : t.RED, this.left = null != r ? r : t.EMPTY, 
	        this.right = null != u ? u : t.EMPTY, this.size = this.left.size + 1 + this.right.size;
	    }
	    // Returns a copy of the current node, optionally replacing pieces of it.
	        return t.prototype.copy = function(n, i, e, r, u) {
	        return new t(null != n ? n : this.key, null != i ? i : this.value, null != e ? e : this.color, null != r ? r : this.left, null != u ? u : this.right);
	    }, t.prototype.M = function() {
	        return !1;
	    }, 
	    // Traverses the tree in key order and calls the specified action function
	    // for each node. If action returns true, traversal is aborted.
	    // Returns the first truthy value returned by action, or the last falsey
	    // value returned by action.
	    t.prototype.ct = function(t) {
	        return this.left.ct(t) || t(this.key, this.value) || this.right.ct(t);
	    }, 
	    // Traverses the tree in reverse key order and calls the specified action
	    // function for each node. If action returns true, traversal is aborted.
	    // Returns the first truthy value returned by action, or the last falsey
	    // value returned by action.
	    t.prototype.at = function(t) {
	        return this.right.at(t) || t(this.key, this.value) || this.left.at(t);
	    }, 
	    // Returns the minimum node in the tree.
	    t.prototype.min = function() {
	        return this.left.M() ? this : this.left.min();
	    }, 
	    // Returns the maximum key in the tree.
	    t.prototype.ot = function() {
	        return this.min().key;
	    }, 
	    // Returns the maximum key in the tree.
	    t.prototype.ht = function() {
	        return this.right.M() ? this.key : this.right.ht();
	    }, 
	    // Returns new tree, with the key/value added.
	    t.prototype.ut = function(t, n, i) {
	        var e = this, r = i(t, e.key);
	        return (e = r < 0 ? e.copy(null, null, null, e.left.ut(t, n, i), null) : 0 === r ? e.copy(null, n, null, null, null) : e.copy(null, null, null, null, e.right.ut(t, n, i)))._t();
	    }, t.prototype.It = function() {
	        if (this.left.M()) return t.EMPTY;
	        var n = this;
	        return n.left.Tt() || n.left.left.Tt() || (n = n.Et()), (n = n.copy(null, null, null, n.left.It(), null))._t();
	    }, 
	    // Returns new tree, with the specified item removed.
	    t.prototype.remove = function(n, i) {
	        var e, r = this;
	        if (i(n, r.key) < 0) r.left.M() || r.left.Tt() || r.left.left.Tt() || (r = r.Et()), 
	        r = r.copy(null, null, null, r.left.remove(n, i), null); else {
	            if (r.left.Tt() && (r = r.Dt()), r.right.M() || r.right.Tt() || r.right.left.Tt() || (r = r.Rt()), 
	            0 === i(n, r.key)) {
	                if (r.right.M()) return t.EMPTY;
	                e = r.right.min(), r = r.copy(e.key, e.value, null, null, r.right.It());
	            }
	            r = r.copy(null, null, null, null, r.right.remove(n, i));
	        }
	        return r._t();
	    }, t.prototype.Tt = function() {
	        return this.color;
	    }, 
	    // Returns new tree after performing any needed rotations.
	    t.prototype._t = function() {
	        var t = this;
	        return t.right.Tt() && !t.left.Tt() && (t = t.St()), t.left.Tt() && t.left.left.Tt() && (t = t.Dt()), 
	        t.left.Tt() && t.right.Tt() && (t = t.At()), t;
	    }, t.prototype.Et = function() {
	        var t = this.At();
	        return t.right.left.Tt() && (t = (t = (t = t.copy(null, null, null, null, t.right.Dt())).St()).At()), 
	        t;
	    }, t.prototype.Rt = function() {
	        var t = this.At();
	        return t.left.left.Tt() && (t = (t = t.Dt()).At()), t;
	    }, t.prototype.St = function() {
	        var n = this.copy(null, null, t.RED, null, this.right.left);
	        return this.right.copy(null, null, this.color, n, null);
	    }, t.prototype.Dt = function() {
	        var n = this.copy(null, null, t.RED, this.left.right, null);
	        return this.left.copy(null, null, this.color, null, n);
	    }, t.prototype.At = function() {
	        var t = this.left.copy(null, null, !this.left.color, null, null), n = this.right.copy(null, null, !this.right.color, null, null);
	        return this.copy(null, null, !this.color, t, n);
	    }, 
	    // For testing.
	    t.prototype.Ct = function() {
	        var t = this.Pt();
	        return Math.pow(2, t) <= this.size + 1;
	    }, 
	    // In a balanced RB tree, the black-depth (number of black nodes) from root to
	    // leaves is equal on both sides.  This function verifies that or asserts.
	    t.prototype.Pt = function() {
	        if (this.Tt() && this.left.Tt()) throw Gn("Red node has red child(" + this.key + "," + this.value + ")");
	        if (this.right.Tt()) throw Gn("Right child of (" + this.key + "," + this.value + ") is red");
	        var t = this.left.Pt();
	        if (t !== this.right.Pt()) throw Gn("Black depths differ");
	        return t + (this.Tt() ? 0 : 1);
	    }, 
	    // Empty node is shared between all LLRB trees.
	    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    t.EMPTY = null, t.RED = !0, t.st = !1, t;
	}(), q = /** @class */ function() {
	    function t() {
	        this.size = 0;
	    }
	    return Object.defineProperty(t.prototype, "key", {
	        get: function() {
	            throw Gn("LLRBEmptyNode has no key.");
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "value", {
	        get: function() {
	            throw Gn("LLRBEmptyNode has no value.");
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "color", {
	        get: function() {
	            throw Gn("LLRBEmptyNode has no color.");
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "left", {
	        get: function() {
	            throw Gn("LLRBEmptyNode has no left child.");
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "right", {
	        get: function() {
	            throw Gn("LLRBEmptyNode has no right child.");
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    // Returns a copy of the current node.
	    t.prototype.copy = function(t, n, i, e, r) {
	        return this;
	    }, 
	    // Returns a copy of the tree, with the specified key/value added.
	    t.prototype.ut = function(t, n, i) {
	        return new M(t, n);
	    }, 
	    // Returns a copy of the tree, with the specified key removed.
	    t.prototype.remove = function(t, n) {
	        return this;
	    }, t.prototype.M = function() {
	        return !0;
	    }, t.prototype.ct = function(t) {
	        return !1;
	    }, t.prototype.at = function(t) {
	        return !1;
	    }, t.prototype.ot = function() {
	        return null;
	    }, t.prototype.ht = function() {
	        return null;
	    }, t.prototype.Tt = function() {
	        return !1;
	    }, 
	    // For testing.
	    t.prototype.Ct = function() {
	        return !0;
	    }, t.prototype.Pt = function() {
	        return 0;
	    }, t;
	}();
	
	// end LLRBEmptyNode
	M.EMPTY = new q;
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * SortedSet is an immutable (copy-on-write) collection that holds elements
	 * in order specified by the provided comparator.
	 *
	 * NOTE: if provided comparator returns 0 for two elements, we consider them to
	 * be equal!
	 */
	var B = /** @class */ function() {
	    function t(t) {
	        this.F = t, this.data = new x(this.F);
	    }
	    /**
	     * Creates a SortedSet from the keys of the map.
	     * This is currently implemented as an O(n) copy.
	     */    return t.Vt = function(n) {
	        var i = new t(n.F);
	        return n.forEach((function(t) {
	            i = i.add(t);
	        })), i;
	    }, t.prototype.has = function(t) {
	        return null !== this.data.get(t);
	    }, t.prototype.first = function() {
	        return this.data.ot();
	    }, t.prototype.last = function() {
	        return this.data.ht();
	    }, Object.defineProperty(t.prototype, "size", {
	        get: function() {
	            return this.data.size;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.indexOf = function(t) {
	        return this.data.indexOf(t);
	    }, 
	    /** Iterates elements in order defined by "comparator" */
	    t.prototype.forEach = function(t) {
	        this.data.ct((function(n, i) {
	            return t(n), !1;
	        }));
	    }, 
	    /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */
	    t.prototype.kt = function(t, n) {
	        for (var i = this.data.lt(t[0]); i.gt(); ) {
	            var e = i.bt();
	            if (this.F(e.key, t[1]) >= 0) return;
	            n(e.key);
	        }
	    }, 
	    /**
	     * Iterates over `elem`s such that: start <= elem until false is returned.
	     */
	    t.prototype.Nt = function(t, n) {
	        var i;
	        for (i = void 0 !== n ? this.data.lt(n) : this.data.ft(); i.gt(); ) {
	            if (!t(i.bt().key)) return;
	        }
	    }, 
	    /** Finds the least element greater than or equal to `elem`. */
	    t.prototype.Ot = function(t) {
	        var n = this.data.lt(t);
	        return n.gt() ? n.bt().key : null;
	    }, t.prototype.ft = function() {
	        return new Q(this.data.ft());
	    }, t.prototype.lt = function(t) {
	        return new Q(this.data.lt(t));
	    }, 
	    /** Inserts or updates an element */
	    t.prototype.add = function(t) {
	        return this.copy(this.data.remove(t).ut(t, !0));
	    }, 
	    /** Deletes an element */
	    t.prototype.delete = function(t) {
	        return this.has(t) ? this.copy(this.data.remove(t)) : this;
	    }, t.prototype.M = function() {
	        return this.data.M();
	    }, t.prototype.Ft = function(t) {
	        var n = this;
	        // Make sure `result` always refers to the larger one of the two sets.
	                return n.size < t.size && (n = t, t = this), t.forEach((function(t) {
	            n = n.add(t);
	        })), n;
	    }, t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) return !1;
	        if (this.size !== n.size) return !1;
	        for (var i = this.data.ft(), e = n.data.ft(); i.gt(); ) {
	            var r = i.bt().key, u = e.bt().key;
	            if (0 !== this.F(r, u)) return !1;
	        }
	        return !0;
	    }, t.prototype.K = function() {
	        var t = [];
	        return this.forEach((function(n) {
	            t.push(n);
	        })), t;
	    }, t.prototype.toString = function() {
	        var t = [];
	        return this.forEach((function(n) {
	            return t.push(n);
	        })), "SortedSet(" + t.toString() + ")";
	    }, t.prototype.copy = function(n) {
	        var i = new t(this.F);
	        return i.data = n, i;
	    }, t;
	}(), Q = /** @class */ function() {
	    function t(t) {
	        this.Ut = t;
	    }
	    return t.prototype.bt = function() {
	        return this.Ut.bt().key;
	    }, t.prototype.gt = function() {
	        return this.Ut.gt();
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function G(t) {
	    var n = 0;
	    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && n++;
	    return n;
	}
	
	function W(t, n) {
	    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && n(i, t[i]);
	}
	
	function z(t) {
	    for (var n in Wn(null != t && "object" == typeof t, "isEmpty() expects object parameter."), 
	    t) if (Object.prototype.hasOwnProperty.call(t, n)) return !1;
	    return !0;
	}
	
	/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Immutable class that represents a "proto" byte string.
	 *
	 * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when
	 * sent on the wire. This class abstracts away this differentiation by holding
	 * the proto byte string in a common class that must be converted into a string
	 * before being sent as a proto.
	 */ var K = /** @class */ function() {
	    function t(t) {
	        this.jt = t;
	    }
	    return t.fromBase64String = function(n) {
	        return new t(jn.xt().atob(n));
	    }, t.fromUint8Array = function(n) {
	        return new t(
	        /**
	 * Helper function to convert an Uint8array to a binary string.
	 */
	        function(t) {
	            for (var n = "", i = 0; i < t.length; ++i) n += String.fromCharCode(t[i]);
	            return n;
	        }
	        /**
	 * Helper function to convert a binary string to an Uint8Array.
	 */ (n));
	    }, t.prototype.toBase64 = function() {
	        return jn.xt().btoa(this.jt);
	    }, t.prototype.toUint8Array = function() {
	        return function(t) {
	            for (var n = new Uint8Array(t.length), i = 0; i < t.length; i++) n[i] = t.charCodeAt(i);
	            return n;
	        }
	        /**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	        /**
	 * Returns whether a variable is either undefined or null.
	 */ (this.jt);
	    }, t.prototype.Lt = function() {
	        return 2 * this.jt.length;
	    }, t.prototype.k = function(t) {
	        return Kn(this.jt, t.jt);
	    }, t.prototype.isEqual = function(t) {
	        return this.jt === t.jt;
	    }, t.Mt = new t(""), t;
	}();
	
	function J(t) {
	    return null == t;
	}
	
	/** Returns whether the value represents -0. */ function H(t) {
	    // Detect if the value is -0.0. Based on polyfill from
	    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	    return -0 === t && 1 / t == -1 / 0;
	}
	
	/**
	 * Returns whether a value is an integer and in the safe integer range
	 * @param value The value to test for being an integer and in the safe range
	 */ function Y(t) {
	    return "number" == typeof t && Number.isInteger(t) && !H(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
	}
	
	/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Represents a locally-applied ServerTimestamp.
	 *
	 * Server Timestamps are backed by MapValues that contain an internal field
	 * `__type__` with a value of `server_timestamp`. The previous value and local
	 * write time are stored in its `__previous_value__` and `__local_write_time__`
	 * fields respectively.
	 *
	 * Notes:
	 * - ServerTimestampValue instances are created as the result of applying a
	 *   TransformMutation (see TransformMutation.applyTo()). They can only exist in
	 *   the local view of a document. Therefore they do not need to be parsed or
	 *   serialized.
	 * - When evaluated locally (e.g. for snapshot.data()), they by default
	 *   evaluate to `null`. This behavior can be configured by passing custom
	 *   FieldValueOptions to value().
	 * - With respect to other ServerTimestampValues, they sort by their
	 *   localWriteTime.
	 */ function X(t) {
	    var n, i;
	    return "server_timestamp" === (null === (i = ((null === (n = null == t ? void 0 : t.mapValue) || void 0 === n ? void 0 : n.fields) || {}).__type__) || void 0 === i ? void 0 : i.stringValue);
	}
	
	/**
	 * Creates a new ServerTimestamp proto value (using the internal format).
	 */
	/**
	 * Returns the local time at which this timestamp was first set.
	 */
	function $(t) {
	    var n = ot(t.mapValue.fields.__local_write_time__.timestampValue);
	    return new V(n.seconds, n.nanos);
	}
	
	/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// A RegExp matching ISO 8601 UTC timestamps with optional fraction.
	var Z = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
	
	/** Extracts the backend's type order for the provided value. */ function tt(t) {
	    return "nullValue" in t ? 0 /* NullValue */ : "booleanValue" in t ? 1 /* BooleanValue */ : "integerValue" in t || "doubleValue" in t ? 2 /* NumberValue */ : "timestampValue" in t ? 3 /* TimestampValue */ : "stringValue" in t ? 5 /* StringValue */ : "bytesValue" in t ? 6 /* BlobValue */ : "referenceValue" in t ? 7 /* RefValue */ : "geoPointValue" in t ? 8 /* GeoPointValue */ : "arrayValue" in t ? 9 /* ArrayValue */ : "mapValue" in t ? X(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : Gn("Invalid value type: " + JSON.stringify(t));
	}
	
	/** Tests `left` and `right` for equality based on the backend semantics. */ function nt(t, n) {
	    var i = tt(t);
	    if (i !== tt(n)) return !1;
	    switch (i) {
	      case 0 /* NullValue */ :
	        return !0;
	
	      case 1 /* BooleanValue */ :
	        return t.booleanValue === n.booleanValue;
	
	      case 4 /* ServerTimestampValue */ :
	        return $(t).isEqual($(n));
	
	      case 3 /* TimestampValue */ :
	        return function(t, n) {
	            if ("string" == typeof t.timestampValue && "string" == typeof n.timestampValue && t.timestampValue.length === n.timestampValue.length) 
	            // Use string equality for ISO 8601 timestamps
	            return t.timestampValue === n.timestampValue;
	            var i = ot(t.timestampValue), e = ot(n.timestampValue);
	            return i.seconds === e.seconds && i.nanos === e.nanos;
	        }(t, n);
	
	      case 5 /* StringValue */ :
	        return t.stringValue === n.stringValue;
	
	      case 6 /* BlobValue */ :
	        return function(t, n) {
	            return ct(t.bytesValue).isEqual(ct(n.bytesValue));
	        }(t, n);
	
	      case 7 /* RefValue */ :
	        return t.referenceValue === n.referenceValue;
	
	      case 8 /* GeoPointValue */ :
	        return function(t, n) {
	            return ht(t.geoPointValue.latitude) === ht(n.geoPointValue.latitude) && ht(t.geoPointValue.longitude) === ht(n.geoPointValue.longitude);
	        }(t, n);
	
	      case 2 /* NumberValue */ :
	        return function(t, n) {
	            if ("integerValue" in t && "integerValue" in n) return ht(t.integerValue) === ht(n.integerValue);
	            if ("doubleValue" in t && "doubleValue" in n) {
	                var i = ht(t.doubleValue), e = ht(n.doubleValue);
	                return i === e ? H(i) === H(e) : isNaN(i) && isNaN(e);
	            }
	            return !1;
	        }(t, n);
	
	      case 9 /* ArrayValue */ :
	        return Jn(t.arrayValue.values || [], n.arrayValue.values || [], nt);
	
	      case 10 /* ObjectValue */ :
	        return function(t, n) {
	            var i = t.mapValue.fields || {}, e = n.mapValue.fields || {};
	            if (G(i) !== G(e)) return !1;
	            for (var r in i) if (i.hasOwnProperty(r) && (void 0 === e[r] || !nt(i[r], e[r]))) return !1;
	            return !0;
	        }
	        /** Returns true if the ArrayValue contains the specified element. */ (t, n);
	
	      default:
	        return Gn("Unexpected value type: " + JSON.stringify(t));
	    }
	}
	
	function it(t, n) {
	    return void 0 !== (t.values || []).find((function(t) {
	        return nt(t, n);
	    }));
	}
	
	function et(t, n) {
	    var i = tt(t), e = tt(n);
	    if (i !== e) return Kn(i, e);
	    switch (i) {
	      case 0 /* NullValue */ :
	        return 0;
	
	      case 1 /* BooleanValue */ :
	        return Kn(t.booleanValue, n.booleanValue);
	
	      case 2 /* NumberValue */ :
	        return function(t, n) {
	            var i = ht(t.integerValue || t.doubleValue), e = ht(n.integerValue || n.doubleValue);
	            return i < e ? -1 : i > e ? 1 : i === e ? 0 : 
	            // one or both are NaN.
	            isNaN(i) ? isNaN(e) ? 0 : -1 : 1;
	        }(t, n);
	
	      case 3 /* TimestampValue */ :
	        return rt(t.timestampValue, n.timestampValue);
	
	      case 4 /* ServerTimestampValue */ :
	        return rt($(t), $(n));
	
	      case 5 /* StringValue */ :
	        return Kn(t.stringValue, n.stringValue);
	
	      case 6 /* BlobValue */ :
	        return function(t, n) {
	            var i = ct(t), e = ct(n);
	            return i.k(e);
	        }(t.bytesValue, n.bytesValue);
	
	      case 7 /* RefValue */ :
	        return function(t, n) {
	            for (var i = t.split("/"), e = n.split("/"), r = 0; r < i.length && r < e.length; r++) {
	                var u = Kn(i[r], e[r]);
	                if (0 !== u) return u;
	            }
	            return Kn(i.length, e.length);
	        }(t.referenceValue, n.referenceValue);
	
	      case 8 /* GeoPointValue */ :
	        return function(t, n) {
	            var i = Kn(ht(t.latitude), ht(n.latitude));
	            if (0 !== i) return i;
	            return Kn(ht(t.longitude), ht(n.longitude));
	        }(t.geoPointValue, n.geoPointValue);
	
	      case 9 /* ArrayValue */ :
	        return function(t, n) {
	            for (var i = t.values || [], e = n.values || [], r = 0; r < i.length && r < e.length; ++r) {
	                var u = et(i[r], e[r]);
	                if (u) return u;
	            }
	            return Kn(i.length, e.length);
	        }(t.arrayValue, n.arrayValue);
	
	      case 10 /* ObjectValue */ :
	        return function(t, n) {
	            var i = t.fields || {}, e = Object.keys(i), r = n.fields || {}, u = Object.keys(r);
	            // Even though MapValues are likely sorted correctly based on their insertion
	            // order (e.g. when received from the backend), local modifications can bring
	            // elements out of order. We need to re-sort the elements to ensure that
	            // canonical IDs are independent of insertion order.
	            e.sort(), u.sort();
	            for (var s = 0; s < e.length && s < u.length; ++s) {
	                var o = Kn(e[s], u[s]);
	                if (0 !== o) return o;
	                var h = et(i[e[s]], r[u[s]]);
	                if (0 !== h) return h;
	            }
	            return Kn(e.length, u.length);
	        }
	        /**
	 * Generates the canonical ID for the provided field value (as used in Target
	 * serialization).
	 */ (t.mapValue, n.mapValue);
	
	      default:
	        throw Gn("Invalid value type: " + i);
	    }
	}
	
	function rt(t, n) {
	    if ("string" == typeof t && "string" == typeof n && t.length === n.length) return Kn(t, n);
	    var i = ot(t), e = ot(n), r = Kn(i.seconds, e.seconds);
	    return 0 !== r ? r : Kn(i.nanos, e.nanos);
	}
	
	function ut(t) {
	    return st(t);
	}
	
	function st(t) {
	    return "nullValue" in t ? "null" : "booleanValue" in t ? "" + t.booleanValue : "integerValue" in t ? "" + t.integerValue : "doubleValue" in t ? "" + t.doubleValue : "timestampValue" in t ? (e = t.timestampValue, 
	    "time(" + (r = ot(e)).seconds + "," + r.nanos + ")") : "stringValue" in t ? t.stringValue : "bytesValue" in t ? ct(t.bytesValue).toBase64() : "referenceValue" in t ? (i = t.referenceValue, 
	    j.it(i).toString()) : "geoPointValue" in t ? "geo(" + (n = t.geoPointValue).latitude + "," + n.longitude + ")" : "arrayValue" in t ? function(t) {
	        for (var n = "[", i = !0, e = 0, r = t.values || []; e < r.length; e++) {
	            var u = r[e];
	            i ? i = !1 : n += ",", n += st(u);
	        }
	        return n + "]";
	    }
	    /**
	 * Converts the possible Proto values for a timestamp value into a "seconds and
	 * nanos" representation.
	 */ (t.arrayValue) : "mapValue" in t ? function(t) {
	        for (
	        // Iteration order in JavaScript is not guaranteed. To ensure that we generate
	        // matching canonical IDs for identical maps, we need to sort the keys.
	        var n = Object.keys(t.fields || {}).sort(), i = "{", e = !0, r = 0, u = n; r < u.length; r++) {
	            var s = u[r];
	            e ? e = !1 : i += ",", i += s + ":" + st(t.fields[s]);
	        }
	        return i + "}";
	    }(t.mapValue) : Gn("Invalid value type: " + JSON.stringify(t));
	    var n, i, e, r;
	}
	
	function ot(t) {
	    // The json interface (for the browser) will return an iso timestamp string,
	    // while the proto js library (for node) will return a
	    // google.protobuf.Timestamp instance.
	    if (Wn(!!t, "Cannot normalize null or undefined timestamp."), "string" == typeof t) {
	        // The date string can have higher precision (nanos) than the Date class
	        // (millis), so we do some custom parsing here.
	        // Parse the nanos right out of the string.
	        var n = 0, i = Z.exec(t);
	        if (Wn(!!i, "invalid timestamp: " + t), i[1]) {
	            // Pad the fraction out to 9 digits (nanos).
	            var e = i[1];
	            e = (e + "000000000").substr(0, 9), n = Number(e);
	        }
	        // Parse the date to get the seconds.
	                var r = new Date(t);
	        return {
	            seconds: Math.floor(r.getTime() / 1e3),
	            nanos: n
	        };
	    }
	    return {
	        seconds: ht(t.seconds),
	        nanos: n = ht(t.nanos)
	    };
	}
	
	/**
	 * Converts the possible Proto types for numbers into a JavaScript number.
	 * Returns 0 if the value is not numeric.
	 */ function ht(t) {
	    // TODO(bjornick): Handle int64 greater than 53 bits.
	    return "number" == typeof t ? t : "string" == typeof t ? Number(t) : 0;
	}
	
	/** Converts the possible Proto types for Blobs into a ByteString. */ function ct(t) {
	    return "string" == typeof t ? K.fromBase64String(t) : K.fromUint8Array(t);
	}
	
	/** Returns a reference value for the provided database and key. */ function at(t, n) {
	    return {
	        referenceValue: "projects/" + t.projectId + "/databases/" + t.database + "/documents/" + n.path.J()
	    };
	}
	
	/** Returns true if `value` is an IntegerValue . */ function ft(t) {
	    return !!t && "integerValue" in t;
	}
	
	/** Returns true if `value` is a DoubleValue. */
	/** Returns true if `value` is either an IntegerValue or a DoubleValue. */
	function lt(t) {
	    return ft(t) || function(t) {
	        return !!t && "doubleValue" in t;
	    }(t);
	}
	
	/** Returns true if `value` is an ArrayValue. */ function dt(t) {
	    return !!t && "arrayValue" in t;
	}
	
	/** Returns true if `value` is a ReferenceValue. */ function vt(t) {
	    return !!t && "referenceValue" in t;
	}
	
	/** Returns true if `value` is a NullValue. */ function wt(t) {
	    return !!t && "nullValue" in t;
	}
	
	/** Returns true if `value` is NaN. */ function mt(t) {
	    return !!t && "doubleValue" in t && isNaN(Number(t.doubleValue));
	}
	
	/** Returns true if `value` is a MapValue. */ function pt(t) {
	    return !!t && "mapValue" in t;
	}
	
	/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/** Transforms a value into a server-generated timestamp. */ var bt = /** @class */ function() {
	    function t() {}
	    return t.prototype.qt = function(t, n) {
	        return function(t, n) {
	            var i, e = {
	                fields: (i = {}, i.__type__ = {
	                    stringValue: "server_timestamp"
	                }, i.__local_write_time__ = {
	                    timestampValue: {
	                        seconds: t.seconds,
	                        nanos: t.nanoseconds
	                    }
	                }, i)
	            };
	            return n && (e.fields.__previous_value__ = n), {
	                mapValue: e
	            };
	        }
	        /**
	 * Returns the value of the field before this ServerTimestamp was set.
	 *
	 * Preserving the previous values allows the user to display the last resoled
	 * value until the backend responds with the timestamp.
	 */ (n, t);
	    }, t.prototype.Bt = function(t, n) {
	        return n;
	    }, t.prototype.Qt = function(t) {
	        return null;
	 // Server timestamps are idempotent and don't require a base value.
	        }, t.prototype.isEqual = function(n) {
	        return n instanceof t;
	    }, t.instance = new t, t;
	}(), gt = /** @class */ function() {
	    function t(t) {
	        this.elements = t;
	    }
	    return t.prototype.qt = function(t, n) {
	        return this.apply(t);
	    }, t.prototype.Bt = function(t, n) {
	        // The server just sends null as the transform result for array operations,
	        // so we have to calculate a result the same as we do for local
	        // applications.
	        return this.apply(t);
	    }, t.prototype.apply = function(t) {
	        for (var n = It(t), i = function(t) {
	            n.some((function(n) {
	                return nt(n, t);
	            })) || n.push(t);
	        }, e = 0, r = this.elements; e < r.length; e++) {
	            i(r[e]);
	        }
	        return {
	            arrayValue: {
	                values: n
	            }
	        };
	    }, t.prototype.Qt = function(t) {
	        return null;
	 // Array transforms are idempotent and don't require a base value.
	        }, t.prototype.isEqual = function(n) {
	        return n instanceof t && Jn(this.elements, n.elements, nt);
	    }, t;
	}(), yt = /** @class */ function() {
	    function t(t) {
	        this.elements = t;
	    }
	    return t.prototype.qt = function(t, n) {
	        return this.apply(t);
	    }, t.prototype.Bt = function(t, n) {
	        // The server just sends null as the transform result for array operations,
	        // so we have to calculate a result the same as we do for local
	        // applications.
	        return this.apply(t);
	    }, t.prototype.apply = function(t) {
	        for (var n = It(t), i = function(t) {
	            n = n.filter((function(n) {
	                return !nt(n, t);
	            }));
	        }, e = 0, r = this.elements; e < r.length; e++) {
	            i(r[e]);
	        }
	        return {
	            arrayValue: {
	                values: n
	            }
	        };
	    }, t.prototype.Qt = function(t) {
	        return null;
	 // Array transforms are idempotent and don't require a base value.
	        }, t.prototype.isEqual = function(n) {
	        return n instanceof t && Jn(this.elements, n.elements, nt);
	    }, t;
	}(), _t = /** @class */ function() {
	    function t(t, n) {
	        this.serializer = t, this.Gt = n, Wn(lt(n), "NumericIncrementTransform transform requires a NumberValue");
	    }
	    return t.prototype.qt = function(t, n) {
	        // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
	        // precision and resolves overflows by reducing precision, we do not
	        // manually cap overflows at 2^63.
	        var i = this.Qt(t), e = this.asNumber(i) + this.asNumber(this.Gt);
	        return ft(i) && ft(this.Gt) ? this.serializer.Wt(e) : this.serializer.zt(e);
	    }, t.prototype.Bt = function(t, n) {
	        return Wn(null !== n, "Didn't receive transformResult for NUMERIC_ADD transform"), 
	        n;
	    }, 
	    /**
	     * Inspects the provided value, returning the provided value if it is already
	     * a NumberValue, otherwise returning a coerced value of 0.
	     */
	    t.prototype.Qt = function(t) {
	        return lt(t) ? t : {
	            integerValue: 0
	        };
	    }, t.prototype.isEqual = function(n) {
	        return n instanceof t && nt(this.Gt, n.Gt);
	    }, t.prototype.asNumber = function(t) {
	        return ht(t.integerValue || t.doubleValue);
	    }, t;
	}();
	
	/** Transforms an array value via a union operation. */ function It(t) {
	    return dt(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Provides a set of fields that can be used to partially patch a document.
	 * FieldMask is used in conjunction with ObjectValue.
	 * Examples:
	 *   foo - Overwrites foo entirely with the provided value. If foo is not
	 *         present in the companion ObjectValue, the field is deleted.
	 *   foo.bar - Overwrites only the field bar of the object foo.
	 *             If foo is not an object, foo is replaced with an object
	 *             containing foo
	 */ var Tt, Et, Dt = /** @class */ function() {
	    function t(t) {
	        this.fields = t;
	        // TODO(dimond): validation of FieldMask
	        }
	    return t.Kt = function(n) {
	        return new t(n);
	    }, t.Jt = function(n) {
	        var i = new B(U.F);
	        return n.forEach((function(t) {
	            return i = i.add(t);
	        })), new t(i);
	    }, 
	    /**
	     * Verifies that `fieldPath` is included by at least one field in this field
	     * mask.
	     *
	     * This is an O(n) operation, where `n` is the size of the field mask.
	     */
	    t.prototype.Ht = function(t) {
	        var n = !1;
	        return this.fields.forEach((function(i) {
	            i.G(t) && (n = !0);
	        })), n;
	    }, t.prototype.isEqual = function(t) {
	        return this.fields.isEqual(t.fields);
	    }, t;
	}(), Rt = /** @class */ function() {
	    function t(t, n) {
	        this.field = t, this.transform = n;
	    }
	    return t.prototype.isEqual = function(t) {
	        return this.field.isEqual(t.field) && this.transform.isEqual(t.transform);
	    }, t;
	}(), St = function(
	/**
	     * The version at which the mutation was committed:
	     *
	     * - For most operations, this is the updateTime in the WriteResult.
	     * - For deletes, the commitTime of the WriteResponse (because deletes are
	     *   not stored and have no updateTime).
	     *
	     * Note that these versions can be different: No-op writes will not change
	     * the updateTime even though the commitTime advances.
	     */
	t, 
	/**
	     * The resulting fields returned from the backend after a
	     * TransformMutation has been committed. Contains one FieldValue for each
	     * FieldTransform that was in the mutation.
	     *
	     * Will be null if the mutation was not a TransformMutation.
	     */
	n) {
	    this.version = t, this.transformResults = n;
	}, At = /** @class */ function() {
	    function t(t, n) {
	        this.updateTime = t, this.exists = n, Wn(void 0 === t || void 0 === n, 'Precondition can specify "exists" or "updateTime" but not both');
	    }
	    /** Creates a new Precondition with an exists flag. */    return t.exists = function(n) {
	        return new t(void 0, n);
	    }, 
	    /** Creates a new Precondition based on a version a document exists at. */
	    t.updateTime = function(n) {
	        return new t(n);
	    }, Object.defineProperty(t.prototype, "Yt", {
	        /** Returns whether this Precondition is empty. */
	        get: function() {
	            return void 0 === this.updateTime && void 0 === this.exists;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /**
	     * Returns true if the preconditions is valid for the given document
	     * (or null if no document is available).
	     */
	    t.prototype.Xt = function(t) {
	        return void 0 !== this.updateTime ? t instanceof xt && t.version.isEqual(this.updateTime) : void 0 !== this.exists ? this.exists === t instanceof xt : (Wn(this.Yt, "Precondition should be empty"), 
	        !0);
	    }, t.prototype.isEqual = function(t) {
	        return !(n = this.updateTime, i = t.updateTime, (null != n ? !i || !n.isEqual(i) : n !== i) || this.exists !== t.exists);
	        /** Helper to compare nullable (or undefined-able) objects using isEqual(). */
	        var n, i;
	        /** Helper to compare arrays using isEqual(). */    }, t.NONE = new t, t;
	}(), Ct = /** @class */ function() {
	    function t() {}
	    return t.prototype.$t = function(t) {
	        null != t && Wn(t.key.isEqual(this.key), "Can only apply a mutation to a document with the same key");
	    }, 
	    /**
	     * Returns the version from the given document for use as the result of a
	     * mutation. Mutations are defined to return the version of the base document
	     * only if it is an existing document. Deleted and unknown documents have a
	     * post-mutation version of SnapshotVersion.MIN.
	     */
	    t.Zt = function(t) {
	        return t instanceof xt ? t.version : k.MIN;
	    }, t;
	}(), Pt = /** @class */ function(t) {
	    function i(n, i, e) {
	        var r = t.call(this) || this;
	        return r.key = n, r.value = i, r.tn = e, r.type = 0 /* Set */ , r;
	    }
	    return tslib.__extends(i, t), i.prototype.Bt = function(t, n) {
	        this.$t(t), Wn(null == n.transformResults, "Transform results received by SetMutation.");
	        // Unlike applyToLocalView, if we're applying a mutation to a remote
	        // document the server has accepted the mutation so the precondition must
	        // have held.
	        var i = n.version;
	        return new xt(this.key, i, this.value, {
	            hasCommittedMutations: !0
	        });
	    }, i.prototype.qt = function(t, n, i) {
	        if (this.$t(t), !this.tn.Xt(t)) return t;
	        var e = Ct.Zt(t);
	        return new xt(this.key, e, this.value, {
	            nn: !0
	        });
	    }, i.prototype.in = function(t) {
	        return null;
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && this.key.isEqual(t.key) && this.value.isEqual(t.value) && this.tn.isEqual(t.tn);
	    }, i;
	}(Ct), Vt = /** @class */ function(t) {
	    function i(n, i, e, r) {
	        var u = t.call(this) || this;
	        return u.key = n, u.data = i, u.en = e, u.tn = r, u.type = 1 /* Patch */ , u;
	    }
	    return tslib.__extends(i, t), i.prototype.Bt = function(t, n) {
	        if (this.$t(t), Wn(null == n.transformResults, "Transform results received by PatchMutation."), 
	        !this.tn.Xt(t)) 
	        // Since the mutation was not rejected, we know that the  precondition
	        // matched on the backend. We therefore must not have the expected version
	        // of the document in our cache and return an UnknownDocument with the
	        // known updateTime.
	        return new Mt(this.key, n.version);
	        var i = this.rn(t);
	        return new xt(this.key, n.version, i, {
	            hasCommittedMutations: !0
	        });
	    }, i.prototype.qt = function(t, n, i) {
	        if (this.$t(t), !this.tn.Xt(t)) return t;
	        var e = Ct.Zt(t), r = this.rn(t);
	        return new xt(this.key, e, r, {
	            nn: !0
	        });
	    }, i.prototype.in = function(t) {
	        return null;
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && this.key.isEqual(t.key) && this.en.isEqual(t.en) && this.tn.isEqual(t.tn);
	    }, 
	    /**
	     * Patches the data of document if available or creates a new document. Note
	     * that this does not check whether or not the precondition of this patch
	     * holds.
	     */
	    i.prototype.rn = function(t) {
	        var n;
	        return n = t instanceof xt ? t.data() : Ft.EMPTY, this.un(n);
	    }, i.prototype.un = function(t) {
	        var n = this, i = t.sn();
	        return this.en.fields.forEach((function(t) {
	            if (!t.M()) {
	                var e = n.data.field(t);
	                null !== e ? i.set(t, e) : i.delete(t);
	            }
	        })), i.on();
	    }, i;
	}(Ct), kt = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this) || this;
	        return e.key = n, e.fieldTransforms = i, e.type = 2 /* Transform */ , 
	        // NOTE: We set a precondition of exists: true as a safety-check, since we
	        // always combine TransformMutations with a SetMutation or PatchMutation which
	        // (if successful) should end up with an existing document.
	        e.tn = At.exists(!0), e;
	    }
	    return tslib.__extends(i, t), i.prototype.Bt = function(t, n) {
	        if (this.$t(t), Wn(null != n.transformResults, "Transform results missing for TransformMutation."), 
	        !this.tn.Xt(t)) 
	        // Since the mutation was not rejected, we know that the  precondition
	        // matched on the backend. We therefore must not have the expected version
	        // of the document in our cache and return an UnknownDocument with the
	        // known updateTime.
	        return new Mt(this.key, n.version);
	        var i = this.hn(t), e = this.cn(t, n.transformResults), r = n.version, u = this.an(i.data(), e);
	        return new xt(this.key, r, u, {
	            hasCommittedMutations: !0
	        });
	    }, i.prototype.qt = function(t, n, i) {
	        if (this.$t(t), !this.tn.Xt(t)) return t;
	        var e = this.hn(t), r = this.fn(i, t, n), u = this.an(e.data(), r);
	        return new xt(this.key, e.version, u, {
	            nn: !0
	        });
	    }, i.prototype.in = function(t) {
	        for (var n = null, i = 0, e = this.fieldTransforms; i < e.length; i++) {
	            var r = e[i], u = t instanceof xt ? t.field(r.field) : void 0, s = r.transform.Qt(u || null);
	            null != s && (n = null == n ? Ft.ln().set(r.field, s) : n.set(r.field, s));
	        }
	        return n ? n.on() : null;
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && this.key.isEqual(t.key) && Jn(this.fieldTransforms, t.fieldTransforms, (function(t, n) {
	            return t.isEqual(n);
	        })) && this.tn.isEqual(t.tn);
	    }, 
	    /**
	     * Asserts that the given MaybeDocument is actually a Document and verifies
	     * that it matches the key for this mutation. Since we only support
	     * transformations with precondition exists this method is guaranteed to be
	     * safe.
	     */
	    i.prototype.hn = function(t) {
	        return Wn(t instanceof xt, "Unknown MaybeDocument type " + t), Wn(t.key.isEqual(this.key), "Can only transform a document with the same key"), 
	        t;
	    }, 
	    /**
	     * Creates a list of "transform results" (a transform result is a field value
	     * representing the result of applying a transform) for use after a
	     * TransformMutation has been acknowledged by the server.
	     *
	     * @param baseDoc The document prior to applying this mutation batch.
	     * @param serverTransformResults The transform results received by the server.
	     * @return The transform results list.
	     */
	    i.prototype.cn = function(t, n) {
	        var i = [];
	        Wn(this.fieldTransforms.length === n.length, "server transform result count (" + n.length + ") should match field transform count (" + this.fieldTransforms.length + ")");
	        for (var e = 0; e < n.length; e++) {
	            var r = this.fieldTransforms[e], u = r.transform, s = null;
	            t instanceof xt && (s = t.field(r.field)), i.push(u.Bt(s, n[e]));
	        }
	        return i;
	    }, 
	    /**
	     * Creates a list of "transform results" (a transform result is a field value
	     * representing the result of applying a transform) for use when applying a
	     * TransformMutation locally.
	     *
	     * @param localWriteTime The local time of the transform mutation (used to
	     *     generate ServerTimestampValues).
	     * @param maybeDoc The current state of the document after applying all
	     *     previous mutations.
	     * @param baseDoc The document prior to applying this mutation batch.
	     * @return The transform results list.
	     */
	    i.prototype.fn = function(t, n, i) {
	        for (var e = [], r = 0, u = this.fieldTransforms; r < u.length; r++) {
	            var s = u[r], o = s.transform, h = null;
	            n instanceof xt && (h = n.field(s.field)), null === h && i instanceof xt && (
	            // If the current document does not contain a value for the mutated
	            // field, use the value that existed before applying this mutation
	            // batch. This solves an edge case where a PatchMutation clears the
	            // values in a nested map before the TransformMutation is applied.
	            h = i.field(s.field)), e.push(o.qt(h, t));
	        }
	        return e;
	    }, i.prototype.an = function(t, n) {
	        Wn(n.length === this.fieldTransforms.length, "TransformResults length mismatch.");
	        for (var i = t.sn(), e = 0; e < this.fieldTransforms.length; e++) {
	            var r = this.fieldTransforms[e].field;
	            i.set(r, n[e]);
	        }
	        return i.on();
	    }, i;
	}(Ct), Nt = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this) || this;
	        return e.key = n, e.tn = i, e.type = 3 /* Delete */ , e;
	    }
	    return tslib.__extends(i, t), i.prototype.Bt = function(t, n) {
	        // Unlike applyToLocalView, if we're applying a mutation to a remote
	        // document the server has accepted the mutation so the precondition must
	        // have held.
	        return this.$t(t), Wn(null == n.transformResults, "Transform results received by DeleteMutation."), 
	        new Lt(this.key, n.version, {
	            hasCommittedMutations: !0
	        });
	    }, i.prototype.qt = function(t, n, i) {
	        return this.$t(t), this.tn.Xt(t) ? (t && Wn(t.key.isEqual(this.key), "Can only apply mutation to document with same key"), 
	        new Lt(this.key, k.V())) : t;
	    }, i.prototype.in = function(t) {
	        return null;
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && this.key.isEqual(t.key) && this.tn.isEqual(t.tn);
	    }, i;
	}(Ct), Ot = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this) || this;
	        return e.key = n, e.tn = i, e.type = 4 /* Verify */ , e;
	    }
	    return tslib.__extends(i, t), i.prototype.Bt = function(t, n) {
	        Gn("VerifyMutation should only be used in Transactions.");
	    }, i.prototype.qt = function(t, n, i) {
	        Gn("VerifyMutation should only be used in Transactions.");
	    }, i.prototype.in = function(t) {
	        Gn("VerifyMutation should only be used in Transactions.");
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && this.key.isEqual(t.key) && this.tn.isEqual(t.tn);
	    }, i;
	}(Ct), Ft = /** @class */ function() {
	    function t(t) {
	        this.proto = t, Wn(!X(t), "ServerTimestamps should be converted to ServerTimestampValue");
	    }
	    /** Returns a new Builder instance that is based on an empty object. */    return t.ln = function() {
	        return t.EMPTY.sn();
	    }, 
	    /**
	     * Returns the value at the given path or null.
	     *
	     * @param path the path to search
	     * @return The value at the path or if there it doesn't exist.
	     */
	    t.prototype.field = function(t) {
	        if (t.M()) return this.proto;
	        for (var n = this.proto, i = 0; i < t.length - 1; ++i) {
	            if (!n.mapValue.fields) return null;
	            if (!pt(n = n.mapValue.fields[t.get(i)])) return null;
	        }
	        return (n = (n.mapValue.fields || {})[t.B()]) || null;
	    }, 
	    /**
	     * Returns a FieldMask built from all FieldPaths starting from this
	     * ObjectValue, including paths from nested objects.
	     */
	    t.prototype.en = function() {
	        return this.dn(this.proto.mapValue);
	    }, t.prototype.dn = function(t) {
	        var n = this, i = new B(U.F);
	        return W(t.fields || {}, (function(t, e) {
	            var r = new U([ t ]);
	            if (10 /* ObjectValue */ === tt(e)) {
	                var u = n.dn(e.mapValue).fields;
	                u.M() ? 
	                // Preserve the empty map by adding it to the FieldMask.
	                i = i.add(r) : 
	                // For nested and non-empty ObjectValues, add the FieldPath of the
	                // leaf nodes.
	                u.forEach((function(t) {
	                    i = i.add(r.child(t));
	                }));
	            } else 
	            // For nested and non-empty ObjectValues, add the FieldPath of the leaf
	            // nodes.
	            i = i.add(r);
	        })), Dt.Kt(i);
	    }, t.prototype.isEqual = function(t) {
	        return nt(this.proto, t.proto);
	    }, 
	    /** Creates a ObjectValueBuilder instance that is based on the current value. */
	    t.prototype.sn = function() {
	        return new Ut(this);
	    }, t.EMPTY = new t({
	        mapValue: {}
	    }), t;
	}(), Ut = /** @class */ function() {
	    /**
	     * @param baseObject The object to mutate.
	     */
	    function t(t) {
	        this.vn = t, 
	        /** A map that contains the accumulated changes in this builder. */
	        this.wn = new Map;
	    }
	    /**
	     * Sets the field to the provided value.
	     *
	     * @param path The field path to set.
	     * @param value The value to set.
	     * @return The current Builder instance.
	     */    return t.prototype.set = function(t, n) {
	        return Wn(!t.M(), "Cannot set field for empty path on ObjectValue"), this.mn(t, n), 
	        this;
	    }, 
	    /**
	     * Removes the field at the specified path. If there is no field at the
	     * specified path, nothing is changed.
	     *
	     * @param path The field path to remove.
	     * @return The current Builder instance.
	     */
	    t.prototype.delete = function(t) {
	        return Wn(!t.M(), "Cannot delete field for empty path on ObjectValue"), this.mn(t, null), 
	        this;
	    }, 
	    /**
	     * Adds `value` to the overlay map at `path`. Creates nested map entries if
	     * needed.
	     */
	    t.prototype.mn = function(t, n) {
	        for (var i = this.wn, e = 0; e < t.length - 1; ++e) {
	            var r = t.get(e), u = i.get(r);
	            u instanceof Map ? 
	            // Re-use a previously created map
	            i = u : u && 10 /* ObjectValue */ === tt(u) ? (
	            // Convert the existing Protobuf MapValue into a map
	            u = new Map(Object.entries(u.mapValue.fields || {})), i.set(r, u), i = u) : (
	            // Create an empty map to represent the current nesting level
	            u = new Map, i.set(r, u), i = u);
	        }
	        i.set(t.B(), n);
	    }, 
	    /** Returns an ObjectValue with all mutations applied. */
	    t.prototype.on = function() {
	        var t = this.pn(U.Y, this.wn);
	        return null != t ? new Ft(t) : this.vn;
	    }, 
	    /**
	     * Applies any overlays from `currentOverlays` that exist at `currentPath`
	     * and returns the merged data at `currentPath` (or null if there were no
	     * changes).
	     *
	     * @param currentPath The path at the current nesting level. Can be set to
	     * FieldValue.EMPTY_PATH to represent the root.
	     * @param currentOverlays The overlays at the current nesting level in the
	     * same format as `overlayMap`.
	     * @return The merged data at `currentPath` or null if no modifications
	     * were applied.
	     */
	    t.prototype.pn = function(t, n) {
	        var e = this, r = !1, u = this.vn.field(t), s = pt(u) ? // If there is already data at the current path, base our
	        tslib.__assign({}, u.mapValue.fields) : {};
	        return n.forEach((function(n, i) {
	            if (n instanceof Map) {
	                var u = e.pn(t.child(i), n);
	                null != u && (s[i] = u, r = !0);
	            } else null !== n ? (s[i] = n, r = !0) : s.hasOwnProperty(i) && (delete s[i], r = !0);
	        })), r ? {
	            mapValue: {
	                fields: s
	            }
	        } : null;
	    }, t;
	}(), jt = /** @class */ function() {
	    function t(t, n) {
	        this.key = t, this.version = n;
	    }
	    return t.bn = function(t, n) {
	        return j.F(t.key, n.key);
	    }, t;
	}(), xt = /** @class */ function(t) {
	    function i(n, i, e, r) {
	        var u = t.call(this, n, i) || this;
	        return u.gn = e, u.nn = !!r.nn, u.hasCommittedMutations = !!r.hasCommittedMutations, 
	        u;
	    }
	    return tslib.__extends(i, t), i.prototype.field = function(t) {
	        return this.gn.field(t);
	    }, i.prototype.data = function() {
	        return this.gn;
	    }, i.prototype.yn = function() {
	        return this.gn.proto;
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.nn === t.nn && this.hasCommittedMutations === t.hasCommittedMutations && this.gn.isEqual(t.gn);
	    }, i.prototype.toString = function() {
	        return "Document(" + this.key + ", " + this.version + ", " + this.gn.toString() + ", {hasLocalMutations: " + this.nn + "}), {hasCommittedMutations: " + this.hasCommittedMutations + "})";
	    }, Object.defineProperty(i.prototype, "hasPendingWrites", {
	        get: function() {
	            return this.nn || this.hasCommittedMutations;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), i._n = function(t, n, i) {
	        var e = n.field(t), r = i.field(t);
	        return null !== e && null !== r ? et(e, r) : Gn("Trying to compare documents on fields that don't exist");
	    }, i;
	}(jt), Lt = /** @class */ function(t) {
	    function i(n, i, e) {
	        var r = t.call(this, n, i) || this;
	        return r.hasCommittedMutations = !(!e || !e.hasCommittedMutations), r;
	    }
	    return tslib.__extends(i, t), i.prototype.toString = function() {
	        return "NoDocument(" + this.key + ", " + this.version + ")";
	    }, Object.defineProperty(i.prototype, "hasPendingWrites", {
	        get: function() {
	            return this.hasCommittedMutations;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), i.prototype.isEqual = function(t) {
	        return t instanceof i && t.hasCommittedMutations === this.hasCommittedMutations && t.version.isEqual(this.version) && t.key.isEqual(this.key);
	    }, i;
	}(jt), Mt = /** @class */ function(t) {
	    function i() {
	        return null !== t && t.apply(this, arguments) || this;
	    }
	    return tslib.__extends(i, t), i.prototype.toString = function() {
	        return "UnknownDocument(" + this.key + ", " + this.version + ")";
	    }, Object.defineProperty(i.prototype, "hasPendingWrites", {
	        get: function() {
	            return !0;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), i.prototype.isEqual = function(t) {
	        return t instanceof i && t.version.isEqual(this.version) && t.key.isEqual(this.key);
	    }, i;
	}(jt), qt = /** @class */ function() {
	    /**
	     * Initializes a Target with a path and optional additional query constraints.
	     * Path must currently be empty if this is a collection group query.
	     *
	     * NOTE: you should always construct `Target` from `Query.toTarget` instead of
	     * using this constructor, because `Query` provides an implicit `orderBy`
	     * property.
	     */
	    function t(t, n, i, e, r, u, s) {
	        void 0 === n && (n = null), void 0 === i && (i = []), void 0 === e && (e = []), 
	        void 0 === r && (r = null), void 0 === u && (u = null), void 0 === s && (s = null), 
	        this.path = t, this.collectionGroup = n, this.orderBy = i, this.filters = e, this.limit = r, 
	        this.startAt = u, this.endAt = s, this.In = null;
	    }
	    return t.prototype.canonicalId = function() {
	        if (null === this.In) {
	            var t = this.path.J();
	            null !== this.collectionGroup && (t += "|cg:" + this.collectionGroup), t += "|f:", 
	            t += this.filters.map((function(t) {
	                return t.canonicalId();
	            })).join(","), t += "|ob:", t += this.orderBy.map((function(t) {
	                return t.canonicalId();
	            })).join(","), J(this.limit) || (t += "|l:", t += this.limit), this.startAt && (t += "|lb:", 
	            t += this.startAt.canonicalId()), this.endAt && (t += "|ub:", t += this.endAt.canonicalId()), 
	            this.In = t;
	        }
	        return this.In;
	    }, t.prototype.toString = function() {
	        var t = this.path.J();
	        return null !== this.collectionGroup && (t += " collectionGroup=" + this.collectionGroup), 
	        this.filters.length > 0 && (t += ", filters: [" + this.filters.join(", ") + "]"), 
	        J(this.limit) || (t += ", limit: " + this.limit), this.orderBy.length > 0 && (t += ", orderBy: [" + this.orderBy.join(", ") + "]"), 
	        this.startAt && (t += ", startAt: " + this.startAt.canonicalId()), this.endAt && (t += ", endAt: " + this.endAt.canonicalId()), 
	        "Target(" + t + ")";
	    }, t.prototype.isEqual = function(t) {
	        if (this.limit !== t.limit) return !1;
	        if (this.orderBy.length !== t.orderBy.length) return !1;
	        for (var n = 0; n < this.orderBy.length; n++) if (!this.orderBy[n].isEqual(t.orderBy[n])) return !1;
	        if (this.filters.length !== t.filters.length) return !1;
	        for (n = 0; n < this.filters.length; n++) if (!this.filters[n].isEqual(t.filters[n])) return !1;
	        return this.collectionGroup === t.collectionGroup && (!!this.path.isEqual(t.path) && (!!(null !== this.startAt ? this.startAt.isEqual(t.startAt) : null === t.startAt) && (null !== this.endAt ? this.endAt.isEqual(t.endAt) : null === t.endAt)));
	    }, t.prototype.Tn = function() {
	        return j.nt(this.path) && null === this.collectionGroup && 0 === this.filters.length;
	    }, t;
	}(), Bt = /** @class */ function() {
	    /**
	     * Initializes a Query with a path and optional additional query constraints.
	     * Path must currently be empty if this is a collection group query.
	     */
	    function t(t, n, i, e, r, u, s, o) {
	        void 0 === n && (n = null), void 0 === i && (i = []), void 0 === e && (e = []), 
	        void 0 === r && (r = null), void 0 === u && (u = "F" /* First */), void 0 === s && (s = null), 
	        void 0 === o && (o = null), this.path = t, this.collectionGroup = n, this.En = i, 
	        this.filters = e, this.limit = r, this.Dn = u, this.startAt = s, this.endAt = o, 
	        this.Rn = null, 
	        // The corresponding `Target` of this `Query` instance.
	        this.Sn = null, this.startAt && this.An(this.startAt), this.endAt && this.An(this.endAt);
	    }
	    return t.Cn = function(n) {
	        return new t(n);
	    }, Object.defineProperty(t.prototype, "orderBy", {
	        get: function() {
	            if (null === this.Rn) {
	                var t = this.Pn(), n = this.Vn();
	                if (null !== t && null === n) 
	                // In order to implicitly add key ordering, we must also add the
	                // inequality filter field for it to be a valid query.
	                // Note that the default inequality field and key ordering is ascending.
	                t.$() ? this.Rn = [ tn ] : this.Rn = [ new Zt(t), tn ]; else {
	                    Wn(null === t || null !== n && t.isEqual(n), "First orderBy should match inequality field."), 
	                    this.Rn = [];
	                    for (var i = !1, e = 0, r = this.En; e < r.length; e++) {
	                        var u = r[e];
	                        this.Rn.push(u), u.field.$() && (i = !0);
	                    }
	                    if (!i) {
	                        // The order of the implicit key ordering always matches the last
	                        // explicit order by
	                        var s = this.En.length > 0 ? this.En[this.En.length - 1].dir : Xt.ASCENDING;
	                        this.Rn.push(s === Xt.ASCENDING ? tn : nn);
	                    }
	                }
	            }
	            return this.Rn;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.kn = function(n) {
	        Wn(null == this.Pn() || !(n instanceof Wt) || !n.Nn() || n.field.isEqual(this.Pn()), "Query must only have one inequality field."), 
	        Wn(!this.Tn(), "No filtering allowed for document query");
	        var i = this.filters.concat([ n ]);
	        return new t(this.path, this.collectionGroup, this.En.slice(), i, this.limit, this.Dn, this.startAt, this.endAt);
	    }, t.prototype.On = function(n) {
	        Wn(!this.startAt && !this.endAt, "Bounds must be set after orderBy");
	        // TODO(dimond): validate that orderBy does not list the same key twice.
	        var i = this.En.concat([ n ]);
	        return new t(this.path, this.collectionGroup, i, this.filters.slice(), this.limit, this.Dn, this.startAt, this.endAt);
	    }, t.prototype.Fn = function(n) {
	        return new t(this.path, this.collectionGroup, this.En.slice(), this.filters.slice(), n, "F" /* First */ , this.startAt, this.endAt);
	    }, t.prototype.Un = function(n) {
	        return new t(this.path, this.collectionGroup, this.En.slice(), this.filters.slice(), n, "L" /* Last */ , this.startAt, this.endAt);
	    }, t.prototype.jn = function(n) {
	        return new t(this.path, this.collectionGroup, this.En.slice(), this.filters.slice(), this.limit, this.Dn, n, this.endAt);
	    }, t.prototype.xn = function(n) {
	        return new t(this.path, this.collectionGroup, this.En.slice(), this.filters.slice(), this.limit, this.Dn, this.startAt, n);
	    }, 
	    /**
	     * Helper to convert a collection group query into a collection query at a
	     * specific path. This is used when executing collection group queries, since
	     * we have to split the query into a set of collection queries at multiple
	     * paths.
	     */
	    t.prototype.Ln = function(n) {
	        return new t(n, 
	        /*collectionGroup=*/ null, this.En.slice(), this.filters.slice(), this.limit, this.Dn, this.startAt, this.endAt);
	    }, 
	    /**
	     * Returns true if this query does not specify any query constraints that
	     * could remove results.
	     */
	    t.prototype.Mn = function() {
	        return 0 === this.filters.length && null === this.limit && null == this.startAt && null == this.endAt && (0 === this.En.length || 1 === this.En.length && this.En[0].field.$());
	    }, 
	    // TODO(b/29183165): This is used to get a unique string from a query to, for
	    // example, use as a dictionary key, but the implementation is subject to
	    // collisions. Make it collision-free.
	    t.prototype.canonicalId = function() {
	        return this.qn().canonicalId() + "|lt:" + this.Dn;
	    }, t.prototype.toString = function() {
	        return "Query(target=" + this.qn().toString() + "; limitType=" + this.Dn + ")";
	    }, t.prototype.isEqual = function(t) {
	        return this.qn().isEqual(t.qn()) && this.Dn === t.Dn;
	    }, t.prototype.Bn = function(t, n) {
	        for (var i = !1, e = 0, r = this.orderBy; e < r.length; e++) {
	            var u = r[e], s = u.compare(t, n);
	            if (0 !== s) return s;
	            i = i || u.field.$();
	        }
	        // Assert that we actually compared by key
	                return Wn(i, "orderBy used that doesn't compare on key field"), 0;
	    }, t.prototype.matches = function(t) {
	        return this.Qn(t) && this.Gn(t) && this.Wn(t) && this.zn(t);
	    }, t.prototype.Kn = function() {
	        return !J(this.limit) && "F" /* First */ === this.Dn;
	    }, t.prototype.Jn = function() {
	        return !J(this.limit) && "L" /* Last */ === this.Dn;
	    }, t.prototype.Vn = function() {
	        return this.En.length > 0 ? this.En[0].field : null;
	    }, t.prototype.Pn = function() {
	        for (var t = 0, n = this.filters; t < n.length; t++) {
	            var i = n[t];
	            if (i instanceof Wt && i.Nn()) return i.field;
	        }
	        return null;
	    }, 
	    // Checks if any of the provided Operators are included in the query and
	    // returns the first one that is, or null if none are.
	    t.prototype.Hn = function(t) {
	        for (var n = 0, i = this.filters; n < i.length; n++) {
	            var e = i[n];
	            if (e instanceof Wt && t.indexOf(e.op) >= 0) return e.op;
	        }
	        return null;
	    }, t.prototype.Tn = function() {
	        return this.qn().Tn();
	    }, t.prototype.Yn = function() {
	        return null !== this.collectionGroup;
	    }, 
	    /**
	     * Converts this `Query` instance to it's corresponding `Target`
	     * representation.
	     */
	    t.prototype.qn = function() {
	        if (!this.Sn) if ("F" /* First */ === this.Dn) this.Sn = new qt(this.path, this.collectionGroup, this.orderBy, this.filters, this.limit, this.startAt, this.endAt); else {
	            for (
	            // Flip the orderBy directions since we want the last results
	            var t = [], n = 0, i = this.orderBy; n < i.length; n++) {
	                var e = i[n], r = e.dir === Xt.DESCENDING ? Xt.ASCENDING : Xt.DESCENDING;
	                t.push(new Zt(e.field, r));
	            }
	            // We need to swap the cursors to match the now-flipped query ordering.
	                        var u = this.endAt ? new $t(this.endAt.position, !this.endAt.before) : null, s = this.startAt ? new $t(this.startAt.position, !this.startAt.before) : null;
	            // Now return as a LimitType.First query.
	            this.Sn = new qt(this.path, this.collectionGroup, t, this.filters, this.limit, u, s);
	        }
	        return this.Sn;
	    }, t.prototype.Qn = function(t) {
	        var n = t.key.path;
	        return null !== this.collectionGroup ? t.key.et(this.collectionGroup) && this.path.G(n) : j.nt(this.path) ? this.path.isEqual(n) : this.path.W(n);
	    }, 
	    /**
	     * A document must have a value for every ordering clause in order to show up
	     * in the results.
	     */
	    t.prototype.Gn = function(t) {
	        for (var n = 0, i = this.En; n < i.length; n++) {
	            var e = i[n];
	            // order by key always matches
	                        if (!e.field.$() && null === t.field(e.field)) return !1;
	        }
	        return !0;
	    }, t.prototype.Wn = function(t) {
	        for (var n = 0, i = this.filters; n < i.length; n++) {
	            if (!i[n].matches(t)) return !1;
	        }
	        return !0;
	    }, 
	    /**
	     * Makes sure a document is within the bounds, if provided.
	     */
	    t.prototype.zn = function(t) {
	        return !(this.startAt && !this.startAt.Xn(this.orderBy, t)) && (!this.endAt || !this.endAt.Xn(this.orderBy, t));
	    }, t.prototype.An = function(t) {
	        Wn(t.position.length <= this.orderBy.length, "Bound is longer than orderBy");
	    }, t;
	}(), Qt = function() {}, Gt = /** @class */ function() {
	    function t(t) {
	        this.name = t;
	    }
	    return t.H = function(n) {
	        switch (n) {
	          case "<":
	            return t.LESS_THAN;
	
	          case "<=":
	            return t.LESS_THAN_OR_EQUAL;
	
	          case "==":
	            return t.EQUAL;
	
	          case ">=":
	            return t.GREATER_THAN_OR_EQUAL;
	
	          case ">":
	            return t.GREATER_THAN;
	
	          case "array-contains":
	            return t.ARRAY_CONTAINS;
	
	          case "in":
	            return t.IN;
	
	          case "array-contains-any":
	            return t.ARRAY_CONTAINS_ANY;
	
	          default:
	            return Gn("Unknown FieldFilter operator: " + n);
	        }
	    }, t.prototype.toString = function() {
	        return this.name;
	    }, t.prototype.isEqual = function(t) {
	        return this.name === t.name;
	    }, t.LESS_THAN = new t("<"), t.LESS_THAN_OR_EQUAL = new t("<="), t.EQUAL = new t("=="), 
	    t.GREATER_THAN = new t(">"), t.GREATER_THAN_OR_EQUAL = new t(">="), t.ARRAY_CONTAINS = new t("array-contains"), 
	    t.IN = new t("in"), t.ARRAY_CONTAINS_ANY = new t("array-contains-any"), t;
	}(), Wt = /** @class */ function(t) {
	    function i(n, i, e) {
	        var r = t.call(this) || this;
	        return r.field = n, r.op = i, r.value = e, r;
	    }
	    /**
	     * Creates a filter based on the provided arguments.
	     */    return tslib.__extends(i, t), i.create = function(t, n, e) {
	        if (t.$()) return n === Gt.IN ? (Wn(dt(e), "Comparing on key with IN, but filter value not an ArrayValue"), 
	        Wn((e.arrayValue.values || []).every((function(t) {
	            return vt(t);
	        })), "Comparing on key with IN, but an array value was not a RefValue"), new Kt(t, e)) : (Wn(vt(e), "Comparing on key, but filter value not a RefValue"), 
	        Wn(n !== Gt.ARRAY_CONTAINS && n !== Gt.ARRAY_CONTAINS_ANY, "'" + n.toString() + "' queries don't make sense on document keys."), 
	        new zt(t, n, e));
	        if (wt(e)) {
	            if (n !== Gt.EQUAL) throw new E(T.INVALID_ARGUMENT, "Invalid query. Null supports only equality comparisons.");
	            return new i(t, n, e);
	        }
	        if (mt(e)) {
	            if (n !== Gt.EQUAL) throw new E(T.INVALID_ARGUMENT, "Invalid query. NaN supports only equality comparisons.");
	            return new i(t, n, e);
	        }
	        return n === Gt.ARRAY_CONTAINS ? new Jt(t, e) : n === Gt.IN ? (Wn(dt(e), "IN filter has invalid value: " + e.toString()), 
	        new Ht(t, e)) : n === Gt.ARRAY_CONTAINS_ANY ? (Wn(dt(e), "ARRAY_CONTAINS_ANY filter has invalid value: " + e.toString()), 
	        new Yt(t, e)) : new i(t, n, e);
	    }, i.prototype.matches = function(t) {
	        var n = t.field(this.field);
	        // Only compare types with matching backend order (such as double and int).
	                return null !== n && tt(this.value) === tt(n) && this.$n(et(n, this.value));
	    }, i.prototype.$n = function(t) {
	        switch (this.op) {
	          case Gt.LESS_THAN:
	            return t < 0;
	
	          case Gt.LESS_THAN_OR_EQUAL:
	            return t <= 0;
	
	          case Gt.EQUAL:
	            return 0 === t;
	
	          case Gt.GREATER_THAN:
	            return t > 0;
	
	          case Gt.GREATER_THAN_OR_EQUAL:
	            return t >= 0;
	
	          default:
	            return Gn("Unknown FieldFilter operator: " + this.op);
	        }
	    }, i.prototype.Nn = function() {
	        return [ Gt.LESS_THAN, Gt.LESS_THAN_OR_EQUAL, Gt.GREATER_THAN, Gt.GREATER_THAN_OR_EQUAL ].indexOf(this.op) >= 0;
	    }, i.prototype.canonicalId = function() {
	        // TODO(b/29183165): Technically, this won't be unique if two values have
	        // the same description, such as the int 3 and the string "3". So we should
	        // add the types in here somehow, too.
	        return this.field.J() + this.op.toString() + ut(this.value);
	    }, i.prototype.isEqual = function(t) {
	        return t instanceof i && (this.op.isEqual(t.op) && this.field.isEqual(t.field) && nt(this.value, t.value));
	    }, i.prototype.toString = function() {
	        return this.field.J() + " " + this.op + " " + ut(this.value);
	    }, i;
	}(Qt), zt = /** @class */ function(t) {
	    function i(n, i, e) {
	        var r = t.call(this, n, i, e) || this;
	        return Wn(vt(e), "KeyFieldFilter expects a ReferenceValue"), r.key = j.it(e.referenceValue), 
	        r;
	    }
	    return tslib.__extends(i, t), i.prototype.matches = function(t) {
	        var n = j.F(t.key, this.key);
	        return this.$n(n);
	    }, i;
	}(Wt), Kt = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this, n, Gt.IN, i) || this;
	        return Wn(dt(i), "KeyFieldInFilter expects an ArrayValue"), e.keys = (i.arrayValue.values || []).map((function(t) {
	            return Wn(vt(t), "Comparing on key with IN, but an array value was not a ReferenceValue"), 
	            j.it(t.referenceValue);
	        })), e;
	    }
	    return tslib.__extends(i, t), i.prototype.matches = function(t) {
	        return this.keys.some((function(n) {
	            return n.isEqual(t.key);
	        }));
	    }, i;
	}(Wt), Jt = /** @class */ function(t) {
	    function i(n, i) {
	        return t.call(this, n, Gt.ARRAY_CONTAINS, i) || this;
	    }
	    return tslib.__extends(i, t), i.prototype.matches = function(t) {
	        var n = t.field(this.field);
	        return dt(n) && it(n.arrayValue, this.value);
	    }, i;
	}(Wt), Ht = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this, n, Gt.IN, i) || this;
	        return Wn(dt(i), "InFilter expects an ArrayValue"), e;
	    }
	    return tslib.__extends(i, t), i.prototype.matches = function(t) {
	        var n = t.field(this.field);
	        return null !== n && it(this.value.arrayValue, n);
	    }, i;
	}(Wt), Yt = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this, n, Gt.ARRAY_CONTAINS_ANY, i) || this;
	        return Wn(dt(i), "ArrayContainsAnyFilter expects an ArrayValue"), e;
	    }
	    return tslib.__extends(i, t), i.prototype.matches = function(t) {
	        var n = this, i = t.field(this.field);
	        return !(!dt(i) || !i.arrayValue.values) && i.arrayValue.values.some((function(t) {
	            return it(n.value.arrayValue, t);
	        }));
	    }, i;
	}(Wt), Xt = /** @class */ function() {
	    function t(t) {
	        this.name = t;
	    }
	    return t.prototype.toString = function() {
	        return this.name;
	    }, t.ASCENDING = new t("asc"), t.DESCENDING = new t("desc"), t;
	}(), $t = /** @class */ function() {
	    function t(t, n) {
	        this.position = t, this.before = n;
	    }
	    return t.prototype.canonicalId = function() {
	        // TODO(b/29183165): Make this collision robust.
	        return (this.before ? "b" : "a") + ":" + this.position.map((function(t) {
	            return ut(t);
	        })).join(",");
	    }, 
	    /**
	     * Returns true if a document sorts before a bound using the provided sort
	     * order.
	     */
	    t.prototype.Xn = function(t, n) {
	        Wn(this.position.length <= t.length, "Bound has more components than query's orderBy");
	        for (var i = 0, e = 0; e < this.position.length; e++) {
	            var r = t[e], u = this.position[e];
	            if (r.field.$()) Wn(vt(u), "Bound has a non-key value where the key path is being used."), 
	            i = j.F(j.it(u.referenceValue), n.key); else {
	                var s = n.field(r.field);
	                Wn(null !== s, "Field should exist since document matched the orderBy already."), 
	                i = et(u, s);
	            }
	            if (r.dir === Xt.DESCENDING && (i *= -1), 0 !== i) break;
	        }
	        return this.before ? i <= 0 : i < 0;
	    }, t.prototype.isEqual = function(t) {
	        if (null === t) return !1;
	        if (this.before !== t.before || this.position.length !== t.position.length) return !1;
	        for (var n = 0; n < this.position.length; n++) {
	            if (!nt(this.position[n], t.position[n])) return !1;
	        }
	        return !0;
	    }, t;
	}(), Zt = /** @class */ function() {
	    function t(t, n) {
	        this.field = t, void 0 === n && (n = Xt.ASCENDING), this.dir = n, this.Zn = t.$();
	    }
	    return t.prototype.compare = function(t, n) {
	        var i = this.Zn ? xt.bn(t, n) : xt._n(this.field, t, n);
	        switch (this.dir) {
	          case Xt.ASCENDING:
	            return i;
	
	          case Xt.DESCENDING:
	            return -1 * i;
	
	          default:
	            return Gn("Unknown direction: " + this.dir);
	        }
	    }, t.prototype.canonicalId = function() {
	        // TODO(b/29183165): Make this collision robust.
	        return this.field.J() + this.dir.toString();
	    }, t.prototype.toString = function() {
	        return this.field.J() + " (" + this.dir + ")";
	    }, t.prototype.isEqual = function(t) {
	        return this.dir === t.dir && this.field.isEqual(t.field);
	    }, t;
	}(), tn = new Zt(U.Z(), Xt.ASCENDING), nn = new Zt(U.Z(), Xt.DESCENDING), en = /** @class */ function() {
	    function t(
	    /** The target being listened to. */
	    t, 
	    /**
	     * The target ID to which the target corresponds; Assigned by the
	     * LocalStore for user listens and by the SyncEngine for limbo watches.
	     */
	    n, 
	    /** The purpose of the target. */
	    i, 
	    /**
	     * The sequence number of the last transaction during which this target data
	     * was modified.
	     */
	    e, 
	    /** The latest snapshot version seen for this target. */
	    r, 
	    /**
	     * The maximum snapshot version at which the associated view
	     * contained no limbo documents.
	     */
	    u, 
	    /**
	     * An opaque, server-assigned token that allows watching a target to be
	     * resumed after disconnecting without retransmitting all the data that
	     * matches the target. The resume token essentially identifies a point in
	     * time from which the server should resume sending results.
	     */
	    s) {
	        void 0 === r && (r = k.MIN), void 0 === u && (u = k.MIN), void 0 === s && (s = K.Mt), 
	        this.target = t, this.targetId = n, this.ti = i, this.sequenceNumber = e, this.ni = r, 
	        this.lastLimboFreeSnapshotVersion = u, this.resumeToken = s;
	    }
	    /** Creates a new target data instance with an updated sequence number. */    return t.prototype.ii = function(n) {
	        return new t(this.target, this.targetId, this.ti, n, this.ni, this.lastLimboFreeSnapshotVersion, this.resumeToken);
	    }, 
	    /**
	     * Creates a new target data instance with an updated resume token and
	     * snapshot version.
	     */
	    t.prototype.ei = function(n, i) {
	        return new t(this.target, this.targetId, this.ti, this.sequenceNumber, i, this.lastLimboFreeSnapshotVersion, n);
	    }, 
	    /**
	     * Creates a new target data instance with an updated last limbo free
	     * snapshot version number.
	     */
	    t.prototype.ri = function(n) {
	        return new t(this.target, this.targetId, this.ti, this.sequenceNumber, this.ni, n, this.resumeToken);
	    }, t.prototype.isEqual = function(t) {
	        return this.targetId === t.targetId && this.ti === t.ti && this.sequenceNumber === t.sequenceNumber && this.ni.isEqual(t.ni) && this.lastLimboFreeSnapshotVersion.isEqual(t.lastLimboFreeSnapshotVersion) && this.resumeToken.isEqual(t.resumeToken) && this.target.isEqual(t.target);
	    }, t;
	}(), rn = /** @class */ function() {
	    // TODO(b/33078163): just use simplest form of existence filter for now
	    function t(t) {
	        this.count = t;
	    }
	    return t.prototype.isEqual = function(t) {
	        return t && t.count === this.count;
	    }, t;
	}();
	
	/** A field path and the TransformOperation to perform upon it. */
	/**
	 * Determines whether an error code represents a permanent error when received
	 * in response to a non-write operation.
	 *
	 * See isPermanentWriteError for classifying write errors.
	 */
	function un(t) {
	    switch (t) {
	      case T.OK:
	        return Gn("Treated status OK as error");
	
	      case T.CANCELLED:
	      case T.UNKNOWN:
	      case T.DEADLINE_EXCEEDED:
	      case T.RESOURCE_EXHAUSTED:
	      case T.INTERNAL:
	      case T.UNAVAILABLE:
	 // Unauthenticated means something went wrong with our token and we need
	        // to retry with new credentials which will happen automatically.
	              case T.UNAUTHENTICATED:
	        return !1;
	
	      case T.INVALID_ARGUMENT:
	      case T.NOT_FOUND:
	      case T.ALREADY_EXISTS:
	      case T.PERMISSION_DENIED:
	      case T.FAILED_PRECONDITION:
	 // Aborted might be retried in some scenarios, but that is dependant on
	        // the context and should handled individually by the calling code.
	        // See https://cloud.google.com/apis/design/errors.
	              case T.ABORTED:
	      case T.OUT_OF_RANGE:
	      case T.UNIMPLEMENTED:
	      case T.DATA_LOSS:
	        return !0;
	
	      default:
	        return Gn("Unknown status code: " + t);
	    }
	}
	
	/**
	 * Determines whether an error code represents a permanent error when received
	 * in response to a write operation.
	 *
	 * Write operations must be handled specially because as of b/119437764, ABORTED
	 * errors on the write stream should be retried too (even though ABORTED errors
	 * are not generally retryable).
	 *
	 * Note that during the initial handshake on the write stream an ABORTED error
	 * signals that we should discard our stream token (i.e. it is permanent). This
	 * means a handshake error should be classified with isPermanentError, above.
	 */
	/**
	 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
	 * are not the same as HTTP status codes.
	 *
	 * @returns The Code equivalent to the given GRPC status code. Fails if there
	 *     is no match.
	 */
	function sn(t) {
	    if (void 0 === t) 
	    // This shouldn't normally happen, but in certain error cases (like trying
	    // to send invalid proto messages) we may get an error with no GRPC code.
	    return Bn("GRPC error has no .code"), T.UNKNOWN;
	    switch (t) {
	      case Tt.OK:
	        return T.OK;
	
	      case Tt.CANCELLED:
	        return T.CANCELLED;
	
	      case Tt.UNKNOWN:
	        return T.UNKNOWN;
	
	      case Tt.DEADLINE_EXCEEDED:
	        return T.DEADLINE_EXCEEDED;
	
	      case Tt.RESOURCE_EXHAUSTED:
	        return T.RESOURCE_EXHAUSTED;
	
	      case Tt.INTERNAL:
	        return T.INTERNAL;
	
	      case Tt.UNAVAILABLE:
	        return T.UNAVAILABLE;
	
	      case Tt.UNAUTHENTICATED:
	        return T.UNAUTHENTICATED;
	
	      case Tt.INVALID_ARGUMENT:
	        return T.INVALID_ARGUMENT;
	
	      case Tt.NOT_FOUND:
	        return T.NOT_FOUND;
	
	      case Tt.ALREADY_EXISTS:
	        return T.ALREADY_EXISTS;
	
	      case Tt.PERMISSION_DENIED:
	        return T.PERMISSION_DENIED;
	
	      case Tt.FAILED_PRECONDITION:
	        return T.FAILED_PRECONDITION;
	
	      case Tt.ABORTED:
	        return T.ABORTED;
	
	      case Tt.OUT_OF_RANGE:
	        return T.OUT_OF_RANGE;
	
	      case Tt.UNIMPLEMENTED:
	        return T.UNIMPLEMENTED;
	
	      case Tt.DATA_LOSS:
	        return T.DATA_LOSS;
	
	      default:
	        return Gn("Unknown status code: " + t);
	    }
	}
	
	/**
	 * Converts an HTTP response's error status to the equivalent error code.
	 *
	 * @param status An HTTP error response status ("FAILED_PRECONDITION",
	 * "UNKNOWN", etc.)
	 * @returns The equivalent Code. Non-matching responses are mapped to
	 *     Code.UNKNOWN.
	 */ (Et = Tt || (Tt = {}))[Et.OK = 0] = "OK", Et[Et.CANCELLED = 1] = "CANCELLED", 
	Et[Et.UNKNOWN = 2] = "UNKNOWN", Et[Et.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", 
	Et[Et.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", Et[Et.NOT_FOUND = 5] = "NOT_FOUND", 
	Et[Et.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", Et[Et.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", 
	Et[Et.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", Et[Et.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", 
	Et[Et.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", Et[Et.ABORTED = 10] = "ABORTED", 
	Et[Et.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", Et[Et.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", 
	Et[Et.INTERNAL = 13] = "INTERNAL", Et[Et.UNAVAILABLE = 14] = "UNAVAILABLE", Et[Et.DATA_LOSS = 15] = "DATA_LOSS";
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var on = new x(j.F);
	
	function hn() {
	    return on;
	}
	
	function cn() {
	    return hn();
	}
	
	var an = new x(j.F);
	
	function fn() {
	    return an;
	}
	
	var ln = new x(j.F);
	
	function dn() {
	    return ln;
	}
	
	var vn = new B(j.F);
	
	function wn() {
	    for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
	    for (var i = vn, e = 0, r = t; e < r.length; e++) {
	        var u = r[e];
	        i = i.add(u);
	    }
	    return i;
	}
	
	var mn = new B(Kn);
	
	function pn() {
	    return mn;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * DocumentSet is an immutable (copy-on-write) collection that holds documents
	 * in order specified by the provided comparator. We always add a document key
	 * comparator on top of what is provided to guarantee document equality based on
	 * the key.
	 */ var bn = /** @class */ function() {
	    /** The default ordering is by key if the comparator is omitted */
	    function t(t) {
	        // We are adding document key comparator to the end as it's the only
	        // guaranteed unique property of a document.
	        this.F = t ? function(n, i) {
	            return t(n, i) || j.F(n.key, i.key);
	        } : function(t, n) {
	            return j.F(t.key, n.key);
	        }, this.ui = fn(), this.si = new x(this.F);
	    }
	    /**
	     * Returns an empty copy of the existing DocumentSet, using the same
	     * comparator.
	     */    return t.oi = function(n) {
	        return new t(n.F);
	    }, t.prototype.has = function(t) {
	        return null != this.ui.get(t);
	    }, t.prototype.get = function(t) {
	        return this.ui.get(t);
	    }, t.prototype.first = function() {
	        return this.si.ot();
	    }, t.prototype.last = function() {
	        return this.si.ht();
	    }, t.prototype.M = function() {
	        return this.si.M();
	    }, 
	    /**
	     * Returns the index of the provided key in the document set, or -1 if the
	     * document key is not present in the set;
	     */
	    t.prototype.indexOf = function(t) {
	        var n = this.ui.get(t);
	        return n ? this.si.indexOf(n) : -1;
	    }, Object.defineProperty(t.prototype, "size", {
	        get: function() {
	            return this.si.size;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /** Iterates documents in order defined by "comparator" */
	    t.prototype.forEach = function(t) {
	        this.si.ct((function(n, i) {
	            return t(n), !1;
	        }));
	    }, 
	    /** Inserts or updates a document with the same key */
	    t.prototype.add = function(t) {
	        // First remove the element if we have it.
	        var n = this.delete(t.key);
	        return n.copy(n.ui.ut(t.key, t), n.si.ut(t, null));
	    }, 
	    /** Deletes a document with a given key */
	    t.prototype.delete = function(t) {
	        var n = this.get(t);
	        return n ? this.copy(this.ui.remove(t), this.si.remove(n)) : this;
	    }, t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) return !1;
	        if (this.size !== n.size) return !1;
	        for (var i = this.si.ft(), e = n.si.ft(); i.gt(); ) {
	            var r = i.bt().key, u = e.bt().key;
	            if (!r.isEqual(u)) return !1;
	        }
	        return !0;
	    }, t.prototype.toString = function() {
	        var t = [];
	        return this.forEach((function(n) {
	            t.push(n.toString());
	        })), 0 === t.length ? "DocumentSet ()" : "DocumentSet (\n  " + t.join("  \n") + "\n)";
	    }, t.prototype.copy = function(n, i) {
	        var e = new t;
	        return e.F = this.F, e.ui = n, e.si = i, e;
	    }, t;
	}(), gn = /** @class */ function() {
	    function t() {
	        this.hi = new x(j.F);
	    }
	    return t.prototype.track = function(t) {
	        var n = t.doc.key, i = this.hi.get(n);
	        i ? 
	        // Merge the new change with the existing change.
	        0 /* Added */ !== t.type && 3 /* Metadata */ === i.type ? this.hi = this.hi.ut(n, t) : 3 /* Metadata */ === t.type && 1 /* Removed */ !== i.type ? this.hi = this.hi.ut(n, {
	            type: i.type,
	            doc: t.doc
	        }) : 2 /* Modified */ === t.type && 2 /* Modified */ === i.type ? this.hi = this.hi.ut(n, {
	            type: 2 /* Modified */ ,
	            doc: t.doc
	        }) : 2 /* Modified */ === t.type && 0 /* Added */ === i.type ? this.hi = this.hi.ut(n, {
	            type: 0 /* Added */ ,
	            doc: t.doc
	        }) : 1 /* Removed */ === t.type && 0 /* Added */ === i.type ? this.hi = this.hi.remove(n) : 1 /* Removed */ === t.type && 2 /* Modified */ === i.type ? this.hi = this.hi.ut(n, {
	            type: 1 /* Removed */ ,
	            doc: i.doc
	        }) : 0 /* Added */ === t.type && 1 /* Removed */ === i.type ? this.hi = this.hi.ut(n, {
	            type: 2 /* Modified */ ,
	            doc: t.doc
	        }) : 
	        // This includes these cases, which don't make sense:
	        // Added->Added
	        // Removed->Removed
	        // Modified->Added
	        // Removed->Modified
	        // Metadata->Added
	        // Removed->Metadata
	        Gn("unsupported combination of changes: " + JSON.stringify(t) + " after " + JSON.stringify(i)) : this.hi = this.hi.ut(n, t);
	    }, t.prototype.ci = function() {
	        var t = [];
	        return this.hi.ct((function(n, i) {
	            t.push(i);
	        })), t;
	    }, t;
	}(), yn = /** @class */ function() {
	    function t(t, n, i, e, r, u, s, o) {
	        this.query = t, this.docs = n, this.ai = i, this.docChanges = e, this.fi = r, this.fromCache = u, 
	        this.li = s, this.di = o;
	    }
	    /** Returns a view snapshot as if all documents in the snapshot were added. */    return t.vi = function(n, i, e, r) {
	        var u = [];
	        return i.forEach((function(t) {
	            u.push({
	                type: 0 /* Added */ ,
	                doc: t
	            });
	        })), new t(n, i, bn.oi(i), u, e, r, 
	        /* syncStateChanged= */ !0, 
	        /* excludesMetadataChanges= */ !1);
	    }, Object.defineProperty(t.prototype, "hasPendingWrites", {
	        get: function() {
	            return !this.fi.M();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.isEqual = function(t) {
	        if (!(this.fromCache === t.fromCache && this.li === t.li && this.fi.isEqual(t.fi) && this.query.isEqual(t.query) && this.docs.isEqual(t.docs) && this.ai.isEqual(t.ai))) return !1;
	        var n = this.docChanges, i = t.docChanges;
	        if (n.length !== i.length) return !1;
	        for (var e = 0; e < n.length; e++) if (n[e].type !== i[e].type || !n[e].doc.isEqual(i[e].doc)) return !1;
	        return !0;
	    }, t;
	}(), _n = /** @class */ function() {
	    function t(
	    /**
	     * The snapshot version this event brings us up to, or MIN if not set.
	     */
	    t, 
	    /**
	     * A map from target to changes to the target. See TargetChange.
	     */
	    n, 
	    /**
	     * A set of targets that is known to be inconsistent. Listens for these
	     * targets should be re-established without resume tokens.
	     */
	    i, 
	    /**
	     * A set of which documents have changed or been deleted, along with the
	     * doc's new values (if not deleted).
	     */
	    e, 
	    /**
	     * A set of which document updates are due only to limbo resolution targets.
	     */
	    r) {
	        this.ni = t, this.wi = n, this.mi = i, this.pi = e, this.bi = r;
	    }
	    /**
	     * HACK: Views require RemoteEvents in order to determine whether the view is
	     * CURRENT, but secondary tabs don't receive remote events. So this method is
	     * used to create a synthesized RemoteEvent that can be used to apply a
	     * CURRENT status change to a View, for queries executed in a different tab.
	     */
	    // PORTING NOTE: Multi-tab only
	        return t.gi = function(n, i) {
	        var e = new Map;
	        return e.set(n, In.yi(n, i)), new t(k.MIN, e, pn(), hn(), wn());
	    }, t;
	}(), In = /** @class */ function() {
	    function t(
	    /**
	     * An opaque, server-assigned token that allows watching a query to be resumed
	     * after disconnecting without retransmitting all the data that matches the
	     * query. The resume token essentially identifies a point in time from which
	     * the server should resume sending results.
	     */
	    t, 
	    /**
	     * The "current" (synced) status of this target. Note that "current"
	     * has special meaning in the RPC protocol that implies that a target is
	     * both up-to-date and consistent with the rest of the watch stream.
	     */
	    n, 
	    /**
	     * The set of documents that were newly assigned to this target as part of
	     * this remote event.
	     */
	    i, 
	    /**
	     * The set of documents that were already assigned to this target but received
	     * an update during this remote event.
	     */
	    e, 
	    /**
	     * The set of documents that were removed from this target as part of this
	     * remote event.
	     */
	    r) {
	        this.resumeToken = t, this._i = n, this.Ii = i, this.Ti = e, this.Ei = r;
	    }
	    /**
	     * This method is used to create a synthesized TargetChanges that can be used to
	     * apply a CURRENT status change to a View (for queries executed in a different
	     * tab) or for new queries (to raise snapshots with correct CURRENT status).
	     */    return t.yi = function(n, i) {
	        return new t(K.Mt, i, wn(), wn(), wn());
	    }, t;
	}(), Tn = function(
	/** The new document applies to all of these targets. */
	t, 
	/** The new document is removed from all of these targets. */
	n, 
	/** The key of the document for this change. */
	i, 
	/**
	     * The new document or NoDocument if it was deleted. Is null if the
	     * document went out of view without the server sending a new document.
	     */
	e) {
	    this.Di = t, this.removedTargetIds = n, this.key = i, this.Ri = e;
	}, En = function(t, n) {
	    this.targetId = t, this.Si = n;
	}, Dn = function(
	/** What kind of change occurred to the watch target. */
	t, 
	/** The target IDs that were added/removed/set. */
	n, 
	/**
	     * An opaque, server-assigned token that allows watching a target to be
	     * resumed after disconnecting without retransmitting all the data that
	     * matches the target. The resume token essentially identifies a point in
	     * time from which the server should resume sending results.
	     */
	i, 
	/** An RPC error indicating why the watch failed. */
	e) {
	    void 0 === i && (i = K.Mt), void 0 === e && (e = null), this.state = t, this.targetIds = n, 
	    this.resumeToken = i, this.cause = e;
	}, Rn = /** @class */ function() {
	    function t() {
	        /**
	         * The number of pending responses (adds or removes) that we are waiting on.
	         * We only consider targets active that have no pending responses.
	         */
	        this.Ai = 0, 
	        /**
	         * Keeps track of the document changes since the last raised snapshot.
	         *
	         * These changes are continuously updated as we receive document updates and
	         * always reflect the current set of changes against the last issued snapshot.
	         */
	        this.Ci = Cn(), 
	        /** See public getters for explanations of these fields. */
	        this.Pi = K.Mt, this.Vi = !1, 
	        /**
	         * Whether this target state should be included in the next snapshot. We
	         * initialize to true so that newly-added targets are included in the next
	         * RemoteEvent.
	         */
	        this.ki = !0;
	    }
	    return Object.defineProperty(t.prototype, "_i", {
	        /**
	         * Whether this target has been marked 'current'.
	         *
	         * 'Current' has special meaning in the RPC protocol: It implies that the
	         * Watch backend has sent us all changes up to the point at which the target
	         * was added and that the target is consistent with the rest of the watch
	         * stream.
	         */
	        get: function() {
	            return this.Vi;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "resumeToken", {
	        /** The last resume token sent to us for this target. */
	        get: function() {
	            return this.Pi;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "Ni", {
	        /** Whether this target has pending target adds or target removes. */
	        get: function() {
	            return 0 !== this.Ai;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "Oi", {
	        /** Whether we have modified any state that should trigger a snapshot. */
	        get: function() {
	            return this.ki;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /**
	     * Applies the resume token to the TargetChange, but only when it has a new
	     * value. Empty resumeTokens are discarded.
	     */
	    t.prototype.Fi = function(t) {
	        t.Lt() > 0 && (this.ki = !0, this.Pi = t);
	    }, 
	    /**
	     * Creates a target change from the current set of changes.
	     *
	     * To reset the document changes after raising this snapshot, call
	     * `clearPendingChanges()`.
	     */
	    t.prototype.Ui = function() {
	        var t = wn(), n = wn(), i = wn();
	        return this.Ci.forEach((function(e, r) {
	            switch (r) {
	              case 0 /* Added */ :
	                t = t.add(e);
	                break;
	
	              case 2 /* Modified */ :
	                n = n.add(e);
	                break;
	
	              case 1 /* Removed */ :
	                i = i.add(e);
	                break;
	
	              default:
	                Gn("Encountered invalid change type: " + r);
	            }
	        })), new In(this.Pi, this.Vi, t, n, i);
	    }, 
	    /**
	     * Resets the document changes and sets `hasPendingChanges` to false.
	     */
	    t.prototype.ji = function() {
	        this.ki = !1, this.Ci = Cn();
	    }, t.prototype.xi = function(t, n) {
	        this.ki = !0, this.Ci = this.Ci.ut(t, n);
	    }, t.prototype.Li = function(t) {
	        this.ki = !0, this.Ci = this.Ci.remove(t);
	    }, t.prototype.Mi = function() {
	        this.Ai += 1;
	    }, t.prototype.qi = function() {
	        this.Ai -= 1;
	    }, t.prototype.Bi = function() {
	        this.ki = !0, this.Vi = !0;
	    }, t;
	}(), Sn = /** @class */ function() {
	    function t(t) {
	        this.Qi = t, 
	        /** The internal state of all tracked targets. */
	        this.Gi = new Map, 
	        /** Keeps track of the documents to update since the last raised snapshot. */
	        this.Wi = hn(), 
	        /** A mapping of document keys to their set of target IDs. */
	        this.zi = An(), 
	        /**
	         * A list of targets with existence filter mismatches. These targets are
	         * known to be inconsistent and their listens needs to be re-established by
	         * RemoteStore.
	         */
	        this.Ki = new B(Kn);
	    }
	    /**
	     * Processes and adds the DocumentWatchChange to the current set of changes.
	     */    return t.prototype.Ji = function(t) {
	        for (var n = 0, i = t.Di; n < i.length; n++) {
	            var e = i[n];
	            t.Ri instanceof xt ? this.Hi(e, t.Ri) : t.Ri instanceof Lt && this.Yi(e, t.key, t.Ri);
	        }
	        for (var r = 0, u = t.removedTargetIds; r < u.length; r++) {
	            e = u[r];
	            this.Yi(e, t.key, t.Ri);
	        }
	    }, 
	    /** Processes and adds the WatchTargetChange to the current set of changes. */
	    t.prototype.Xi = function(t) {
	        var n = this;
	        this.$i(t, (function(i) {
	            var e = n.Zi(i);
	            switch (t.state) {
	              case 0 /* NoChange */ :
	                n.te(i) && e.Fi(t.resumeToken);
	                break;
	
	              case 1 /* Added */ :
	                // We need to decrement the number of pending acks needed from watch
	                // for this targetId.
	                e.qi(), e.Ni || 
	                // We have a freshly added target, so we need to reset any state
	                // that we had previously. This can happen e.g. when remove and add
	                // back a target for existence filter mismatches.
	                e.ji(), e.Fi(t.resumeToken);
	                break;
	
	              case 2 /* Removed */ :
	                // We need to keep track of removed targets to we can post-filter and
	                // remove any target changes.
	                // We need to decrement the number of pending acks needed from watch
	                // for this targetId.
	                e.qi(), e.Ni || n.removeTarget(i), Wn(!t.cause, "WatchChangeAggregator does not handle errored targets");
	                break;
	
	              case 3 /* Current */ :
	                n.te(i) && (e.Bi(), e.Fi(t.resumeToken));
	                break;
	
	              case 4 /* Reset */ :
	                n.te(i) && (
	                // Reset the target and synthesizes removes for all existing
	                // documents. The backend will re-add any documents that still
	                // match the target before it sends the next global snapshot.
	                n.ne(i), e.Fi(t.resumeToken));
	                break;
	
	              default:
	                Gn("Unknown target watch change state: " + t.state);
	            }
	        }));
	    }, 
	    /**
	     * Iterates over all targetIds that the watch change applies to: either the
	     * targetIds explicitly listed in the change or the targetIds of all currently
	     * active targets.
	     */
	    t.prototype.$i = function(t, n) {
	        t.targetIds.length > 0 ? t.targetIds.forEach(n) : this.Gi.forEach((function(t, i) {
	            return n(i);
	        }));
	    }, 
	    /**
	     * Handles existence filters and synthesizes deletes for filter mismatches.
	     * Targets that are invalidated by filter mismatches are added to
	     * `pendingTargetResets`.
	     */
	    t.prototype.ie = function(t) {
	        var n = t.targetId, i = t.Si.count, e = this.ee(n);
	        if (e) {
	            var r = e.target;
	            if (r.Tn()) if (0 === i) {
	                // The existence filter told us the document does not exist. We deduce
	                // that this document does not exist and apply a deleted document to
	                // our updates. Without applying this deleted document there might be
	                // another query that will raise this document as part of a snapshot
	                // until it is resolved, essentially exposing inconsistency between
	                // queries.
	                var u = new j(r.path);
	                this.Yi(n, u, new Lt(u, k.V()));
	            } else Wn(1 === i, "Single document existence filter with count: " + i); else this.re(n) !== i && (
	            // Existence filter mismatch: We reset the mapping and raise a new
	            // snapshot with `isFromCache:true`.
	            this.ne(n), this.Ki = this.Ki.add(n));
	        }
	    }, 
	    /**
	     * Converts the currently accumulated state into a remote event at the
	     * provided snapshot version. Resets the accumulated changes before returning.
	     */
	    t.prototype.ue = function(t) {
	        var n = this, i = new Map;
	        this.Gi.forEach((function(e, r) {
	            var u = n.ee(r);
	            if (u) {
	                if (e._i && u.target.Tn()) {
	                    // Document queries for document that don't exist can produce an empty
	                    // result set. To update our local cache, we synthesize a document
	                    // delete if we have not previously received the document. This
	                    // resolves the limbo state of the document, removing it from
	                    // limboDocumentRefs.
	                    // TODO(dimond): Ideally we would have an explicit lookup target
	                    // instead resulting in an explicit delete message and we could
	                    // remove this special logic.
	                    var s = new j(u.target.path);
	                    null !== n.Wi.get(s) || n.se(r, s) || n.Yi(r, s, new Lt(s, t));
	                }
	                e.Oi && (i.set(r, e.Ui()), e.ji());
	            }
	        }));
	        var e = wn();
	        // We extract the set of limbo-only document updates as the GC logic
	        // special-cases documents that do not appear in the target cache.
	        
	        // TODO(gsoltis): Expand on this comment once GC is available in the JS
	        // client.
	                this.zi.forEach((function(t, i) {
	            var r = !0;
	            i.Nt((function(t) {
	                var i = n.ee(t);
	                return !i || 2 /* LimboResolution */ === i.ti || (r = !1, !1);
	            })), r && (e = e.add(t));
	        }));
	        var r = new _n(t, i, this.Ki, this.Wi, e);
	        return this.Wi = hn(), this.zi = An(), this.Ki = new B(Kn), r;
	    }, 
	    /**
	     * Adds the provided document to the internal list of document updates and
	     * its document key to the given target's mapping.
	     */
	    // Visible for testing.
	    t.prototype.Hi = function(t, n) {
	        if (this.te(t)) {
	            var i = this.se(t, n.key) ? 2 /* Modified */ : 0 /* Added */;
	            this.Zi(t).xi(n.key, i), this.Wi = this.Wi.ut(n.key, n), this.zi = this.zi.ut(n.key, this.oe(n.key).add(t));
	        }
	    }, 
	    /**
	     * Removes the provided document from the target mapping. If the
	     * document no longer matches the target, but the document's state is still
	     * known (e.g. we know that the document was deleted or we received the change
	     * that caused the filter mismatch), the new document can be provided
	     * to update the remote document cache.
	     */
	    // Visible for testing.
	    t.prototype.Yi = function(t, n, i) {
	        if (this.te(t)) {
	            var e = this.Zi(t);
	            this.se(t, n) ? e.xi(n, 1 /* Removed */) : 
	            // The document may have entered and left the target before we raised a
	            // snapshot, so we can just ignore the change.
	            e.Li(n), this.zi = this.zi.ut(n, this.oe(n).delete(t)), i && (this.Wi = this.Wi.ut(n, i));
	        }
	    }, t.prototype.removeTarget = function(t) {
	        this.Gi.delete(t);
	    }, 
	    /**
	     * Returns the current count of documents in the target. This includes both
	     * the number of documents that the LocalStore considers to be part of the
	     * target as well as any accumulated changes.
	     */
	    t.prototype.re = function(t) {
	        var n = this.Zi(t).Ui();
	        return this.Qi.he(t).size + n.Ii.size - n.Ei.size;
	    }, 
	    /**
	     * Increment the number of acks needed from watch before we can consider the
	     * server to be 'in-sync' with the client's active targets.
	     */
	    t.prototype.Mi = function(t) {
	        this.Zi(t).Mi();
	    }, t.prototype.Zi = function(t) {
	        var n = this.Gi.get(t);
	        return n || (n = new Rn, this.Gi.set(t, n)), n;
	    }, t.prototype.oe = function(t) {
	        var n = this.zi.get(t);
	        return n || (n = new B(Kn), this.zi = this.zi.ut(t, n)), n;
	    }, 
	    /**
	     * Verifies that the user is still interested in this target (by calling
	     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
	     * from watch.
	     */
	    t.prototype.te = function(t) {
	        var n = null !== this.ee(t);
	        return n || qn("WatchChangeAggregator", "Detected inactive target", t), n;
	    }, 
	    /**
	     * Returns the TargetData for an active target (i.e. a target that the user
	     * is still interested in that has no outstanding target change requests).
	     */
	    t.prototype.ee = function(t) {
	        var n = this.Gi.get(t);
	        return n && n.Ni ? null : this.Qi.ce(t);
	    }, 
	    /**
	     * Resets the state of a Watch target to its initial state (e.g. sets
	     * 'current' to false, clears the resume token and removes its target mapping
	     * from all documents).
	     */
	    t.prototype.ne = function(t) {
	        var n = this;
	        Wn(!this.Gi.get(t).Ni, "Should only reset active targets"), this.Gi.set(t, new Rn), 
	        this.Qi.he(t).forEach((function(i) {
	            n.Yi(t, i, /*updatedDocument=*/ null);
	        }));
	    }, 
	    /**
	     * Returns whether the LocalStore considers the document to be part of the
	     * specified target.
	     */
	    t.prototype.se = function(t, n) {
	        return this.Qi.he(t).has(n);
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
	 * duplicate events for the same doc.
	 */ function An() {
	    return new x(j.F);
	}
	
	function Cn() {
	    return new x(j.F);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var Pn, Vn, kn = ((Pn = {})[Xt.ASCENDING.name] = "ASCENDING", Pn[Xt.DESCENDING.name] = "DESCENDING", 
	Pn), Nn = ((Vn = {})[Gt.LESS_THAN.name] = "LESS_THAN", Vn[Gt.LESS_THAN_OR_EQUAL.name] = "LESS_THAN_OR_EQUAL", 
	Vn[Gt.GREATER_THAN.name] = "GREATER_THAN", Vn[Gt.GREATER_THAN_OR_EQUAL.name] = "GREATER_THAN_OR_EQUAL", 
	Vn[Gt.EQUAL.name] = "EQUAL", Vn[Gt.ARRAY_CONTAINS.name] = "ARRAY_CONTAINS", Vn[Gt.IN.name] = "IN", 
	Vn[Gt.ARRAY_CONTAINS_ANY.name] = "ARRAY_CONTAINS_ANY", Vn);
	
	function On(t, n) {
	    Wn(!J(t), n + " is missing");
	}
	
	/**
	 * Generates JsonObject values for the Datastore API suitable for sending to
	 * either GRPC stub methods or via the JSON/HTTP REST API.
	 * TODO(klimt): We can remove the databaseId argument if we keep the full
	 * resource name in documents.
	 */ var Fn = /** @class */ function() {
	    function t(t, n) {
	        this.ae = t, this.options = n;
	    }
	    return t.prototype.fe = function(t) {
	        var n = void 0 === t.code ? T.UNKNOWN : sn(t.code);
	        return new E(n, t.message || "");
	    }, 
	    /**
	     * Returns a value for a number (or null) that's appropriate to put into
	     * a google.protobuf.Int32Value proto.
	     * DO NOT USE THIS FOR ANYTHING ELSE.
	     * This method cheats. It's typed as returning "number" because that's what
	     * our generated proto interfaces say Int32Value must be. But GRPC actually
	     * expects a { value: <number> } struct.
	     */
	    t.prototype.le = function(t) {
	        return this.options.de || J(t) ? t : {
	            value: t
	        };
	    }, 
	    /**
	     * Returns a number (or null) from a google.protobuf.Int32Value proto.
	     */
	    t.prototype.ve = function(t) {
	        var n;
	        return J(n = "object" == typeof t ? t.value : t) ? null : n;
	    }, 
	    /**
	     * Returns an IntegerValue for `value`.
	     */
	    t.prototype.Wt = function(t) {
	        return {
	            integerValue: "" + t
	        };
	    }, 
	    /**
	     * Returns an DoubleValue for `value` that is encoded based the serializer's
	     * `useProto3Json` setting.
	     */
	    t.prototype.zt = function(t) {
	        if (this.options.de) {
	            if (isNaN(t)) return {
	                doubleValue: "NaN"
	            };
	            if (t === 1 / 0) return {
	                doubleValue: "Infinity"
	            };
	            if (t === -1 / 0) return {
	                doubleValue: "-Infinity"
	            };
	        }
	        return {
	            doubleValue: H(t) ? "-0" : t
	        };
	    }, 
	    /**
	     * Returns a value for a number that's appropriate to put into a proto.
	     * The return value is an IntegerValue if it can safely represent the value,
	     * otherwise a DoubleValue is returned.
	     */
	    t.prototype.we = function(t) {
	        return Y(t) ? this.Wt(t) : this.zt(t);
	    }, 
	    /**
	     * Returns a value for a Date that's appropriate to put into a proto.
	     */
	    t.prototype.O = function(t) {
	        return this.options.de ? new Date(1e3 * t.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "") + "." + ("000000000" + t.nanoseconds).slice(-9) + "Z" : {
	            seconds: "" + t.seconds,
	            nanos: t.nanoseconds
	        };
	    }, t.prototype.P = function(t) {
	        var n = ot(t);
	        return new V(n.seconds, n.nanos);
	    }, 
	    /**
	     * Returns a value for bytes that's appropriate to put in a proto.
	     *
	     * Visible for testing.
	     */
	    t.prototype.me = function(t) {
	        return this.options.de ? t.toBase64() : t.toUint8Array();
	    }, 
	    /**
	     * Returns a ByteString based on the proto string value.
	     */
	    t.prototype.pe = function(t) {
	        return this.options.de ? (Wn(void 0 === t || "string" == typeof t, "value must be undefined or a string when using proto3 Json"), 
	        K.fromBase64String(t || "")) : (Wn(void 0 === t || t instanceof Uint8Array, "value must be undefined or Uint8Array"), 
	        K.fromUint8Array(t || new Uint8Array));
	    }, t.prototype.toVersion = function(t) {
	        return this.O(t.O());
	    }, t.prototype.fromVersion = function(t) {
	        return Wn(!!t, "Trying to deserialize version that isn't set"), k.P(this.P(t));
	    }, t.prototype.be = function(t, n) {
	        return this.ge(n || this.ae).child("documents").child(t).J();
	    }, t.prototype.ye = function(t) {
	        var n = O.H(t);
	        return Wn(Un(n), "Tried to deserialize invalid key " + n.toString()), n;
	    }, t.prototype._e = function(t) {
	        return this.be(t.path);
	    }, t.prototype.it = function(t) {
	        var n = this.ye(t);
	        return Wn(n.get(1) === this.ae.projectId, "Tried to deserialize key from different project: " + n.get(1) + " vs " + this.ae.projectId), 
	        Wn(!n.get(3) && !this.ae.database || n.get(3) === this.ae.database, "Tried to deserialize key from different database: " + n.get(3) + " vs " + this.ae.database), 
	        new j(this.Ie(n));
	    }, t.prototype.Te = function(t) {
	        return this.be(t);
	    }, t.prototype.Ee = function(t) {
	        var n = this.ye(t);
	        // In v1beta1 queries for collections at the root did not have a trailing
	        // "/documents". In v1 all resource paths contain "/documents". Preserve the
	        // ability to read the v1beta1 form for compatibility with queries persisted
	        // in the local target cache.
	                return 4 === n.length ? O.Y : this.Ie(n);
	    }, Object.defineProperty(t.prototype, "De", {
	        get: function() {
	            return new O([ "projects", this.ae.projectId, "databases", this.ae.database ]).J();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.ge = function(t) {
	        return new O([ "projects", t.projectId, "databases", t.database ]);
	    }, t.prototype.Ie = function(t) {
	        return Wn(t.length > 4 && "documents" === t.get(4), "tried to deserialize invalid key " + t.toString()), 
	        t.j(5);
	    }, 
	    /** Creates an api.Document from key and fields (but no create/update time) */
	    t.prototype.Re = function(t, n) {
	        return {
	            name: this._e(t),
	            fields: n.proto.mapValue.fields
	        };
	    }, t.prototype.Se = function(t) {
	        return Wn(!t.nn, "Can't serialize documents with mutations."), {
	            name: this._e(t.key),
	            fields: t.yn().mapValue.fields,
	            updateTime: this.O(t.version.O())
	        };
	    }, t.prototype.Ae = function(t, n) {
	        var i = this.it(t.name), e = this.fromVersion(t.updateTime), r = new Ft({
	            mapValue: {
	                fields: t.fields
	            }
	        });
	        return new xt(i, e, r, {
	            hasCommittedMutations: !!n
	        });
	    }, t.prototype.Ce = function(t) {
	        Wn(!!t.found, "Tried to deserialize a found document from a missing document."), 
	        On(t.found.name, "doc.found.name"), On(t.found.updateTime, "doc.found.updateTime");
	        var n = this.it(t.found.name), i = this.fromVersion(t.found.updateTime), e = new Ft({
	            mapValue: {
	                fields: t.found.fields
	            }
	        });
	        return new xt(n, i, e, {});
	    }, t.prototype.Pe = function(t) {
	        Wn(!!t.missing, "Tried to deserialize a missing document from a found document."), 
	        Wn(!!t.readTime, "Tried to deserialize a missing document without a read time.");
	        var n = this.it(t.missing), i = this.fromVersion(t.readTime);
	        return new Lt(n, i);
	    }, t.prototype.Ve = function(t) {
	        return "found" in t ? this.Ce(t) : "missing" in t ? this.Pe(t) : Gn("invalid batch get response: " + JSON.stringify(t));
	    }, t.prototype.ke = function(t) {
	        var n;
	        if ("targetChange" in t) {
	            On(t.targetChange, "targetChange");
	            // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
	            // if unset
	            var i = this.Ne(t.targetChange.targetChangeType || "NO_CHANGE"), e = t.targetChange.targetIds || [], r = this.pe(t.targetChange.resumeToken), u = t.targetChange.cause, s = u && this.fe(u);
	            n = new Dn(i, e, r, s || null);
	        } else if ("documentChange" in t) {
	            On(t.documentChange, "documentChange");
	            var o = t.documentChange;
	            On(o.document, "documentChange.name"), On(o.document.name, "documentChange.document.name"), 
	            On(o.document.updateTime, "documentChange.document.updateTime");
	            var h = this.it(o.document.name), c = this.fromVersion(o.document.updateTime), a = new Ft({
	                mapValue: {
	                    fields: o.document.fields
	                }
	            }), f = new xt(h, c, a, {}), l = o.targetIds || [], d = o.removedTargetIds || [];
	            n = new Tn(l, d, f.key, f);
	        } else if ("documentDelete" in t) {
	            On(t.documentDelete, "documentDelete");
	            var v = t.documentDelete;
	            On(v.document, "documentDelete.document");
	            h = this.it(v.document), c = v.readTime ? this.fromVersion(v.readTime) : k.V(), 
	            f = new Lt(h, c), d = v.removedTargetIds || [];
	            n = new Tn([], d, f.key, f);
	        } else if ("documentRemove" in t) {
	            On(t.documentRemove, "documentRemove");
	            var w = t.documentRemove;
	            On(w.document, "documentRemove");
	            h = this.it(w.document), d = w.removedTargetIds || [];
	            n = new Tn([], d, h, null);
	        } else {
	            if (!("filter" in t)) return Gn("Unknown change type " + JSON.stringify(t));
	            // TODO(dimond): implement existence filter parsing with strategy.
	            On(t.filter, "filter");
	            var m = t.filter;
	            On(m.targetId, "filter.targetId");
	            var p = m.count || 0, b = new rn(p), g = m.targetId;
	            n = new En(g, b);
	        }
	        return n;
	    }, t.prototype.Ne = function(t) {
	        return "NO_CHANGE" === t ? 0 /* NoChange */ : "ADD" === t ? 1 /* Added */ : "REMOVE" === t ? 2 /* Removed */ : "CURRENT" === t ? 3 /* Current */ : "RESET" === t ? 4 /* Reset */ : Gn("Got unexpected TargetChange.state: " + t);
	    }, t.prototype.Oe = function(t) {
	        // We have only reached a consistent snapshot for the entire stream if there
	        // is a read_time set and it applies to all targets (i.e. the list of
	        // targets is empty). The backend is guaranteed to send such responses.
	        if (!("targetChange" in t)) return k.MIN;
	        var n = t.targetChange;
	        return n.targetIds && n.targetIds.length ? k.MIN : n.readTime ? this.fromVersion(n.readTime) : k.MIN;
	    }, t.prototype.Fe = function(t) {
	        var n, i = this;
	        if (t instanceof Pt) n = {
	            update: this.Re(t.key, t.value)
	        }; else if (t instanceof Nt) n = {
	            delete: this._e(t.key)
	        }; else if (t instanceof Vt) n = {
	            update: this.Re(t.key, t.data),
	            updateMask: this.Ue(t.en)
	        }; else if (t instanceof kt) n = {
	            transform: {
	                document: this._e(t.key),
	                fieldTransforms: t.fieldTransforms.map((function(t) {
	                    return i.je(t);
	                }))
	            }
	        }; else {
	            if (!(t instanceof Ot)) return Gn("Unknown mutation type " + t.type);
	            n = {
	                verify: this._e(t.key)
	            };
	        }
	        return t.tn.Yt || (n.currentDocument = this.xe(t.tn)), n;
	    }, t.prototype.Le = function(t) {
	        var n = this, i = t.currentDocument ? this.Me(t.currentDocument) : At.NONE;
	        if (t.update) {
	            On(t.update.name, "name");
	            var e = this.it(t.update.name), r = new Ft({
	                mapValue: {
	                    fields: t.update.fields
	                }
	            });
	            if (t.updateMask) {
	                var u = this.qe(t.updateMask);
	                return new Vt(e, r, u, i);
	            }
	            return new Pt(e, r, i);
	        }
	        if (t.delete) {
	            e = this.it(t.delete);
	            return new Nt(e, i);
	        }
	        if (t.transform) {
	            e = this.it(t.transform.document);
	            var s = t.transform.fieldTransforms.map((function(t) {
	                return n.Be(t);
	            }));
	            return Wn(!0 === i.exists, 'Transforms only support precondition "exists == true"'), 
	            new kt(e, s);
	        }
	        if (t.verify) {
	            e = this.it(t.verify);
	            return new Ot(e, i);
	        }
	        return Gn("unknown mutation proto: " + JSON.stringify(t));
	    }, t.prototype.xe = function(t) {
	        return Wn(!t.Yt, "Can't serialize an empty precondition"), void 0 !== t.updateTime ? {
	            updateTime: this.toVersion(t.updateTime)
	        } : void 0 !== t.exists ? {
	            exists: t.exists
	        } : Gn("Unknown precondition");
	    }, t.prototype.Me = function(t) {
	        return void 0 !== t.updateTime ? At.updateTime(this.fromVersion(t.updateTime)) : void 0 !== t.exists ? At.exists(t.exists) : At.NONE;
	    }, t.prototype.Qe = function(t, n) {
	        // NOTE: Deletes don't have an updateTime.
	        var i = t.updateTime ? this.fromVersion(t.updateTime) : this.fromVersion(n);
	        i.isEqual(k.MIN) && (
	        // The Firestore Emulator currently returns an update time of 0 for
	        // deletes of non-existing documents (rather than null). This breaks the
	        // test "get deleted doc while offline with source=cache" as NoDocuments
	        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.
	        // TODO(#2149): Remove this when Emulator is fixed
	        i = this.fromVersion(n));
	        var e = null;
	        return t.transformResults && t.transformResults.length > 0 && (e = t.transformResults), 
	        new St(i, e);
	    }, t.prototype.Ge = function(t, n) {
	        var i = this;
	        return t && t.length > 0 ? (Wn(void 0 !== n, "Received a write result without a commit time"), 
	        t.map((function(t) {
	            return i.Qe(t, n);
	        }))) : [];
	    }, t.prototype.je = function(t) {
	        var n = t.transform;
	        if (n instanceof bt) return {
	            fieldPath: t.field.J(),
	            setToServerValue: "REQUEST_TIME"
	        };
	        if (n instanceof gt) return {
	            fieldPath: t.field.J(),
	            appendMissingElements: {
	                values: n.elements
	            }
	        };
	        if (n instanceof yt) return {
	            fieldPath: t.field.J(),
	            removeAllFromArray: {
	                values: n.elements
	            }
	        };
	        if (n instanceof _t) return {
	            fieldPath: t.field.J(),
	            increment: n.Gt
	        };
	        throw Gn("Unknown transform: " + t.transform);
	    }, t.prototype.Be = function(t) {
	        var n = null;
	        if ("setToServerValue" in t) Wn("REQUEST_TIME" === t.setToServerValue, "Unknown server value transform proto: " + JSON.stringify(t)), 
	        n = bt.instance; else if ("appendMissingElements" in t) {
	            var i = t.appendMissingElements.values || [];
	            n = new gt(i);
	        } else if ("removeAllFromArray" in t) {
	            i = t.removeAllFromArray.values || [];
	            n = new yt(i);
	        } else "increment" in t ? n = new _t(this, t.increment) : Gn("Unknown transform proto: " + JSON.stringify(t));
	        var e = U.tt(t.fieldPath);
	        return new Rt(e, n);
	    }, t.prototype.We = function(t) {
	        return {
	            documents: [ this.Te(t.path) ]
	        };
	    }, t.prototype.ze = function(t) {
	        var n = t.documents.length;
	        Wn(1 === n, "DocumentsTarget contained other than 1 document: " + n);
	        var i = t.documents[0];
	        return Bt.Cn(this.Ee(i)).qn();
	    }, t.prototype.Ke = function(t) {
	        // Dissect the path into parent, collectionId, and optional key filter.
	        var n = {
	            structuredQuery: {}
	        }, i = t.path;
	        null !== t.collectionGroup ? (Wn(i.length % 2 == 0, "Collection Group queries should be within a document path or root."), 
	        n.parent = this.Te(i), n.structuredQuery.from = [ {
	            collectionId: t.collectionGroup,
	            allDescendants: !0
	        } ]) : (Wn(i.length % 2 != 0, "Document queries with filters are not supported."), 
	        n.parent = this.Te(i.L()), n.structuredQuery.from = [ {
	            collectionId: i.B()
	        } ]);
	        var e = this.Je(t.filters);
	        e && (n.structuredQuery.where = e);
	        var r = this.He(t.orderBy);
	        r && (n.structuredQuery.orderBy = r);
	        var u = this.le(t.limit);
	        return null !== u && (n.structuredQuery.limit = u), t.startAt && (n.structuredQuery.startAt = this.Ye(t.startAt)), 
	        t.endAt && (n.structuredQuery.endAt = this.Ye(t.endAt)), n;
	    }, t.prototype.Xe = function(t) {
	        var n = this.Ee(t.parent), i = t.structuredQuery, e = i.from ? i.from.length : 0, r = null;
	        if (e > 0) {
	            Wn(1 === e, "StructuredQuery.from with more than one collection is not supported.");
	            var u = i.from[0];
	            u.allDescendants ? r = u.collectionId : n = n.child(u.collectionId);
	        }
	        var s = [];
	        i.where && (s = this.$e(i.where));
	        var o = [];
	        i.orderBy && (o = this.Ze(i.orderBy));
	        var h = null;
	        i.limit && (h = this.ve(i.limit));
	        var c = null;
	        i.startAt && (c = this.tr(i.startAt));
	        var a = null;
	        return i.endAt && (a = this.tr(i.endAt)), new Bt(n, r, o, s, h, "F" /* First */ , c, a).qn();
	    }, t.prototype.nr = function(t) {
	        var n = this.ir(t.ti);
	        return null == n ? null : {
	            "goog-listen-tags": n
	        };
	    }, t.prototype.ir = function(t) {
	        switch (t) {
	          case 0 /* Listen */ :
	            return null;
	
	          case 1 /* ExistenceFilterMismatch */ :
	            return "existence-filter-mismatch";
	
	          case 2 /* LimboResolution */ :
	            return "limbo-document";
	
	          default:
	            return Gn("Unrecognized query purpose: " + t);
	        }
	    }, t.prototype.qn = function(t) {
	        var n, i = t.target;
	        return (n = i.Tn() ? {
	            documents: this.We(i)
	        } : {
	            query: this.Ke(i)
	        }).targetId = t.targetId, t.resumeToken.Lt() > 0 && (n.resumeToken = this.me(t.resumeToken)), 
	        n;
	    }, t.prototype.Je = function(t) {
	        var n = this;
	        if (0 !== t.length) {
	            var i = t.map((function(t) {
	                return t instanceof Wt ? n.er(t) : Gn("Unrecognized filter: " + JSON.stringify(t));
	            }));
	            return 1 === i.length ? i[0] : {
	                compositeFilter: {
	                    op: "AND",
	                    filters: i
	                }
	            };
	        }
	    }, t.prototype.$e = function(t) {
	        var n = this;
	        return t ? void 0 !== t.unaryFilter ? [ this.rr(t) ] : void 0 !== t.fieldFilter ? [ this.ur(t) ] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map((function(t) {
	            return n.$e(t);
	        })).reduce((function(t, n) {
	            return t.concat(n);
	        })) : Gn("Unknown filter: " + JSON.stringify(t)) : [];
	    }, t.prototype.He = function(t) {
	        var n = this;
	        if (0 !== t.length) return t.map((function(t) {
	            return n.sr(t);
	        }));
	    }, t.prototype.Ze = function(t) {
	        var n = this;
	        return t.map((function(t) {
	            return n.or(t);
	        }));
	    }, t.prototype.Ye = function(t) {
	        return {
	            before: t.before,
	            values: t.position
	        };
	    }, t.prototype.tr = function(t) {
	        var n = !!t.before, i = t.values || [];
	        return new $t(i, n);
	    }, 
	    // visible for testing
	    t.prototype.hr = function(t) {
	        return kn[t.name];
	    }, 
	    // visible for testing
	    t.prototype.cr = function(t) {
	        switch (t) {
	          case "ASCENDING":
	            return Xt.ASCENDING;
	
	          case "DESCENDING":
	            return Xt.DESCENDING;
	
	          default:
	            return;
	        }
	    }, 
	    // visible for testing
	    t.prototype.ar = function(t) {
	        return Nn[t.name];
	    }, t.prototype.lr = function(t) {
	        switch (t) {
	          case "EQUAL":
	            return Gt.EQUAL;
	
	          case "GREATER_THAN":
	            return Gt.GREATER_THAN;
	
	          case "GREATER_THAN_OR_EQUAL":
	            return Gt.GREATER_THAN_OR_EQUAL;
	
	          case "LESS_THAN":
	            return Gt.LESS_THAN;
	
	          case "LESS_THAN_OR_EQUAL":
	            return Gt.LESS_THAN_OR_EQUAL;
	
	          case "ARRAY_CONTAINS":
	            return Gt.ARRAY_CONTAINS;
	
	          case "IN":
	            return Gt.IN;
	
	          case "ARRAY_CONTAINS_ANY":
	            return Gt.ARRAY_CONTAINS_ANY;
	
	          case "OPERATOR_UNSPECIFIED":
	            return Gn("Unspecified operator");
	
	          default:
	            return Gn("Unknown operator");
	        }
	    }, t.prototype.dr = function(t) {
	        return {
	            fieldPath: t.J()
	        };
	    }, t.prototype.vr = function(t) {
	        return U.tt(t.fieldPath);
	    }, 
	    // visible for testing
	    t.prototype.sr = function(t) {
	        return {
	            field: this.dr(t.field),
	            direction: this.hr(t.dir)
	        };
	    }, t.prototype.or = function(t) {
	        return new Zt(this.vr(t.field), this.cr(t.direction));
	    }, t.prototype.ur = function(t) {
	        return Wt.create(this.vr(t.fieldFilter.field), this.lr(t.fieldFilter.op), t.fieldFilter.value);
	    }, 
	    // visible for testing
	    t.prototype.er = function(t) {
	        if (t.op === Gt.EQUAL) {
	            if (mt(t.value)) return {
	                unaryFilter: {
	                    field: this.dr(t.field),
	                    op: "IS_NAN"
	                }
	            };
	            if (wt(t.value)) return {
	                unaryFilter: {
	                    field: this.dr(t.field),
	                    op: "IS_NULL"
	                }
	            };
	        }
	        return {
	            fieldFilter: {
	                field: this.dr(t.field),
	                op: this.ar(t.op),
	                value: t.value
	            }
	        };
	    }, t.prototype.rr = function(t) {
	        switch (t.unaryFilter.op) {
	          case "IS_NAN":
	            var n = this.vr(t.unaryFilter.field);
	            return Wt.create(n, Gt.EQUAL, {
	                doubleValue: NaN
	            });
	
	          case "IS_NULL":
	            var i = this.vr(t.unaryFilter.field);
	            return Wt.create(i, Gt.EQUAL, {
	                nullValue: "NULL_VALUE"
	            });
	
	          case "OPERATOR_UNSPECIFIED":
	            return Gn("Unspecified filter");
	
	          default:
	            return Gn("Unknown filter");
	        }
	    }, t.prototype.Ue = function(t) {
	        var n = [];
	        return t.fields.forEach((function(t) {
	            return n.push(t.J());
	        })), {
	            fieldPaths: n
	        };
	    }, t.prototype.qe = function(t) {
	        var n = (t.fieldPaths || []).map((function(t) {
	            return U.tt(t);
	        }));
	        return Dt.Jt(n);
	    }, t;
	}();
	
	function Un(t) {
	    // Resource names have at least 4 components (project ID, database ID)
	    return t.length >= 4 && "projects" === t.get(0) && "databases" === t.get(2);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Provides singleton helpers where setup code can inject a platform at runtime.
	 * setPlatform needs to be set before Firestore is used and must be set exactly
	 * once.
	 */ var jn = /** @class */ function() {
	    function t() {}
	    return t.wr = function(n) {
	        t.platform && Gn("Platform already defined"), t.platform = n;
	    }, t.xt = function() {
	        return t.platform || Gn("Platform not set"), t.platform;
	    }, t;
	}(), xn = new logger.Logger("@firebase/firestore");
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Helper methods are needed because variables can't be exported as read/write
	function Ln() {
	    return xn.logLevel;
	}
	
	function Mn(t) {
	    xn.logLevel = t;
	}
	
	function qn(t) {
	    for (var n = [], i = 1; i < arguments.length; i++) n[i - 1] = arguments[i];
	    if (xn.logLevel <= logger.LogLevel.DEBUG) {
	        var r = n.map(Qn);
	        xn.error.apply(xn, tslib.__spreadArrays([ "Firestore (" + _ + "): " + t ], r));
	    }
	}
	
	function Bn(t) {
	    for (var n = [], i = 1; i < arguments.length; i++) n[i - 1] = arguments[i];
	    if (xn.logLevel <= logger.LogLevel.ERROR) {
	        var r = n.map(Qn);
	        xn.error.apply(xn, tslib.__spreadArrays([ "Firestore (" + _ + "): " + t ], r));
	    }
	}
	
	/**
	 * Converts an additional log parameter to a string representation.
	 */ function Qn(t) {
	    if ("string" == typeof t) return t;
	    var n = jn.xt();
	    try {
	        return n.mr(t);
	    } catch (n) {
	        // Converting to JSON failed, just log the object directly
	        return t;
	    }
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Unconditionally fails, throwing an Error with the given message.
	 *
	 * Returns any so it can be used in expressions:
	 * @example
	 * let futureVar = fail('not implemented yet');
	 */ function Gn(t) {
	    // Log the failure in addition to throw an exception, just in case the
	    // exception is swallowed.
	    var n = "FIRESTORE (" + _ + ") INTERNAL ASSERTION FAILED: " + t;
	    // NOTE: We don't use FirestoreError here because these are internal failures
	    // that cannot be handled by the user. (Also it would create a circular
	    // dependency between the error and assert modules which doesn't work.)
	    throw Bn(n), new Error(n);
	}
	
	/**
	 * Fails if the given assertion condition is false, throwing an Error with the
	 * given message if it did.
	 */ function Wn(t, n) {
	    t || Gn(n);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var zn = /** @class */ function() {
	    function t() {}
	    return t.pr = function() {
	        for (
	        // Alphanumeric characters
	        var t = ""; t.length < 20; ) for (var n = jn.xt().randomBytes(40), i = 0, e = Array.from(n); i < e.length; i++) {
	            var r = e[i];
	            // Length of `chars` is 62. We only take bytes between 0 and 62*4-1
	            // (both inclusive). The value is then evenly mapped to indices of `char`
	            // via a modulo operation.
	                        t.length < 20 && r <= 247 && (t += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(r % 62));
	        }
	        return Wn(20 === t.length, "Invalid auto ID: " + t), t;
	    }, t;
	}();
	
	function Kn(t, n) {
	    return t < n ? -1 : t > n ? 1 : 0;
	}
	
	function Jn(t, n, i) {
	    return t.length === n.length && t.every((function(t, e) {
	        return i(t, n[e]);
	    }));
	}
	
	/**
	 * Returns the immediate lexicographically-following string. This is useful to
	 * construct an inclusive range for indexeddb iterators.
	 */ function Hn(t) {
	    // Return the input string, with an additional NUL byte appended.
	    return t + "\0";
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var Yn = 
	/**
	     * Constructs a DatabaseInfo using the provided host, databaseId and
	     * persistenceKey.
	     *
	     * @param databaseId The database to use.
	     * @param persistenceKey A unique identifier for this Firestore's local
	     * storage (used in conjunction with the databaseId).
	     * @param host The Firestore backend host to connect to.
	     * @param ssl Whether to use SSL when connecting.
	     * @param forceLongPolling Whether to use the forceLongPolling option
	     * when using WebChannel as the network transport.
	     */
	function(t, n, i, e, r) {
	    this.ae = t, this.persistenceKey = n, this.host = i, this.ssl = e, this.forceLongPolling = r;
	}, Xn = /** @class */ function() {
	    function t(t, n) {
	        this.projectId = t, this.database = n || "(default)";
	    }
	    return Object.defineProperty(t.prototype, "br", {
	        get: function() {
	            return "(default)" === this.database;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.isEqual = function(n) {
	        return n instanceof t && n.projectId === this.projectId && n.database === this.database;
	    }, t.prototype.k = function(t) {
	        return Kn(this.projectId, t.projectId) || Kn(this.database, t.database);
	    }, t;
	}(), $n = /** @class */ function() {
	    /**
	     * @param batchId The unique ID of this mutation batch.
	     * @param localWriteTime The original write time of this mutation.
	     * @param baseMutations Mutations that are used to populate the base
	     * values when this mutation is applied locally. This can be used to locally
	     * overwrite values that are persisted in the remote document cache. Base
	     * mutations are never sent to the backend.
	     * @param mutations The user-provided mutations in this mutation batch.
	     * User-provided mutations are applied both locally and remotely on the
	     * backend.
	     */
	    function t(t, n, i, e) {
	        this.batchId = t, this.gr = n, this.baseMutations = i, this.mutations = e, Wn(e.length > 0, "Cannot create an empty mutation batch");
	    }
	    /**
	     * Applies all the mutations in this MutationBatch to the specified document
	     * to create a new remote document
	     *
	     * @param docKey The key of the document to apply mutations to.
	     * @param maybeDoc The document to apply mutations to.
	     * @param batchResult The result of applying the MutationBatch to the
	     * backend.
	     */    return t.prototype.Bt = function(t, n, i) {
	        n && Wn(n.key.isEqual(t), "applyToRemoteDocument: key " + t + " should match maybeDoc key\n        " + n.key);
	        var e = i.yr;
	        Wn(e.length === this.mutations.length, "Mismatch between mutations length\n      (" + this.mutations.length + ") and mutation results length\n      (" + e.length + ").");
	        for (var r = 0; r < this.mutations.length; r++) {
	            var u = this.mutations[r];
	            if (u.key.isEqual(t)) {
	                var s = e[r];
	                n = u.Bt(n, s);
	            }
	        }
	        return n;
	    }, 
	    /**
	     * Computes the local view of a document given all the mutations in this
	     * batch.
	     *
	     * @param docKey The key of the document to apply mutations to.
	     * @param maybeDoc The document to apply mutations to.
	     */
	    t.prototype.qt = function(t, n) {
	        n && Wn(n.key.isEqual(t), "applyToLocalDocument: key " + t + " should match maybeDoc key\n        " + n.key);
	        // First, apply the base state. This allows us to apply non-idempotent
	        // transform against a consistent set of values.
	                for (var i = 0, e = this.baseMutations; i < e.length; i++) {
	            (o = e[i]).key.isEqual(t) && (n = o.qt(n, n, this.gr));
	        }
	        // Second, apply all user-provided mutations.
	        for (var r = n, u = 0, s = this.mutations; u < s.length; u++) {
	            var o;
	            (o = s[u]).key.isEqual(t) && (n = o.qt(n, r, this.gr));
	        }
	        return n;
	    }, 
	    /**
	     * Computes the local view for all provided documents given the mutations in
	     * this batch.
	     */
	    t.prototype._r = function(t) {
	        var n = this, i = t;
	        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
	        // directly (as done in `applyToLocalView()`), we can reduce the complexity
	        // to O(n).
	                return this.mutations.forEach((function(e) {
	            var r = n.qt(e.key, t.get(e.key));
	            r && (i = i.ut(e.key, r));
	        })), i;
	    }, t.prototype.keys = function() {
	        return this.mutations.reduce((function(t, n) {
	            return t.add(n.key);
	        }), wn());
	    }, t.prototype.isEqual = function(t) {
	        return this.batchId === t.batchId && Jn(this.mutations, t.mutations, (function(t, n) {
	            return t.isEqual(n);
	        })) && Jn(this.baseMutations, t.baseMutations, (function(t, n) {
	            return t.isEqual(n);
	        }));
	    }, t;
	}(), Zn = /** @class */ function() {
	    function t(t, n, i, e, 
	    /**
	     * A pre-computed mapping from each mutated document to the resulting
	     * version.
	     */
	    r) {
	        this.batch = t, this.Ir = n, this.yr = i, this.streamToken = e, this.Tr = r;
	    }
	    /**
	     * Creates a new MutationBatchResult for the given batch and results. There
	     * must be one result for each mutation in the batch. This static factory
	     * caches a document=>version mapping (docVersions).
	     */    return t.from = function(n, i, e, r) {
	        Wn(n.mutations.length === e.length, "Mutations sent " + n.mutations.length + " must equal results received " + e.length);
	        for (var u = dn(), s = n.mutations, o = 0; o < s.length; o++) u = u.ut(s[o].key, e[o].version);
	        return new t(n, i, e, r, u);
	    }, t;
	}(), ti = /** @class */ function() {
	    function t(t) {
	        this.Er = t, 
	        /**
	         * The inner map for a key -> value pair. Due to the possibility of
	         * collisions we keep a list of entries that we do a linear search through
	         * to find an actual match. Note that collisions should be rare, so we still
	         * expect near constant time lookups in practice.
	         */
	        this.Dr = {};
	    }
	    /** Get a value for this key, or undefined if it does not exist. */    return t.prototype.get = function(t) {
	        var n = this.Er(t), i = this.Dr[n];
	        if (void 0 !== i) for (var e = 0, r = i; e < r.length; e++) {
	            var u = r[e], s = u[0], o = u[1];
	            if (s.isEqual(t)) return o;
	        }
	    }, t.prototype.has = function(t) {
	        return void 0 !== this.get(t);
	    }, 
	    /** Put this key and value in the map. */
	    t.prototype.set = function(t, n) {
	        var i = this.Er(t), e = this.Dr[i];
	        if (void 0 !== e) {
	            for (var r = 0; r < e.length; r++) if (e[r][0].isEqual(t)) return void (e[r] = [ t, n ]);
	            e.push([ t, n ]);
	        } else this.Dr[i] = [ [ t, n ] ];
	    }, 
	    /**
	     * Remove this key from the map. Returns a boolean if anything was deleted.
	     */
	    t.prototype.delete = function(t) {
	        var n = this.Er(t), i = this.Dr[n];
	        if (void 0 === i) return !1;
	        for (var e = 0; e < i.length; e++) if (i[e][0].isEqual(t)) return 1 === i.length ? delete this.Dr[n] : i.splice(e, 1), 
	        !0;
	        return !1;
	    }, t.prototype.forEach = function(t) {
	        W(this.Dr, (function(n, i) {
	            for (var e = 0, r = i; e < r.length; e++) {
	                var u = r[e], s = u[0], o = u[1];
	                t(s, o);
	            }
	        }));
	    }, t.prototype.M = function() {
	        return z(this.Dr);
	    }, t;
	}(), ni = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.targetId = t, this.fromCache = n, this.Rr = i, this.Sr = e;
	    }
	    return t.Ar = function(n, i) {
	        for (var e = wn(), r = wn(), u = 0, s = i.docChanges; u < s.length; u++) {
	            var o = s[u];
	            switch (o.type) {
	              case 0 /* Added */ :
	                e = e.add(o.doc.key);
	                break;
	
	              case 1 /* Removed */ :
	                r = r.add(o.doc.key);
	 // do nothing
	                        }
	        }
	        return new t(n, i.fromCache, e, r);
	    }, t;
	}(), ii = /** @class */ function() {
	    function t(t, n) {
	        var i = this;
	        this.previousValue = t, n && (n.Cr = function(t) {
	            return i.Pr(t);
	        }, this.Vr = function(t) {
	            return n.kr(t);
	        });
	    }
	    return t.prototype.Pr = function(t) {
	        return this.previousValue = Math.max(t, this.previousValue), this.previousValue;
	    }, t.prototype.next = function() {
	        var t = ++this.previousValue;
	        return this.Vr && this.Vr(t), t;
	    }, t.Nr = -1, t;
	}(), ei = function() {
	    var t = this;
	    this.promise = new Promise((function(n, i) {
	        t.resolve = n, t.reject = i;
	    }));
	}, ri = /** @class */ function() {
	    function t(t, n, i, e, r) {
	        this.Or = t, this.Fr = n, this.Ur = i, this.op = e, this.jr = r, this.xr = new ei, 
	        this.then = this.xr.promise.then.bind(this.xr.promise), this.catch = this.xr.promise.catch.bind(this.xr.promise), 
	        // It's normal for the deferred promise to be canceled (due to cancellation)
	        // and so we attach a dummy catch callback to avoid
	        // 'UnhandledPromiseRejectionWarning' log spam.
	        this.xr.promise.catch((function(t) {}));
	    }
	    /**
	     * Creates and returns a DelayedOperation that has been scheduled to be
	     * executed on the provided asyncQueue after the provided delayMs.
	     *
	     * @param asyncQueue The queue to schedule the operation on.
	     * @param id A Timer ID identifying the type of operation this is.
	     * @param delayMs The delay (ms) before the operation should be scheduled.
	     * @param op The operation to run.
	     * @param removalCallback A callback to be called synchronously once the
	     *   operation is executed or canceled, notifying the AsyncQueue to remove it
	     *   from its delayedOperations list.
	     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
	     *   the DelayedOperation class public.
	     */    return t.Lr = function(n, i, e, r, u) {
	        var s = new t(n, i, Date.now() + e, r, u);
	        return s.start(e), s;
	    }, 
	    /**
	     * Starts the timer. This is called immediately after construction by
	     * createAndSchedule().
	     */
	    t.prototype.start = function(t) {
	        var n = this;
	        this.Mr = setTimeout((function() {
	            return n.qr();
	        }), t);
	    }, 
	    /**
	     * Queues the operation to run immediately (if it hasn't already been run or
	     * canceled).
	     */
	    t.prototype.Br = function() {
	        return this.qr();
	    }, 
	    /**
	     * Cancels the operation if it hasn't already been executed or canceled. The
	     * promise will be rejected.
	     *
	     * As long as the operation has not yet been run, calling cancel() provides a
	     * guarantee that the operation will not be run.
	     */
	    t.prototype.cancel = function(t) {
	        null !== this.Mr && (this.clearTimeout(), this.xr.reject(new E(T.CANCELLED, "Operation cancelled" + (t ? ": " + t : ""))));
	    }, t.prototype.qr = function() {
	        var t = this;
	        this.Or.Qr((function() {
	            return null !== t.Mr ? (t.clearTimeout(), t.op().then((function(n) {
	                return t.xr.resolve(n);
	            }))) : Promise.resolve();
	        }));
	    }, t.prototype.clearTimeout = function() {
	        null !== this.Mr && (this.jr(this), clearTimeout(this.Mr), this.Mr = null);
	    }, t;
	}(), ui = /** @class */ function() {
	    function t() {
	        // The last promise in the queue.
	        this.Gr = Promise.resolve(), 
	        // Is this AsyncQueue being shut down? Once it is set to true, it will not
	        // be changed again.
	        this.Wr = !1, 
	        // Operations scheduled to be queued in the future. Operations are
	        // automatically removed after they are run or canceled.
	        this.zr = [], 
	        // visible for testing
	        this.Kr = null, 
	        // Flag set while there's an outstanding AsyncQueue operation, used for
	        // assertion sanity-checks.
	        this.Jr = !1, 
	        // List of TimerIds to fast-forward delays for.
	        this.Hr = [];
	    }
	    return Object.defineProperty(t.prototype, "Yr", {
	        // Is this AsyncQueue being shut down? If true, this instance will not enqueue
	        // any new operations, Promises from enqueue requests will not resolve.
	        get: function() {
	            return this.Wr;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /**
	     * Adds a new operation to the queue without waiting for it to complete (i.e.
	     * we ignore the Promise result).
	     */
	    t.prototype.Qr = function(t) {
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.enqueue(t);
	    }, 
	    /**
	     * Regardless if the queue has initialized shutdown, adds a new operation to the
	     * queue without waiting for it to complete (i.e. we ignore the Promise result).
	     */
	    t.prototype.Xr = function(t) {
	        this.$r(), 
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.Zr(t);
	    }, 
	    /**
	     * Regardless if the queue has initialized shutdown, adds a new operation to the
	     * queue.
	     */
	    t.prototype.tu = function(t) {
	        return this.$r(), this.Zr(t);
	    }, 
	    /**
	     * Adds a new operation to the queue and initialize the shut down of this queue.
	     * Returns a promise that will be resolved when the promise returned by the new
	     * operation is (with its value).
	     * Once this method is called, the only possible way to request running an operation
	     * is through `enqueueAndForgetEvenAfterShutdown`.
	     */
	    t.prototype.nu = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(n) {
	                switch (n.label) {
	                  case 0:
	                    return this.$r(), this.Wr ? [ 3 /*break*/ , 2 ] : (this.Wr = !0, [ 4 /*yield*/ , this.tu(t) ]);
	
	                  case 1:
	                    n.sent(), n.label = 2;
	
	                  case 2:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Adds a new operation to the queue. Returns a promise that will be resolved
	     * when the promise returned by the new operation is (with its value).
	     */
	    t.prototype.enqueue = function(t) {
	        return this.$r(), this.Wr ? new Promise((function(t) {})) : this.Zr(t);
	    }, t.prototype.Zr = function(t) {
	        var n = this, i = this.Gr.then((function() {
	            return n.Jr = !0, t().catch((function(t) {
	                n.Kr = t, n.Jr = !1;
	                var i = t.stack || t.message || "";
	                // Re-throw the error so that this.tail becomes a rejected Promise and
	                // all further attempts to chain (via .then) will just short-circuit
	                // and return the rejected Promise.
	                throw Bn("INTERNAL UNHANDLED ERROR: ", i), 
	                // Escape the promise chain and throw the error globally so that
	                // e.g. any global crash reporting library detects and reports it.
	                // (but not for simulated errors in our tests since this breaks mocha)
	                i.indexOf("Firestore Test Simulated Error") < 0 && setTimeout((function() {
	                    throw t;
	                }), 0), t;
	            })).then((function(t) {
	                return n.Jr = !1, t;
	            }));
	        }));
	        return this.Gr = i, i;
	    }, 
	    /**
	     * Schedules an operation to be queued on the AsyncQueue once the specified
	     * `delayMs` has elapsed. The returned CancelablePromise can be used to cancel
	     * the operation prior to its running.
	     */
	    t.prototype.iu = function(t, n, i) {
	        var e = this;
	        this.$r(), Wn(n >= 0, "Attempted to schedule an operation with a negative delay of " + n), 
	        // Fast-forward delays for timerIds that have been overriden.
	        this.Hr.indexOf(t) > -1 && (n = 0);
	        var r = ri.Lr(this, t, n, i, (function(t) {
	            return e.eu(t);
	        }));
	        return this.zr.push(r), r;
	    }, t.prototype.$r = function() {
	        this.Kr && Gn("AsyncQueue is already failed: " + (this.Kr.stack || this.Kr.message));
	    }, 
	    /**
	     * Verifies there's an operation currently in-progress on the AsyncQueue.
	     * Unfortunately we can't verify that the running code is in the promise chain
	     * of that operation, so this isn't a foolproof check, but it should be enough
	     * to catch some bugs.
	     */
	    t.prototype.ru = function() {
	        Wn(this.Jr, "verifyOpInProgress() called when no op in progress on this queue.");
	    }, 
	    /**
	     * Waits until all currently queued tasks are finished executing. Delayed
	     * operations are not run.
	     */
	    t.prototype.uu = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t;
	            return tslib.__generator(this, (function(n) {
	                switch (n.label) {
	                  case 0:
	                    return [ 4 /*yield*/ , t = this.Gr ];
	
	                  case 1:
	                    n.sent(), n.label = 2;
	
	                  case 2:
	                    if (t !== this.Gr) return [ 3 /*break*/ , 0 ];
	                    n.label = 3;
	
	                  case 3:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * For Tests: Determine if a delayed operation with a particular TimerId
	     * exists.
	     */
	    t.prototype.su = function(t) {
	        for (var n = 0, i = this.zr; n < i.length; n++) {
	            if (i[n].Fr === t) return !0;
	        }
	        return !1;
	    }, 
	    /**
	     * For Tests: Runs some or all delayed operations early.
	     *
	     * @param lastTimerId Delayed operations up to and including this TimerId will
	     *  be drained. Throws if no such operation exists. Pass TimerId.All to run
	     *  all delayed operations.
	     * @returns a Promise that resolves once all operations have been run.
	     */
	    t.prototype.ou = function(t) {
	        var n = this;
	        // Note that draining may generate more delayed ops, so we do that first.
	                return this.uu().then((function() {
	            Wn("all" /* All */ === t || n.su(t), "Attempted to drain to missing operation " + t), 
	            // Run ops in the same order they'd run if they ran naturally.
	            n.zr.sort((function(t, n) {
	                return t.Ur - n.Ur;
	            }));
	            for (var i = 0, e = n.zr; i < e.length; i++) {
	                var r = e[i];
	                if (r.Br(), "all" /* All */ !== t && r.Fr === t) break;
	            }
	            return n.uu();
	        }));
	    }, 
	    /**
	     * For Tests: Skip all subsequent delays for a timer id.
	     */
	    t.prototype.hu = function(t) {
	        this.Hr.push(t);
	    }, 
	    /** Called once a DelayedOperation is run or canceled. */
	    t.prototype.eu = function(t) {
	        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
	        var n = this.zr.indexOf(t);
	        Wn(n >= 0, "Delayed operation not found."), this.zr.splice(n, 1);
	    }, t;
	}(), si = /** @class */ function() {
	    function t(t) {
	        var n = this;
	        // NOTE: next/catchCallback will always point to our own wrapper functions,
	        // not the user's raw next() or catch() callbacks.
	                this.cu = null, this.au = null, 
	        // When the operation resolves, we'll set result or error and mark isDone.
	        this.result = void 0, this.error = void 0, this.fu = !1, 
	        // Set to true when .then() or .catch() are called and prevents additional
	        // chaining.
	        this.lu = !1, t((function(t) {
	            n.fu = !0, n.result = t, n.cu && 
	            // value should be defined unless T is Void, but we can't express
	            // that in the type system.
	            n.cu(t);
	        }), (function(t) {
	            n.fu = !0, n.error = t, n.au && n.au(t);
	        }));
	    }
	    return t.prototype.catch = function(t) {
	        return this.next(void 0, t);
	    }, t.prototype.next = function(n, i) {
	        var e = this;
	        return this.lu && Gn("Called next() or catch() twice for PersistencePromise"), this.lu = !0, 
	        this.fu ? this.error ? this.du(i, this.error) : this.vu(n, this.result) : new t((function(t, r) {
	            e.cu = function(i) {
	                e.vu(n, i).next(t, r);
	            }, e.au = function(n) {
	                e.du(i, n).next(t, r);
	            };
	        }));
	    }, t.prototype.wu = function() {
	        var t = this;
	        return new Promise((function(n, i) {
	            t.next(n, i);
	        }));
	    }, t.prototype.mu = function(n) {
	        try {
	            var i = n();
	            return i instanceof t ? i : t.resolve(i);
	        } catch (n) {
	            return t.reject(n);
	        }
	    }, t.prototype.vu = function(n, i) {
	        return n ? this.mu((function() {
	            return n(i);
	        })) : t.resolve(i);
	    }, t.prototype.du = function(n, i) {
	        return n ? this.mu((function() {
	            return n(i);
	        })) : t.reject(i);
	    }, t.resolve = function(n) {
	        return new t((function(t, i) {
	            t(n);
	        }));
	    }, t.reject = function(n) {
	        return new t((function(t, i) {
	            i(n);
	        }));
	    }, t.pu = function(
	    // Accept all Promise types in waitFor().
	    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    n) {
	        return new t((function(t, i) {
	            var e = 0, r = 0, u = !1;
	            n.forEach((function(n) {
	                ++e, n.next((function() {
	                    ++r, u && r === e && t();
	                }), (function(t) {
	                    return i(t);
	                }));
	            })), u = !0, r === e && t();
	        }));
	    }, 
	    /**
	     * Given an array of predicate functions that asynchronously evaluate to a
	     * boolean, implements a short-circuiting `or` between the results. Predicates
	     * will be evaluated until one of them returns `true`, then stop. The final
	     * result will be whether any of them returned `true`.
	     */
	    t.bu = function(n) {
	        for (var i = t.resolve(!1), e = function(n) {
	            i = i.next((function(i) {
	                return i ? t.resolve(i) : n();
	            }));
	        }, r = 0, u = n; r < u.length; r++) {
	            e(u[r]);
	        }
	        return i;
	    }, t.forEach = function(t, n) {
	        var i = this, e = [];
	        return t.forEach((function(t, r) {
	            e.push(n.call(i, t, r));
	        })), this.pu(e);
	    }, t;
	}();
	
	/** The default database name for a project. */
	/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function oi(t, n) {
	    var i = t[0], e = t[1], r = n[0], u = n[1], s = Kn(i, r);
	    return 0 === s ? Kn(e, u) : s;
	}
	
	/**
	 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
	 * lowest n values passed to `addElement`, and finally reports the largest of
	 * them in `maxValue`.
	 */ var hi = /** @class */ function() {
	    function t(t) {
	        this.gu = t, this.buffer = new B(oi), this.yu = 0;
	    }
	    return t.prototype._u = function() {
	        return ++this.yu;
	    }, t.prototype.Iu = function(t) {
	        var n = [ t, this._u() ];
	        if (this.buffer.size < this.gu) this.buffer = this.buffer.add(n); else {
	            var i = this.buffer.last();
	            oi(n, i) < 0 && (this.buffer = this.buffer.delete(i).add(n));
	        }
	    }, Object.defineProperty(t.prototype, "maxValue", {
	        get: function() {
	            // Guaranteed to be non-empty. If we decide we are not collecting any
	            // sequence numbers, nthSequenceNumber below short-circuits. If we have
	            // decided that we are collecting n sequence numbers, it's because n is some
	            // percentage of the existing sequence numbers. That means we should never
	            // be in a situation where we are collecting sequence numbers but don't
	            // actually have any.
	            return this.buffer.last()[0];
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t;
	}(), ci = {
	    Tu: !1,
	    Eu: 0,
	    Du: 0,
	    Ru: 0
	}, ai = /** @class */ function() {
	    function t(
	    // When we attempt to collect, we will only do so if the cache size is greater than this
	    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
	    t, 
	    // The percentage of sequence numbers that we will attempt to collect
	    n, 
	    // A cap on the total number of sequence numbers that will be collected. This prevents
	    // us from collecting a huge number of sequence numbers if the cache has grown very large.
	    i) {
	        this.Su = t, this.Au = n, this.Cu = i;
	    }
	    return t.Pu = function(n) {
	        return new t(n, t.Vu, t.ku);
	    }, t.Nu = -1, t.Ou = 1048576, t.Fu = 41943040, t.Vu = 10, t.ku = 1e3, t.Uu = new t(t.Fu, t.Vu, t.ku), 
	    t.DISABLED = new t(t.Nu, 0, 0), t;
	}(), fi = /** @class */ function() {
	    function t(t, n) {
	        this.ju = t, this.Or = n, this.xu = !1, this.Lu = null;
	    }
	    return t.prototype.start = function(t) {
	        Wn(null === this.Lu, "Cannot start an already started LruScheduler"), this.ju.params.Su !== ai.Nu && this.Mu(t);
	    }, t.prototype.stop = function() {
	        this.Lu && (this.Lu.cancel(), this.Lu = null);
	    }, Object.defineProperty(t.prototype, "qu", {
	        get: function() {
	            return null !== this.Lu;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.Mu = function(t) {
	        var n = this;
	        Wn(null === this.Lu, "Cannot schedule GC while a task is pending");
	        var i = this.xu ? 3e5 : 6e4;
	        qn("LruGarbageCollector", "Garbage collection scheduled in " + i + "ms"), this.Lu = this.Or.iu("lru_garbage_collection" /* LruGarbageCollection */ , i, (function() {
	            return n.Lu = null, n.xu = !0, t.Bu(n.ju).then((function() {
	                return n.Mu(t);
	            })).catch(pi);
	        }));
	    }, t;
	}(), li = /** @class */ function() {
	    function t(t, n) {
	        this.Qu = t, this.params = n;
	    }
	    /** Given a percentile of target to collect, returns the number of targets to collect. */    return t.prototype.Gu = function(t, n) {
	        return this.Qu.Wu(t).next((function(t) {
	            return Math.floor(n / 100 * t);
	        }));
	    }, 
	    /** Returns the nth sequence number, counting in order from the smallest. */
	    t.prototype.zu = function(t, n) {
	        var i = this;
	        if (0 === n) return si.resolve(ii.Nr);
	        var e = new hi(n);
	        return this.Qu.$i(t, (function(t) {
	            return e.Iu(t.sequenceNumber);
	        })).next((function() {
	            return i.Qu.Ku(t, (function(t) {
	                return e.Iu(t);
	            }));
	        })).next((function() {
	            return e.maxValue;
	        }));
	    }, 
	    /**
	     * Removes targets with a sequence number equal to or less than the given upper bound, and removes
	     * document associations with those targets.
	     */
	    t.prototype.Ju = function(t, n, i) {
	        return this.Qu.Ju(t, n, i);
	    }, 
	    /**
	     * Removes documents that have a sequence number equal to or less than the upper bound and are not
	     * otherwise pinned.
	     */
	    t.prototype.Hu = function(t, n) {
	        return this.Qu.Hu(t, n);
	    }, t.prototype.Yu = function(t, n) {
	        var i = this;
	        return this.params.Su === ai.Nu ? (qn("LruGarbageCollector", "Garbage collection skipped; disabled"), 
	        si.resolve(ci)) : this.Xu(t).next((function(e) {
	            return e < i.params.Su ? (qn("LruGarbageCollector", "Garbage collection skipped; Cache size " + e + " is lower than threshold " + i.params.Su), 
	            ci) : i.$u(t, n);
	        }));
	    }, t.prototype.Xu = function(t) {
	        return this.Qu.Xu(t);
	    }, t.prototype.$u = function(t, n) {
	        var i, e, r, u, s, h, c, a = this, f = Date.now();
	        return this.Gu(t, this.params.Au).next((function(n) {
	            // Cap at the configured max
	            return n > a.params.Cu ? (qn("LruGarbageCollector", "Capping sequence numbers to collect down to the maximum of " + a.params.Cu + " from " + n), 
	            e = a.params.Cu) : e = n, u = Date.now(), a.zu(t, e);
	        })).next((function(e) {
	            return i = e, s = Date.now(), a.Ju(t, i, n);
	        })).next((function(n) {
	            return r = n, h = Date.now(), a.Hu(t, i);
	        })).next((function(t) {
	            (c = Date.now(), Ln() <= logger.LogLevel.DEBUG) && qn("LruGarbageCollector", "LRU Garbage Collection\n\tCounted targets in " + (u - f) + "ms\n\tDetermined least recently used " + e + " in " + (s - u) + "ms\n\tRemoved " + r + " targets in " + (h - s) + "ms\n\tRemoved " + t + " documents in " + (c - h) + "ms\nTotal Duration: " + (c - f) + "ms");
	            return si.resolve({
	                Tu: !0,
	                Eu: e,
	                Du: r,
	                Ru: t
	            });
	        }));
	    }, t;
	}(), di = /** @class */ function() {
	    function t() {
	        // A set of outstanding references to a document sorted by key.
	        this.Zu = new B(vi.bn), 
	        // A set of outstanding references to a document sorted by target id.
	        this.ts = new B(vi.ns);
	    }
	    /** Returns true if the reference set contains no references. */    return t.prototype.M = function() {
	        return this.Zu.M();
	    }, 
	    /** Adds a reference to the given document key for the given ID. */
	    t.prototype.es = function(t, n) {
	        var i = new vi(t, n);
	        this.Zu = this.Zu.add(i), this.ts = this.ts.add(i);
	    }, 
	    /** Add references to the given document keys for the given ID. */
	    t.prototype.rs = function(t, n) {
	        var i = this;
	        t.forEach((function(t) {
	            return i.es(t, n);
	        }));
	    }, 
	    /**
	     * Removes a reference to the given document key for the given
	     * ID.
	     */
	    t.prototype.us = function(t, n) {
	        this.ss(new vi(t, n));
	    }, t.prototype.os = function(t, n) {
	        var i = this;
	        t.forEach((function(t) {
	            return i.us(t, n);
	        }));
	    }, 
	    /**
	     * Clears all references with a given ID. Calls removeRef() for each key
	     * removed.
	     */
	    t.prototype.hs = function(t) {
	        var n = this, i = j.EMPTY, e = new vi(i, t), r = new vi(i, t + 1), u = [];
	        return this.ts.kt([ e, r ], (function(t) {
	            n.ss(t), u.push(t.key);
	        })), u;
	    }, t.prototype.cs = function() {
	        var t = this;
	        this.Zu.forEach((function(n) {
	            return t.ss(n);
	        }));
	    }, t.prototype.ss = function(t) {
	        this.Zu = this.Zu.delete(t), this.ts = this.ts.delete(t);
	    }, t.prototype.as = function(t) {
	        var n = j.EMPTY, i = new vi(n, t), e = new vi(n, t + 1), r = wn();
	        return this.ts.kt([ i, e ], (function(t) {
	            r = r.add(t.key);
	        })), r;
	    }, t.prototype.fs = function(t) {
	        var n = new vi(t, 0), i = this.Zu.Ot(n);
	        return null !== i && t.isEqual(i.key);
	    }, t;
	}(), vi = /** @class */ function() {
	    function t(t, n) {
	        this.key = t, this.ls = n;
	    }
	    /** Compare by key then by ID */    return t.bn = function(t, n) {
	        return j.F(t.key, n.key) || Kn(t.ls, n.ls);
	    }, 
	    /** Compare by ID then by key */
	    t.ns = function(t, n) {
	        return Kn(t.ls, n.ls) || j.F(t.key, n.key);
	    }, t;
	}(), wi = /** @class */ function() {
	    function t() {
	        // A mapping of document key to the new cache entry that should be written (or null if any
	        // existing cache entry should be removed).
	        this.ds = new ti((function(t) {
	            return t.toString();
	        })), this.vs = !1;
	    }
	    return Object.defineProperty(t.prototype, "readTime", {
	        get: function() {
	            return Wn(void 0 !== this.ws, "Read time is not set. All removeEntry() calls must include a readTime if `trackRemovals` is used."), 
	            this.ws;
	        },
	        set: function(t) {
	            // Right now (for simplicity) we just track a single readTime for all the
	            // added entries since we expect them to all be the same, but we could
	            // rework to store per-entry readTimes if necessary.
	            Wn(void 0 === this.ws || this.ws.isEqual(t), "All changes in a RemoteDocumentChangeBuffer must have the same read time"), 
	            this.ws = t;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /**
	     * Buffers a `RemoteDocumentCache.addEntry()` call.
	     *
	     * You can only modify documents that have already been retrieved via
	     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
	     */
	    t.prototype.ms = function(t, n) {
	        this.ps(), this.readTime = n, this.ds.set(t.key, t);
	    }, 
	    /**
	     * Buffers a `RemoteDocumentCache.removeEntry()` call.
	     *
	     * You can only remove documents that have already been retrieved via
	     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
	     */
	    t.prototype.bs = function(t, n) {
	        this.ps(), n && (this.readTime = n), this.ds.set(t, null);
	    }, 
	    /**
	     * Looks up an entry in the cache. The buffered changes will first be checked,
	     * and if no buffered change applies, this will forward to
	     * `RemoteDocumentCache.getEntry()`.
	     *
	     * @param transaction The transaction in which to perform any persistence
	     *     operations.
	     * @param documentKey The key of the entry to look up.
	     * @return The cached Document or NoDocument entry, or null if we have nothing
	     * cached.
	     */
	    t.prototype.gs = function(t, n) {
	        this.ps();
	        var i = this.ds.get(n);
	        return void 0 !== i ? si.resolve(i) : this.ys(t, n);
	    }, 
	    /**
	     * Looks up several entries in the cache, forwarding to
	     * `RemoteDocumentCache.getEntry()`.
	     *
	     * @param transaction The transaction in which to perform any persistence
	     *     operations.
	     * @param documentKeys The keys of the entries to look up.
	     * @return A map of cached `Document`s or `NoDocument`s, indexed by key. If an
	     *     entry cannot be found, the corresponding key will be mapped to a null
	     *     value.
	     */
	    t.prototype.getEntries = function(t, n) {
	        return this._s(t, n);
	    }, 
	    /**
	     * Applies buffered changes to the underlying RemoteDocumentCache, using
	     * the provided transaction.
	     */
	    t.prototype.apply = function(t) {
	        return this.ps(), this.vs = !0, this.Is(t);
	    }, 
	    /** Helper to assert this.changes is not null  */
	    t.prototype.ps = function() {
	        Wn(!this.vs, "Changes have already been applied.");
	    }, t;
	}(), mi = /** @class */ function() {
	    function t(
	    /** Manages our in-memory or durable persistence. */
	    t, n, i) {
	        this.persistence = t, this.Ts = n, 
	        /**
	         * The set of document references maintained by any local views.
	         */
	        this.Es = new di, 
	        /**
	         * Maps a targetID to data about its target.
	         *
	         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
	         * of `applyRemoteEvent()` idempotent.
	         */
	        this.Ds = new x(Kn), 
	        /** Maps a target to its targetID. */
	        // TODO(wuandy): Evaluate if TargetId can be part of Target.
	        this.Rs = new ti((function(t) {
	            return t.canonicalId();
	        })), 
	        /**
	         * The read time of the last entry processed by `getNewDocumentChanges()`.
	         *
	         * PORTING NOTE: This is only used for multi-tab synchronization.
	         */
	        this.Ss = k.MIN, Wn(t.qu, "LocalStore was passed an unstarted persistence implementation"), 
	        this.persistence.Cs.As(this.Es), this.Ps = t.Vs(i), this.ks = t.Ns(), this.Os = t.Fs(), 
	        this.Us = new Pi(this.ks, this.Ps, this.persistence.js()), this.Ts.xs(this.Us);
	    }
	    /** Starts the LocalStore. */    return t.prototype.start = function() {
	        return this.Ls();
	    }, 
	    /**
	     * Tells the LocalStore that the currently authenticated user has changed.
	     *
	     * In response the local store switches the mutation queue to the new user and
	     * returns any resulting document changes.
	     */
	    // PORTING NOTE: Android and iOS only return the documents affected by the
	    // change.
	    t.prototype.Ms = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i, e, r = this;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return n = this.Ps, i = this.Us, [ 4 /*yield*/ , this.persistence.runTransaction("Handle user change", "readonly", (function(e) {
	                        // Swap out the mutation queue, grabbing the pending mutation batches
	                        // before and after.
	                        var u;
	                        return r.Ps.qs(e).next((function(s) {
	                            return u = s, n = r.persistence.Vs(t), 
	                            // Recreate our LocalDocumentsView using the new
	                            // MutationQueue.
	                            i = new Pi(r.ks, n, r.persistence.js()), n.qs(e);
	                        })).next((function(t) {
	                            for (var n = [], r = [], s = wn(), o = 0, h = u; o < h.length; o++) {
	                                var c = h[o];
	                                n.push(c.batchId);
	                                for (var a = 0, f = c.mutations; a < f.length; a++) {
	                                    var l = f[a];
	                                    s = s.add(l.key);
	                                }
	                            }
	                            for (var d = 0, v = t; d < v.length; d++) {
	                                c = v[d];
	                                r.push(c.batchId);
	                                for (var w = 0, m = c.mutations; w < m.length; w++) {
	                                    l = m[w];
	                                    s = s.add(l.key);
	                                }
	                            }
	                            // Return the set of all (potentially) changed documents and the list
	                            // of mutation batch IDs that were affected by change.
	                                                        return i.Bs(e, s).next((function(t) {
	                                return {
	                                    Qs: t,
	                                    Gs: n,
	                                    Ws: r
	                                };
	                            }));
	                        }));
	                    })) ];
	
	                  case 1:
	                    return e = u.sent(), this.Ps = n, this.Us = i, this.Ts.xs(this.Us), [ 2 /*return*/ , e ];
	                }
	            }));
	        }));
	    }, 
	    /* Accept locally generated Mutations and commit them to storage. */
	    t.prototype.zs = function(t) {
	        var n, i = this, e = V.now(), r = t.reduce((function(t, n) {
	            return t.add(n.key);
	        }), wn());
	        return this.persistence.runTransaction("Locally write mutations", "readwrite", (function(u) {
	            // Load and apply all existing mutations. This lets us compute the
	            // current base state for all non-idempotent transforms before applying
	            // any additional user-provided writes.
	            return i.Us.Bs(u, r).next((function(r) {
	                n = r;
	                for (
	                // For non-idempotent mutations (such as `FieldValue.increment()`),
	                // we record the base state in a separate patch mutation. This is
	                // later used to guarantee consistent values and prevents flicker
	                // even if the backend sends us an update that already includes our
	                // transform.
	                var s = [], o = 0, h = t; o < h.length; o++) {
	                    var c = h[o], a = c.in(n.get(c.key));
	                    null != a && 
	                    // NOTE: The base state should only be applied if there's some
	                    // existing document to override, so use a Precondition of
	                    // exists=true
	                    s.push(new Vt(c.key, a, a.en(), At.exists(!0)));
	                }
	                return i.Ps.Ks(u, e, s, t);
	            }));
	        })).then((function(t) {
	            var i = t._r(n);
	            return {
	                batchId: t.batchId,
	                ds: i
	            };
	        }));
	    }, 
	    /** Returns the local view of the documents affected by a mutation batch. */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.Js = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Lookup mutation documents", "readonly", (function(i) {
	            return n.Ps.Hs(i, t).next((function(t) {
	                return t ? n.Us.Bs(i, t) : si.resolve(null);
	            }));
	        }));
	    }, 
	    /**
	     * Acknowledge the given batch.
	     *
	     * On the happy path when a batch is acknowledged, the local store will
	     *
	     *  + remove the batch from the mutation queue;
	     *  + apply the changes to the remote document cache;
	     *  + recalculate the latency compensated view implied by those changes (there
	     *    may be mutations in the queue that affect the documents but haven't been
	     *    acknowledged yet); and
	     *  + give the changed documents back the sync engine
	     *
	     * @returns The resulting (modified) documents.
	     */
	    t.prototype.Ys = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Acknowledge batch", "readwrite-primary", (function(i) {
	            var e = t.batch.keys(), r = n.ks.Xs({
	                $s: !0
	            });
	            return n.Ps.Ys(i, t.batch, t.streamToken).next((function() {
	                return n.Zs(i, t, r);
	            })).next((function() {
	                return r.apply(i);
	            })).next((function() {
	                return n.Ps.to(i);
	            })).next((function() {
	                return n.Us.Bs(i, e);
	            }));
	        }));
	    }, 
	    /**
	     * Remove mutations from the MutationQueue for the specified batch;
	     * LocalDocuments will be recalculated.
	     *
	     * @returns The resulting modified documents.
	     */
	    t.prototype.no = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Reject batch", "readwrite-primary", (function(i) {
	            var e;
	            return n.Ps.io(i, t).next((function(t) {
	                return Wn(null !== t, "Attempt to reject nonexistent batch!"), e = t.keys(), n.Ps.eo(i, t);
	            })).next((function() {
	                return n.Ps.to(i);
	            })).next((function() {
	                return n.Us.Bs(i, e);
	            }));
	        }));
	    }, 
	    /**
	     * Returns the largest (latest) batch id in mutation queue that is pending server response.
	     * Returns `BATCHID_UNKNOWN` if the queue is empty.
	     */
	    t.prototype.ro = function() {
	        var t = this;
	        return this.persistence.runTransaction("Get highest unacknowledged batch id", "readonly", (function(n) {
	            return t.Ps.ro(n);
	        }));
	    }, 
	    /** Returns the last recorded stream token for the current user. */
	    t.prototype.uo = function() {
	        var t = this;
	        return this.persistence.runTransaction("Get last stream token", "readonly", (function(n) {
	            return t.Ps.uo(n);
	        }));
	    }, 
	    /**
	     * Sets the stream token for the current user without acknowledging any
	     * mutation batch. This is usually only useful after a stream handshake or in
	     * response to an error that requires clearing the stream token.
	     */
	    t.prototype.so = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Set last stream token", "readwrite-primary", (function(i) {
	            return n.Ps.so(i, t);
	        }));
	    }, 
	    /**
	     * Returns the last consistent snapshot processed (used by the RemoteStore to
	     * determine whether to buffer incoming snapshots from the backend).
	     */
	    t.prototype.oo = function() {
	        var t = this;
	        return this.persistence.runTransaction("Get last remote snapshot version", "readonly", (function(n) {
	            return t.Os.oo(n);
	        }));
	    }, 
	    /**
	     * Update the "ground-state" (remote) documents. We assume that the remote
	     * event reflects any write batches that have been acknowledged or rejected
	     * (i.e. we do not re-apply local mutations to updates from this event).
	     *
	     * LocalDocuments are re-calculated if there are remaining mutations in the
	     * queue.
	     */
	    t.prototype.ho = function(n) {
	        var i = this, e = n.ni, r = this.Ds;
	        return this.persistence.runTransaction("Apply remote event", "readwrite-primary", (function(u) {
	            var s = i.ks.Xs({
	                $s: !0
	            });
	            // Reset newTargetDataByTargetMap in case this transaction gets re-run.
	                        r = i.Ds;
	            var o = [];
	            n.wi.forEach((function(n, s) {
	                var h = r.get(s);
	                if (h) {
	                    // Only update the remote keys if the target is still active. This
	                    // ensures that we can persist the updated target data along with
	                    // the updated assignment.
	                    o.push(i.Os.co(u, n.Ei, s).next((function() {
	                        return i.Os.ao(u, n.Ii, s);
	                    })));
	                    var c = n.resumeToken;
	                    // Update the resume token if the change includes one.
	                                        if (c.Lt() > 0) {
	                        var a = h.ei(c, e).ii(u.fo);
	                        r = r.ut(s, a), 
	                        // Update the target data if there are target changes (or if
	                        // sufficient time has passed since the last update).
	                        t.lo(h, a, n) && o.push(i.Os.do(u, a));
	                    }
	                }
	            }));
	            var h = hn(), c = wn();
	            // HACK: The only reason we allow a null snapshot version is so that we
	            // can synthesize remote events when we get permission denied errors while
	            // trying to resolve the state of a locally cached document that is in
	            // limbo.
	            if (n.pi.forEach((function(t, n) {
	                c = c.add(t);
	            })), 
	            // Each loop iteration only affects its "own" doc, so it's safe to get all the remote
	            // documents in advance in a single call.
	            o.push(s.getEntries(u, c).next((function(t) {
	                n.pi.forEach((function(r, c) {
	                    var a = t.get(r);
	                    // Note: The order of the steps below is important, since we want
	                    // to ensure that rejected limbo resolutions (which fabricate
	                    // NoDocuments with SnapshotVersion.MIN) never add documents to
	                    // cache.
	                                        c instanceof Lt && c.version.isEqual(k.MIN) ? (
	                    // NoDocuments with SnapshotVersion.MIN are used in manufactured
	                    // events. We remove these documents from cache since we lost
	                    // access.
	                    s.bs(r, e), h = h.ut(r, c)) : null == a || c.version.k(a.version) > 0 || 0 === c.version.k(a.version) && a.hasPendingWrites ? (Wn(!k.MIN.isEqual(e), "Cannot add a document when the remote version is zero"), 
	                    s.ms(c, e), h = h.ut(r, c)) : qn("LocalStore", "Ignoring outdated watch update for ", r, ". Current version:", a.version, " Watch version:", c.version), 
	                    n.bi.has(r) && o.push(i.persistence.Cs.vo(u, r));
	                }));
	            }))), !e.isEqual(k.MIN)) {
	                var a = i.Os.oo(u).next((function(t) {
	                    return Wn(e.k(t) >= 0, "Watch stream reverted to previous snapshot?? " + e + " < " + t), 
	                    i.Os.wo(u, u.fo, e);
	                }));
	                o.push(a);
	            }
	            return si.pu(o).next((function() {
	                return s.apply(u);
	            })).next((function() {
	                return i.Us.mo(u, h);
	            }));
	        })).then((function(t) {
	            return i.Ds = r, t;
	        }));
	    }, 
	    /**
	     * Returns true if the newTargetData should be persisted during an update of
	     * an active target. TargetData should always be persisted when a target is
	     * being released and should not call this function.
	     *
	     * While the target is active, TargetData updates can be omitted when nothing
	     * about the target has changed except metadata like the resume token or
	     * snapshot version. Occasionally it's worth the extra write to prevent these
	     * values from getting too stale after a crash, but this doesn't have to be
	     * too frequent.
	     */
	    t.lo = function(t, n, i) {
	        // Always persist target data if we don't already have a resume token.
	        return Wn(n.resumeToken.Lt() > 0, "Attempted to persist target data with no resume token"), 
	        0 === t.resumeToken.Lt() || (n.ni.N() - t.ni.N() >= this.po || i.Ii.size + i.Ti.size + i.Ei.size > 0);
	        // Don't allow resume token changes to be buffered indefinitely. This
	        // allows us to be reasonably up-to-date after a crash and avoids needing
	        // to loop over all active queries on shutdown. Especially in the browser
	        // we may not get time to do anything interesting while the current tab is
	        // closing.
	        }, 
	    /**
	     * Notify local store of the changed views to locally pin documents.
	     */
	    t.prototype.bo = function(t) {
	        for (var n = this, i = 0, e = t; i < e.length; i++) {
	            var r = e[i], u = r.targetId;
	            if (this.Es.rs(r.Rr, u), this.Es.os(r.Sr, u), !r.fromCache) {
	                var s = this.Ds.get(u);
	                Wn(null !== s, "Can't set limbo-free snapshot version for unknown target: " + u);
	                // Advance the last limbo free snapshot version
	                var o = s.ni, h = s.ri(o);
	                this.Ds = this.Ds.ut(u, h);
	            }
	        }
	        return this.persistence.runTransaction("notifyLocalViewChanges", "readwrite", (function(i) {
	            return si.forEach(t, (function(t) {
	                return si.forEach(t.Sr, (function(t) {
	                    return n.persistence.Cs.us(i, t);
	                }));
	            }));
	        }));
	    }, 
	    /**
	     * Gets the mutation batch after the passed in batchId in the mutation queue
	     * or null if empty.
	     * @param afterBatchId If provided, the batch to search after.
	     * @returns The next mutation or null if there wasn't one.
	     */
	    t.prototype.yo = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Get next mutation batch", "readonly", (function(i) {
	            return void 0 === t && (t = -1), n.Ps._o(i, t);
	        }));
	    }, 
	    /**
	     * Read the current value of a Document with a given key or null if not
	     * found - used for testing.
	     */
	    t.prototype.Io = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("read document", "readonly", (function(i) {
	            return n.Us.To(i, t);
	        }));
	    }, 
	    /**
	     * Assigns the given target an internal ID so that its results can be pinned so
	     * they don't get GC'd. A target must be allocated in the local store before
	     * the store can be used to manage its view.
	     *
	     * Allocating an already allocated `Target` will return the existing `TargetData`
	     * for that `Target`.
	     */
	    t.prototype.Eo = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Allocate target", "readwrite", (function(i) {
	            var e;
	            return n.Os.Do(i, t).next((function(r) {
	                return r ? (
	                // This target has been listened to previously, so reuse the
	                // previous targetID.
	                // TODO(mcg): freshen last accessed date?
	                e = r, si.resolve(e)) : n.Os.Ro(i).next((function(r) {
	                    return e = new en(t, r, 0 /* Listen */ , i.fo), n.Os.So(i, e).next((function() {
	                        return e;
	                    }));
	                }));
	            }));
	        })).then((function(i) {
	            return null === n.Ds.get(i.targetId) && (n.Ds = n.Ds.ut(i.targetId, i), n.Rs.set(t, i.targetId)), 
	            i;
	        }));
	    }, 
	    /**
	     * Returns the TargetData as seen by the LocalStore, including updates that may
	     * have not yet been persisted to the TargetCache.
	     */
	    // Visible for testing.
	    t.prototype.Do = function(t, n) {
	        var i = this.Rs.get(n);
	        return void 0 !== i ? si.resolve(this.Ds.get(i)) : this.Os.Do(t, n);
	    }, 
	    /**
	     * Unpin all the documents associated with the given target. If
	     * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
	     * directly removes the associated target data from the target cache.
	     *
	     * Releasing a non-existing `Target` is a no-op.
	     */
	    // PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
	    t.prototype.Ao = function(t, n) {
	        var i = this, e = this.Ds.get(t);
	        Wn(null !== e, "Tried to release nonexistent target: " + t);
	        var r = n ? "readwrite" : "readwrite-primary";
	        return this.persistence.runTransaction("Release target", r, (function(r) {
	            // References for documents sent via Watch are automatically removed
	            // when we delete a target's data from the reference delegate.
	            // Since this does not remove references for locally mutated documents,
	            // we have to remove the target associations for these documents
	            // manually.
	            // This operation needs to be run inside the transaction since EagerGC
	            // uses the local view references during the transaction's commit.
	            // Fortunately, the operation is safe to be re-run in case the
	            // transaction fails since there are no side effects if the target has
	            // already been removed.
	            var u = i.Es.hs(t);
	            return n ? si.resolve() : si.forEach(u, (function(t) {
	                return i.persistence.Cs.us(r, t);
	            })).next((function() {
	                i.persistence.Cs.removeTarget(r, e);
	            }));
	        })).then((function() {
	            i.Ds = i.Ds.remove(t), i.Rs.delete(e.target);
	        }));
	    }, 
	    /**
	     * Runs the specified query against the local store and returns the results,
	     * potentially taking advantage of query data from previous executions (such
	     * as the set of remote keys).
	     *
	     * @param usePreviousResults Whether results from previous executions can
	     * be used to optimize this query execution.
	     */
	    t.prototype.Co = function(t, n) {
	        var i = this, e = k.MIN, r = wn();
	        return this.persistence.runTransaction("Execute query", "readonly", (function(u) {
	            return i.Do(u, t.qn()).next((function(t) {
	                if (t) return e = t.lastLimboFreeSnapshotVersion, i.Os.Po(u, t.targetId).next((function(t) {
	                    r = t;
	                }));
	            })).next((function() {
	                return i.Ts.Vo(u, t, n ? e : k.MIN, n ? r : wn());
	            })).next((function(t) {
	                return {
	                    documents: t,
	                    ko: r
	                };
	            }));
	        }));
	    }, 
	    /**
	     * Returns the keys of the documents that are associated with the given
	     * target id in the remote table.
	     */
	    t.prototype.No = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Remote document keys", "readonly", (function(i) {
	            return n.Os.Po(i, t);
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.Oo = function() {
	        return this.persistence.Oo();
	    }, 
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.Fo = function(t) {
	        this.Ps.Uo(t);
	    }, 
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.jo = function(t) {
	        this.persistence.jo(t);
	    }, t.prototype.Zs = function(t, n, i) {
	        var e = this, r = n.batch, u = r.keys(), s = si.resolve();
	        return u.forEach((function(e) {
	            s = s.next((function() {
	                return i.gs(t, e);
	            })).next((function(t) {
	                var u = t, s = n.Tr.get(e);
	                Wn(null !== s, "ackVersions should contain every doc in the write."), (!u || u.version.k(s) < 0) && ((u = r.Bt(e, u, n)) ? 
	                // We use the commitVersion as the readTime rather than the
	                // document's updateTime since the updateTime is not advanced
	                // for updates that do not modify the underlying document.
	                i.ms(u, n.Ir) : Wn(!t, "Mutation batch " + r + " applied to document " + t + " resulted in null"));
	            }));
	        })), s.next((function() {
	            return e.Ps.eo(t, r);
	        }));
	    }, t.prototype.Bu = function(t) {
	        var n = this;
	        return this.persistence.runTransaction("Collect garbage", "readwrite-primary", (function(i) {
	            return t.Yu(i, n.Ds);
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.xo = function(t) {
	        var n = this, i = this.Ds.get(t);
	        return i ? Promise.resolve(i.target) : this.persistence.runTransaction("Get target data", "readonly", (function(i) {
	            return n.Os.ce(i, t).next((function(t) {
	                return t ? t.target : null;
	            }));
	        }));
	    }, 
	    /**
	     * Returns the set of documents that have been updated since the last call.
	     * If this is the first call, returns the set of changes since client
	     * initialization. Further invocations will return document changes since
	     * the point of rejection.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.Lo = function() {
	        var t = this;
	        return this.persistence.runTransaction("Get new document changes", "readonly", (function(n) {
	            return t.ks.Lo(n, t.Ss);
	        })).then((function(n) {
	            var i = n.Mo, e = n.readTime;
	            return t.Ss = e, i;
	        }));
	    }, 
	    /**
	     * Reads the newest document change from persistence and forwards the internal
	     * synchronization marker so that calls to `getNewDocumentChanges()`
	     * only return changes that happened after client initialization.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.Ls = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t, n = this;
	            return tslib.__generator(this, (function(i) {
	                switch (i.label) {
	                  case 0:
	                    return t = this, [ 4 /*yield*/ , this.persistence.runTransaction("Synchronize last document change read time", "readonly", (function(t) {
	                        return n.ks.qo(t);
	                    })) ];
	
	                  case 1:
	                    return t.Ss = i.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * The maximum time to leave a resume token buffered without writing it out.
	     * This value is arbitrary: it's long enough to avoid several writes
	     * (possibly indefinitely if updates come more frequently than this) but
	     * short enough that restarting after crashing will still have a pretty
	     * recent resume token.
	     */
	    t.po = 3e8, t;
	}();
	
	/**
	 * Verifies the error thrown by a LocalStore operation. If a LocalStore
	 * operation fails because the primary lease has been taken by another client,
	 * we ignore the error (the persistence layer will immediately call
	 * `applyPrimaryLease` to propagate the primary state change). All other errors
	 * are re-thrown.
	 *
	 * @param err An error returned by a LocalStore operation.
	 * @return A Promise that resolves after we recovered, or the original error.
	 */
	function pi(t) {
	    return tslib.__awaiter(this, void 0, void 0, (function() {
	        return tslib.__generator(this, (function(n) {
	            if (t.code !== T.FAILED_PRECONDITION || t.message !== Ai) throw t;
	            return qn("LocalStore", "Unexpectedly lost primary lease"), [ 2 /*return*/ ];
	        }));
	    }));
	}
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// The format of the LocalStorage key that stores the client state is:
	//     firestore_clients_<persistence_prefix>_<instance_key>
	/** Assembles the key for a client state in WebStorage */
	function bi(t, n) {
	    return Wn(-1 === n.indexOf("_"), "Client key cannot contain '_', but was '" + n + "'"), 
	    "firestore_clients_" + t + "_" + n;
	}
	
	// The format of the WebStorage key that stores the mutation state is:
	//     firestore_mutations_<persistence_prefix>_<batch_id>
	//     (for unauthenticated users)
	// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
	
	// 'user_uid' is last to avoid needing to escape '_' characters that it might
	// contain.
	/** Assembles the key for a mutation batch in WebStorage */
	function gi(t, n, i) {
	    var e = "firestore_mutations_" + t + "_" + i;
	    return n.t() && (e += "_" + n.uid), e;
	}
	
	// The format of the WebStorage key that stores a query target's metadata is:
	//     firestore_targets_<persistence_prefix>_<target_id>
	/** Assembles the key for a query state in WebStorage */
	function yi(t, n) {
	    return "firestore_targets_" + t + "_" + n;
	}
	
	// The WebStorage prefix that stores the primary tab's online state. The
	// format of the key is:
	//     firestore_online_state_<persistence_prefix>
	/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _i = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.user = t, this.batchId = n, this.state = i, this.error = e, Wn(void 0 !== e == ("rejected" === i), "MutationMetadata must contain an error iff state is 'rejected'");
	    }
	    /**
	     * Parses a MutationMetadata from its JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */    return t.Bo = function(n, i, e) {
	        var r = JSON.parse(e), u = "object" == typeof r && -1 !== [ "pending", "acknowledged", "rejected" ].indexOf(r.state) && (void 0 === r.error || "object" == typeof r.error), s = void 0;
	        return u && r.error && (u = "string" == typeof r.error.message && "string" == typeof r.error.code) && (s = new E(r.error.code, r.error.message)), 
	        u ? new t(n, i, r.state, s) : (Bn("SharedClientState", "Failed to parse mutation state for ID '" + i + "': " + e), 
	        null);
	    }, t.prototype.Qo = function() {
	        var t = {
	            state: this.state,
	            updateTimeMs: Date.now()
	        };
	        return this.error && (t.error = {
	            code: this.error.code,
	            message: this.error.message
	        }), JSON.stringify(t);
	    }, t;
	}(), Ii = /** @class */ function() {
	    function t(t, n, i) {
	        this.targetId = t, this.state = n, this.error = i, Wn(void 0 !== i == ("rejected" === n), "QueryTargetMetadata must contain an error iff state is 'rejected'");
	    }
	    /**
	     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */    return t.Bo = function(n, i) {
	        var e = JSON.parse(i), r = "object" == typeof e && -1 !== [ "not-current", "current", "rejected" ].indexOf(e.state) && (void 0 === e.error || "object" == typeof e.error), u = void 0;
	        return r && e.error && (r = "string" == typeof e.error.message && "string" == typeof e.error.code) && (u = new E(e.error.code, e.error.message)), 
	        r ? new t(n, e.state, u) : (Bn("SharedClientState", "Failed to parse target state for ID '" + n + "': " + i), 
	        null);
	    }, t.prototype.Qo = function() {
	        var t = {
	            state: this.state,
	            updateTimeMs: Date.now()
	        };
	        return this.error && (t.error = {
	            code: this.error.code,
	            message: this.error.message
	        }), JSON.stringify(t);
	    }, t;
	}(), Ti = /** @class */ function() {
	    function t(t, n) {
	        this.clientId = t, this.activeTargetIds = n;
	    }
	    /**
	     * Parses a RemoteClientState from the JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */    return t.Bo = function(n, i) {
	        for (var e = JSON.parse(i), r = "object" == typeof e && e.activeTargetIds instanceof Array, u = pn(), s = 0; r && s < e.activeTargetIds.length; ++s) r = Y(e.activeTargetIds[s]), 
	        u = u.add(e.activeTargetIds[s]);
	        return r ? new t(n, u) : (Bn("SharedClientState", "Failed to parse client data for instance '" + n + "': " + i), 
	        null);
	    }, t;
	}(), Ei = /** @class */ function() {
	    function t(t, n) {
	        this.clientId = t, this.onlineState = n;
	    }
	    /**
	     * Parses a SharedOnlineState from its JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */    return t.Bo = function(n) {
	        var i = JSON.parse(n);
	        return "object" == typeof i && -1 !== [ "Unknown", "Online", "Offline" ].indexOf(i.onlineState) && "string" == typeof i.clientId ? new t(i.clientId, i.onlineState) : (Bn("SharedClientState", "Failed to parse online state: " + n), 
	        null);
	    }, t;
	}(), Di = /** @class */ function() {
	    function t() {
	        this.activeTargetIds = pn();
	    }
	    return t.prototype.Go = function(t) {
	        this.activeTargetIds = this.activeTargetIds.add(t);
	    }, t.prototype.Wo = function(t) {
	        this.activeTargetIds = this.activeTargetIds.delete(t);
	    }, 
	    /**
	     * Converts this entry into a JSON-encoded format we can use for WebStorage.
	     * Does not encode `clientId` as it is part of the key in WebStorage.
	     */
	    t.prototype.Qo = function() {
	        var t = {
	            activeTargetIds: this.activeTargetIds.K(),
	            updateTimeMs: Date.now()
	        };
	        return JSON.stringify(t);
	    }, t;
	}(), Ri = /** @class */ function() {
	    function t(n, i, e, r, u) {
	        if (this.zo = n, this.platform = i, this.persistenceKey = e, this.Ko = r, this.Jo = null, 
	        this.Ho = null, this.Cr = null, this.Yo = {}, this.Xo = this.$o.bind(this), this.qu = !1, 
	        /**
	         * Captures WebStorage events that occur before `start()` is called. These
	         * events are replayed once `WebStorageSharedClientState` is started.
	         */
	        this.Zo = [], !t.th(this.platform)) throw new E(T.UNIMPLEMENTED, "LocalStorage is not available on this platform.");
	        // Escape the special characters mentioned here:
	        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
	                var s = e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
	        this.storage = this.platform.window.localStorage, this.currentUser = u, this.nh = bi(this.persistenceKey, this.Ko), 
	        this.ih = 
	        /** Assembles the key for the current sequence number. */
	        function(t) {
	            return "firestore_sequence_number_" + t;
	        }(this.persistenceKey), this.Yo[this.Ko] = new Di, this.eh = new RegExp("^firestore_clients_" + s + "_([^_]*)$"), 
	        this.rh = new RegExp("^firestore_mutations_" + s + "_(\\d+)(?:_(.*))?$"), this.uh = new RegExp("^firestore_targets_" + s + "_(\\d+)$"), 
	        this.sh = 
	        /** Assembles the key for the online state of the primary tab. */
	        function(t) {
	            return "firestore_online_state_" + t;
	        }
	        // The WebStorage key prefix for the key that stores the last sequence number allocated. The key
	        // looks like 'firestore_sequence_number_<persistence_prefix>'.
	        (this.persistenceKey), 
	        // Rather than adding the storage observer during start(), we add the
	        // storage observer during initialization. This ensures that we collect
	        // events before other components populate their initial state (during their
	        // respective start() calls). Otherwise, we might for example miss a
	        // mutation that is added after LocalStore's start() processed the existing
	        // mutations but before we observe WebStorage events.
	        this.platform.window.addEventListener("storage", this.Xo);
	    }
	    /** Returns 'true' if WebStorage is available in the current environment. */    return t.th = function(t) {
	        return !(!t.window || null == t.window.localStorage);
	    }, t.prototype.start = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t, n, i, e, r, s, o, h, c, a, f, l = this;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return Wn(!this.qu, "WebStorageSharedClientState already started"), Wn(null !== this.Jo, "syncEngine property must be set before calling start()"), 
	                    Wn(null !== this.Ho, "onlineStateHandler property must be set before calling start()"), 
	                    [ 4 /*yield*/ , this.Jo.Oo() ];
	
	                  case 1:
	                    for (t = u.sent(), n = 0, i = t; n < i.length; n++) (e = i[n]) !== this.Ko && (r = this.getItem(bi(this.persistenceKey, e))) && (s = Ti.Bo(e, r)) && (this.Yo[s.clientId] = s);
	                    for (this.oh(), (o = this.storage.getItem(this.sh)) && (h = this.hh(o)) && this.ah(h), 
	                    c = 0, a = this.Zo; c < a.length; c++) f = a[c], this.$o(f);
	                    return this.Zo = [], 
	                    // Register a window unload hook to remove the client metadata entry from
	                    // WebStorage even if `shutdown()` was not called.
	                    this.platform.window.addEventListener("unload", (function() {
	                        return l.shutdown();
	                    })), this.qu = !0, [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.kr = function(t) {
	        this.setItem(this.ih, JSON.stringify(t));
	    }, t.prototype.fh = function() {
	        var t = pn();
	        return W(this.Yo, (function(n, i) {
	            t = t.Ft(i.activeTargetIds);
	        })), t;
	    }, t.prototype.lh = function(t) {
	        // This is not using `obj.forEach` since `forEach` doesn't support early
	        // return.
	        for (var n in this.Yo) if (this.Yo.hasOwnProperty(n) && this.Yo[n].activeTargetIds.has(t)) return !0;
	        return !1;
	    }, t.prototype.dh = function(t) {
	        this.vh(t, "pending");
	    }, t.prototype.wh = function(t, n, i) {
	        this.vh(t, n, i), 
	        // Once a final mutation result is observed by other clients, they no longer
	        // access the mutation's metadata entry. Since WebStorage replays events
	        // in order, it is safe to delete the entry right after updating it.
	        this.mh(t);
	    }, t.prototype.ph = function(t) {
	        var n = "not-current";
	        // Lookup an existing query state if the target ID was already registered
	        // by another tab
	                if (this.lh(t)) {
	            var i = this.storage.getItem(yi(this.persistenceKey, t));
	            if (i) {
	                var e = Ii.Bo(t, i);
	                e && (n = e.state);
	            }
	        }
	        return this.bh.Go(t), this.oh(), n;
	    }, t.prototype.gh = function(t) {
	        this.bh.Wo(t), this.oh();
	    }, t.prototype.yh = function(t) {
	        return this.bh.activeTargetIds.has(t);
	    }, t.prototype._h = function(t) {
	        this.removeItem(yi(this.persistenceKey, t));
	    }, t.prototype.Ih = function(t, n, i) {
	        this.Th(t, n, i);
	    }, t.prototype.Ms = function(t, n, i) {
	        var e = this;
	        n.forEach((function(t) {
	            e.mh(t);
	        })), this.currentUser = t, i.forEach((function(t) {
	            e.dh(t);
	        }));
	    }, t.prototype.Eh = function(t) {
	        this.Dh(t);
	    }, t.prototype.shutdown = function() {
	        this.qu && (this.platform.window.removeEventListener("storage", this.Xo), this.removeItem(this.nh), 
	        this.qu = !1);
	    }, t.prototype.getItem = function(t) {
	        var n = this.storage.getItem(t);
	        return qn("SharedClientState", "READ", t, n), n;
	    }, t.prototype.setItem = function(t, n) {
	        qn("SharedClientState", "SET", t, n), this.storage.setItem(t, n);
	    }, t.prototype.removeItem = function(t) {
	        qn("SharedClientState", "REMOVE", t), this.storage.removeItem(t);
	    }, t.prototype.$o = function(t) {
	        var n = this;
	        if (t.storageArea === this.storage) {
	            if (qn("SharedClientState", "EVENT", t.key, t.newValue), t.key === this.nh) return void Bn("Received WebStorage notification for local change. Another client might have garbage-collected our state");
	            this.zo.Qr((function() {
	                return tslib.__awaiter(n, void 0, void 0, (function() {
	                    var n, i, e, r, s, o;
	                    return tslib.__generator(this, (function(u) {
	                        if (!this.qu) return this.Zo.push(t), [ 2 /*return*/ ];
	                        if (null === t.key) return [ 2 /*return*/ ];
	                        if (this.eh.test(t.key)) {
	                            if (null == t.newValue) return i = this.Rh(t.key), [ 2 /*return*/ , this.Sh(i, null) ];
	                            if (n = this.Ah(t.key, t.newValue)) return [ 2 /*return*/ , this.Sh(n.clientId, n) ];
	                        } else if (this.rh.test(t.key)) {
	                            if (null !== t.newValue && (e = this.Ch(t.key, t.newValue))) return [ 2 /*return*/ , this.Ph(e) ];
	                        } else if (this.uh.test(t.key)) {
	                            if (null !== t.newValue && (r = this.Vh(t.key, t.newValue))) return [ 2 /*return*/ , this.kh(r) ];
	                        } else if (t.key === this.sh) {
	                            if (null !== t.newValue && (s = this.hh(t.newValue))) return [ 2 /*return*/ , this.ah(s) ];
	                        } else t.key === this.ih && (Wn(!!this.Cr, "Missing sequenceNumberHandler"), (o = function(t) {
	                            var n = ii.Nr;
	                            if (null != t) try {
	                                var i = JSON.parse(t);
	                                Wn("number" == typeof i, "Found non-numeric sequence number"), n = i;
	                            } catch (t) {
	                                Bn("SharedClientState", "Failed to read sequence number from WebStorage", t);
	                            }
	                            return n;
	                        }
	                        /**
	 * `MemorySharedClientState` is a simple implementation of SharedClientState for
	 * clients using memory persistence. The state in this class remains fully
	 * isolated and no synchronization is performed.
	 */ (t.newValue)) !== ii.Nr && this.Cr(o));
	                        return [ 2 /*return*/ ];
	                    }));
	                }));
	            }));
	        }
	    }, Object.defineProperty(t.prototype, "bh", {
	        get: function() {
	            return this.Yo[this.Ko];
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.oh = function() {
	        this.setItem(this.nh, this.bh.Qo());
	    }, t.prototype.vh = function(t, n, i) {
	        var e = new _i(this.currentUser, t, n, i), r = gi(this.persistenceKey, this.currentUser, t);
	        this.setItem(r, e.Qo());
	    }, t.prototype.mh = function(t) {
	        var n = gi(this.persistenceKey, this.currentUser, t);
	        this.removeItem(n);
	    }, t.prototype.Dh = function(t) {
	        var n = {
	            clientId: this.Ko,
	            onlineState: t
	        };
	        this.storage.setItem(this.sh, JSON.stringify(n));
	    }, t.prototype.Th = function(t, n, i) {
	        var e = yi(this.persistenceKey, t), r = new Ii(t, n, i);
	        this.setItem(e, r.Qo());
	    }, 
	    /**
	     * Parses a client state key in WebStorage. Returns null if the key does not
	     * match the expected key format.
	     */
	    t.prototype.Rh = function(t) {
	        var n = this.eh.exec(t);
	        return n ? n[1] : null;
	    }, 
	    /**
	     * Parses a client state in WebStorage. Returns 'null' if the value could not
	     * be parsed.
	     */
	    t.prototype.Ah = function(t, n) {
	        var i = this.Rh(t);
	        return Wn(null !== i, "Cannot parse client state key '" + t + "'"), Ti.Bo(i, n);
	    }, 
	    /**
	     * Parses a mutation batch state in WebStorage. Returns 'null' if the value
	     * could not be parsed.
	     */
	    t.prototype.Ch = function(t, n) {
	        var i = this.rh.exec(t);
	        Wn(null !== i, "Cannot parse mutation batch key '" + t + "'");
	        var e = Number(i[1]), r = void 0 !== i[2] ? i[2] : null;
	        return _i.Bo(new I(r), e, n);
	    }, 
	    /**
	     * Parses a query target state from WebStorage. Returns 'null' if the value
	     * could not be parsed.
	     */
	    t.prototype.Vh = function(t, n) {
	        var i = this.uh.exec(t);
	        Wn(null !== i, "Cannot parse query target key '" + t + "'");
	        var e = Number(i[1]);
	        return Ii.Bo(e, n);
	    }, 
	    /**
	     * Parses an online state from WebStorage. Returns 'null' if the value
	     * could not be parsed.
	     */
	    t.prototype.hh = function(t) {
	        return Ei.Bo(t);
	    }, t.prototype.Ph = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(n) {
	                return t.user.uid !== this.currentUser.uid ? (qn("SharedClientState", "Ignoring mutation for non-active user " + t.user.uid), 
	                [ 2 /*return*/ ]) : [ 2 /*return*/ , this.Jo.Nh(t.batchId, t.state, t.error) ];
	            }));
	        }));
	    }, t.prototype.kh = function(t) {
	        return this.Jo.Oh(t.targetId, t.state, t.error);
	    }, t.prototype.Sh = function(t, n) {
	        var i = this, e = this.fh();
	        n ? this.Yo[t] = n : delete this.Yo[t];
	        var s = this.fh(), o = [], h = [];
	        return s.forEach((function(t) {
	            return tslib.__awaiter(i, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(n) {
	                    return e.has(t) || o.push(t), [ 2 /*return*/ ];
	                }));
	            }));
	        })), e.forEach((function(t) {
	            return tslib.__awaiter(i, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(n) {
	                    return s.has(t) || h.push(t), [ 2 /*return*/ ];
	                }));
	            }));
	        })), this.Jo.Fh(o, h);
	    }, t.prototype.ah = function(t) {
	        // We check whether the client that wrote this online state is still active
	        // by comparing its client ID to the list of clients kept active in
	        // IndexedDb. If a client does not update their IndexedDb client state
	        // within 5 seconds, it is considered inactive and we don't emit an online
	        // state event.
	        this.Yo[t.clientId] && this.Ho(t.onlineState);
	    }, t;
	}();
	
	/**
	 * Holds the state of a mutation batch, including its user ID, batch ID and
	 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
	 */
	// Visible for testing
	var Si = /** @class */ function() {
	    function t() {
	        this.Uh = new Di, this.jh = {}, this.Jo = null, this.Ho = null, this.Cr = null;
	    }
	    return t.prototype.dh = function(t) {
	        // No op.
	    }, t.prototype.wh = function(t, n, i) {
	        // No op.
	    }, t.prototype.ph = function(t) {
	        return this.Uh.Go(t), this.jh[t] || "not-current";
	    }, t.prototype.Ih = function(t, n, i) {
	        this.jh[t] = n;
	    }, t.prototype.gh = function(t) {
	        this.Uh.Wo(t);
	    }, t.prototype.yh = function(t) {
	        return this.Uh.activeTargetIds.has(t);
	    }, t.prototype._h = function(t) {
	        delete this.jh[t];
	    }, t.prototype.fh = function() {
	        return this.Uh.activeTargetIds;
	    }, t.prototype.lh = function(t) {
	        return this.Uh.activeTargetIds.has(t);
	    }, t.prototype.start = function() {
	        return this.Uh = new Di, Promise.resolve();
	    }, t.prototype.Ms = function(t, n, i) {
	        // No op.
	    }, t.prototype.Eh = function(t) {
	        // No op.
	    }, t.prototype.shutdown = function() {}, t.prototype.kr = function(t) {}, t;
	}(), Ai = "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.", Ci = /** @class */ function() {
	    function t() {
	        this.xh = [];
	    }
	    return t.prototype.Lh = function(t) {
	        this.xh.push(t);
	    }, t.prototype.Mh = function() {
	        this.xh.forEach((function(t) {
	            return t();
	        }));
	    }, t;
	}(), Pi = /** @class */ function() {
	    function t(t, n, i) {
	        this.qh = t, this.Ps = n, this.Bh = i;
	    }
	    /**
	     * Get the local view of the document identified by `key`.
	     *
	     * @return Local view of the document or null if we don't have any cached
	     * state for it.
	     */    return t.prototype.To = function(t, n) {
	        var i = this;
	        return this.Ps.Qh(t, n).next((function(e) {
	            return i.Gh(t, n, e);
	        }));
	    }, 
	    /** Internal version of `getDocument` that allows reusing batches. */
	    t.prototype.Gh = function(t, n, i) {
	        return this.qh.gs(t, n).next((function(t) {
	            for (var e = 0, r = i; e < r.length; e++) {
	                t = r[e].qt(n, t);
	            }
	            return t;
	        }));
	    }, 
	    // Returns the view of the given `docs` as they would appear after applying
	    // all mutations in the given `batches`.
	    t.prototype.Wh = function(t, n, i) {
	        var e = cn();
	        return n.forEach((function(t, n) {
	            for (var r = 0, u = i; r < u.length; r++) {
	                n = u[r].qt(t, n);
	            }
	            e = e.ut(t, n);
	        })), e;
	    }, 
	    /**
	     * Gets the local view of the documents identified by `keys`.
	     *
	     * If we don't have cached state for a document in `keys`, a NoDocument will
	     * be stored for that key in the resulting set.
	     */
	    t.prototype.Bs = function(t, n) {
	        var i = this;
	        return this.qh.getEntries(t, n).next((function(n) {
	            return i.mo(t, n);
	        }));
	    }, 
	    /**
	     * Similar to `getDocuments`, but creates the local view from the given
	     * `baseDocs` without retrieving documents from the local store.
	     */
	    t.prototype.mo = function(t, n) {
	        var i = this;
	        return this.Ps.zh(t, n).next((function(e) {
	            var r = i.Wh(t, n, e), u = hn();
	            return r.forEach((function(t, n) {
	                // TODO(http://b/32275378): Don't conflate missing / deleted.
	                n || (n = new Lt(t, k.V())), u = u.ut(t, n);
	            })), u;
	        }));
	    }, 
	    /**
	     * Performs a query against the local view of all documents.
	     *
	     * @param transaction The persistence transaction.
	     * @param query The query to match documents against.
	     * @param sinceReadTime If not set to SnapshotVersion.MIN, return only
	     *     documents that have been read since this snapshot version (exclusive).
	     */
	    t.prototype.Vo = function(t, n, i) {
	        return n.Tn() ? this.Kh(t, n.path) : n.Yn() ? this.Jh(t, n, i) : this.Hh(t, n, i);
	    }, t.prototype.Kh = function(t, n) {
	        // Just do a simple document lookup.
	        return this.To(t, new j(n)).next((function(t) {
	            var n = fn();
	            return t instanceof xt && (n = n.ut(t.key, t)), n;
	        }));
	    }, t.prototype.Jh = function(t, n, i) {
	        var e = this;
	        Wn(n.path.M(), "Currently we only support collection group queries at the root.");
	        var r = n.collectionGroup, u = fn();
	        return this.Bh.Yh(t, r).next((function(s) {
	            // Perform a collection query against each parent that contains the
	            // collectionId and aggregate the results.
	            return si.forEach(s, (function(s) {
	                var o = n.Ln(s.child(r));
	                return e.Hh(t, o, i).next((function(t) {
	                    t.forEach((function(t, n) {
	                        u = u.ut(t, n);
	                    }));
	                }));
	            })).next((function() {
	                return u;
	            }));
	        }));
	    }, t.prototype.Hh = function(t, n, i) {
	        var e, r, u = this;
	        // Query the remote documents and overlay mutations.
	                return this.qh.Vo(t, n, i).next((function(i) {
	            return e = i, u.Ps.Xh(t, n);
	        })).next((function(n) {
	            // It is possible that a PatchMutation can make a document match a query, even if
	            // the version in the RemoteDocumentCache is not a match yet (waiting for server
	            // to ack). To handle this, we find all document keys affected by the PatchMutations
	            // that are not in `result` yet, and back fill them via `remoteDocumentCache.getEntries`,
	            // otherwise those `PatchMutations` will be ignored because no base document can be found,
	            // and lead to missing result for the query.
	            return r = n, u.$h(t, r, e).next((function(t) {
	                e = t;
	                for (var n = 0, i = r; n < i.length; n++) for (var u = i[n], s = 0, o = u.mutations; s < o.length; s++) {
	                    var h = o[s], c = h.key, a = e.get(c), f = h.qt(a, a, u.gr);
	                    e = f instanceof xt ? e.ut(c, f) : e.remove(c);
	                }
	            }));
	        })).next((function() {
	            // Finally, filter out any documents that don't actually match
	            // the query.
	            return e.forEach((function(t, i) {
	                n.matches(i) || (e = e.remove(t));
	            })), e;
	        }));
	    }, t.prototype.$h = function(t, n, i) {
	        for (var e = wn(), r = 0, u = n; r < u.length; r++) for (var s = 0, o = u[r].mutations; s < o.length; s++) {
	            var h = o[s];
	            h instanceof Vt && null === i.get(h.key) && (e = e.add(h.key));
	        }
	        var c = i;
	        return this.qh.getEntries(t, e).next((function(t) {
	            return t.forEach((function(t, n) {
	                null !== n && n instanceof xt && (c = c.ut(t, n));
	            })), c;
	        }));
	    }, t;
	}(), Vi = /** @class */ function() {
	    function t() {}
	    return t.prototype.xs = function(t) {
	        this.Zh = t;
	    }, t.prototype.Vo = function(t, n, i, e) {
	        var r = this;
	        // Queries that match all documents don't benefit from using
	        // IndexFreeQueries. It is more efficient to scan all documents in a
	        // collection, rather than to perform individual lookups.
	        return Wn(void 0 !== this.Zh, "setLocalDocumentsView() not called"), n.Mn() || i.isEqual(k.MIN) ? this.tc(t, n) : this.Zh.Bs(t, e).next((function(u) {
	            var s = r.nc(n, u);
	            return (n.Kn() || n.Jn()) && r.ic(n.Dn, s, e, i) ? r.tc(t, n) : (Ln() <= logger.LogLevel.DEBUG && qn("IndexFreeQueryEngine", "Re-using previous result from %s to execute query: %s", i.toString(), n.toString()), 
	            r.Zh.Vo(t, n, i).next((function(t) {
	                // We merge `previousResults` into `updateResults`, since
	                // `updateResults` is already a DocumentMap. If a document is
	                // contained in both lists, then its contents are the same.
	                return s.forEach((function(n) {
	                    t = t.ut(n.key, n);
	                })), t;
	            })));
	        }));
	        // Queries that have never seen a snapshot without limbo free documents
	        // should also be run as a full collection scan.
	        }, 
	    /** Applies the query filter and sorting to the provided documents.  */
	    t.prototype.nc = function(t, n) {
	        // Sort the documents and re-apply the query filter since previously
	        // matching documents do not necessarily still match the query.
	        var i = new B((function(n, i) {
	            return t.Bn(n, i);
	        }));
	        return n.forEach((function(n, e) {
	            e instanceof xt && t.matches(e) && (i = i.add(e));
	        })), i;
	    }, 
	    /**
	     * Determines if a limit query needs to be refilled from cache, making it
	     * ineligible for index-free execution.
	     *
	     * @param sortedPreviousResults The documents that matched the query when it
	     * was last synchronized, sorted by the query's comparator.
	     * @param remoteKeys The document keys that matched the query at the last
	     * snapshot.
	     * @param limboFreeSnapshotVersion The version of the snapshot when the query
	     * was last synchronized.
	     */
	    t.prototype.ic = function(t, n, i, e) {
	        // The query needs to be refilled if a previously matching document no
	        // longer matches.
	        if (i.size !== n.size) return !0;
	        // Limit queries are not eligible for index-free query execution if there is
	        // a potential that an older document from cache now sorts before a document
	        // that was previously part of the limit. This, however, can only happen if
	        // the document at the edge of the limit goes out of limit.
	        // If a document that is not the limit boundary sorts differently,
	        // the boundary of the limit itself did not change and documents from cache
	        // will continue to be "rejected" by this boundary. Therefore, we can ignore
	        // any modifications that don't affect the last document.
	                var r = "F" /* First */ === t ? n.last() : n.first();
	        return !!r && (r.hasPendingWrites || r.version.k(e) > 0);
	    }, t.prototype.tc = function(t, n) {
	        return Ln() <= logger.LogLevel.DEBUG && qn("IndexFreeQueryEngine", "Using full collection scan to execute query: %s", n.toString()), 
	        this.Zh.Vo(t, n, k.MIN);
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Encodes a resource path into a IndexedDb-compatible string form.
	 */
	function ki(t) {
	    for (var n = "", i = 0; i < t.length; i++) n.length > 0 && (n = Oi(n)), n = Ni(t.get(i), n);
	    return Oi(n);
	}
	
	/** Encodes a single segment of a resource path into the given result */ function Ni(t, n) {
	    for (var i = n, e = t.length, r = 0; r < e; r++) {
	        var u = t.charAt(r);
	        switch (u) {
	          case "\0":
	            i += "";
	            break;
	
	          case "":
	            i += "";
	            break;
	
	          default:
	            i += u;
	        }
	    }
	    return i;
	}
	
	/** Encodes a path separator into the given result */ function Oi(t) {
	    return t + "";
	}
	
	/**
	 * Decodes the given IndexedDb-compatible string form of a resource path into
	 * a ResourcePath instance. Note that this method is not suitable for use with
	 * decoding resource names from the server; those are One Platform format
	 * strings.
	 */ function Fi(t) {
	    // Event the empty path must encode as a path of at least length 2. A path
	    // with exactly 2 must be the empty path.
	    var n = t.length;
	    if (Wn(n >= 2, "Invalid path " + t), 2 === n) return Wn("" === t.charAt(0) && "" === t.charAt(1), "Non-empty path " + t + " had length 2"), 
	    O.Y;
	    // Escape characters cannot exist past the second-to-last position in the
	    // source value.
	        for (var i = n - 2, e = [], r = "", u = 0; u < n; ) {
	        // The last two characters of a valid encoded path must be a separator, so
	        // there must be an end to this segment.
	        var s = t.indexOf("", u);
	        switch ((s < 0 || s > i) && Gn('Invalid encoded resource path: "' + t + '"'), t.charAt(s + 1)) {
	          case "":
	            var o = t.substring(u, s), h = void 0;
	            0 === r.length ? 
	            // Avoid copying for the common case of a segment that excludes \0
	            // and \001
	            h = o : (h = r += o, r = ""), e.push(h);
	            break;
	
	          case "":
	            r += t.substring(u, s), r += "\0";
	            break;
	
	          case "":
	            // The escape character can be used in the output to encode itself.
	            r += t.substring(u, s + 1);
	            break;
	
	          default:
	            Gn('Invalid encoded resource path: "' + t + '"');
	        }
	        u = s + 2;
	    }
	    return new O(e);
	}
	
	/**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * An in-memory implementation of IndexManager.
	 */ var Ui = /** @class */ function() {
	    function t() {
	        this.ec = new ji;
	    }
	    return t.prototype.rc = function(t, n) {
	        return this.ec.add(n), si.resolve();
	    }, t.prototype.Yh = function(t, n) {
	        return si.resolve(this.ec.getEntries(n));
	    }, t;
	}(), ji = /** @class */ function() {
	    function t() {
	        this.index = {};
	    }
	    // Returns false if the entry already existed.
	        return t.prototype.add = function(t) {
	        Wn(t.length % 2 == 1, "Expected a collection path.");
	        var n = t.B(), i = t.L(), e = this.index[n] || new B(O.F), r = !e.has(i);
	        return this.index[n] = e.add(i), r;
	    }, t.prototype.has = function(t) {
	        var n = t.B(), i = t.L(), e = this.index[n];
	        return e && e.has(i);
	    }, t.prototype.getEntries = function(t) {
	        return (this.index[t] || new B(O.F)).K();
	    }, t;
	}(), xi = /** @class */ function() {
	    function t(t, n) {
	        this.Bh = t, this.Cs = n, 
	        /**
	         * The set of all mutations that have been sent but not yet been applied to
	         * the backend.
	         */
	        this.Ps = [], 
	        /** Next value to use when assigning sequential IDs to each mutation batch. */
	        this.uc = 1, 
	        /** The last received stream token from the server, used to acknowledge which
	         * responses the client has processed. Stream tokens are opaque checkpoint
	         * markers whose only real value is their inclusion in the next request.
	         */
	        this.lastStreamToken = K.Mt, 
	        /** An ordered mapping between documents and the mutations batch IDs. */
	        this.sc = new B(vi.bn);
	    }
	    return t.prototype.oc = function(t) {
	        return si.resolve(0 === this.Ps.length);
	    }, t.prototype.Ys = function(t, n, i) {
	        var e = n.batchId, r = this.hc(e, "acknowledged");
	        Wn(0 === r, "Can only acknowledge the first batch in the mutation queue");
	        // Verify that the batch in the queue is the one to be acknowledged.
	        var u = this.Ps[r];
	        return Wn(e === u.batchId, "Queue ordering failure: expected batch " + e + ", got batch " + u.batchId), 
	        this.lastStreamToken = i, si.resolve();
	    }, t.prototype.uo = function(t) {
	        return si.resolve(this.lastStreamToken);
	    }, t.prototype.so = function(t, n) {
	        return this.lastStreamToken = n, si.resolve();
	    }, t.prototype.Ks = function(t, n, i, e) {
	        Wn(0 !== e.length, "Mutation batches should not be empty");
	        var r = this.uc;
	        (this.uc++, this.Ps.length > 0) && Wn(this.Ps[this.Ps.length - 1].batchId < r, "Mutation batchIDs must be monotonically increasing order");
	        var u = new $n(r, n, i, e);
	        this.Ps.push(u);
	        // Track references by document key and index collection parents.
	        for (var s = 0, o = e; s < o.length; s++) {
	            var h = o[s];
	            this.sc = this.sc.add(new vi(h.key, r)), this.Bh.rc(t, h.key.path.L());
	        }
	        return si.resolve(u);
	    }, t.prototype.io = function(t, n) {
	        return si.resolve(this.cc(n));
	    }, t.prototype.Hs = function(t, n) {
	        var i = this.cc(n);
	        return Wn(null != i, "Failed to find local mutation batch."), si.resolve(i.keys());
	    }, t.prototype._o = function(t, n) {
	        var i = n + 1, e = this.ac(i), r = e < 0 ? 0 : e;
	        // The requested batchId may still be out of range so normalize it to the
	        // start of the queue.
	                return si.resolve(this.Ps.length > r ? this.Ps[r] : null);
	    }, t.prototype.ro = function() {
	        return si.resolve(0 === this.Ps.length ? -1 : this.uc - 1);
	    }, t.prototype.qs = function(t) {
	        return si.resolve(this.Ps.slice());
	    }, t.prototype.Qh = function(t, n) {
	        var i = this, e = new vi(n, 0), r = new vi(n, Number.POSITIVE_INFINITY), u = [];
	        return this.sc.kt([ e, r ], (function(t) {
	            Wn(n.isEqual(t.key), "Should only iterate over a single key's batches");
	            var e = i.cc(t.ls);
	            Wn(null !== e, "Batches in the index must exist in the main table"), u.push(e);
	        })), si.resolve(u);
	    }, t.prototype.zh = function(t, n) {
	        var i = this, e = new B(Kn);
	        return n.forEach((function(t) {
	            var n = new vi(t, 0), r = new vi(t, Number.POSITIVE_INFINITY);
	            i.sc.kt([ n, r ], (function(n) {
	                Wn(t.isEqual(n.key), "For each key, should only iterate over a single key's batches"), 
	                e = e.add(n.ls);
	            }));
	        })), si.resolve(this.fc(e));
	    }, t.prototype.Xh = function(t, n) {
	        Wn(!n.Yn(), "CollectionGroup queries should be handled in LocalDocumentsView");
	        // Use the query path as a prefix for testing if a document matches the
	        // query.
	        var i = n.path, e = i.length + 1, r = i;
	        j.nt(r) || (r = r.child(""));
	        var u = new vi(new j(r), 0), s = new B(Kn);
	        // Find unique batchIDs referenced by all documents potentially matching the
	        // query.
	                return this.sc.Nt((function(t) {
	            var n = t.key.path;
	            return !!i.G(n) && (
	            // Rows with document keys more than one segment longer than the query
	            // path can't be matches. For example, a query on 'rooms' can't match
	            // the document /rooms/abc/messages/xyx.
	            // TODO(mcg): we'll need a different scanner when we implement
	            // ancestor queries.
	            n.length === e && (s = s.add(t.ls)), !0);
	        }), u), si.resolve(this.fc(s));
	    }, t.prototype.fc = function(t) {
	        var n = this, i = [];
	        // Construct an array of matching batches, sorted by batchID to ensure that
	        // multiple mutations affecting the same document key are applied in order.
	                return t.forEach((function(t) {
	            var e = n.cc(t);
	            null !== e && i.push(e);
	        })), i;
	    }, t.prototype.eo = function(t, n) {
	        var i = this;
	        // Find the position of the first batch for removal. This need not be the
	        // first entry in the queue.
	                Wn(0 === this.hc(n.batchId, "removed"), "Can only remove the first entry of the mutation queue"), 
	        this.Ps.shift();
	        var e = this.sc;
	        return si.forEach(n.mutations, (function(r) {
	            var u = new vi(r.key, n.batchId);
	            return e = e.delete(u), i.Cs.lc(t, r.key);
	        })).next((function() {
	            i.sc = e;
	        }));
	    }, t.prototype.Uo = function(t) {
	        // No-op since the memory mutation queue does not maintain a separate cache.
	    }, t.prototype.fs = function(t, n) {
	        var i = new vi(n, 0), e = this.sc.Ot(i);
	        return si.resolve(n.isEqual(e && e.key));
	    }, t.prototype.to = function(t) {
	        return 0 === this.Ps.length && Wn(this.sc.M(), "Document leak -- detected dangling mutation references when queue is empty."), 
	        si.resolve();
	    }, 
	    /**
	     * Finds the index of the given batchId in the mutation queue and asserts that
	     * the resulting index is within the bounds of the queue.
	     *
	     * @param batchId The batchId to search for
	     * @param action A description of what the caller is doing, phrased in passive
	     * form (e.g. "acknowledged" in a routine that acknowledges batches).
	     */
	    t.prototype.hc = function(t, n) {
	        var i = this.ac(t);
	        return Wn(i >= 0 && i < this.Ps.length, "Batches must exist to be " + n), i;
	    }, 
	    /**
	     * Finds the index of the given batchId in the mutation queue. This operation
	     * is O(1).
	     *
	     * @return The computed index of the batch with the given batchId, based on
	     * the state of the queue. Note this index can be negative if the requested
	     * batchId has already been remvoed from the queue or past the end of the
	     * queue if the batchId is larger than the last added batch.
	     */
	    t.prototype.ac = function(t) {
	        return 0 === this.Ps.length ? 0 : t - this.Ps[0].batchId;
	        // Examine the front of the queue to figure out the difference between the
	        // batchId and indexes in the array. Note that since the queue is ordered
	        // by batchId, if the first batch has a larger batchId then the requested
	        // batchId doesn't exist in the queue.
	        }, 
	    /**
	     * A version of lookupMutationBatch that doesn't return a promise, this makes
	     * other functions that uses this code easier to read and more efficent.
	     */
	    t.prototype.cc = function(t) {
	        var n = this.ac(t);
	        if (n < 0 || n >= this.Ps.length) return null;
	        var i = this.Ps[n];
	        return Wn(i.batchId === t, "If found batch must match"), i;
	    }, t;
	}();
	
	/**
	 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
	 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
	 * in indexeddb_schema.ts
	 */ var Li = /** @class */ function() {
	    /**
	     * @param sizer Used to assess the size of a document. For eager GC, this is expected to just
	     * return 0 to avoid unnecessarily doing the work of calculating the size.
	     */
	    function t(t, n) {
	        this.Bh = t, this.dc = n, 
	        /** Underlying cache of documents and their read times. */
	        this.docs = new x(j.F), 
	        /** Size of all cached documents. */
	        this.size = 0;
	    }
	    /**
	     * Adds the supplied entry to the cache and updates the cache size as appropriate.
	     *
	     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()`.
	     */    return t.prototype.ms = function(t, n, i) {
	        Wn(!i.isEqual(k.MIN), "Cannot add a document with a read time of zero");
	        var e = n.key, r = this.docs.get(e), u = r ? r.size : 0, s = this.dc(n);
	        return this.docs = this.docs.ut(e, {
	            vc: n,
	            size: s,
	            readTime: i
	        }), this.size += s - u, this.Bh.rc(t, e.path.L());
	    }, 
	    /**
	     * Removes the specified entry from the cache and updates the cache size as appropriate.
	     *
	     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()`.
	     */
	    t.prototype.bs = function(t) {
	        var n = this.docs.get(t);
	        n && (this.docs = this.docs.remove(t), this.size -= n.size);
	    }, t.prototype.gs = function(t, n) {
	        var i = this.docs.get(n);
	        return si.resolve(i ? i.vc : null);
	    }, t.prototype.getEntries = function(t, n) {
	        var i = this, e = cn();
	        return n.forEach((function(t) {
	            var n = i.docs.get(t);
	            e = e.ut(t, n ? n.vc : null);
	        })), si.resolve(e);
	    }, t.prototype.Vo = function(t, n, i) {
	        Wn(!n.Yn(), "CollectionGroup queries should be handled in LocalDocumentsView");
	        for (var e = fn(), r = new j(n.path.child("")), u = this.docs.lt(r)
	        // Documents are ordered by key, so we can use a prefix scan to narrow down
	        // the documents we need to match the query against.
	        ; u.gt(); ) {
	            var s = u.bt(), o = s.key, h = s.value, c = h.vc, a = h.readTime;
	            if (!n.path.G(o.path)) break;
	            a.k(i) <= 0 || c instanceof xt && n.matches(c) && (e = e.ut(c.key, c));
	        }
	        return si.resolve(e);
	    }, t.prototype.wc = function(t, n) {
	        return si.forEach(this.docs, (function(t) {
	            return n(t);
	        }));
	    }, t.prototype.Lo = function(t, n) {
	        throw new Error("getNewDocumentChanges() is not supported with MemoryPersistence");
	    }, t.prototype.qo = function(t) {
	        return si.resolve(k.MIN);
	    }, t.prototype.Xs = function(n) {
	        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
	        // a separate changelog and does not need special handling for removals.
	        return new t.mc(this);
	    }, t.prototype.pc = function(t) {
	        return si.resolve(this.size);
	    }, 
	    /**
	     * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.
	     */
	    t.mc = /** @class */ function(t) {
	        function i(n) {
	            var i = t.call(this) || this;
	            return i.bc = n, i;
	        }
	        return tslib.__extends(i, t), i.prototype.Is = function(t) {
	            var n = this, i = [];
	            return this.ds.forEach((function(e, r) {
	                r ? i.push(n.bc.ms(t, r, n.readTime)) : n.bc.bs(e);
	            })), si.pu(i);
	        }, i.prototype.ys = function(t, n) {
	            return this.bc.gs(t, n);
	        }, i.prototype._s = function(t, n) {
	            return this.bc.getEntries(t, n);
	        }, i;
	    }(wi), t;
	}(), Mi = /** @class */ function() {
	    /**
	     * Instantiates a new TargetIdGenerator. If a seed is provided, the generator
	     * will use the seed value as the next target ID.
	     */
	    function t(t, n) {
	        this.gc = t, Wn((1 & t) === t, "Generator ID " + t + " contains more than 1 reserved bits"), 
	        this.yc(void 0 !== n ? n : this.gc);
	    }
	    return t.prototype.next = function() {
	        var t = this._c;
	        return this._c += 2, t;
	    }, 
	    /**
	     * Returns the ID that follows the given ID. Subsequent calls to `next()`
	     * use the newly returned target ID as their base.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.after = function(t) {
	        return this.yc(t + 2), this.next();
	    }, t.prototype.yc = function(t) {
	        Wn((1 & t) === this.gc, "Cannot supply target ID from different generator ID"), 
	        this._c = t;
	    }, t.Ic = function() {
	        return new t(0 /* QueryCache */ , 2);
	    }, t.Tc = function() {
	        // Sync engine assigns target IDs for limbo document detection.
	        return new t(1 /* SyncEngine */);
	    }, t;
	}(), qi = /** @class */ function() {
	    function t(t) {
	        this.persistence = t, 
	        /**
	         * Maps a target to the data about that target
	         */
	        this.Ec = new ti((function(t) {
	            return t.canonicalId();
	        })), 
	        /** The last received snapshot version. */
	        this.lastRemoteSnapshotVersion = k.MIN, 
	        /** The highest numbered target ID encountered. */
	        this.highestTargetId = 0, 
	        /** The highest sequence number encountered. */
	        this.Dc = 0, 
	        /**
	         * A ordered bidirectional mapping between documents and the remote target
	         * IDs.
	         */
	        this.Rc = new di, this.targetCount = 0, this.Sc = Mi.Ic();
	    }
	    return t.prototype.$i = function(t, n) {
	        return this.Ec.forEach((function(t, i) {
	            return n(i);
	        })), si.resolve();
	    }, t.prototype.oo = function(t) {
	        return si.resolve(this.lastRemoteSnapshotVersion);
	    }, t.prototype.Ac = function(t) {
	        return si.resolve(this.Dc);
	    }, t.prototype.Ro = function(t) {
	        var n = this.Sc.after(this.highestTargetId);
	        return this.highestTargetId = n, si.resolve(n);
	    }, t.prototype.wo = function(t, n, i) {
	        return i && (this.lastRemoteSnapshotVersion = i), n > this.Dc && (this.Dc = n), 
	        si.resolve();
	    }, t.prototype.Cc = function(t) {
	        this.Ec.set(t.target, t);
	        var n = t.targetId;
	        n > this.highestTargetId && (this.highestTargetId = n), t.sequenceNumber > this.Dc && (this.Dc = t.sequenceNumber);
	    }, t.prototype.So = function(t, n) {
	        return Wn(!this.Ec.has(n.target), "Adding a target that already exists"), this.Cc(n), 
	        this.targetCount += 1, si.resolve();
	    }, t.prototype.do = function(t, n) {
	        return Wn(this.Ec.has(n.target), "Updating a non-existent target"), this.Cc(n), 
	        si.resolve();
	    }, t.prototype.Pc = function(t, n) {
	        return Wn(this.targetCount > 0, "Removing a target from an empty cache"), Wn(this.Ec.has(n.target), "Removing a non-existent target from the cache"), 
	        this.Ec.delete(n.target), this.Rc.hs(n.targetId), this.targetCount -= 1, si.resolve();
	    }, t.prototype.Ju = function(t, n, i) {
	        var e = this, r = 0, u = [];
	        return this.Ec.forEach((function(s, o) {
	            o.sequenceNumber <= n && null === i.get(o.targetId) && (e.Ec.delete(s), u.push(e.Vc(t, o.targetId)), 
	            r++);
	        })), si.pu(u).next((function() {
	            return r;
	        }));
	    }, t.prototype.kc = function(t) {
	        return si.resolve(this.targetCount);
	    }, t.prototype.Do = function(t, n) {
	        var i = this.Ec.get(n) || null;
	        return si.resolve(i);
	    }, t.prototype.ce = function(t, n) {
	        // This method is only needed for multi-tab and we can't implement it
	        // efficiently without additional data structures.
	        return Gn("Not yet implemented.");
	    }, t.prototype.ao = function(t, n, i) {
	        this.Rc.rs(n, i);
	        var e = this.persistence.Cs, r = [];
	        return e && n.forEach((function(n) {
	            r.push(e.es(t, n));
	        })), si.pu(r);
	    }, t.prototype.co = function(t, n, i) {
	        this.Rc.os(n, i);
	        var e = this.persistence.Cs, r = [];
	        return e && n.forEach((function(n) {
	            r.push(e.us(t, n));
	        })), si.pu(r);
	    }, t.prototype.Vc = function(t, n) {
	        return this.Rc.hs(n), si.resolve();
	    }, t.prototype.Po = function(t, n) {
	        var i = this.Rc.as(n);
	        return si.resolve(i);
	    }, t.prototype.fs = function(t, n) {
	        return si.resolve(this.Rc.fs(n));
	    }, t;
	}(), Bi = "You are using the memory-only build of Firestore. Persistence support is only available via the @firebase/firestore bundle or the firebase-firestore.js build.", Qi = /** @class */ function() {
	    /**
	     * The constructor accepts a factory for creating a reference delegate. This
	     * allows both the delegate and this instance to have strong references to
	     * each other without having nullable fields that would then need to be
	     * checked or asserted on every access.
	     */
	    function t(t, n) {
	        var i = this;
	        this.clientId = t, this.Nc = {}, this.Oc = new ii(0), this.Fc = !1, this.Fc = !0, 
	        this.Cs = n(this), this.Os = new qi(this);
	        this.Bh = new Ui, this.qh = new Li(this.Bh, (function(t) {
	            return i.Cs.Uc(t);
	        }));
	    }
	    return t.prototype.shutdown = function() {
	        // No durable state to ensure is closed on shutdown.
	        return this.Fc = !1, Promise.resolve();
	    }, Object.defineProperty(t.prototype, "qu", {
	        get: function() {
	            return this.Fc;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.Oo = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                return [ 2 /*return*/ , [ this.clientId ] ];
	            }));
	        }));
	    }, t.prototype.jc = function(t) {
	        // All clients using memory persistence act as primary.
	        return t(!0);
	    }, t.prototype.xc = function() {
	        // No op.
	    }, t.prototype.jo = function(t) {
	        // No op.
	    }, t.prototype.js = function() {
	        return this.Bh;
	    }, t.prototype.Vs = function(t) {
	        var n = this.Nc[t.i()];
	        return n || (n = new xi(this.Bh, this.Cs), this.Nc[t.i()] = n), n;
	    }, t.prototype.Fs = function() {
	        return this.Os;
	    }, t.prototype.Ns = function() {
	        return this.qh;
	    }, t.prototype.runTransaction = function(t, n, i) {
	        var e = this;
	        qn("MemoryPersistence", "Starting transaction:", t);
	        var r = new Gi(this.Oc.next());
	        return this.Cs.Lc(), i(r).next((function(t) {
	            return e.Cs.Mc(r).next((function() {
	                return t;
	            }));
	        })).wu().then((function(t) {
	            return r.Mh(), t;
	        }));
	    }, t.prototype.qc = function(t, n) {
	        return si.bu(Object.values(this.Nc).map((function(i) {
	            return function() {
	                return i.fs(t, n);
	            };
	        })));
	    }, t;
	}(), Gi = /** @class */ function(t) {
	    function i(n) {
	        var i = t.call(this) || this;
	        return i.fo = n, i;
	    }
	    return tslib.__extends(i, t), i;
	}(Ci), Wi = /** @class */ function() {
	    function t(t) {
	        this.persistence = t, this.Bc = null, this.Qc = null;
	    }
	    return Object.defineProperty(t.prototype, "Gc", {
	        get: function() {
	            if (this.Qc) return this.Qc;
	            throw Gn("orphanedDocuments is only valid during a transaction.");
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.As = function(t) {
	        this.Bc = t;
	    }, t.prototype.es = function(t, n) {
	        return this.Gc.delete(n), si.resolve();
	    }, t.prototype.us = function(t, n) {
	        return this.Gc.add(n), si.resolve();
	    }, t.prototype.lc = function(t, n) {
	        return this.Gc.add(n), si.resolve();
	    }, t.prototype.removeTarget = function(t, n) {
	        var i = this, e = this.persistence.Fs();
	        return e.Po(t, n.targetId).next((function(t) {
	            t.forEach((function(t) {
	                return i.Gc.add(t);
	            }));
	        })).next((function() {
	            return e.Pc(t, n);
	        }));
	    }, t.prototype.Lc = function() {
	        this.Qc = new Set;
	    }, t.prototype.Mc = function(t) {
	        var n = this, i = this.persistence.Ns().Xs();
	        // Remove newly orphaned documents.
	                return si.forEach(this.Gc, (function(e) {
	            return n.Wc(t, e).next((function(t) {
	                t || i.bs(e);
	            }));
	        })).next((function() {
	            return n.Qc = null, i.apply(t);
	        }));
	    }, t.prototype.vo = function(t, n) {
	        var i = this;
	        return this.Wc(t, n).next((function(t) {
	            t ? i.Gc.delete(n) : i.Gc.add(n);
	        }));
	    }, t.prototype.Uc = function(t) {
	        // For eager GC, we don't care about the document size, there are no size thresholds.
	        return 0;
	    }, t.prototype.Wc = function(t, n) {
	        var i = this;
	        return si.bu([ function() {
	            return i.persistence.Fs().fs(t, n);
	        }, function() {
	            return i.persistence.qc(t, n);
	        }, function() {
	            return si.resolve(i.Bc.fs(n));
	        } ]);
	    }, t;
	}(), zi = /** @class */ function() {
	    function t() {}
	    return t.prototype.initialize = function(t, n, i, e, r, u) {
	        if (u.zc) throw new E(T.FAILED_PRECONDITION, Bi);
	        return this.clientId = e, Promise.resolve();
	    }, t.prototype.Kc = function() {
	        var t = !1;
	        return {
	            qu: t,
	            start: function() {
	                return t = !0;
	            },
	            stop: function() {
	                return t = !1;
	            }
	        };
	    }, t.prototype.Jc = function() {
	        return Wn(!!this.clientId, "initialize() not called"), new Qi(this.clientId, (function(t) {
	            return new Wi(t);
	        }));
	    }, t.prototype.Hc = function() {
	        return new Si;
	    }, t.prototype.clearPersistence = function() {
	        throw new E(T.FAILED_PRECONDITION, Bi);
	    }, t;
	}(), Ki = /** @class */ function() {
	    function t(
	    /**
	     * The AsyncQueue to run backoff operations on.
	     */
	    t, 
	    /**
	     * The ID to use when scheduling backoff operations on the AsyncQueue.
	     */
	    n, 
	    /**
	     * The initial delay (used as the base delay on the first retry attempt).
	     * Note that jitter will still be applied, so the actual delay could be as
	     * little as 0.5*initialDelayMs.
	     */
	    i, 
	    /**
	     * The multiplier to use to determine the extended base delay after each
	     * attempt.
	     */
	    e, 
	    /**
	     * The maximum base delay after which no further backoff is performed.
	     * Note that jitter will still be applied, so the actual delay could be as
	     * much as 1.5*maxDelayMs.
	     */
	    r) {
	        void 0 === i && (i = 1e3), void 0 === e && (e = 1.5), void 0 === r && (r = 6e4), 
	        this.zo = t, this.Fr = n, this.Yc = i, this.Xc = e, this.$c = r, this.Zc = 0, this.ta = null, 
	        /** The last backoff attempt, as epoch milliseconds. */
	        this.na = Date.now(), this.reset();
	    }
	    /**
	     * Resets the backoff delay.
	     *
	     * The very next backoffAndWait() will have no delay. If it is called again
	     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
	     * subsequent ones will increase according to the backoffFactor.
	     */    return t.prototype.reset = function() {
	        this.Zc = 0;
	    }, 
	    /**
	     * Resets the backoff delay to the maximum delay (e.g. for use after a
	     * RESOURCE_EXHAUSTED error).
	     */
	    t.prototype.ia = function() {
	        this.Zc = this.$c;
	    }, 
	    /**
	     * Returns a promise that resolves after currentDelayMs, and increases the
	     * delay for any subsequent attempts. If there was a pending backoff operation
	     * already, it will be canceled.
	     */
	    t.prototype.ea = function(t) {
	        var n = this;
	        // Cancel any pending backoff operation.
	                this.cancel();
	        // First schedule using the current base (which may be 0 and should be
	        // honored as such).
	        var i = Math.floor(this.Zc + this.ra()), e = Math.max(0, Date.now() - this.na), r = Math.max(0, i - e);
	        // Guard against lastAttemptTime being in the future due to a clock change.
	                this.Zc > 0 && qn("ExponentialBackoff", "Backing off for " + r + " ms (base delay: " + this.Zc + " ms, delay with jitter: " + i + " ms, last attempt: " + e + " ms ago)"), 
	        this.ta = this.zo.iu(this.Fr, r, (function() {
	            return n.na = Date.now(), t();
	        })), 
	        // Apply backoff factor to determine next delay and ensure it is within
	        // bounds.
	        this.Zc *= this.Xc, this.Zc < this.Yc && (this.Zc = this.Yc), this.Zc > this.$c && (this.Zc = this.$c);
	    }, t.prototype.cancel = function() {
	        null !== this.ta && (this.ta.cancel(), this.ta = null);
	    }, 
	    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */
	    t.prototype.ra = function() {
	        return (Math.random() - .5) * this.Zc;
	    }, t;
	}(), Ji = /** @class */ function() {
	    function t(t, n, i, e, r, u) {
	        this.zo = t, this.ua = i, this.connection = e, this.sa = r, this.listener = u, this.state = 0 /* Initial */ , 
	        /**
	         * A close count that's incremented every time the stream is closed; used by
	         * getCloseGuardedDispatcher() to invalidate callbacks that happen after
	         * close.
	         */
	        this.oa = 0, this.ha = null, this.stream = null, this.ca = new Ki(t, n);
	    }
	    /**
	     * Returns true if start() has been called and no error has occurred. True
	     * indicates the stream is open or in the process of opening (which
	     * encompasses respecting backoff, getting auth tokens, and starting the
	     * actual RPC). Use isOpen() to determine if the stream is open and ready for
	     * outbound requests.
	     */    return t.prototype.aa = function() {
	        return 1 /* Starting */ === this.state || 2 /* Open */ === this.state || 4 /* Backoff */ === this.state;
	    }, 
	    /**
	     * Returns true if the underlying RPC is open (the onOpen() listener has been
	     * called) and the stream is ready for outbound requests.
	     */
	    t.prototype.fa = function() {
	        return 2 /* Open */ === this.state;
	    }, 
	    /**
	     * Starts the RPC. Only allowed if isStarted() returns false. The stream is
	     * not immediately ready for use: onOpen() will be invoked when the RPC is
	     * ready for outbound requests, at which point isOpen() will return true.
	     *
	     * When start returns, isStarted() will return true.
	     */
	    t.prototype.start = function() {
	        3 /* Error */ !== this.state ? (Wn(0 /* Initial */ === this.state, "Already started"), 
	        this.auth()) : this.la();
	    }, 
	    /**
	     * Stops the RPC. This call is idempotent and allowed regardless of the
	     * current isStarted() state.
	     *
	     * When stop returns, isStarted() and isOpen() will both return false.
	     */
	    t.prototype.stop = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                switch (t.label) {
	                  case 0:
	                    return this.aa() ? [ 4 /*yield*/ , this.close(0 /* Initial */) ] : [ 3 /*break*/ , 2 ];
	
	                  case 1:
	                    t.sent(), t.label = 2;
	
	                  case 2:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * After an error the stream will usually back off on the next attempt to
	     * start it. If the error warrants an immediate restart of the stream, the
	     * sender can use this to indicate that the receiver should not back off.
	     *
	     * Each error will call the onClose() listener. That function can decide to
	     * inhibit backoff if required.
	     */
	    t.prototype.da = function() {
	        Wn(!this.aa(), "Can only inhibit backoff in a stopped state"), this.state = 0 /* Initial */ , 
	        this.ca.reset();
	    }, 
	    /**
	     * Marks this stream as idle. If no further actions are performed on the
	     * stream for one minute, the stream will automatically close itself and
	     * notify the stream's onClose() handler with Status.OK. The stream will then
	     * be in a !isStarted() state, requiring the caller to start the stream again
	     * before further use.
	     *
	     * Only streams that are in state 'Open' can be marked idle, as all other
	     * states imply pending network operations.
	     */
	    t.prototype.va = function() {
	        var t = this;
	        // Starts the idle time if we are in state 'Open' and are not yet already
	        // running a timer (in which case the previous idle timeout still applies).
	                this.fa() && null === this.ha && (this.ha = this.zo.iu(this.ua, 6e4, (function() {
	            return t.wa();
	        })));
	    }, 
	    /** Sends a message to the underlying stream. */
	    t.prototype.ma = function(t) {
	        this.pa(), this.stream.send(t);
	    }, 
	    /** Called by the idle timer when the stream should close due to inactivity. */
	    t.prototype.wa = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                return this.fa() ? [ 2 /*return*/ , this.close(0 /* Initial */) ] : [ 2 /*return*/ ];
	            }));
	        }));
	    }, 
	    /** Marks the stream as active again. */
	    t.prototype.pa = function() {
	        this.ha && (this.ha.cancel(), this.ha = null);
	    }, 
	    /**
	     * Closes the stream and cleans up as necessary:
	     *
	     * * closes the underlying GRPC stream;
	     * * calls the onClose handler with the given 'error';
	     * * sets internal stream state to 'finalState';
	     * * adjusts the backoff timer based on the error
	     *
	     * A new stream can be opened by calling start().
	     *
	     * @param finalState the intended state of the stream after closing.
	     * @param error the error the connection was closed with.
	     */
	    t.prototype.close = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(i) {
	                switch (i.label) {
	                  case 0:
	                    // Notify the listener that the stream closed.
	                    return Wn(this.aa(), "Only started streams should be closed."), Wn(3 /* Error */ === t || J(n), "Can't provide an error when not in an error state."), 
	                    // Cancel any outstanding timers (they're guaranteed not to execute).
	                    this.pa(), this.ca.cancel(), 
	                    // Invalidates any stream-related callbacks (e.g. from auth or the
	                    // underlying stream), guaranteeing they won't execute.
	                    this.oa++, 3 /* Error */ !== t ? 
	                    // If this is an intentional close ensure we don't delay our next connection attempt.
	                    this.ca.reset() : n && n.code === T.RESOURCE_EXHAUSTED ? (
	                    // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
	                    Bn(n.toString()), Bn("Using maximum backoff delay to prevent overloading the backend."), 
	                    this.ca.ia()) : n && n.code === T.UNAUTHENTICATED && 
	                    // "unauthenticated" error means the token was rejected. Try force refreshing it in case it
	                    // just expired.
	                    this.sa.l(), 
	                    // Clean up the underlying stream because we are no longer interested in events.
	                    null !== this.stream && (this.ba(), this.stream.close(), this.stream = null), 
	                    // This state must be assigned before calling onClose() to allow the callback to
	                    // inhibit backoff or otherwise manipulate the state in its non-started state.
	                    this.state = t, [ 4 /*yield*/ , this.listener.ga(n) ];
	
	                  case 1:
	                    // Notify the listener that the stream closed.
	                    return i.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Can be overridden to perform additional cleanup before the stream is closed.
	     * Calling super.tearDown() is not required.
	     */
	    t.prototype.ba = function() {}, t.prototype.auth = function() {
	        var t = this;
	        Wn(0 /* Initial */ === this.state, "Must be in initial state to auth"), this.state = 1 /* Starting */;
	        var n = this.ya(this.oa), i = this.oa;
	        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.
	                this.sa.getToken().then((function(n) {
	            // Stream can be stopped while waiting for authentication.
	            // TODO(mikelehen): We really should just use dispatchIfNotClosed
	            // and let this dispatch onto the queue, but that opened a spec test can
	            // of worms that I don't want to deal with in this PR.
	            t.oa === i && 
	            // Normally we'd have to schedule the callback on the AsyncQueue.
	            // However, the following calls are safe to be called outside the
	            // AsyncQueue since they don't chain asynchronous calls
	            t._a(n);
	        }), (function(i) {
	            n((function() {
	                var n = new E(T.UNKNOWN, "Fetching auth token failed: " + i.message);
	                return t.Ia(n);
	            }));
	        }));
	    }, t.prototype._a = function(t) {
	        var n = this;
	        Wn(1 /* Starting */ === this.state, "Trying to start stream in a non-starting state");
	        var i = this.ya(this.oa);
	        this.stream = this.Ta(t), this.stream.Ea((function() {
	            i((function() {
	                return Wn(1 /* Starting */ === n.state, "Expected stream to be in state Starting, but was " + n.state), 
	                n.state = 2 /* Open */ , n.listener.Ea();
	            }));
	        })), this.stream.ga((function(t) {
	            i((function() {
	                return n.Ia(t);
	            }));
	        })), this.stream.onMessage((function(t) {
	            i((function() {
	                return n.onMessage(t);
	            }));
	        }));
	    }, t.prototype.la = function() {
	        var t = this;
	        Wn(3 /* Error */ === this.state, "Should only perform backoff when in Error state"), 
	        this.state = 4 /* Backoff */ , this.ca.ea((function() {
	            return tslib.__awaiter(t, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(t) {
	                    return Wn(4 /* Backoff */ === this.state, "Backoff elapsed but state is now: " + this.state), 
	                    this.state = 0 /* Initial */ , this.start(), Wn(this.aa(), "PersistentStream should have started"), 
	                    [ 2 /*return*/ ];
	                }));
	            }));
	        }));
	    }, 
	    // Visible for tests
	    t.prototype.Ia = function(t) {
	        // In theory the stream could close cleanly, however, in our current model
	        // we never expect this to happen because if we stop a stream ourselves,
	        // this callback will never be called. To prevent cases where we retry
	        // without a backoff accidentally, we set the stream to error in all cases.
	        return Wn(this.aa(), "Can't handle server close on non-started stream"), qn("PersistentStream", "close with error: " + t), 
	        this.stream = null, this.close(3 /* Error */ , t);
	    }, 
	    /**
	     * Returns a "dispatcher" function that dispatches operations onto the
	     * AsyncQueue but only runs them if closeCount remains unchanged. This allows
	     * us to turn auth / stream callbacks into no-ops if the stream is closed /
	     * re-opened, etc.
	     */
	    t.prototype.ya = function(t) {
	        var n = this;
	        return function(i) {
	            n.zo.Qr((function() {
	                return n.oa === t ? i() : (qn("PersistentStream", "stream callback skipped by getCloseGuardedDispatcher."), 
	                Promise.resolve());
	            }));
	        };
	    }, t;
	}(), Hi = /** @class */ function(t) {
	    function i(n, i, e, r, u) {
	        var s = t.call(this, n, "listen_stream_connection_backoff" /* ListenStreamConnectionBackoff */ , "listen_stream_idle" /* ListenStreamIdle */ , i, e, u) || this;
	        return s.serializer = r, s;
	    }
	    return tslib.__extends(i, t), i.prototype.Ta = function(t) {
	        return this.connection.Da("Listen", t);
	    }, i.prototype.onMessage = function(t) {
	        // A successful response means the stream is healthy
	        this.ca.reset();
	        var n = this.serializer.ke(t), i = this.serializer.Oe(t);
	        return this.listener.Ra(n, i);
	    }, 
	    /**
	     * Registers interest in the results of the given target. If the target
	     * includes a resumeToken it will be included in the request. Results that
	     * affect the target will be streamed back as WatchChange messages that
	     * reference the targetId.
	     */
	    i.prototype.watch = function(t) {
	        var n = {};
	        n.database = this.serializer.De, n.addTarget = this.serializer.qn(t);
	        var i = this.serializer.nr(t);
	        i && (n.labels = i), this.ma(n);
	    }, 
	    /**
	     * Unregisters interest in the results of the target associated with the
	     * given targetId.
	     */
	    i.prototype.Sa = function(t) {
	        var n = {};
	        n.database = this.serializer.De, n.removeTarget = t, this.ma(n);
	    }, i;
	}(Ji), Yi = /** @class */ function(t) {
	    function i(n, i, e, r, u) {
	        var s = t.call(this, n, "write_stream_connection_backoff" /* WriteStreamConnectionBackoff */ , "write_stream_idle" /* WriteStreamIdle */ , i, e, u) || this;
	        return s.serializer = r, s.Aa = !1, 
	        /**
	         * The last received stream token from the server, used to acknowledge which
	         * responses the client has processed. Stream tokens are opaque checkpoint
	         * markers whose only real value is their inclusion in the next request.
	         *
	         * PersistentWriteStream manages propagating this value from responses to the
	         * next request.
	         */
	        s.lastStreamToken = K.Mt, s;
	    }
	    return tslib.__extends(i, t), Object.defineProperty(i.prototype, "Ca", {
	        /**
	         * Tracks whether or not a handshake has been successfully exchanged and
	         * the stream is ready to accept mutations.
	         */
	        get: function() {
	            return this.Aa;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    // Override of PersistentStream.start
	    i.prototype.start = function() {
	        this.Aa = !1, t.prototype.start.call(this);
	    }, i.prototype.ba = function() {
	        this.Aa && this.Pa([]);
	    }, i.prototype.Ta = function(t) {
	        return this.connection.Da("Write", t);
	    }, i.prototype.onMessage = function(t) {
	        if (
	        // Always capture the last stream token.
	        Wn(!!t.streamToken, "Got a write response without a stream token"), this.lastStreamToken = this.serializer.pe(t.streamToken), 
	        this.Aa) {
	            // A successful first write response means the stream is healthy,
	            // Note, that we could consider a successful handshake healthy, however,
	            // the write itself might be causing an error we want to back off from.
	            this.ca.reset();
	            var n = this.serializer.Ge(t.writeResults, t.commitTime), i = this.serializer.fromVersion(t.commitTime);
	            return this.listener.Va(i, n);
	        }
	        // The first response is always the handshake response
	        return Wn(!t.writeResults || 0 === t.writeResults.length, "Got mutation results for handshake"), 
	        this.Aa = !0, this.listener.ka();
	    }, 
	    /**
	     * Sends an initial streamToken to the server, performing the handshake
	     * required to make the StreamingWrite RPC work. Subsequent
	     * calls should wait until onHandshakeComplete was called.
	     */
	    i.prototype.Na = function() {
	        Wn(this.fa(), "Writing handshake requires an opened stream"), Wn(!this.Aa, "Handshake already completed");
	        // TODO(dimond): Support stream resumption. We intentionally do not set the
	        // stream token on the handshake, ignoring any stream token we might have.
	        var t = {};
	        t.database = this.serializer.De, this.ma(t);
	    }, 
	    /** Sends a group of mutations to the Firestore backend to apply. */
	    i.prototype.Pa = function(t) {
	        var n = this;
	        Wn(this.fa(), "Writing mutations requires an opened stream"), Wn(this.Aa, "Handshake must be complete before writing mutations"), 
	        Wn(this.lastStreamToken.Lt() > 0, "Trying to write mutation without a token");
	        var i = {
	            streamToken: this.serializer.me(this.lastStreamToken),
	            writes: t.map((function(t) {
	                return n.serializer.Fe(t);
	            }))
	        };
	        this.ma(i);
	    }, i;
	}(Ji), Xi = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.zo = t, this.connection = n, this.credentials = i, this.serializer = e;
	    }
	    return t.prototype.Oa = function(t) {
	        return new Yi(this.zo, this.connection, this.credentials, this.serializer, t);
	    }, t.prototype.Fa = function(t) {
	        return new Hi(this.zo, this.connection, this.credentials, this.serializer, t);
	    }, t.prototype.commit = function(t) {
	        var n = this, i = {
	            database: this.serializer.De,
	            writes: t.map((function(t) {
	                return n.serializer.Fe(t);
	            }))
	        };
	        return this.Ua("Commit", i).then((function(t) {
	            return n.serializer.Ge(t.writeResults, t.commitTime);
	        }));
	    }, t.prototype.lookup = function(t) {
	        var n = this, i = {
	            database: this.serializer.De,
	            documents: t.map((function(t) {
	                return n.serializer._e(t);
	            }))
	        };
	        return this.ja("BatchGetDocuments", i).then((function(i) {
	            var e = hn();
	            i.forEach((function(t) {
	                var i = n.serializer.Ve(t);
	                e = e.ut(i.key, i);
	            }));
	            var r = [];
	            return t.forEach((function(t) {
	                var n = e.get(t);
	                Wn(!!n, "Missing entity in write response for " + t), r.push(n);
	            })), r;
	        }));
	    }, 
	    /** Gets an auth token and invokes the provided RPC. */
	    t.prototype.Ua = function(t, n) {
	        var i = this;
	        return this.credentials.getToken().then((function(e) {
	            return i.connection.Ua(t, n, e);
	        })).catch((function(t) {
	            throw t.code === T.UNAUTHENTICATED && i.credentials.l(), t;
	        }));
	    }, 
	    /** Gets an auth token and invokes the provided RPC with streamed results. */
	    t.prototype.ja = function(t, n) {
	        var i = this;
	        return this.credentials.getToken().then((function(e) {
	            return i.connection.ja(t, n, e);
	        })).catch((function(t) {
	            throw t.code === T.UNAUTHENTICATED && i.credentials.l(), t;
	        }));
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Validates that no arguments were passed in the invocation of functionName.
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateNoArgs('myFunction', arguments);
	 */
	function $i(t, n) {
	    if (0 !== n.length) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() does not support arguments, but was called with " + be(n.length, "argument") + ".");
	}
	
	/**
	 * Validates the invocation of functionName has the exact number of arguments.
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateExactNumberOfArgs('myFunction', arguments, 2);
	 */ function Zi(t, n, i) {
	    if (n.length !== i) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires " + be(i, "argument") + ", but was called with " + be(n.length, "argument") + ".");
	}
	
	/**
	 * Validates the invocation of functionName has at least the provided number of
	 * arguments (but can have many more).
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateAtLeastNumberOfArgs('myFunction', arguments, 2);
	 */ function te(t, n, i) {
	    if (n.length < i) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires at least " + be(i, "argument") + ", but was called with " + be(n.length, "argument") + ".");
	}
	
	/**
	 * Validates the invocation of functionName has number of arguments between
	 * the values provided.
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);
	 */ function ne(t, n, i, e) {
	    if (n.length < i || n.length > e) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires between " + i + " and " + e + " arguments, but was called with " + be(n.length, "argument") + ".");
	}
	
	/**
	 * Validates the provided argument is an array and has as least the expected
	 * number of elements.
	 */ function ie(t, n, i, e) {
	    if (!(n instanceof Array) || n.length < e) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires its " + i + " argument to be an array with at least " + be(e, "element") + ".");
	}
	
	/**
	 * Validates the provided positional argument has the native JavaScript type
	 * using typeof checks.
	 */ function ee(t, n, i, e) {
	    ae(t, n, pe(i) + " argument", e);
	}
	
	/**
	 * Validates the provided argument has the native JavaScript type using
	 * typeof checks or is undefined.
	 */ function re(t, n, i, e) {
	    void 0 !== e && ee(t, n, i, e);
	}
	
	/**
	 * Validates the provided named option has the native JavaScript type using
	 * typeof checks.
	 */ function ue(t, n, i, e) {
	    ae(t, n, i + " option", e);
	}
	
	/**
	 * Validates the provided named option has the native JavaScript type using
	 * typeof checks or is undefined.
	 */ function se(t, n, i, e) {
	    void 0 !== e && ue(t, n, i, e);
	}
	
	function oe(t, n, i, e, r) {
	    void 0 !== e && function(t, n, i, e, r) {
	        if (!(e instanceof Array)) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires its " + n + " option to be an array, but it was: " + le(e));
	        for (var u = 0; u < e.length; ++u) if (!r(e[u])) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires all " + n + " elements to be " + i + ", but the value at index " + u + " was: " + le(e[u]));
	    }(t, n, i, e, r);
	}
	
	/**
	 * Validates that the provided named option equals one of the expected values.
	 */
	/**
	 * Validates that the provided named option equals one of the expected values or
	 * is undefined.
	 */
	function he(t, n, i, e, r) {
	    void 0 !== e && function(t, n, i, e, r) {
	        for (var u = [], s = 0, o = r; s < o.length; s++) {
	            var h = o[s];
	            if (h === e) return;
	            u.push(le(h));
	        }
	        var c = le(e);
	        throw new E(T.INVALID_ARGUMENT, "Invalid value " + c + " provided to function " + t + '() for option "' + i + '". Acceptable values: ' + u.join(", "));
	    }(t, 0, i, e, r);
	}
	
	/**
	 * Validates that the provided argument is a valid enum.
	 *
	 * @param functionName Function making the validation call.
	 * @param enums Array containing all possible values for the enum.
	 * @param position Position of the argument in `functionName`.
	 * @param argument Arugment to validate.
	 */ function ce(t, n, i, e) {
	    if (!n.some((function(t) {
	        return t === e;
	    }))) throw new E(T.INVALID_ARGUMENT, "Invalid value " + le(e) + " provided to function " + t + "() for its " + pe(i) + " argument. Acceptable values: " + n.join(", "));
	}
	
	/** Helper to validate the type of a provided input. */ function ae(t, n, i, e) {
	    if (!("object" === n ? fe(e) : "non-empty string" === n ? "string" == typeof e && "" !== e : typeof e === n)) {
	        var r = le(e);
	        throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires its " + i + " to be of type " + n + ", but it was: " + r);
	    }
	}
	
	/**
	 * Returns true if it's a non-null object without a custom prototype
	 * (i.e. excludes Array, Date, etc.).
	 */ function fe(t) {
	    return "object" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));
	}
	
	/** Returns a string describing the type / value of the provided input. */ function le(t) {
	    if (void 0 === t) return "undefined";
	    if (null === t) return "null";
	    if ("string" == typeof t) return t.length > 20 && (t = t.substring(0, 20) + "..."), 
	    JSON.stringify(t);
	    if ("number" == typeof t || "boolean" == typeof t) return "" + t;
	    if ("object" == typeof t) {
	        if (t instanceof Array) return "an array";
	        var n = 
	        /** Hacky method to try to get the constructor name for an object. */
	        function(t) {
	            if (t.constructor) {
	                var n = /function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());
	                if (n && n.length > 1) return n[1];
	            }
	            return null;
	        }
	        /** Validates the provided argument is defined. */ (t);
	        return n ? "a custom " + n + " object" : "an object";
	    }
	    return "function" == typeof t ? "a function" : Gn("Unknown wrong type: " + typeof t);
	}
	
	function de(t, n, i) {
	    if (void 0 === i) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() requires a valid " + pe(n) + " argument, but it was undefined.");
	}
	
	/**
	 * Validates the provided positional argument is an object, and its keys and
	 * values match the expected keys and types provided in optionTypes.
	 */ function ve(t, n, i) {
	    W(n, (function(n, e) {
	        if (i.indexOf(n) < 0) throw new E(T.INVALID_ARGUMENT, "Unknown option '" + n + "' passed to function " + t + "(). Available options: " + i.join(", "));
	    }));
	}
	
	/**
	 * Helper method to throw an error that the provided argument did not pass
	 * an instanceof check.
	 */ function we(t, n, i, e) {
	    var r = le(e);
	    return new E(T.INVALID_ARGUMENT, "Function " + t + "() requires its " + pe(i) + " argument to be a " + n + ", but it was: " + r);
	}
	
	function me(t, n, i) {
	    if (i <= 0) throw new E(T.INVALID_ARGUMENT, 'Function "' + t + '()" requires its ' + pe(n) + " argument to be a positive number, but it was: " + i + ".");
	}
	
	/** Converts a number to its english word representation */ function pe(t) {
	    switch (t) {
	      case 1:
	        return "first";
	
	      case 2:
	        return "second";
	
	      case 3:
	        return "third";
	
	      default:
	        return t + "th";
	    }
	}
	
	/**
	 * Formats the given word as plural conditionally given the preceding number.
	 */ function be(t, n) {
	    return t + " " + n + (1 === t ? "" : "s");
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Helper function to prevent instantiation through the constructor.
	 *
	 * This method creates a new constructor that throws when it's invoked.
	 * The prototype of that constructor is then set to the prototype of the hidden
	 * "class" to expose all the prototype methods and allow for instanceof
	 * checks.
	 *
	 * To also make all the static methods available, all properties of the
	 * original constructor are copied to the new constructor.
	 */ function ge(t, n) {
	    function i() {
	        var t = "This constructor is private.";
	        throw n && (t += " ", t += n), new E(T.INVALID_ARGUMENT, t);
	    }
	    // Make sure instanceof checks work and all methods are exposed on the public
	    // constructor
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    return i.prototype = t.prototype, 
	    // Copy any static methods/members
	    Object.assign(i, t), i;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/** Helper function to assert Uint8Array is available at runtime. */ function ye() {
	    if ("undefined" == typeof Uint8Array) throw new E(T.UNIMPLEMENTED, "Uint8Arrays are not available in this environment.");
	}
	
	/** Helper function to assert Base64 functions are available at runtime. */ function _e() {
	    if (!jn.xt().xa) throw new E(T.UNIMPLEMENTED, "Blobs are unavailable in Firestore in this environment.");
	}
	
	/**
	 * Immutable class holding a blob (binary data).
	 * This class is directly exposed in the public API.
	 *
	 * Note that while you can't hide the constructor in JavaScript code, we are
	 * using the hack above to make sure no-one outside this module can call it.
	 */ var Ie = /** @class */ function() {
	    function t(t) {
	        _e(), this.La = t;
	    }
	    return t.fromBase64String = function(n) {
	        Zi("Blob.fromBase64String", arguments, 1), ee("Blob.fromBase64String", "string", 1, n), 
	        _e();
	        try {
	            return new t(K.fromBase64String(n));
	        } catch (t) {
	            throw new E(T.INVALID_ARGUMENT, "Failed to construct Blob from Base64 string: " + t);
	        }
	    }, t.fromUint8Array = function(n) {
	        if (Zi("Blob.fromUint8Array", arguments, 1), ye(), !(n instanceof Uint8Array)) throw we("Blob.fromUint8Array", "Uint8Array", 1, n);
	        return new t(K.fromUint8Array(n));
	    }, t.prototype.toBase64 = function() {
	        return Zi("Blob.toBase64", arguments, 0), _e(), this.La.toBase64();
	    }, t.prototype.toUint8Array = function() {
	        return Zi("Blob.toUint8Array", arguments, 0), ye(), this.La.toUint8Array();
	    }, t.prototype.toString = function() {
	        return "Blob(base64: " + this.toBase64() + ")";
	    }, t.prototype.isEqual = function(t) {
	        return this.La.isEqual(t.La);
	    }, t;
	}(), Te = ge(Ie, "Use Blob.fromUint8Array() or Blob.fromBase64String() instead."), Ee = /** @class */ function() {
	    /**
	     * Creates a FieldPath from the provided field names. If more than one field
	     * name is provided, the path will point to a nested field in a document.
	     *
	     * @param fieldNames A list of field names.
	     */
	    function t() {
	        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
	        ie("FieldPath", t, "fieldNames", 1);
	        for (var i = 0; i < t.length; ++i) if (ee("FieldPath", "string", i, t[i]), 0 === t[i].length) throw new E(T.INVALID_ARGUMENT, "Invalid field name at argument $(i + 1). Field names must not be empty.");
	        this.Ma = new U(t);
	    }
	    return t.documentId = function() {
	        return t.qa;
	    }, t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) throw we("isEqual", "FieldPath", 1, n);
	        return this.Ma.isEqual(n.Ma);
	    }, 
	    /**
	     * Internal Note: The backend doesn't technically support querying by
	     * document ID. Instead it queries by the entire document name (full path
	     * included), but in the cases we currently support documentId(), the net
	     * effect is the same.
	     */
	    t.qa = new t(U.Z().J()), t;
	}(), De = new RegExp("[~\\*/\\[\\]]");
	
	// Public instance that disallows construction at runtime. This constructor is
	// used when exporting Blob on firebase.firestore.Blob and will be called Blob
	// publicly. Internally we still use Blob which has a type checked private
	// constructor. Note that Blob and PublicBlob can be used interchangeably in
	// instanceof checks.
	// For our internal TypeScript code PublicBlob doesn't exist as a type, and so
	// we need to use Blob as type and export it too.
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * An opaque base class for FieldValue sentinel objects in our public API,
	 * with public static methods for creating said sentinel objects.
	 */
	var Re = /** @class */ function() {
	    function t(t) {
	        this.Ba = t;
	    }
	    return t.delete = function() {
	        return $i("FieldValue.delete", arguments), Se.instance;
	    }, t.serverTimestamp = function() {
	        return $i("FieldValue.serverTimestamp", arguments), Ae.instance;
	    }, t.arrayUnion = function() {
	        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
	        // NOTE: We don't actually parse the data until it's used in set() or
	        // update() since we need access to the Firestore instance.
	        return te("FieldValue.arrayUnion", arguments, 1), new Ce(t);
	    }, t.arrayRemove = function() {
	        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
	        // NOTE: We don't actually parse the data until it's used in set() or
	        // update() since we need access to the Firestore instance.
	        return te("FieldValue.arrayRemove", arguments, 1), new Pe(t);
	    }, t.increment = function(t) {
	        return ee("FieldValue.increment", "number", 1, t), Zi("FieldValue.increment", arguments, 1), 
	        new Ve(t);
	    }, t.prototype.isEqual = function(t) {
	        return this === t;
	    }, t;
	}(), Se = /** @class */ function(t) {
	    function i() {
	        return t.call(this, "FieldValue.delete") || this;
	    }
	    /** Singleton instance. */    return tslib.__extends(i, t), i.instance = new i, i;
	}(Re), Ae = /** @class */ function(t) {
	    function i() {
	        return t.call(this, "FieldValue.serverTimestamp") || this;
	    }
	    /** Singleton instance. */    return tslib.__extends(i, t), i.instance = new i, i;
	}(Re), Ce = /** @class */ function(t) {
	    function i(n) {
	        var i = t.call(this, "FieldValue.arrayUnion") || this;
	        return i.Qa = n, i;
	    }
	    return tslib.__extends(i, t), i;
	}(Re), Pe = /** @class */ function(t) {
	    function i(n) {
	        var i = t.call(this, "FieldValue.arrayRemove") || this;
	        return i.Qa = n, i;
	    }
	    return tslib.__extends(i, t), i;
	}(Re), Ve = /** @class */ function(t) {
	    function i(n) {
	        var i = t.call(this, "FieldValue.increment") || this;
	        return i.Ga = n, i;
	    }
	    return tslib.__extends(i, t), i;
	}(Re), ke = ge(Re, "Use FieldValue.<field>() instead."), Ne = /** @class */ function() {
	    function t(t, n) {
	        if (Zi("GeoPoint", arguments, 2), ee("GeoPoint", "number", 1, t), ee("GeoPoint", "number", 2, n), 
	        !isFinite(t) || t < -90 || t > 90) throw new E(T.INVALID_ARGUMENT, "Latitude must be a number between -90 and 90, but was: " + t);
	        if (!isFinite(n) || n < -180 || n > 180) throw new E(T.INVALID_ARGUMENT, "Longitude must be a number between -180 and 180, but was: " + n);
	        this.Wa = t, this.za = n;
	    }
	    return Object.defineProperty(t.prototype, "latitude", {
	        /**
	         * Returns the latitude of this geo point, a number between -90 and 90.
	         */
	        get: function() {
	            return this.Wa;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "longitude", {
	        /**
	         * Returns the longitude of this geo point, a number between -180 and 180.
	         */
	        get: function() {
	            return this.za;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.isEqual = function(t) {
	        return this.Wa === t.Wa && this.za === t.za;
	    }, 
	    /**
	     * Actually private to JS consumers of our API, so this function is prefixed
	     * with an underscore.
	     */
	    t.prototype.A = function(t) {
	        return Kn(this.Wa, t.Wa) || Kn(this.za, t.za);
	    }, t;
	}(), Oe = /^__.*__$/, Fe = /** @class */ function() {
	    function t(t, n, i) {
	        this.data = t, this.en = n, this.fieldTransforms = i;
	    }
	    return t.prototype.Ka = function(t, n) {
	        var i = [];
	        return null !== this.en ? i.push(new Vt(t, this.data, this.en, n)) : i.push(new Pt(t, this.data, n)), 
	        this.fieldTransforms.length > 0 && i.push(new kt(t, this.fieldTransforms)), i;
	    }, t;
	}(), Ue = /** @class */ function() {
	    function t(t, n, i) {
	        this.data = t, this.en = n, this.fieldTransforms = i;
	    }
	    return t.prototype.Ka = function(t, n) {
	        var i = [ new Vt(t, this.data, this.en, n) ];
	        return this.fieldTransforms.length > 0 && i.push(new kt(t, this.fieldTransforms)), 
	        i;
	    }, t;
	}();
	
	function je(t) {
	    switch (t) {
	      case 0 /* Set */ :
	 // fall through
	              case 2 /* MergeSet */ :
	 // fall through
	              case 1 /* Update */ :
	        return !0;
	
	      case 3 /* Argument */ :
	      case 4 /* ArrayArgument */ :
	        return !1;
	
	      default:
	        throw Gn("Unexpected case for UserDataSource: " + t);
	    }
	}
	
	/** A "context" object passed around while parsing user data. */ var xe = /** @class */ function() {
	    /**
	     * Initializes a ParseContext with the given source and path.
	     *
	     * @param dataSource Indicates what kind of API method this data came from.
	     * @param methodName The name of the method the user called to create this
	     *     ParseContext.
	     * @param path A path within the object being parsed. This could be an empty
	     *     path (in which case the context represents the root of the data being
	     *     parsed), or a nonempty path (indicating the context represents a nested
	     *     location within the data).
	     * @param arrayElement Whether or not this context corresponds to an element
	     *     of an array.
	     * @param fieldTransforms A mutable list of field transforms encountered while
	     *     parsing the data.
	     * @param fieldMask A mutable list of field paths encountered while parsing
	     *     the data.
	     *
	     * TODO(b/34871131): We don't support array paths right now, so path can be
	     * null to indicate the context represents any location within an array (in
	     * which case certain features will not work and errors will be somewhat
	     * compromised).
	     */
	    function t(t, n, i, e, r, u) {
	        this.Ja = t, this.methodName = n, this.path = i, this.Ha = e, 
	        // Minor hack: If fieldTransforms is undefined, we assume this is an
	        // external call and we need to validate the entire path.
	        void 0 === r && this.Ya(), this.Ha = void 0 !== e && e, this.fieldTransforms = r || [], 
	        this.en = u || [];
	    }
	    return t.prototype.Xa = function(n) {
	        var i = null == this.path ? null : this.path.child(n), e = new t(this.Ja, this.methodName, i, 
	        /*arrayElement=*/ !1, this.fieldTransforms, this.en);
	        return e.$a(n), e;
	    }, t.prototype.Za = function(n) {
	        var i = null == this.path ? null : this.path.child(n), e = new t(this.Ja, this.methodName, i, 
	        /*arrayElement=*/ !1, this.fieldTransforms, this.en);
	        return e.Ya(), e;
	    }, t.prototype.tf = function(n) {
	        // TODO(b/34871131): We don't support array paths right now; so make path
	        // null.
	        return new t(this.Ja, this.methodName, 
	        /*path=*/ null, 
	        /*arrayElement=*/ !0, this.fieldTransforms, this.en);
	    }, t.prototype.nf = function(t) {
	        var n = null === this.path || this.path.M() ? "" : " (found in field " + this.path.toString() + ")";
	        return new E(T.INVALID_ARGUMENT, "Function " + this.methodName + "() called with invalid data. " + t + n);
	    }, 
	    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */
	    t.prototype.contains = function(t) {
	        return void 0 !== this.en.find((function(n) {
	            return t.G(n);
	        })) || void 0 !== this.fieldTransforms.find((function(n) {
	            return t.G(n.field);
	        }));
	    }, t.prototype.Ya = function() {
	        // TODO(b/34871131): Remove null check once we have proper paths for fields
	        // within arrays.
	        if (null !== this.path) for (var t = 0; t < this.path.length; t++) this.$a(this.path.get(t));
	    }, t.prototype.$a = function(t) {
	        if (0 === t.length) throw this.nf("Document fields must not be empty");
	        if (je(this.Ja) && Oe.test(t)) throw this.nf('Document fields cannot begin and end with "__"');
	    }, t;
	}(), Le = function(t, n) {
	    this.ae = t, this.key = n;
	}, Me = /** @class */ function() {
	    function t(t, n) {
	        this.serializer = t, this.if = n;
	    }
	    /** Parse document data from a non-merge set() call. */    return t.prototype.ef = function(t, n) {
	        var i = new xe(0 /* Set */ , t, U.Y);
	        Be("Data must be an object, but it was:", i, n);
	        var e = this.rf(n, i);
	        return new Fe(new Ft(e), 
	        /* fieldMask= */ null, i.fieldTransforms);
	    }, 
	    /** Parse document data from a set() call with '{merge:true}'. */
	    t.prototype.uf = function(t, n, i) {
	        var e = new xe(2 /* MergeSet */ , t, U.Y);
	        Be("Data must be an object, but it was:", e, n);
	        var r, u, s = this.rf(n, e);
	        if (i) {
	            for (var o = new B(U.F), h = 0, c = i; h < c.length; h++) {
	                var a = c[h], f = void 0;
	                if (a instanceof Ee) f = a.Ma; else {
	                    if ("string" != typeof a) throw Gn("Expected stringOrFieldPath to be a string or a FieldPath");
	                    f = Ge(t, a);
	                }
	                if (!e.contains(f)) throw new E(T.INVALID_ARGUMENT, "Field '" + f + "' is specified in your field mask but missing from your input data.");
	                o = o.add(f);
	            }
	            r = Dt.Kt(o), u = e.fieldTransforms.filter((function(t) {
	                return r.Ht(t.field);
	            }));
	        } else r = Dt.Jt(e.en), u = e.fieldTransforms;
	        return new Fe(new Ft(s), r, u);
	    }, 
	    /** Parse update data from an update() call. */
	    t.prototype.sf = function(t, n) {
	        var i = this, e = new xe(1 /* Update */ , t, U.Y);
	        Be("Data must be an object, but it was:", e, n);
	        var r = new B(U.F), u = Ft.ln();
	        W(n, (function(n, s) {
	            var o = Ge(t, n), h = e.Za(o);
	            if ((s = i.hf(s, h)) instanceof Se) 
	            // Add it to the field mask, but don't add anything to updateData.
	            r = r.add(o); else {
	                var c = i.cf(s, h);
	                null != c && (r = r.add(o), u.set(o, c));
	            }
	        }));
	        var s = Dt.Kt(r);
	        return new Ue(u.on(), s, e.fieldTransforms);
	    }, 
	    /** Parse update data from a list of field/value arguments. */
	    t.prototype.af = function(t, n, i, e) {
	        var r = new xe(1 /* Update */ , t, U.Y), u = [ Qe(t, n) ], s = [ i ];
	        if (e.length % 2 != 0) throw new E(T.INVALID_ARGUMENT, "Function " + t + "() needs to be called with an even number of arguments that alternate between field names and values.");
	        for (var o = 0; o < e.length; o += 2) u.push(Qe(t, e[o])), s.push(e[o + 1]);
	        var h = new B(U.F), c = Ft.ln();
	        for (o = 0; o < u.length; ++o) {
	            var a = u[o], f = r.Za(a), l = this.hf(s[o], f);
	            if (l instanceof Se) 
	            // Add it to the field mask, but don't add anything to updateData.
	            h = h.add(a); else {
	                var d = this.cf(l, f);
	                null != d && (h = h.add(a), c.set(a, d));
	            }
	        }
	        var v = Dt.Kt(h);
	        return new Ue(c.on(), v, r.fieldTransforms);
	    }, 
	    /**
	     * Parse a "query value" (e.g. value in a where filter or a value in a cursor
	     * bound).
	     *
	     * @param allowArrays Whether the query value is an array that may directly
	     * contain additional arrays (e.g. the operand of an `in` query).
	     */
	    t.prototype.ff = function(t, n, i) {
	        void 0 === i && (i = !1);
	        var e = new xe(i ? 4 /* ArrayArgument */ : 3 /* Argument */ , t, U.Y), r = this.cf(n, e);
	        return Wn(null != r, "Parsed data should not be null."), Wn(0 === e.fieldTransforms.length, "Field transforms should have been disallowed."), 
	        r;
	    }, 
	    /** Sends data through this.preConverter, handling any thrown errors. */
	    t.prototype.hf = function(t, n) {
	        try {
	            return this.if(t);
	        } catch (t) {
	            var i = We(t);
	            throw n.nf(i);
	        }
	    }, 
	    /**
	     * Internal helper for parsing user data.
	     *
	     * @param input Data to be parsed.
	     * @param context A context object representing the current path being parsed,
	     * the source of the data being parsed, etc.
	     * @return The parsed value, or null if the value was a FieldValue sentinel
	     * that should not be included in the resulting parsed data.
	     */
	    t.prototype.cf = function(t, n) {
	        if (qe(t = this.hf(t, n))) return Be("Unsupported field value:", n, t), this.rf(t, n);
	        if (t instanceof Re) 
	        // FieldValues usually parse into transforms (except FieldValue.delete())
	        // in which case we do not want to include this field in our parsed data
	        // (as doing so will overwrite the field directly prior to the transform
	        // trying to transform it). So we don't add this location to
	        // context.fieldMask and we return null as our parsing result.
	        return this.lf(t, n), null;
	        if (
	        // If context.path is null we are inside an array and we don't support
	        // field mask paths more granular than the top-level array.
	        n.path && n.en.push(n.path), t instanceof Array) {
	            // TODO(b/34871131): Include the path containing the array in the error
	            // message.
	            // In the case of IN queries, the parsed data is an array (representing
	            // the set of values to be included for the IN query) that may directly
	            // contain additional arrays (each representing an individual field
	            // value), so we disable this validation.
	            if (n.Ha && 4 /* ArrayArgument */ !== n.Ja) throw n.nf("Nested arrays are not supported");
	            return this.df(t, n);
	        }
	        return this.vf(t, n);
	    }, t.prototype.rf = function(t, n) {
	        var i = this, e = {};
	        return z(t) ? 
	        // If we encounter an empty object, we explicitly add it to the update
	        // mask to ensure that the server creates a map entry.
	        n.path && n.path.length > 0 && n.en.push(n.path) : W(t, (function(t, r) {
	            var u = i.cf(r, n.Xa(t));
	            null != u && (e[t] = u);
	        })), {
	            mapValue: {
	                fields: e
	            }
	        };
	    }, t.prototype.df = function(t, n) {
	        for (var i = [], e = 0, r = 0, u = t; r < u.length; r++) {
	            var s = u[r], o = this.cf(s, n.tf(e));
	            null == o && (
	            // Just include nulls in the array for fields being replaced with a
	            // sentinel.
	            o = {
	                nullValue: "NULL_VALUE"
	            }), i.push(o), e++;
	        }
	        return {
	            arrayValue: {
	                values: i
	            }
	        };
	    }, 
	    /**
	     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
	     * context.fieldTransforms.
	     */
	    t.prototype.lf = function(t, n) {
	        // Sentinels are only supported with writes, and not within arrays.
	        if (!je(n.Ja)) throw n.nf(t.Ba + "() can only be used with update() and set()");
	        if (null === n.path) throw n.nf(t.Ba + "() is not currently supported inside arrays");
	        if (t instanceof Se) {
	            if (2 /* MergeSet */ !== n.Ja) throw 1 /* Update */ === n.Ja ? (Wn(n.path.length > 0, "FieldValue.delete() at the top level should have already been handled."), 
	            n.nf("FieldValue.delete() can only appear at the top level of your update data")) : n.nf("FieldValue.delete() cannot be used with set() unless you pass {merge:true}");
	            // No transform to add for a delete, but we need to add it to our
	            // fieldMask so it gets deleted.
	            n.en.push(n.path);
	        } else if (t instanceof Ae) n.fieldTransforms.push(new Rt(n.path, bt.instance)); else if (t instanceof Ce) {
	            var i = this.wf(t.Ba, t.Qa), e = new gt(i);
	            n.fieldTransforms.push(new Rt(n.path, e));
	        } else if (t instanceof Pe) {
	            i = this.wf(t.Ba, t.Qa);
	            var r = new yt(i);
	            n.fieldTransforms.push(new Rt(n.path, r));
	        } else if (t instanceof Ve) {
	            var u = this.ff("FieldValue.increment", t.Ga), s = new _t(this.serializer, u);
	            n.fieldTransforms.push(new Rt(n.path, s));
	        } else Gn("Unknown FieldValue type: " + t);
	    }, 
	    /**
	     * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)
	     *
	     * @return The parsed value
	     */
	    t.prototype.vf = function(t, n) {
	        if (null === t) return {
	            nullValue: "NULL_VALUE"
	        };
	        if ("number" == typeof t) return this.serializer.we(t);
	        if ("boolean" == typeof t) return {
	            booleanValue: t
	        };
	        if ("string" == typeof t) return {
	            stringValue: t
	        };
	        if (t instanceof Date) {
	            var i = V.fromDate(t);
	            return {
	                timestampValue: this.serializer.O(i)
	            };
	        }
	        if (t instanceof V) {
	            // Firestore backend truncates precision down to microseconds. To ensure
	            // offline mode works the same with regards to truncation, perform the
	            // truncation immediately without waiting for the backend to do that.
	            i = new V(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
	            return {
	                timestampValue: this.serializer.O(i)
	            };
	        }
	        if (t instanceof Ne) return {
	            geoPointValue: {
	                latitude: t.latitude,
	                longitude: t.longitude
	            }
	        };
	        if (t instanceof Ie) return {
	            bytesValue: this.serializer.me(t)
	        };
	        if (t instanceof Le) return {
	            referenceValue: this.serializer.be(t.key.path, t.ae)
	        };
	        throw n.nf("Unsupported field value: " + le(t));
	    }, t.prototype.wf = function(t, n) {
	        var i = this;
	        return n.map((function(n, e) {
	            // Although array transforms are used with writes, the actual elements
	            // being unioned or removed are not considered writes since they cannot
	            // contain any FieldValue sentinels, etc.
	            var r = new xe(3 /* Argument */ , t, U.Y);
	            return i.cf(n, r.tf(e));
	        }));
	    }, t;
	}();
	
	/**
	 * A placeholder object for DocumentReferences in this file, in order to
	 * avoid a circular dependency. See the comments for `DataPreConverter` for
	 * the full context.
	 */
	/**
	 * Checks whether an object looks like a JSON object that should be converted
	 * into a struct. Normal class/prototype instances are considered to look like
	 * JSON objects since they should be converted to a struct value. Arrays, Dates,
	 * GeoPoints, etc. are not considered to look like JSON objects since they map
	 * to specific FieldValue types other than ObjectValue.
	 */
	function qe(t) {
	    return !("object" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof V || t instanceof Ne || t instanceof Ie || t instanceof Le || t instanceof Re);
	}
	
	function Be(t, n, i) {
	    if (!qe(i) || !fe(i)) {
	        var e = le(i);
	        throw "an object" === e ? n.nf(t + " a custom object") : n.nf(t + " " + e);
	    }
	}
	
	/**
	 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
	 */ function Qe(t, n) {
	    if (n instanceof Ee) return n.Ma;
	    if ("string" == typeof n) return Ge(t, n);
	    throw new E(T.INVALID_ARGUMENT, "Function " + t + "() called with invalid data. Field path arguments must be of type string or FieldPath.");
	}
	
	/**
	 * Wraps fromDotSeparatedString with an error message about the method that
	 * was thrown.
	 * @param methodName The publicly visible method name
	 * @param path The dot-separated string form of a field path which will be split
	 * on dots.
	 */ function Ge(t, n) {
	    try {
	        /**
	 * Parses a field path string into a FieldPath, treating dots as separators.
	 */
	        return function(t) {
	            if (t.search(De) >= 0) throw new E(T.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not contain '~', '*', '/', '[', or ']'");
	            try {
	                return new (Ee.bind.apply(Ee, tslib.__spreadArrays([ void 0 ], t.split("."))));
	            } catch (n) {
	                throw new E(T.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
	            }
	        }(n).Ma;
	    } catch (n) {
	        var i = We(n);
	        throw new E(T.INVALID_ARGUMENT, "Function " + t + "() called with invalid data. " + i);
	    }
	}
	
	/**
	 * Extracts the message from a caught exception, which should be an Error object
	 * though JS doesn't guarantee that.
	 */ function We(t) {
	    return t instanceof Error ? t.message : t.toString();
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Internal transaction object responsible for accumulating the mutations to
	 * perform and the base versions for any documents read.
	 */ var ze = /** @class */ function() {
	    function t(t) {
	        this.mf = t, 
	        // The version of each document that was read during this transaction.
	        this.pf = dn(), this.mutations = [], this.bf = !1, 
	        /**
	         * A deferred usage error that occurred previously in this transaction that
	         * will cause the transaction to fail once it actually commits.
	         */
	        this.gf = null, 
	        /**
	         * Set of documents that have been written in the transaction.
	         *
	         * When there's more than one write to the same key in a transaction, any
	         * writes after the first are handled differently.
	         */
	        this.yf = new Set;
	    }
	    return t.prototype.lookup = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i = this;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    if (this._f(), this.mutations.length > 0) throw new E(T.INVALID_ARGUMENT, "Firestore transactions require all reads to be executed before all writes.");
	                    return [ 4 /*yield*/ , this.mf.lookup(t) ];
	
	                  case 1:
	                    return (n = e.sent()).forEach((function(t) {
	                        t instanceof Lt || t instanceof xt ? i.If(t) : Gn("Document in a transaction was a " + t.constructor.name);
	                    })), [ 2 /*return*/ , n ];
	                }
	            }));
	        }));
	    }, t.prototype.set = function(t, n) {
	        this.write(n.Ka(t, this.tn(t))), this.yf.add(t);
	    }, t.prototype.update = function(t, n) {
	        try {
	            this.write(n.Ka(t, this.Tf(t)));
	        } catch (t) {
	            this.gf = t;
	        }
	        this.yf.add(t);
	    }, t.prototype.delete = function(t) {
	        this.write([ new Nt(t, this.tn(t)) ]), this.yf.add(t);
	    }, t.prototype.commit = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t, n = this;
	            return tslib.__generator(this, (function(i) {
	                switch (i.label) {
	                  case 0:
	                    if (this._f(), this.gf) throw this.gf;
	                    return t = this.pf, 
	                    // For each mutation, note that the doc was written.
	                    this.mutations.forEach((function(n) {
	                        t = t.remove(n.key);
	                    })), 
	                    // For each document that was read but not written to, we want to perform
	                    // a `verify` operation.
	                    t.forEach((function(t, i) {
	                        n.mutations.push(new Ot(t, n.tn(t)));
	                    })), [ 4 /*yield*/ , this.mf.commit(this.mutations) ];
	
	                  case 1:
	                    return i.sent(), this.bf = !0, [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.If = function(t) {
	        var n;
	        if (t instanceof xt) n = t.version; else {
	            if (!(t instanceof Lt)) throw Gn("Document in a transaction was a " + t.constructor.name);
	            // For deleted docs, we must use baseVersion 0 when we overwrite them.
	            n = k.V();
	        }
	        var i = this.pf.get(t.key);
	        if (null !== i) {
	            if (!n.isEqual(i)) 
	            // This transaction will fail no matter what.
	            throw new E(T.ABORTED, "Document version changed between two reads.");
	        } else this.pf = this.pf.ut(t.key, n);
	    }, 
	    /**
	     * Returns the version of this document when it was read in this transaction,
	     * as a precondition, or no precondition if it was not read.
	     */
	    t.prototype.tn = function(t) {
	        var n = this.pf.get(t);
	        return !this.yf.has(t) && n ? At.updateTime(n) : At.NONE;
	    }, 
	    /**
	     * Returns the precondition for a document if the operation is an update.
	     */
	    t.prototype.Tf = function(t) {
	        var n = this.pf.get(t);
	        // The first time a document is written, we want to take into account the
	        // read time and existence
	                if (!this.yf.has(t) && n) {
	            if (n.isEqual(k.V())) 
	            // The document doesn't exist, so fail the transaction.
	            // This has to be validated locally because you can't send a
	            // precondition that a document does not exist without changing the
	            // semantics of the backend write to be an insert. This is the reverse
	            // of what we want, since we want to assert that the document doesn't
	            // exist but then send the update and have it fail. Since we can't
	            // express that to the backend, we have to validate locally.
	            // Note: this can change once we can send separate verify writes in the
	            // transaction.
	            throw new E(T.INVALID_ARGUMENT, "Can't update a document that doesn't exist.");
	            // Document exists, base precondition on document update time.
	                        return At.updateTime(n);
	        }
	        // Document was not read, so we just use the preconditions for a blind
	        // update.
	        return At.exists(!0);
	    }, t.prototype.write = function(t) {
	        this._f(), this.mutations = this.mutations.concat(t);
	    }, t.prototype._f = function() {
	        Wn(!this.bf, "A transaction object cannot be used after its update callback has been invoked.");
	    }, t;
	}(), Ke = /** @class */ function() {
	    function t(t, n) {
	        this.Or = t, this.Ho = n, 
	        /** The current OnlineState. */
	        this.state = "Unknown" /* Unknown */ , 
	        /**
	         * A count of consecutive failures to open the stream. If it reaches the
	         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
	         * Offline.
	         */
	        this.Ef = 0, 
	        /**
	         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
	         * transition from OnlineState.Unknown to OnlineState.Offline without waiting
	         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
	         */
	        this.Df = null, 
	        /**
	         * Whether the client should log a warning message if it fails to connect to
	         * the backend (initially true, cleared after a successful stream, or if we've
	         * logged the message already).
	         */
	        this.Rf = !0;
	    }
	    /**
	     * Called by RemoteStore when a watch stream is started (including on each
	     * backoff attempt).
	     *
	     * If this is the first attempt, it sets the OnlineState to Unknown and starts
	     * the onlineStateTimer.
	     */    return t.prototype.Sf = function() {
	        var t = this;
	        0 === this.Ef && (this.Af("Unknown" /* Unknown */), Wn(null === this.Df, "onlineStateTimer shouldn't be started yet"), 
	        this.Df = this.Or.iu("online_state_timeout" /* OnlineStateTimeout */ , 1e4, (function() {
	            // NOTE: handleWatchStreamFailure() will continue to increment
	            // watchStreamFailures even though we are already marked Offline,
	            // but this is non-harmful.
	            return t.Df = null, Wn("Unknown" /* Unknown */ === t.state, "Timer should be canceled if we transitioned to a different state."), 
	            t.Cf("Backend didn't respond within 10 seconds."), t.Af("Offline" /* Offline */), 
	            Promise.resolve();
	        })));
	    }, 
	    /**
	     * Updates our OnlineState as appropriate after the watch stream reports a
	     * failure. The first failure moves us to the 'Unknown' state. We then may
	     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
	     * actually transition to the 'Offline' state.
	     */
	    t.prototype.Pf = function(t) {
	        "Online" /* Online */ === this.state ? (this.Af("Unknown" /* Unknown */), 
	        // To get to OnlineState.Online, set() must have been called which would
	        // have reset our heuristics.
	        Wn(0 === this.Ef, "watchStreamFailures must be 0"), Wn(null === this.Df, "onlineStateTimer must be null")) : (this.Ef++, 
	        this.Ef >= 1 && (this.Vf(), this.Cf("Connection failed 1 times. Most recent error: " + t.toString()), 
	        this.Af("Offline" /* Offline */)));
	    }, 
	    /**
	     * Explicitly sets the OnlineState to the specified state.
	     *
	     * Note that this resets our timers / failure counters, etc. used by our
	     * Offline heuristics, so must not be used in place of
	     * handleWatchStreamStart() and handleWatchStreamFailure().
	     */
	    t.prototype.set = function(t) {
	        this.Vf(), this.Ef = 0, "Online" /* Online */ === t && (
	        // We've connected to watch at least once. Don't warn the developer
	        // about being offline going forward.
	        this.Rf = !1), this.Af(t);
	    }, t.prototype.Af = function(t) {
	        t !== this.state && (this.state = t, this.Ho(t));
	    }, t.prototype.Cf = function(t) {
	        var n = "Could not reach Cloud Firestore backend. " + t + "\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";
	        this.Rf ? (Bn(n), this.Rf = !1) : qn("OnlineStateTracker", n);
	    }, t.prototype.Vf = function() {
	        null !== this.Df && (this.Df.cancel(), this.Df = null);
	    }, t;
	}(), Je = /** @class */ function() {
	    function t(
	    /**
	     * The local store, used to fill the write pipeline with outbound mutations.
	     */
	    t, 
	    /** The client-side proxy for interacting with the backend. */
	    n, i, e, s) {
	        var o = this;
	        this.kf = t, this.mf = n, 
	        /**
	         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
	         * LocalStore via fillWritePipeline() and have or will send to the write
	         * stream.
	         *
	         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
	         * restart the write stream. When the stream is established the writes in the
	         * pipeline will be sent in order.
	         *
	         * Writes remain in writePipeline until they are acknowledged by the backend
	         * and thus will automatically be re-sent if the stream is interrupted /
	         * restarted before they're acknowledged.
	         *
	         * Write responses from the backend are linked to their originating request
	         * purely based on order, and so we can just shift() writes from the front of
	         * the writePipeline as we receive responses.
	         */
	        this.Nf = [], 
	        /**
	         * A mapping of watched targets that the client cares about tracking and the
	         * user has explicitly called a 'listen' for this target.
	         *
	         * These targets may or may not have been sent to or acknowledged by the
	         * server. On re-establishing the listen stream, these targets should be sent
	         * to the server. The targets removed with unlistens are removed eagerly
	         * without waiting for confirmation from the listen stream.
	         */
	        this.Of = new Map, this.Ff = null, 
	        /**
	         * Set to true by enableNetwork() and false by disableNetwork() and indicates
	         * the user-preferred network state.
	         */
	        this.networkEnabled = !1, this.isPrimary = !1, this.Uf = s, this.Uf.jf((function(t) {
	            i.Qr((function() {
	                return tslib.__awaiter(o, void 0, void 0, (function() {
	                    return tslib.__generator(this, (function(t) {
	                        switch (t.label) {
	                          case 0:
	                            return this.xf() ? (qn("RemoteStore", "Restarting streams for network reachability change."), 
	                            [ 4 /*yield*/ , this.Lf() ]) : [ 3 /*break*/ , 2 ];
	
	                          case 1:
	                            t.sent(), t.label = 2;
	
	                          case 2:
	                            return [ 2 /*return*/ ];
	                        }
	                    }));
	                }));
	            }));
	        })), this.Mf = new Ke(i, e), 
	        // Create streams (but note they're not started yet).
	        this.qf = this.mf.Fa({
	            Ea: this.Bf.bind(this),
	            ga: this.Qf.bind(this),
	            Ra: this.Gf.bind(this)
	        }), this.Wf = this.mf.Oa({
	            Ea: this.zf.bind(this),
	            ga: this.Kf.bind(this),
	            ka: this.Jf.bind(this),
	            Va: this.Va.bind(this)
	        });
	    }
	    /**
	     * Starts up the remote store, creating streams, restoring state from
	     * LocalStore, etc.
	     */    return t.prototype.start = function() {
	        return this.enableNetwork();
	    }, 
	    /** Re-enables the network. Idempotent. */
	    t.prototype.enableNetwork = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t;
	            return tslib.__generator(this, (function(n) {
	                switch (n.label) {
	                  case 0:
	                    return this.networkEnabled = !0, this.xf() ? (t = this.Wf, [ 4 /*yield*/ , this.kf.uo() ]) : [ 3 /*break*/ , 3 ];
	
	                  case 1:
	                    // This will start the write stream if necessary.
	                    return t.lastStreamToken = n.sent(), this.Hf() ? this.Yf() : this.Mf.set("Unknown" /* Unknown */), 
	                    [ 4 /*yield*/ , this.Xf() ];
	
	                  case 2:
	                    // This will start the write stream if necessary.
	                    n.sent(), n.label = 3;
	
	                  case 3:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Temporarily disables the network. The network can be re-enabled using
	     * enableNetwork().
	     */
	    t.prototype.disableNetwork = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                switch (t.label) {
	                  case 0:
	                    return this.networkEnabled = !1, [ 4 /*yield*/ , this.$f() ];
	
	                  case 1:
	                    return t.sent(), 
	                    // Set the OnlineState to Offline so get()s return from cache, etc.
	                    this.Mf.set("Offline" /* Offline */), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.$f = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                switch (t.label) {
	                  case 0:
	                    return [ 4 /*yield*/ , this.Wf.stop() ];
	
	                  case 1:
	                    return t.sent(), [ 4 /*yield*/ , this.qf.stop() ];
	
	                  case 2:
	                    return t.sent(), this.Nf.length > 0 && (qn("RemoteStore", "Stopping write stream with " + this.Nf.length + " pending writes"), 
	                    this.Nf = []), this.Zf(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.shutdown = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                switch (t.label) {
	                  case 0:
	                    return qn("RemoteStore", "RemoteStore shutting down."), this.networkEnabled = !1, 
	                    [ 4 /*yield*/ , this.$f() ];
	
	                  case 1:
	                    return t.sent(), this.Uf.shutdown(), 
	                    // Set the OnlineState to Unknown (rather than Offline) to avoid potentially
	                    // triggering spurious listener events with cached data, etc.
	                    this.Mf.set("Unknown" /* Unknown */), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Starts new listen for the given target. Uses resume token if provided. It
	     * is a no-op if the target of given `TargetData` is already being listened to.
	     */
	    t.prototype.listen = function(t) {
	        this.Of.has(t.targetId) || (
	        // Mark this as something the client is currently listening for.
	        this.Of.set(t.targetId, t), this.Hf() ? 
	        // The listen will be sent in onWatchStreamOpen
	        this.Yf() : this.qf.fa() && this.tl(t));
	    }, 
	    /**
	     * Removes the listen from server. It is a no-op if the given target id is
	     * not being listened to.
	     */
	    t.prototype.nl = function(t) {
	        Wn(this.Of.has(t), "unlisten called on target no currently watched: " + t), this.Of.delete(t), 
	        this.qf.fa() && this.il(t), 0 === this.Of.size && (this.qf.fa() ? this.qf.va() : this.xf() && 
	        // Revert to OnlineState.Unknown if the watch stream is not open and we
	        // have no listeners, since without any listens to send we cannot
	        // confirm if the stream is healthy and upgrade to OnlineState.Online.
	        this.Mf.set("Unknown" /* Unknown */));
	    }, 
	    /** {@link TargetMetadataProvider.getTargetDataForTarget} */
	    t.prototype.ce = function(t) {
	        return this.Of.get(t) || null;
	    }, 
	    /** {@link TargetMetadataProvider.getRemoteKeysForTarget} */
	    t.prototype.he = function(t) {
	        return this.Jo.he(t);
	    }, 
	    /**
	     * We need to increment the the expected number of pending responses we're due
	     * from watch so we wait for the ack to process any messages from this target.
	     */
	    t.prototype.tl = function(t) {
	        this.Ff.Mi(t.targetId), this.qf.watch(t);
	    }, 
	    /**
	     * We need to increment the expected number of pending responses we're due
	     * from watch so we wait for the removal on the server before we process any
	     * messages from this target.
	     */
	    t.prototype.il = function(t) {
	        this.Ff.Mi(t), this.qf.Sa(t);
	    }, t.prototype.Yf = function() {
	        Wn(this.Hf(), "startWatchStream() called when shouldStartWatchStream() is false."), 
	        this.Ff = new Sn(this), this.qf.start(), this.Mf.Sf();
	    }, 
	    /**
	     * Returns whether the watch stream should be started because it's necessary
	     * and has not yet been started.
	     */
	    t.prototype.Hf = function() {
	        return this.xf() && !this.qf.aa() && this.Of.size > 0;
	    }, t.prototype.xf = function() {
	        return this.isPrimary && this.networkEnabled;
	    }, t.prototype.Zf = function() {
	        this.Ff = null;
	    }, t.prototype.Bf = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t = this;
	            return tslib.__generator(this, (function(n) {
	                return this.Of.forEach((function(n, i) {
	                    t.tl(n);
	                })), [ 2 /*return*/ ];
	            }));
	        }));
	    }, t.prototype.Qf = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(n) {
	                return void 0 === t && 
	                // Graceful stop (due to stop() or idle timeout). Make sure that's
	                // desirable.
	                Wn(!this.Hf(), "Watch stream was stopped gracefully while still needed."), this.Zf(), 
	                // If we still need the watch stream, retry the connection.
	                this.Hf() ? (this.Mf.Pf(t), this.Yf()) : 
	                // No need to restart watch stream because there are no active targets.
	                // The online state is set to unknown because there is no active attempt
	                // at establishing a connection
	                this.Mf.set("Unknown" /* Unknown */), [ 2 /*return*/ ];
	            }));
	        }));
	    }, t.prototype.Gf = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    // Mark the client as online since we got a message from the server
	                    return this.Mf.set("Online" /* Online */), t instanceof Dn && 2 /* Removed */ === t.state && t.cause ? [ 2 /*return*/ , this.el(t) ] : (t instanceof Tn ? this.Ff.Ji(t) : t instanceof En ? this.Ff.ie(t) : (Wn(t instanceof Dn, "Expected watchChange to be an instance of WatchTargetChange"), 
	                    this.Ff.Xi(t)), n.isEqual(k.MIN) ? [ 3 /*break*/ , 3 ] : [ 4 /*yield*/ , this.kf.oo() ]);
	
	                  case 1:
	                    return i = e.sent(), n.k(i) >= 0 ? [ 4 /*yield*/ , this.rl(n) ] : [ 3 /*break*/ , 3 ];
	
	                    // We have received a target change with a global snapshot if the snapshot
	                    // version is not equal to SnapshotVersion.MIN.
	                                      case 2:
	                    // We have received a target change with a global snapshot if the snapshot
	                    // version is not equal to SnapshotVersion.MIN.
	                    e.sent(), e.label = 3;
	
	                  case 3:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Takes a batch of changes from the Datastore, repackages them as a
	     * RemoteEvent, and passes that on to the listener, which is typically the
	     * SyncEngine.
	     */
	    t.prototype.rl = function(t) {
	        var n = this;
	        Wn(!t.isEqual(k.MIN), "Can't raise event for unknown SnapshotVersion");
	        var i = this.Ff.ue(t);
	        // Update in-memory resume tokens. LocalStore will update the
	        // persistent view of these when applying the completed RemoteEvent.
	                // Finally raise remote event
	        return i.wi.forEach((function(i, e) {
	            if (i.resumeToken.Lt() > 0) {
	                var r = n.Of.get(e);
	                // A watched target might have been removed already.
	                                r && n.Of.set(e, r.ei(i.resumeToken, t));
	            }
	        })), 
	        // Re-establish listens for the targets that have been invalidated by
	        // existence filter mismatches.
	        i.mi.forEach((function(t) {
	            var i = n.Of.get(t);
	            if (i) {
	                // Clear the resume token for the target, since we're in a known mismatch
	                // state.
	                n.Of.set(t, i.ei(K.Mt, i.ni)), 
	                // Cause a hard reset by unwatching and rewatching immediately, but
	                // deliberately don't send a resume token so that we get a full update.
	                n.il(t);
	                // Mark the target we send as being on behalf of an existence filter
	                // mismatch, but don't actually retain that in listenTargets. This ensures
	                // that we flag the first re-listen this way without impacting future
	                // listens of this target (that might happen e.g. on reconnect).
	                var e = new en(i.target, t, 1 /* ExistenceFilterMismatch */ , i.sequenceNumber);
	                n.tl(e);
	            }
	        })), this.Jo.ho(i);
	    }, 
	    /** Handles an error on a target */
	    t.prototype.el = function(t) {
	        var n = this;
	        Wn(!!t.cause, "Handling target error without a cause");
	        var i = t.cause, e = Promise.resolve();
	        return t.targetIds.forEach((function(t) {
	            e = e.then((function() {
	                return tslib.__awaiter(n, void 0, void 0, (function() {
	                    return tslib.__generator(this, (function(n) {
	                        // A watched target might have been removed already.
	                        return this.Of.has(t) ? (this.Of.delete(t), this.Ff.removeTarget(t), [ 2 /*return*/ , this.Jo.ul(t, i) ]) : [ 2 /*return*/ ];
	                    }));
	                }));
	            }));
	        })), e;
	    }, 
	    /**
	     * Attempts to fill our write pipeline with writes from the LocalStore.
	     *
	     * Called internally to bootstrap or refill the write pipeline and by
	     * SyncEngine whenever there are new mutations to process.
	     *
	     * Starts the write stream if necessary.
	     */
	    t.prototype.Xf = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t, n;
	            return tslib.__generator(this, (function(i) {
	                switch (i.label) {
	                  case 0:
	                    return this.sl() ? (t = this.Nf.length > 0 ? this.Nf[this.Nf.length - 1].batchId : -1, 
	                    [ 4 /*yield*/ , this.kf.yo(t) ]) : [ 3 /*break*/ , 4 ];
	
	                  case 1:
	                    return null !== (n = i.sent()) ? [ 3 /*break*/ , 2 ] : (0 === this.Nf.length && this.Wf.va(), 
	                    [ 3 /*break*/ , 4 ]);
	
	                  case 2:
	                    return this.ol(n), [ 4 /*yield*/ , this.Xf() ];
	
	                  case 3:
	                    i.sent(), i.label = 4;
	
	                  case 4:
	                    return this.hl() && this.cl(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Returns true if we can add to the write pipeline (i.e. the network is
	     * enabled and the write pipeline is not full).
	     */
	    t.prototype.sl = function() {
	        return this.xf() && this.Nf.length < 10;
	    }, 
	    // For testing
	    t.prototype.al = function() {
	        return this.Nf.length;
	    }, 
	    /**
	     * Queues additional writes to be sent to the write stream, sending them
	     * immediately if the write stream is established.
	     */
	    t.prototype.ol = function(t) {
	        Wn(this.sl(), "addToWritePipeline called when pipeline is full"), this.Nf.push(t), 
	        this.Wf.fa() && this.Wf.Ca && this.Wf.Pa(t.mutations);
	    }, t.prototype.hl = function() {
	        return this.xf() && !this.Wf.aa() && this.Nf.length > 0;
	    }, t.prototype.cl = function() {
	        Wn(this.hl(), "startWriteStream() called when shouldStartWriteStream() is false."), 
	        this.Wf.start();
	    }, t.prototype.zf = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                return this.Wf.Na(), [ 2 /*return*/ ];
	            }));
	        }));
	    }, t.prototype.Jf = function() {
	        var t = this;
	        // Record the stream token.
	                return this.kf.so(this.Wf.lastStreamToken).then((function() {
	            // Send the write pipeline now that the stream is established.
	            for (var n = 0, i = t.Nf; n < i.length; n++) {
	                var e = i[n];
	                t.Wf.Pa(e.mutations);
	            }
	        })).catch(pi);
	    }, t.prototype.Va = function(t, n) {
	        var i = this;
	        // This is a response to a write containing mutations and should be
	        // correlated to the first write in our write pipeline.
	                Wn(this.Nf.length > 0, "Got result for empty write pipeline");
	        var e = this.Nf.shift(), r = Zn.from(e, t, n, this.Wf.lastStreamToken);
	        return this.Jo.fl(r).then((function() {
	            // It's possible that with the completion of this mutation another
	            // slot has freed up.
	            return i.Xf();
	        }));
	    }, t.prototype.Kf = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n = this;
	            return tslib.__generator(this, (function(i) {
	                // If the write stream closed due to an error, invoke the error callbacks if
	                // there are pending writes.
	                return void 0 === t && 
	                // Graceful stop (due to stop() or idle timeout). Make sure that's
	                // desirable.
	                Wn(!this.hl(), "Write stream was stopped gracefully while still needed."), t && this.Nf.length > 0 ? ([ 2 /*return*/ , (this.Wf.Ca ? this.ll(t) : this.dl(t)).then((function() {
	                    // The write stream might have been started by refilling the write
	                    // pipeline for failed writes
	                    n.hl() && n.cl();
	                })) ]) : [ 2 /*return*/ ];
	            }));
	        }));
	    }, t.prototype.dl = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(n) {
	                // Reset the token if it's a permanent error, signaling the write stream is
	                // no longer valid. Note that the handshake does not count as a write: see
	                // comments on isPermanentWriteError for details.
	                return un(t.code) ? (qn("RemoteStore", "RemoteStore error before completed handshake; resetting stream token: ", this.Wf.lastStreamToken), 
	                this.Wf.lastStreamToken = K.Mt, [ 2 /*return*/ , this.kf.so(K.Mt).catch(pi) ]) : [ 2 /*return*/ ];
	            }));
	        }));
	    }, t.prototype.ll = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i = this;
	            return tslib.__generator(this, (function(e) {
	                // Only handle permanent errors here. If it's transient, just let the retry
	                // logic kick in.
	                return un(r = t.code) && r !== T.ABORTED ? (n = this.Nf.shift(), 
	                // In this case it's also unlikely that the server itself is melting
	                // down -- this was just a bad request so inhibit backoff on the next
	                // restart.
	                this.Wf.da(), [ 2 /*return*/ , this.Jo.vl(n.batchId, t).then((function() {
	                    // It's possible that with the completion of this mutation
	                    // another slot has freed up.
	                    return i.Xf();
	                })) ]) : [ 2 /*return*/ ];
	                var r;
	                /**
	 * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.
	 *
	 * @returns The Code equivalent to the given status string or undefined if
	 *     there is no match.
	 */            }));
	        }));
	    }, t.prototype.wl = function() {
	        return new ze(this.mf);
	    }, t.prototype.Lf = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                switch (t.label) {
	                  case 0:
	                    return this.networkEnabled = !1, [ 4 /*yield*/ , this.$f() ];
	
	                  case 1:
	                    return t.sent(), this.Mf.set("Unknown" /* Unknown */), [ 4 /*yield*/ , this.enableNetwork() ];
	
	                  case 2:
	                    return t.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.ml = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(t) {
	                switch (t.label) {
	                  case 0:
	                    return this.xf() ? (
	                    // Tear down and re-create our network streams. This will ensure we get a fresh auth token
	                    // for the new user and re-fill the write pipeline with new mutations from the LocalStore
	                    // (since mutations are per-user).
	                    qn("RemoteStore", "RemoteStore restarting streams for new credential"), [ 4 /*yield*/ , this.Lf() ]) : [ 3 /*break*/ , 2 ];
	
	                  case 1:
	                    t.sent(), t.label = 2;
	
	                  case 2:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Toggles the network state when the client gains or loses its primary lease.
	     */
	    t.prototype.pl = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            return tslib.__generator(this, (function(n) {
	                switch (n.label) {
	                  case 0:
	                    return this.isPrimary = t, t && this.networkEnabled ? [ 4 /*yield*/ , this.enableNetwork() ] : [ 3 /*break*/ , 2 ];
	
	                  case 1:
	                    return n.sent(), [ 3 /*break*/ , 4 ];
	
	                  case 2:
	                    return t ? [ 3 /*break*/ , 4 ] : [ 4 /*yield*/ , this.$f() ];
	
	                  case 3:
	                    n.sent(), this.Mf.set("Unknown" /* Unknown */), n.label = 4;
	
	                  case 4:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t;
	}(), He = function(t) {
	    this.key = t;
	}, Ye = function(t) {
	    this.key = t;
	}, Xe = /** @class */ function() {
	    function t(t, 
	    /** Documents included in the remote target */
	    n) {
	        this.query = t, this.bl = n, this.gl = null, 
	        /**
	         * A flag whether the view is current with the backend. A view is considered
	         * current after it has seen the current flag from the backend and did not
	         * lose consistency within the watch stream (e.g. because of an existence
	         * filter mismatch).
	         */
	        this._i = !1, 
	        /** Documents in the view but not in the remote target */
	        this.yl = wn(), 
	        /** Document Keys that have local changes */
	        this.fi = wn(), this._l = new bn(t.Bn.bind(t));
	    }
	    return Object.defineProperty(t.prototype, "Il", {
	        /**
	         * The set of remote documents that the server has told us belongs to the target associated with
	         * this view.
	         */
	        get: function() {
	            return this.bl;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /**
	     * Iterates over a set of doc changes, applies the query limit, and computes
	     * what the new results should be, what the changes were, and whether we may
	     * need to go back to the local cache for more results. Does not make any
	     * changes to the view.
	     * @param docChanges The doc changes to apply to this view.
	     * @param previousChanges If this is being called with a refill, then start
	     *        with this set of docs and changes instead of the current view.
	     * @return a new set of docs, changes, and refill flag.
	     */
	    t.prototype.Tl = function(t, n) {
	        var i = this, e = n ? n.El : new gn, r = n ? n._l : this._l, u = n ? n.fi : this.fi, s = r, o = !1, h = this.query.Kn() && r.size === this.query.limit ? r.last() : null, c = this.query.Jn() && r.size === this.query.limit ? r.first() : null;
	        // Drop documents out to meet limit/limitToLast requirement.
	        if (t.ct((function(t, n) {
	            var a = r.get(t), f = n instanceof xt ? n : null;
	            f && (Wn(t.isEqual(f.key), "Mismatching keys found in document changes: " + t + " != " + f.key), 
	            f = i.query.matches(f) ? f : null);
	            var l = !!a && i.fi.has(a.key), d = !!f && (f.nn || 
	            // We only consider committed mutations for documents that were
	            // mutated during the lifetime of the view.
	            i.fi.has(f.key) && f.hasCommittedMutations), v = !1;
	            // Calculate change
	            a && f ? a.data().isEqual(f.data()) ? l !== d && (e.track({
	                type: 3 /* Metadata */ ,
	                doc: f
	            }), v = !0) : i.Dl(a, f) || (e.track({
	                type: 2 /* Modified */ ,
	                doc: f
	            }), v = !0, (h && i.query.Bn(f, h) > 0 || c && i.query.Bn(f, c) < 0) && (
	            // This doc moved from inside the limit to outside the limit.
	            // That means there may be some other doc in the local cache
	            // that should be included instead.
	            o = !0)) : !a && f ? (e.track({
	                type: 0 /* Added */ ,
	                doc: f
	            }), v = !0) : a && !f && (e.track({
	                type: 1 /* Removed */ ,
	                doc: a
	            }), v = !0, (h || c) && (
	            // A doc was removed from a full limit query. We'll need to
	            // requery from the local cache to see if we know about some other
	            // doc that should be in the results.
	            o = !0));
	            v && (f ? (s = s.add(f), u = d ? u.add(t) : u.delete(t)) : (s = s.delete(t), u = u.delete(t)));
	        })), this.query.Kn() || this.query.Jn()) for (;s.size > this.query.limit; ) {
	            var a = this.query.Kn() ? s.last() : s.first();
	            s = s.delete(a.key), u = u.delete(a.key), e.track({
	                type: 1 /* Removed */ ,
	                doc: a
	            });
	        }
	        return Wn(!o || !n, "View was refilled using docs that themselves needed refilling."), 
	        {
	            _l: s,
	            El: e,
	            ic: o,
	            fi: u
	        };
	    }, t.prototype.Dl = function(t, n) {
	        // We suppress the initial change event for documents that were modified as
	        // part of a write acknowledgment (e.g. when the value of a server transform
	        // is applied) as Watch will send us the same document again.
	        // By suppressing the event, we only raise two user visible events (one with
	        // `hasPendingWrites` and the final state of the document) instead of three
	        // (one with `hasPendingWrites`, the modified document with
	        // `hasPendingWrites` and the final state of the document).
	        return t.nn && n.hasCommittedMutations && !n.nn;
	    }, 
	    /**
	     * Updates the view with the given ViewDocumentChanges and optionally updates
	     * limbo docs and sync state from the provided target change.
	     * @param docChanges The set of changes to make to the view's docs.
	     * @param updateLimboDocuments Whether to update limbo documents based on this
	     *        change.
	     * @param targetChange A target change to apply for computing limbo docs and
	     *        sync state.
	     * @return A new ViewChange with the given docs, changes, and sync state.
	     */
	    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.
	    t.prototype.Is = function(t, n, i) {
	        var e = this;
	        Wn(!t.ic, "Cannot apply changes that need a refill");
	        var r = this._l;
	        this._l = t._l, this.fi = t.fi;
	        // Sort changes based on type and query comparator
	        var u = t.El.ci();
	        u.sort((function(t, n) {
	            return function(t, n) {
	                var i = function(t) {
	                    switch (t) {
	                      case 0 /* Added */ :
	                        return 1;
	
	                      case 2 /* Modified */ :
	                      case 3 /* Metadata */ :
	                        // A metadata change is converted to a modified change at the public
	                        // api layer.  Since we sort by document key and then change type,
	                        // metadata and modified changes must be sorted equivalently.
	                        return 2;
	
	                      case 1 /* Removed */ :
	                        return 0;
	
	                      default:
	                        return Gn("Unknown ChangeType: " + t);
	                    }
	                };
	                return i(t) - i(n);
	            }
	            /**
	 * @license
	 * Copyright 2019 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ (t.type, n.type) || e.query.Bn(t.doc, n.doc);
	        })), this.Rl(i);
	        var s = n ? this.Sl() : [], o = 0 === this.yl.size && this._i ? 1 /* Synced */ : 0 /* Local */ , h = o !== this.gl;
	        return this.gl = o, 0 !== u.length || h ? {
	            snapshot: new yn(this.query, t._l, r, u, t.fi, 0 /* Local */ === o, h, 
	            /* excludesMetadataChanges= */ !1),
	            Al: s
	        } : {
	            Al: s
	        };
	    }, 
	    /**
	     * Applies an OnlineState change to the view, potentially generating a
	     * ViewChange if the view's syncState changes as a result.
	     */
	    t.prototype.Cl = function(t) {
	        return this._i && "Offline" /* Offline */ === t ? (
	        // If we're offline, set `current` to false and then call applyChanges()
	        // to refresh our syncState and generate a ViewChange as appropriate. We
	        // are guaranteed to get a new TargetChange that sets `current` back to
	        // true once the client is back online.
	        this._i = !1, this.Is({
	            _l: this._l,
	            El: new gn,
	            fi: this.fi,
	            ic: !1
	        }, 
	        /* updateLimboDocuments= */ !1)) : {
	            Al: []
	        };
	    }, 
	    /**
	     * Returns whether the doc for the given key should be in limbo.
	     */
	    t.prototype.Pl = function(t) {
	        // If the remote end says it's part of this query, it's not in limbo.
	        return !this.bl.has(t) && (
	        // The local store doesn't think it's a result, so it shouldn't be in limbo.
	        !!this._l.has(t) && !this._l.get(t).nn);
	    }, 
	    /**
	     * Updates syncedDocuments, current, and limbo docs based on the given change.
	     * Returns the list of changes to which docs are in limbo.
	     */
	    t.prototype.Rl = function(t) {
	        var n = this;
	        t && (t.Ii.forEach((function(t) {
	            return n.bl = n.bl.add(t);
	        })), t.Ti.forEach((function(t) {
	            return Wn(n.bl.has(t), "Modified document " + t + " not found in view.");
	        })), t.Ei.forEach((function(t) {
	            return n.bl = n.bl.delete(t);
	        })), this._i = t._i);
	    }, t.prototype.Sl = function() {
	        var t = this;
	        // We can only determine limbo documents when we're in-sync with the server.
	                if (!this._i) return [];
	        // TODO(klimt): Do this incrementally so that it's not quadratic when
	        // updating many documents.
	                var n = this.yl;
	        this.yl = wn(), this._l.forEach((function(n) {
	            t.Pl(n.key) && (t.yl = t.yl.add(n.key));
	        }));
	        // Diff the new limbo docs with the old limbo docs.
	        var i = [];
	        return n.forEach((function(n) {
	            t.yl.has(n) || i.push(new Ye(n));
	        })), this.yl.forEach((function(t) {
	            n.has(t) || i.push(new He(t));
	        })), i;
	    }, 
	    /**
	     * Update the in-memory state of the current view with the state read from
	     * persistence.
	     *
	     * We update the query view whenever a client's primary status changes:
	     * - When a client transitions from primary to secondary, it can miss
	     *   LocalStorage updates and its query views may temporarily not be
	     *   synchronized with the state on disk.
	     * - For secondary to primary transitions, the client needs to update the list
	     *   of `syncedDocuments` since secondary clients update their query views
	     *   based purely on synthesized RemoteEvents.
	     *
	     * @param queryResult.documents - The documents that match the query according
	     * to the LocalStore.
	     * @param queryResult.remoteKeys - The keys of the documents that match the
	     * query according to the backend.
	     *
	     * @return The ViewChange that resulted from this synchronization.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.Vl = function(t) {
	        this.bl = t.ko, this.yl = wn();
	        var n = this.Tl(t.documents);
	        return this.Is(n, /*updateLimboDocuments=*/ !0);
	    }, 
	    /**
	     * Returns a view snapshot as if this query was just listened to. Contains
	     * a document add for every existing document and the `fromCache` and
	     * `hasPendingWrites` status of the already established view.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.kl = function() {
	        return yn.vi(this.query, this._l, this.fi, 0 /* Local */ === this.gl);
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var $e = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.Or = t, this.Nl = n, this.updateFunction = i, this.xr = e, this.Ol = 5, this.ca = new Ki(this.Or, "retry_transaction" /* RetryTransaction */);
	    }
	    /** Runs the transaction and sets the result on deferred. */    return t.prototype.run = function() {
	        this.Fl();
	    }, t.prototype.Fl = function() {
	        var t = this;
	        this.ca.ea((function() {
	            return tslib.__awaiter(t, void 0, void 0, (function() {
	                var t, n, i = this;
	                return tslib.__generator(this, (function(e) {
	                    return t = this.Nl.wl(), (n = this.Ul(t)) && n.then((function(n) {
	                        i.Or.Qr((function() {
	                            return t.commit().then((function() {
	                                i.xr.resolve(n);
	                            })).catch((function(t) {
	                                i.jl(t);
	                            }));
	                        }));
	                    })).catch((function(t) {
	                        i.jl(t);
	                    })), [ 2 /*return*/ ];
	                }));
	            }));
	        }));
	    }, t.prototype.Ul = function(t) {
	        try {
	            var n = this.updateFunction(t);
	            return !J(n) && n.catch && n.then ? n : (this.xr.reject(Error("Transaction callback must return a Promise")), 
	            null);
	        } catch (t) {
	            // Do not retry errors thrown by user provided updateFunction.
	            return this.xr.reject(t), null;
	        }
	    }, t.prototype.jl = function(t) {
	        var n = this;
	        this.Ol > 0 && this.xl(t) ? (this.Ol -= 1, this.Or.Qr((function() {
	            return n.Fl(), Promise.resolve();
	        }))) : this.xr.reject(t);
	    }, t.prototype.xl = function(t) {
	        if ("FirebaseError" === t.name) {
	            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
	            // non-matching document versions with ABORTED. These errors should be retried.
	            var n = t.code;
	            return "aborted" === n || "failed-precondition" === n || !un(n);
	        }
	        return !1;
	    }, t;
	}(), Ze = function(
	/**
	     * The query itself.
	     */
	t, 
	/**
	     * The target number created by the client that is used in the watch
	     * stream to identify this query.
	     */
	n, 
	/**
	     * The view is responsible for computing the final merged truth of what
	     * docs are in the query. It gets notified of local and remote changes,
	     * and applies the query filters and limits to determine the most correct
	     * possible results.
	     */
	i) {
	    this.query = t, this.targetId = n, this.view = i;
	}, tr = function(t) {
	    this.key = t, 
	    /**
	         * Set to true once we've received a document. This is used in
	         * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
	         * decide whether it needs to manufacture a delete event for the target once
	         * the target is CURRENT.
	         */
	    this.Ll = !1;
	}, nr = /** @class */ function() {
	    function t(t, n, 
	    // PORTING NOTE: Manages state synchronization in multi-tab environments.
	    i, e, r) {
	        this.kf = t, this.Nl = n, this.Ml = i, this.currentUser = e, this.ql = r, this.Bl = null, 
	        this.Ql = new ti((function(t) {
	            return t.canonicalId();
	        })), this.Gl = new Map, 
	        /**
	         * The keys of documents that are in limbo for which we haven't yet started a
	         * limbo resolution query.
	         */
	        this.Wl = [], 
	        /**
	         * Keeps track of the target ID for each document that is in limbo with an
	         * active target.
	         */
	        this.zl = new x(j.F), 
	        /**
	         * Keeps track of the information about an active limbo resolution for each
	         * active target ID that was started for the purpose of limbo resolution.
	         */
	        this.Kl = new Map, this.Jl = new di, 
	        /** Stores user completion handlers, indexed by User and BatchId. */
	        this.Hl = {}, 
	        /** Stores user callbacks waiting for all pending writes to be acknowledged. */
	        this.Yl = new Map, this.Xl = Mi.Tc(), 
	        // The primary state is set to `true` or `false` immediately after Firestore
	        // startup. In the interim, a client should only be considered primary if
	        // `isPrimary` is true.
	        this.isPrimary = void 0, this.onlineState = "Unknown" /* Unknown */;
	    }
	    return Object.defineProperty(t.prototype, "$l", {
	        // Only used for testing.
	        get: function() {
	            return !0 === this.isPrimary;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /** Subscribes to SyncEngine notifications. Has to be called exactly once. */
	    t.prototype.subscribe = function(t) {
	        Wn(null !== t, "SyncEngine listener cannot be null"), Wn(null === this.Bl, "SyncEngine already has a subscriber."), 
	        this.Bl = t;
	    }, 
	    /**
	     * Initiates the new listen, resolves promise when listen enqueued to the
	     * server. All the subsequent view snapshots or errors are sent to the
	     * subscribed handlers. Returns the targetId of the query.
	     */
	    t.prototype.listen = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i, e, r, s;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return this.Zl("listen()"), (e = this.Ql.get(t)) ? (
	                    // PORTING NOTE: With Multi-Tab Web, it is possible that a query view
	                    // already exists when EventManager calls us for the first time. This
	                    // happens when the primary tab is already listening to this query on
	                    // behalf of another tab and the user of the primary also starts listening
	                    // to the query. EventManager will not have an assigned target ID in this
	                    // case and calls `listen` to obtain this ID.
	                    n = e.targetId, this.Ml.ph(n), i = e.view.kl(), [ 3 /*break*/ , 4 ]) : [ 3 /*break*/ , 1 ];
	
	                  case 1:
	                    return [ 4 /*yield*/ , this.kf.Eo(t.qn()) ];
	
	                  case 2:
	                    return r = u.sent(), s = this.Ml.ph(r.targetId), n = r.targetId, [ 4 /*yield*/ , this.td(t, n, "current" === s) ];
	
	                  case 3:
	                    i = u.sent(), this.isPrimary && this.Nl.listen(r), u.label = 4;
	
	                  case 4:
	                    return this.Bl.Ra([ i ]), [ 2 /*return*/ , n ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Registers a view for a previously unknown query and computes its initial
	     * snapshot.
	     */
	    t.prototype.td = function(t, n, i) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var e, r, s, o, h, c;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return [ 4 /*yield*/ , this.kf.Co(t, 
	                    /* usePreviousResults= */ !0) ];
	
	                  case 1:
	                    return e = u.sent(), r = new Xe(t, e.ko), s = r.Tl(e.documents), o = In.yi(n, i && "Offline" /* Offline */ !== this.onlineState), 
	                    Wn(0 === (h = r.Is(s, 
	                    /* updateLimboDocuments= */ !0 === this.isPrimary, o)).Al.length, "View returned limbo docs before target ack from the server."), 
	                    Wn(!!h.snapshot, "applyChanges for new view should always return a snapshot"), c = new Ze(t, n, r), 
	                    this.Ql.set(t, c), this.Gl.has(n) ? this.Gl.get(n).push(t) : this.Gl.set(n, [ t ]), 
	                    [ 2 /*return*/ , h.snapshot ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Reconcile the list of synced documents in an existing view with those
	     * from persistence.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.nd = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    return [ 4 /*yield*/ , this.kf.Co(t.query, 
	                    /* usePreviousResults= */ !0) ];
	
	                  case 1:
	                    return n = e.sent(), i = t.view.Vl(n), this.isPrimary && this.ed(t.targetId, i.Al), 
	                    [ 2 /*return*/ , i ];
	                }
	            }));
	        }));
	    }, 
	    /** Stops listening to the query. */
	    t.prototype.nl = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i, e = this;
	            return tslib.__generator(this, (function(r) {
	                switch (r.label) {
	                  case 0:
	                    return this.Zl("unlisten()"), Wn(!!(n = this.Ql.get(t)), "Trying to unlisten on query not found:" + t), 
	                    (i = this.Gl.get(n.targetId)).length > 1 ? (this.Gl.set(n.targetId, i.filter((function(n) {
	                        return !n.isEqual(t);
	                    }))), this.Ql.delete(t), [ 2 /*return*/ ]) : this.isPrimary ? (
	                    // We need to remove the local query target first to allow us to verify
	                    // whether any other client is still interested in this target.
	                    this.Ml.gh(n.targetId), this.Ml.lh(n.targetId) ? [ 3 /*break*/ , 2 ] : [ 4 /*yield*/ , this.kf.Ao(n.targetId, /*keepPersistedTargetData=*/ !1).then((function() {
	                        e.Ml._h(n.targetId), e.Nl.nl(n.targetId), e.rd(n.targetId);
	                    })).catch(pi) ]) : [ 3 /*break*/ , 3 ];
	
	                  case 1:
	                    r.sent(), r.label = 2;
	
	                  case 2:
	                    return [ 3 /*break*/ , 5 ];
	
	                  case 3:
	                    return this.rd(n.targetId), [ 4 /*yield*/ , this.kf.Ao(n.targetId, 
	                    /*keepPersistedTargetData=*/ !0) ];
	
	                  case 4:
	                    r.sent(), r.label = 5;
	
	                  case 5:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Initiates the write of local mutation batch which involves adding the
	     * writes to the mutation queue, notifying the remote store about new
	     * mutations and raising events for any changes this write caused.
	     *
	     * The promise returned by this call is resolved when the above steps
	     * have completed, *not* when the write was acked by the backend. The
	     * userCallback is resolved once the write was acked/rejected by the
	     * backend (or failed locally for any other reason).
	     */
	    t.prototype.write = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    return this.Zl("write()"), [ 4 /*yield*/ , this.kf.zs(t) ];
	
	                  case 1:
	                    return i = e.sent(), this.Ml.dh(i.batchId), this.ud(i.batchId, n), [ 4 /*yield*/ , this.sd(i.ds) ];
	
	                  case 2:
	                    return e.sent(), [ 4 /*yield*/ , this.Nl.Xf() ];
	
	                  case 3:
	                    return e.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Takes an updateFunction in which a set of reads and writes can be performed
	     * atomically. In the updateFunction, the client can read and write values
	     * using the supplied transaction object. After the updateFunction, all
	     * changes will be committed. If a retryable error occurs (ex: some other
	     * client has changed any of the data referenced), then the updateFunction
	     * will be called again after a backoff. If the updateFunction still fails
	     * after all retries, then the transaction will be rejected.
	     *
	     * The transaction object passed to the updateFunction contains methods for
	     * accessing documents and collections. Unlike other datastore access, data
	     * accessed with the transaction will not reflect local changes that have not
	     * been committed. For this reason, it is required that all reads are
	     * performed before any writes. Transactions must be performed while online.
	     *
	     * The Deferred input is resolved when the transaction is fully committed.
	     */
	    t.prototype.runTransaction = function(t, n, i) {
	        new $e(t, this.Nl, n, i).run();
	    }, t.prototype.ho = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i = this;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    this.Zl("applyRemoteEvent()"), e.label = 1;
	
	                  case 1:
	                    return e.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , this.kf.ho(t) ];
	
	                  case 2:
	                    return n = e.sent(), 
	                    // Update `receivedDocument` as appropriate for any limbo targets.
	                    t.wi.forEach((function(t, n) {
	                        var e = i.Kl.get(n);
	                        e && (
	                        // Since this is a limbo resolution lookup, it's for a single document
	                        // and it could be added, modified, or removed, but not a combination.
	                        Wn(t.Ii.size + t.Ti.size + t.Ei.size <= 1, "Limbo resolution for single document contains multiple changes."), 
	                        t.Ii.size > 0 ? e.Ll = !0 : t.Ti.size > 0 ? Wn(e.Ll, "Received change for limbo target document without add.") : t.Ei.size > 0 && (Wn(e.Ll, "Received remove for limbo target document without add."), 
	                        e.Ll = !1));
	                    })), [ 4 /*yield*/ , this.sd(n, t) ];
	
	                  case 3:
	                    return e.sent(), [ 3 /*break*/ , 6 ];
	
	                  case 4:
	                    return [ 4 /*yield*/ , pi(e.sent()) ];
	
	                  case 5:
	                    return e.sent(), [ 3 /*break*/ , 6 ];
	
	                  case 6:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Applies an OnlineState change to the sync engine and notifies any views of
	     * the change.
	     */
	    t.prototype.Cl = function(t, n) {
	        // If we are the secondary client, we explicitly ignore the remote store's
	        // online state (the local client may go offline, even though the primary
	        // tab remains online) and only apply the primary tab's online state from
	        // SharedClientState.
	        if (this.isPrimary && 0 /* RemoteStore */ === n || !this.isPrimary && 1 /* SharedClientState */ === n) {
	            this.Zl("applyOnlineStateChange()");
	            var i = [];
	            this.Ql.forEach((function(n, e) {
	                var r = e.view.Cl(t);
	                Wn(0 === r.Al.length, "OnlineState should not affect limbo documents."), r.snapshot && i.push(r.snapshot);
	            })), this.Bl.od(t), this.Bl.Ra(i), this.onlineState = t, this.isPrimary && this.Ml.Eh(t);
	        }
	    }, t.prototype.ul = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i, e, r, s, o, h = this;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return this.Zl("rejectListens()"), 
	                    // PORTING NOTE: Multi-tab only.
	                    this.Ml.Ih(t, "rejected", n), i = this.Kl.get(t), (e = i && i.key) ? (
	                    // Since this query failed, we won't want to manually unlisten to it.
	                    // So go ahead and remove it from bookkeeping.
	                    this.zl = this.zl.remove(e), this.Kl.delete(t), this.hd(), r = (r = new x(j.F)).ut(e, new Lt(e, k.V())), 
	                    s = wn().add(e), o = new _n(k.MIN, 
	                    /* targetChanges= */ new Map, 
	                    /* targetMismatches= */ new B(Kn), r, s), [ 2 /*return*/ , this.ho(o) ]) : [ 3 /*break*/ , 1 ];
	
	                  case 1:
	                    return [ 4 /*yield*/ , this.kf.Ao(t, /* keepPersistedTargetData */ !1).then((function() {
	                        return h.rd(t, n);
	                    })).catch(pi) ];
	
	                  case 2:
	                    u.sent(), u.label = 3;
	
	                  case 3:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only
	    t.prototype.Nh = function(t, n, i) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var e;
	            return tslib.__generator(this, (function(r) {
	                switch (r.label) {
	                  case 0:
	                    return this.Zl("applyBatchState()"), [ 4 /*yield*/ , this.kf.Js(t) ];
	
	                  case 1:
	                    return null === (e = r.sent()) ? (
	                    // A throttled tab may not have seen the mutation before it was completed
	                    // and removed from the mutation queue, in which case we won't have cached
	                    // the affected documents. In this case we can safely ignore the update
	                    // since that means we didn't apply the mutation locally at all (if we
	                    // had, we would have cached the affected documents), and so we will just
	                    // see any resulting document changes via normal remote document updates
	                    // as applicable.
	                    qn("SyncEngine", "Cannot apply mutation batch with id: " + t), [ 2 /*return*/ ]) : "pending" !== n ? [ 3 /*break*/ , 3 ] : [ 4 /*yield*/ , this.Nl.Xf() ];
	
	                  case 2:
	                    // If we are the primary client, we need to send this write to the
	                    // backend. Secondary clients will ignore these writes since their remote
	                    // connection is disabled.
	                    return r.sent(), [ 3 /*break*/ , 4 ];
	
	                  case 3:
	                    "acknowledged" === n || "rejected" === n ? (
	                    // NOTE: Both these methods are no-ops for batches that originated from
	                    // other clients.
	                    this.ad(t, i || null), this.kf.Fo(t)) : Gn("Unknown batchState: " + n), r.label = 4;
	
	                  case 4:
	                    return [ 4 /*yield*/ , this.sd(e) ];
	
	                  case 5:
	                    return r.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.fl = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    this.Zl("applySuccessfulWrite()"), n = t.batch.batchId, 
	                    // The local store may or may not be able to apply the write result and
	                    // raise events immediately (depending on whether the watcher is caught
	                    // up), so we raise user callbacks first so that they consistently happen
	                    // before listen events.
	                    this.ad(n, /*error=*/ null), this.fd(n), e.label = 1;
	
	                  case 1:
	                    return e.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , this.kf.Ys(t) ];
	
	                  case 2:
	                    return i = e.sent(), this.Ml.wh(n, "acknowledged"), [ 4 /*yield*/ , this.sd(i) ];
	
	                  case 3:
	                    return e.sent(), [ 3 /*break*/ , 6 ];
	
	                  case 4:
	                    return [ 4 /*yield*/ , pi(e.sent()) ];
	
	                  case 5:
	                    return e.sent(), [ 3 /*break*/ , 6 ];
	
	                  case 6:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.vl = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    this.Zl("rejectFailedWrite()"), 
	                    // The local store may or may not be able to apply the write result and
	                    // raise events immediately (depending on whether the watcher is caught up),
	                    // so we raise user callbacks first so that they consistently happen before
	                    // listen events.
	                    this.ad(t, n), this.fd(t), e.label = 1;
	
	                  case 1:
	                    return e.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , this.kf.no(t) ];
	
	                  case 2:
	                    return i = e.sent(), this.Ml.wh(t, "rejected", n), [ 4 /*yield*/ , this.sd(i) ];
	
	                  case 3:
	                    return e.sent(), [ 3 /*break*/ , 6 ];
	
	                  case 4:
	                    return [ 4 /*yield*/ , pi(e.sent()) ];
	
	                  case 5:
	                    return e.sent(), [ 3 /*break*/ , 6 ];
	
	                  case 6:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Registers a user callback that resolves when all pending mutations at the moment of calling
	     * are acknowledged .
	     */
	    t.prototype.ld = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    return this.Nl.xf() || qn("SyncEngine", "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."), 
	                    [ 4 /*yield*/ , this.kf.ro() ];
	
	                  case 1:
	                    return -1 === (n = e.sent()) ? (
	                    // Trigger the callback right away if there is no pending writes at the moment.
	                    t.resolve(), [ 2 /*return*/ ]) : ((i = this.Yl.get(n) || []).push(t), this.Yl.set(n, i), 
	                    [ 2 /*return*/ ]);
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
	     * if there are any.
	     */
	    t.prototype.fd = function(t) {
	        (this.Yl.get(t) || []).forEach((function(t) {
	            t.resolve();
	        })), this.Yl.delete(t);
	    }, 
	    /** Reject all outstanding callbacks waiting for pending writes to complete. */
	    t.prototype.dd = function(t) {
	        this.Yl.forEach((function(n) {
	            n.forEach((function(n) {
	                n.reject(new E(T.CANCELLED, t));
	            }));
	        })), this.Yl.clear();
	    }, t.prototype.ud = function(t, n) {
	        var i = this.Hl[this.currentUser.i()];
	        i || (i = new x(Kn)), i = i.ut(t, n), this.Hl[this.currentUser.i()] = i;
	    }, 
	    /**
	     * Resolves or rejects the user callback for the given batch and then discards
	     * it.
	     */
	    t.prototype.ad = function(t, n) {
	        var i = this.Hl[this.currentUser.i()];
	        // NOTE: Mutations restored from persistence won't have callbacks, so it's
	        // okay for there to be no callback for this ID.
	                if (i) {
	            var e = i.get(t);
	            e && (Wn(t === i.ot(), "Mutation callbacks processed out-of-order?"), n ? e.reject(n) : e.resolve(), 
	            i = i.remove(t)), this.Hl[this.currentUser.i()] = i;
	        }
	    }, t.prototype.rd = function(t, n) {
	        var i = this;
	        void 0 === n && (n = null), this.Ml.gh(t), Wn(this.Gl.has(t) && 0 !== this.Gl.get(t).length, "There are no queries mapped to target id " + t);
	        for (var e = 0, r = this.Gl.get(t); e < r.length; e++) {
	            var u = r[e];
	            this.Ql.delete(u), n && this.Bl.vd(u, n);
	        }
	        if (this.Gl.delete(t), this.isPrimary) {
	            var s = this.Jl.as(t);
	            this.Jl.hs(t), s.forEach((function(t) {
	                i.Jl.fs(t) || 
	                // We removed the last reference for this key
	                i.wd(t);
	            }));
	        }
	    }, t.prototype.wd = function(t) {
	        // It's possible that the target already got removed because the query failed. In that case,
	        // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
	        var n = this.zl.get(t);
	        null !== n && (this.Nl.nl(n), this.zl = this.zl.remove(t), this.Kl.delete(n), this.hd());
	    }, t.prototype.ed = function(t, n) {
	        for (var i = 0, e = n; i < e.length; i++) {
	            var r = e[i];
	            if (r instanceof He) this.Jl.es(r.key, t), this.md(r); else if (r instanceof Ye) {
	                qn("SyncEngine", "Document no longer in limbo: " + r.key), this.Jl.us(r.key, t), 
	                this.Jl.fs(r.key) || 
	                // We removed the last reference for this key
	                this.wd(r.key);
	            } else Gn("Unknown limbo change: " + JSON.stringify(r));
	        }
	    }, t.prototype.md = function(t) {
	        var n = t.key;
	        this.zl.get(n) || (qn("SyncEngine", "New document in limbo: " + n), this.Wl.push(n), 
	        this.hd());
	    }, 
	    /**
	     * Starts listens for documents in limbo that are enqueued for resolution,
	     * subject to a maximum number of concurrent resolutions.
	     *
	     * Without bounding the number of concurrent resolutions, the server can fail
	     * with "resource exhausted" errors which can lead to pathological client
	     * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
	     */
	    t.prototype.hd = function() {
	        for (;this.Wl.length > 0 && this.zl.size < this.ql; ) {
	            var t = this.Wl.shift(), n = this.Xl.next();
	            this.Kl.set(n, new tr(t)), this.zl = this.zl.ut(t, n), this.Nl.listen(new en(Bt.Cn(t.path).qn(), n, 2 /* LimboResolution */ , ii.Nr));
	        }
	    }, 
	    // Visible for testing
	    t.prototype.pd = function() {
	        return this.zl;
	    }, 
	    // Visible for testing
	    t.prototype.bd = function() {
	        return this.Wl;
	    }, t.prototype.sd = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i, e, r, s = this;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return i = [], e = [], r = [], this.Ql.forEach((function(u, o) {
	                        r.push(Promise.resolve().then((function() {
	                            var n = o.view.Tl(t);
	                            return n.ic ? s.kf.Co(o.query, /* usePreviousResults= */ !1).then((function(t) {
	                                var i = t.documents;
	                                return o.view.Tl(i, n);
	                            })) : n;
	                            // The query has a limit and some docs were removed, so we need
	                            // to re-run the query against the local store to make sure we
	                            // didn't lose any good docs that had been past the limit.
	                                                })).then((function(t) {
	                            var r = n && n.wi.get(o.targetId), u = o.view.Is(t, 
	                            /* updateLimboDocuments= */ !0 === s.isPrimary, r);
	                            if (s.ed(o.targetId, u.Al), u.snapshot) {
	                                s.isPrimary && s.Ml.Ih(o.targetId, u.snapshot.fromCache ? "not-current" : "current"), 
	                                i.push(u.snapshot);
	                                var h = ni.Ar(o.targetId, u.snapshot);
	                                e.push(h);
	                            }
	                        })));
	                    })), [ 4 /*yield*/ , Promise.all(r) ];
	
	                  case 1:
	                    return u.sent(), this.Bl.Ra(i), [ 4 /*yield*/ , this.kf.bo(e) ];
	
	                  case 2:
	                    return u.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.Zl = function(t) {
	        Wn(null !== this.Bl, "Trying to call " + t + " before calling subscribe().");
	    }, t.prototype.ml = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    return n = !this.currentUser.isEqual(t), this.currentUser = t, n ? (
	                    // Fails tasks waiting for pending writes requested by previous user.
	                    this.dd("'waitForPendingWrites' promise is rejected due to a user change."), [ 4 /*yield*/ , this.kf.Ms(t) ]) : [ 3 /*break*/ , 3 ];
	
	                  case 1:
	                    return i = e.sent(), 
	                    // TODO(b/114226417): Consider calling this only in the primary tab.
	                    this.Ml.Ms(t, i.Gs, i.Ws), [ 4 /*yield*/ , this.sd(i.Qs) ];
	
	                  case 2:
	                    e.sent(), e.label = 3;
	
	                  case 3:
	                    return [ 4 /*yield*/ , this.Nl.ml() ];
	
	                  case 4:
	                    return e.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only
	    t.prototype.pl = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i, e, r, s, o, h = this;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return !0 !== t || !0 === this.isPrimary ? [ 3 /*break*/ , 3 ] : (this.isPrimary = !0, 
	                    [ 4 /*yield*/ , this.Nl.pl(!0) ]);
	
	                  case 1:
	                    return u.sent(), s = this.Ml.fh(), [ 4 /*yield*/ , this.gd(s.K()) ];
	
	                  case 2:
	                    for (n = u.sent(), i = 0, e = n; i < e.length; i++) r = e[i], this.Nl.listen(r);
	                    return [ 3 /*break*/ , 7 ];
	
	                  case 3:
	                    return !1 !== t || !1 === this.isPrimary ? [ 3 /*break*/ , 7 ] : (this.isPrimary = !1, 
	                    s = [], o = Promise.resolve(), this.Gl.forEach((function(t, n) {
	                        h.Ml.yh(n) ? s.push(n) : o = o.then((function() {
	                            return h.rd(n), h.kf.Ao(n, 
	                            /*keepPersistedTargetData=*/ !0);
	                        })), h.Nl.nl(n);
	                    })), [ 4 /*yield*/ , o ]);
	
	                  case 4:
	                    return u.sent(), [ 4 /*yield*/ , this.gd(s) ];
	
	                  case 5:
	                    return u.sent(), this.yd(), [ 4 /*yield*/ , this.Nl.pl(!1) ];
	
	                  case 6:
	                    u.sent(), u.label = 7;
	
	                  case 7:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.yd = function() {
	        var t = this;
	        this.Kl.forEach((function(n, i) {
	            t.Nl.nl(i);
	        })), this.Jl.cs(), this.Kl = new Map, this.zl = new x(j.F);
	    }, 
	    /**
	     * Reconcile the query views of the provided query targets with the state from
	     * persistence. Raises snapshots for any changes that affect the local
	     * client and returns the updated state of all target's query data.
	     */
	    // PORTING NOTE: Multi-tab only.
	    t.prototype.gd = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i, e, r, s, o, h, c, a, f, l, d, v;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    n = [], i = [], e = 0, r = t, u.label = 1;
	
	                  case 1:
	                    return e < r.length ? (s = r[e], o = void 0, (h = this.Gl.get(s)) && 0 !== h.length ? [ 4 /*yield*/ , this.kf.Ao(s, 
	                    /*keepPersistedTargetData=*/ !0) ] : [ 3 /*break*/ , 8 ]) : [ 3 /*break*/ , 14 ];
	
	                  case 2:
	                    // For queries that have a local View, we need to update their state
	                    // in LocalStore (as the resume token and the snapshot version
	                    // might have changed) and reconcile their views with the persisted
	                    // state (the list of syncedDocuments may have gotten out of sync).
	                    return u.sent(), [ 4 /*yield*/ , this.kf.Eo(h[0].qn()) ];
	
	                  case 3:
	                    o = u.sent(), c = 0, a = h, u.label = 4;
	
	                  case 4:
	                    return c < a.length ? (f = a[c], Wn(!!(l = this.Ql.get(f)), "No query view found for " + f), 
	                    [ 4 /*yield*/ , this.nd(l) ]) : [ 3 /*break*/ , 7 ];
	
	                  case 5:
	                    (d = u.sent()).snapshot && i.push(d.snapshot), u.label = 6;
	
	                  case 6:
	                    return c++, [ 3 /*break*/ , 4 ];
	
	                  case 7:
	                    return [ 3 /*break*/ , 12 ];
	
	                  case 8:
	                    return Wn(!0 === this.isPrimary, "A secondary tab should never have an active target without an active query."), 
	                    [ 4 /*yield*/ , this.kf.xo(s) ];
	
	                  case 9:
	                    return Wn(!!(v = u.sent()), "Target for id " + s + " not found"), [ 4 /*yield*/ , this.kf.Eo(v) ];
	
	                  case 10:
	                    return o = u.sent(), [ 4 /*yield*/ , this.td(this._d(v), s, 
	                    /*current=*/ !1) ];
	
	                  case 11:
	                    u.sent(), u.label = 12;
	
	                  case 12:
	                    n.push(o), u.label = 13;
	
	                  case 13:
	                    return e++, [ 3 /*break*/ , 1 ];
	
	                  case 14:
	                    return this.Bl.Ra(i), [ 2 /*return*/ , n ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Creates a `Query` object from the specified `Target`. There is no way to
	     * obtain the original `Query`, so we synthesize a `Query` from the `Target`
	     * object.
	     *
	     * The synthesized result might be different from the original `Query`, but
	     * since the synthesized `Query` should return the same results as the
	     * original one (only the presentation of results might differ), the potential
	     * difference will not cause issues.
	     */
	    // PORTING NOTE: Multi-tab only
	    t.prototype._d = function(t) {
	        return new Bt(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, "F" /* First */ , t.startAt, t.endAt);
	    }, 
	    // PORTING NOTE: Multi-tab only
	    t.prototype.Oo = function() {
	        return this.kf.Oo();
	    }, 
	    // PORTING NOTE: Multi-tab only
	    t.prototype.Oh = function(t, n, i) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var e, r;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    if (this.isPrimary) 
	                    // If we receive a target state notification via WebStorage, we are
	                    // either already secondary or another tab has taken the primary lease.
	                    return qn("SyncEngine", "Ignoring unexpected query state notification."), [ 2 /*return*/ ];
	                    if (!this.Gl.has(t)) return [ 3 /*break*/ , 7 ];
	                    switch (n) {
	                      case "current":
	                      case "not-current":
	                        return [ 3 /*break*/ , 1 ];
	
	                      case "rejected":
	                        return [ 3 /*break*/ , 4 ];
	                    }
	                    return [ 3 /*break*/ , 6 ];
	
	                  case 1:
	                    return [ 4 /*yield*/ , this.kf.Lo() ];
	
	                  case 2:
	                    return e = u.sent(), r = _n.gi(t, "current" === n), [ 4 /*yield*/ , this.sd(e, r) ];
	
	                  case 3:
	                    return u.sent(), [ 3 /*break*/ , 7 ];
	
	                  case 4:
	                    return [ 4 /*yield*/ , this.kf.Ao(t, 
	                    /* keepPersistedTargetData */ !0) ];
	
	                  case 5:
	                    return u.sent(), this.rd(t, i), [ 3 /*break*/ , 7 ];
	
	                  case 6:
	                    Gn("Unexpected target state: " + n), u.label = 7;
	
	                  case 7:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only
	    t.prototype.Fh = function(t, n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i, e, r, s, o, h, c, a, f, l = this;
	            return tslib.__generator(this, (function(d) {
	                switch (d.label) {
	                  case 0:
	                    if (!this.isPrimary) return [ 2 /*return*/ ];
	                    i = 0, e = t, d.label = 1;
	
	                  case 1:
	                    return i < e.length ? (f = e[i], Wn(!this.Gl.has(f), "Trying to add an already active target"), 
	                    [ 4 /*yield*/ , this.kf.xo(f) ]) : [ 3 /*break*/ , 6 ];
	
	                  case 2:
	                    return Wn(!!(r = d.sent()), "Query data for active target " + f + " not found"), 
	                    [ 4 /*yield*/ , this.kf.Eo(r) ];
	
	                  case 3:
	                    return s = d.sent(), [ 4 /*yield*/ , this.td(this._d(r), s.targetId, 
	                    /*current=*/ !1) ];
	
	                  case 4:
	                    d.sent(), this.Nl.listen(s), d.label = 5;
	
	                  case 5:
	                    return i++, [ 3 /*break*/ , 1 ];
	
	                  case 6:
	                    o = function(t) {
	                        return tslib.__generator(this, (function(n) {
	                            switch (n.label) {
	                              case 0:
	                                // Check that the target is still active since the target might have been
	                                // removed if it has been rejected by the backend.
	                                return h.Gl.has(t) ? [ 4 /*yield*/ , h.kf.Ao(t, /* keepPersistedTargetData */ !1).then((function() {
	                                    l.Nl.nl(t), l.rd(t);
	                                })).catch(pi) ] : [ 2 /*return*/ , "continue" ];
	
	                                // Release queries that are still active.
	                                                              case 1:
	                                // Release queries that are still active.
	                                return n.sent(), [ 2 /*return*/ ];
	                            }
	                        }));
	                    }, h = this, c = 0, a = n, d.label = 7;
	
	                  case 7:
	                    return c < a.length ? (f = a[c], [ 5 /*yield**/ , o(f) ]) : [ 3 /*break*/ , 10 ];
	
	                  case 8:
	                    d.sent(), d.label = 9;
	
	                  case 9:
	                    return c++, [ 3 /*break*/ , 7 ];
	
	                  case 10:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    // PORTING NOTE: Multi-tab only. In other clients, LocalStore is unaware of
	    // the online state.
	    t.prototype.enableNetwork = function() {
	        return this.kf.jo(!0), this.Nl.enableNetwork();
	    }, 
	    // PORTING NOTE: Multi-tab only. In other clients, LocalStore is unaware of
	    // the online state.
	    t.prototype.disableNetwork = function() {
	        return this.kf.jo(!1), this.Nl.disableNetwork();
	    }, t.prototype.he = function(t) {
	        var n = this.Kl.get(t);
	        if (n && n.Ll) return wn().add(n.key);
	        var i = wn(), e = this.Gl.get(t);
	        if (!e) return i;
	        for (var r = 0, u = e; r < u.length; r++) {
	            var s = u[r], o = this.Ql.get(s);
	            Wn(!!o, "No query view found for " + s), i = i.Ft(o.view.Il);
	        }
	        return i;
	    }, t;
	}(), ir = function() {
	    this.Id = null, this.targetId = 0, this.listeners = [];
	}, er = /** @class */ function() {
	    function t(t) {
	        this.Jo = t, this.Td = new ti((function(t) {
	            return t.canonicalId();
	        })), this.onlineState = "Unknown" /* Unknown */ , this.Ed = new Set, this.Jo.subscribe(this);
	    }
	    return t.prototype.listen = function(t) {
	        var n = t.query, i = !1, e = this.Td.get(n);
	        (e || (i = !0, e = new ir, this.Td.set(n, e)), e.listeners.push(t), Wn(!t.Cl(this.onlineState), "applyOnlineStateChange() shouldn't raise an event for brand-new listeners."), 
	        e.Id) && (t.Dd(e.Id) && this.Rd());
	        return i ? this.Jo.listen(n).then((function(t) {
	            return e.targetId = t, t;
	        })) : Promise.resolve(e.targetId);
	    }, t.prototype.nl = function(t) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n, i, e, r;
	            return tslib.__generator(this, (function(u) {
	                return n = t.query, i = !1, (e = this.Td.get(n)) && (r = e.listeners.indexOf(t)) >= 0 && (e.listeners.splice(r, 1), 
	                i = 0 === e.listeners.length), i ? (this.Td.delete(n), [ 2 /*return*/ , this.Jo.nl(n) ]) : [ 2 /*return*/ ];
	            }));
	        }));
	    }, t.prototype.Ra = function(t) {
	        for (var n = !1, i = 0, e = t; i < e.length; i++) {
	            var r = e[i], u = r.query, s = this.Td.get(u);
	            if (s) {
	                for (var o = 0, h = s.listeners; o < h.length; o++) {
	                    h[o].Dd(r) && (n = !0);
	                }
	                s.Id = r;
	            }
	        }
	        n && this.Rd();
	    }, t.prototype.vd = function(t, n) {
	        var i = this.Td.get(t);
	        if (i) for (var e = 0, r = i.listeners; e < r.length; e++) {
	            r[e].onError(n);
	        }
	        // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
	        // after an error.
	                this.Td.delete(t);
	    }, t.prototype.od = function(t) {
	        this.onlineState = t;
	        var n = !1;
	        this.Td.forEach((function(i, e) {
	            for (var r = 0, u = e.listeners; r < u.length; r++) {
	                // Run global snapshot listeners if a consistent snapshot has been emitted.
	                u[r].Cl(t) && (n = !0);
	            }
	        })), n && this.Rd();
	    }, t.prototype.Sd = function(t) {
	        this.Ed.add(t), 
	        // Immediately fire an initial event, indicating all existing listeners
	        // are in-sync.
	        t.next();
	    }, t.prototype.Ad = function(t) {
	        this.Ed.delete(t);
	    }, 
	    // Call all global snapshot listeners that have been set.
	    t.prototype.Rd = function() {
	        this.Ed.forEach((function(t) {
	            t.next();
	        }));
	    }, t;
	}(), rr = /** @class */ function() {
	    function t(t, n, i) {
	        this.query = t, this.Cd = n, 
	        /**
	         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
	         * observer. This flag is set to true once we've actually raised an event.
	         */
	        this.Pd = !1, this.Vd = null, this.onlineState = "Unknown" /* Unknown */ , this.options = i || {};
	    }
	    /**
	     * Applies the new ViewSnapshot to this listener, raising a user-facing event
	     * if applicable (depending on what changed, whether the user has opted into
	     * metadata-only changes, etc.). Returns true if a user-facing event was
	     * indeed raised.
	     */    return t.prototype.Dd = function(t) {
	        if (Wn(t.docChanges.length > 0 || t.li, "We got a new snapshot with no changes?"), 
	        !this.options.includeMetadataChanges) {
	            for (
	            // Remove the metadata only changes.
	            var n = [], i = 0, e = t.docChanges; i < e.length; i++) {
	                var r = e[i];
	                3 /* Metadata */ !== r.type && n.push(r);
	            }
	            t = new yn(t.query, t.docs, t.ai, n, t.fi, t.fromCache, t.li, 
	            /* excludesMetadataChanges= */ !0);
	        }
	        var u = !1;
	        return this.Pd ? this.kd(t) && (this.Cd.next(t), u = !0) : this.Nd(t, this.onlineState) && (this.Od(t), 
	        u = !0), this.Vd = t, u;
	    }, t.prototype.onError = function(t) {
	        this.Cd.error(t);
	    }, 
	    /** Returns whether a snapshot was raised. */
	    t.prototype.Cl = function(t) {
	        this.onlineState = t;
	        var n = !1;
	        return this.Vd && !this.Pd && this.Nd(this.Vd, t) && (this.Od(this.Vd), n = !0), 
	        n;
	    }, t.prototype.Nd = function(t, n) {
	        // Always raise the first event when we're synced
	        if (Wn(!this.Pd, "Determining whether to raise first event but already had first event"), 
	        !t.fromCache) return !0;
	        // NOTE: We consider OnlineState.Unknown as online (it should become Offline
	        // or Online if we wait long enough).
	                var i = "Offline" /* Offline */ !== n;
	        // Don't raise the event if we're online, aren't synced yet (checked
	        // above) and are waiting for a sync.
	                return this.options.Fd && i ? (Wn(t.fromCache, "Waiting for sync, but snapshot is not from cache"), 
	        !1) : !t.docs.M() || "Offline" /* Offline */ === n;
	        // Raise data from cache if we have any documents or we are offline
	        }, t.prototype.kd = function(t) {
	        // We don't need to handle includeDocumentMetadataChanges here because
	        // the Metadata only changes have already been stripped out if needed.
	        // At this point the only changes we will see are the ones we should
	        // propagate.
	        if (t.docChanges.length > 0) return !0;
	        var n = this.Vd && this.Vd.hasPendingWrites !== t.hasPendingWrites;
	        return !(!t.li && !n) && !0 === this.options.includeMetadataChanges;
	        // Generally we should have hit one of the cases above, but it's possible
	        // to get here if there were only metadata docChanges and they got
	        // stripped out.
	        }, t.prototype.Od = function(t) {
	        Wn(!this.Pd, "Trying to raise initial events for second time"), t = yn.vi(t.query, t.docs, t.fi, t.fromCache), 
	        this.Pd = !0, this.Cd.next(t);
	    }, t;
	}(), ur = /** @class */ function() {
	    function t(t, n, i, 
	    /**
	     * Asynchronous queue responsible for all of our internal processing. When
	     * we get incoming work from the user (via public API) or the network
	     * (incoming GRPC messages), we should always schedule onto this queue.
	     * This ensures all of our work is properly serialized (e.g. we don't
	     * start processing a new operation while the previous one is waiting for
	     * an async I/O to complete).
	     */
	    e) {
	        this.platform = t, this.Ud = n, this.credentials = i, this.Or = e, this.clientId = zn.pr();
	    }
	    /**
	     * Starts up the FirestoreClient, returning only whether or not enabling
	     * persistence succeeded.
	     *
	     * The intent here is to "do the right thing" as far as users are concerned.
	     * Namely, in cases where offline persistence is requested and possible,
	     * enable it, but otherwise fall back to persistence disabled. For the most
	     * part we expect this to succeed one way or the other so we don't expect our
	     * users to actually wait on the firestore.enablePersistence Promise since
	     * they generally won't care.
	     *
	     * Of course some users actually do care about whether or not persistence
	     * was successfully enabled, so the Promise returned from this method
	     * indicates this outcome.
	     *
	     * This presents a problem though: even before enablePersistence resolves or
	     * rejects, users may have made calls to e.g. firestore.collection() which
	     * means that the FirestoreClient in there will be available and will be
	     * enqueuing actions on the async queue.
	     *
	     * Meanwhile any failure of an operation on the async queue causes it to
	     * panic and reject any further work, on the premise that unhandled errors
	     * are fatal.
	     *
	     * Consequently the fallback is handled internally here in start, and if the
	     * fallback succeeds we signal success to the async queue even though the
	     * start() itself signals failure.
	     *
	     * @param persistenceProvider Provider that returns the persistence
	     *    implementation.
	     * @param persistenceSettings Settings object to configure offline
	     *     persistence.
	     * @returns A deferred result indicating the user-visible result of enabling
	     *     offline persistence. This method will reject this if IndexedDB fails to
	     *     start for any reason. If usePersistence is false this is
	     *     unconditionally resolved.
	     */    return t.prototype.start = function(t, n) {
	        var i = this;
	        this.jd();
	        // We defer our initialization until we get the current user from
	        // setChangeListener(). We block the async queue until we got the initial
	        // user and the initialization is completed. This will prevent any scheduled
	        // work from happening before initialization is completed.
	        // If initializationDone resolved then the FirestoreClient is in a usable
	        // state.
	        var e = new ei, r = new ei, u = !1;
	        // If usePersistence is true, certain classes of errors while starting are
	        // recoverable but only by falling back to persistence disabled.
	        
	        // If there's an error in the first case but not in recovery we cannot
	        // reject the promise blocking the async queue because this will cause the
	        // async queue to panic.
	                // Return only the result of enabling persistence. Note that this does not
	        // need to await the completion of initializationDone because the result of
	        // this method should not reflect any other kind of failure to start.
	        return this.credentials.v((function(s) {
	            u ? i.Or.Qr((function() {
	                return i.ml(s);
	            })) : (u = !0, i.xd(t, n, s, r).then((function() {
	                return i.Ld(s);
	            })).then(e.resolve, e.reject));
	        })), 
	        // Block the async queue until initialization is done
	        this.Or.Qr((function() {
	            return e.promise;
	        })), r.promise;
	    }, 
	    /** Enables the network connection and requeues all pending operations. */
	    t.prototype.enableNetwork = function() {
	        var t = this;
	        return this.jd(), this.Or.enqueue((function() {
	            return t.Jo.enableNetwork();
	        }));
	    }, 
	    /**
	     * Initializes persistent storage, attempting to use IndexedDB if
	     * usePersistence is true or memory-only if false.
	     *
	     * If IndexedDB fails because it's already open in another tab or because the
	     * platform can't possibly support our implementation then this method rejects
	     * the persistenceResult and falls back on memory-only persistence.
	     *
	     * @param persistenceProvider The provider that provides either IndexedDb or
	     *     memory-backed persistence
	     * @param persistenceSettings Settings object to configure offline persistence
	     * @param user The initial user
	     * @param persistenceResult A deferred result indicating the user-visible
	     *     result of enabling offline persistence. This method will reject this if
	     *     IndexedDB fails to start for any reason. If usePersistence is false
	     *     this is unconditionally resolved.
	     * @returns a Promise indicating whether or not initialization should
	     *     continue, i.e. that one of the persistence implementations actually
	     *     succeeded.
	     */
	    t.prototype.xd = function(t, n, i, e) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var r;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    return u.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , t.initialize(this.Or, this.Ud, this.platform, this.clientId, i, n) ];
	
	                  case 1:
	                    return u.sent(), this.persistence = t.Jc(), this.Md = t.Kc(), this.Ml = t.Hc(), 
	                    e.resolve(), [ 3 /*break*/ , 3 ];
	
	                  case 2:
	                    // An unknown failure on the first stage shuts everything down.
	                    if (r = u.sent(), 
	                    // Regardless of whether or not the retry succeeds, from an user
	                    // perspective, offline persistence has failed.
	                    e.reject(r), !this.qd(r)) throw r;
	                    return console.warn("Error enabling offline persistence. Falling back to persistence disabled: " + r), 
	                    [ 2 /*return*/ , this.xd(new zi, {
	                        zc: !1
	                    }, i, e) ];
	
	                  case 3:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Decides whether the provided error allows us to gracefully disable
	     * persistence (as opposed to crashing the client).
	     */
	    t.prototype.qd = function(t) {
	        return "FirebaseError" === t.name ? t.code === T.FAILED_PRECONDITION || t.code === T.UNIMPLEMENTED : !("undefined" != typeof DOMException && t instanceof DOMException) || (
	        // When the browser is out of quota we could get either quota exceeded
	        // or an aborted error depending on whether the error happened during
	        // schema migration.
	        22 === t.code || 20 === t.code || 
	        // Firefox Private Browsing mode disables IndexedDb and returns
	        // INVALID_STATE for any usage.
	        11 === t.code);
	    }, 
	    /**
	     * Checks that the client has not been terminated. Ensures that other methods on
	     * this class cannot be called after the client is terminated.
	     */
	    t.prototype.jd = function() {
	        if (this.Or.Yr) throw new E(T.FAILED_PRECONDITION, "The client has already been terminated.");
	    }, 
	    /**
	     * Initializes the rest of the FirestoreClient, assuming the initial user
	     * has been obtained from the credential provider and some persistence
	     * implementation is available in this.persistence.
	     */
	    t.prototype.Ld = function(t) {
	        var n = this;
	        return qn("FirestoreClient", "Initializing. user=", t.uid), this.platform.Bd(this.Ud).then((function(i) {
	            return tslib.__awaiter(n, void 0, void 0, (function() {
	                var n, e, s, o, h, c, a = this;
	                return tslib.__generator(this, (function(f) {
	                    switch (f.label) {
	                      case 0:
	                        return n = new Vi, this.kf = new mi(this.persistence, n, t), [ 4 /*yield*/ , this.kf.start() ];
	
	                      case 1:
	                        // PORTING NOTE: LocalStore doesn't need an explicit start() on the Web.
	                        return f.sent(), e = this.platform.Qd(), s = this.platform.Gd(this.Ud.ae), o = new Xi(this.Or, i, this.credentials, s), 
	                        h = function(t) {
	                            return a.Jo.Cl(t, 0 /* RemoteStore */);
	                        }, c = function(t) {
	                            return a.Jo.Cl(t, 1 /* SharedClientState */);
	                        }, this.Nl = new Je(this.kf, o, this.Or, h, e), this.Jo = new nr(this.kf, this.Nl, this.Ml, t, 100), 
	                        this.Ml.Ho = c, 
	                        // Set up wiring between sync engine and other components
	                        this.Nl.Jo = this.Jo, this.Ml.Jo = this.Jo, this.Wd = new er(this.Jo), [ 4 /*yield*/ , this.Ml.start() ];
	
	                      case 2:
	                        // PORTING NOTE: LocalStore doesn't need an explicit start() on the Web.
	                        return f.sent(), [ 4 /*yield*/ , this.Nl.start() ];
	
	                      case 3:
	                        // NOTE: This will immediately call the listener, so we make sure to
	                        // set it after localStore / remoteStore are started.
	                        return f.sent(), [ 4 /*yield*/ , this.persistence.jc((function(t) {
	                            return tslib.__awaiter(a, void 0, void 0, (function() {
	                                return tslib.__generator(this, (function(n) {
	                                    switch (n.label) {
	                                      case 0:
	                                        return [ 4 /*yield*/ , this.Jo.pl(t) ];
	
	                                      case 1:
	                                        return n.sent(), t && !this.Md.qu ? this.Md.start(this.kf) : t || this.Md.stop(), 
	                                        [ 2 /*return*/ ];
	                                    }
	                                }));
	                            }));
	                        })) ];
	
	                      case 4:
	                        // When a user calls clearPersistence() in one client, all other clients
	                        // need to be terminated to allow the delete to succeed.
	                        // NOTE: This will immediately call the listener, so we make sure to
	                        // set it after localStore / remoteStore are started.
	                        return f.sent(), [ 4 /*yield*/ , this.persistence.xc((function() {
	                            return tslib.__awaiter(a, void 0, void 0, (function() {
	                                return tslib.__generator(this, (function(t) {
	                                    switch (t.label) {
	                                      case 0:
	                                        return [ 4 /*yield*/ , this.terminate() ];
	
	                                      case 1:
	                                        return t.sent(), [ 2 /*return*/ ];
	                                    }
	                                }));
	                            }));
	                        })) ];
	
	                      case 5:
	                        // When a user calls clearPersistence() in one client, all other clients
	                        // need to be terminated to allow the delete to succeed.
	                        return f.sent(), [ 2 /*return*/ ];
	                    }
	                }));
	            }));
	        }));
	    }, t.prototype.ml = function(t) {
	        return this.Or.ru(), qn("FirestoreClient", "Credential Changed. Current user: " + t.uid), 
	        this.Jo.ml(t);
	    }, 
	    /** Disables the network connection. Pending operations will not complete. */
	    t.prototype.disableNetwork = function() {
	        var t = this;
	        return this.jd(), this.Or.enqueue((function() {
	            return t.Jo.disableNetwork();
	        }));
	    }, t.prototype.terminate = function() {
	        var t = this;
	        return this.Or.nu((function() {
	            return tslib.__awaiter(t, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(t) {
	                    switch (t.label) {
	                      case 0:
	                        // PORTING NOTE: LocalStore does not need an explicit shutdown on web.
	                        return this.Md.stop(), [ 4 /*yield*/ , this.Nl.shutdown() ];
	
	                      case 1:
	                        return t.sent(), [ 4 /*yield*/ , this.Ml.shutdown() ];
	
	                      case 2:
	                        return t.sent(), [ 4 /*yield*/ , this.persistence.shutdown() ];
	
	                      case 3:
	                        return t.sent(), 
	                        // `removeChangeListener` must be called after shutting down the
	                        // RemoteStore as it will prevent the RemoteStore from retrieving
	                        // auth tokens.
	                        this.credentials.m(), [ 2 /*return*/ ];
	                    }
	                }));
	            }));
	        }));
	    }, 
	    /**
	     * Returns a Promise that resolves when all writes that were pending at the time this
	     * method was called received server acknowledgement. An acknowledgement can be either acceptance
	     * or rejection.
	     */
	    t.prototype.waitForPendingWrites = function() {
	        var t = this;
	        this.jd();
	        var n = new ei;
	        return this.Or.Qr((function() {
	            return t.Jo.ld(n);
	        })), n.promise;
	    }, t.prototype.listen = function(t, n, i) {
	        var e = this;
	        this.jd();
	        var r = new rr(t, n, i);
	        return this.Or.Qr((function() {
	            return e.Wd.listen(r);
	        })), r;
	    }, t.prototype.nl = function(t) {
	        var n = this;
	        // Checks for termination but does not raise error, allowing unlisten after
	        // termination to be a no-op.
	                this.zd || this.Or.Qr((function() {
	            return n.Wd.nl(t);
	        }));
	    }, t.prototype.Kd = function(t) {
	        var n = this;
	        return this.jd(), this.Or.enqueue((function() {
	            return n.kf.Io(t);
	        })).then((function(t) {
	            if (t instanceof xt) return t;
	            if (t instanceof Lt) return null;
	            throw new E(T.UNAVAILABLE, "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)");
	        }));
	    }, t.prototype.Jd = function(t) {
	        var n = this;
	        return this.jd(), this.Or.enqueue((function() {
	            return tslib.__awaiter(n, void 0, void 0, (function() {
	                var n, i, e;
	                return tslib.__generator(this, (function(r) {
	                    switch (r.label) {
	                      case 0:
	                        return [ 4 /*yield*/ , this.kf.Co(t, 
	                        /* usePreviousResults= */ !0) ];
	
	                      case 1:
	                        return n = r.sent(), i = new Xe(t, n.ko), e = i.Tl(n.documents), [ 2 /*return*/ , i.Is(e, 
	                        /* updateLimboDocuments= */ !1).snapshot ];
	                    }
	                }));
	            }));
	        }));
	    }, t.prototype.write = function(t) {
	        var n = this;
	        this.jd();
	        var i = new ei;
	        return this.Or.Qr((function() {
	            return n.Jo.write(t, i);
	        })), i.promise;
	    }, t.prototype.ae = function() {
	        return this.Ud.ae;
	    }, t.prototype.Sd = function(t) {
	        var n = this;
	        this.jd(), this.Or.Qr((function() {
	            return n.Wd.Sd(t), Promise.resolve();
	        }));
	    }, t.prototype.Ad = function(t) {
	        // Checks for shutdown but does not raise error, allowing remove after
	        // shutdown to be a no-op.
	        this.zd || this.Wd.Ad(t);
	    }, Object.defineProperty(t.prototype, "zd", {
	        get: function() {
	            // Technically, the asyncQueue is still running, but only accepting operations
	            // related to termination or supposed to be run after termination. It is effectively
	            // terminated to the eyes of users.
	            return this.Or.Yr;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.transaction = function(t) {
	        var n = this;
	        this.jd();
	        var i = new ei;
	        return this.Or.Qr((function() {
	            return n.Jo.runTransaction(n.Or, t, i), Promise.resolve();
	        })), i.promise;
	    }, t;
	}(), sr = /** @class */ function() {
	    function t(t) {
	        this.observer = t, 
	        /**
	         * When set to true, will not raise future events. Necessary to deal with
	         * async detachment of listener.
	         */
	        this.muted = !1;
	    }
	    return t.prototype.next = function(t) {
	        this.Hd(this.observer.next, t);
	    }, t.prototype.error = function(t) {
	        this.Hd(this.observer.error, t);
	    }, t.prototype.Yd = function() {
	        this.muted = !0;
	    }, t.prototype.Hd = function(t, n) {
	        var i = this;
	        this.muted || setTimeout((function() {
	            i.muted || t(n);
	        }), 0);
	    }, t;
	}();
	
	/**
	 * TransactionRunner encapsulates the logic needed to run and retry transactions
	 * with backoff.
	 */
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function or(t) {
	    /**
	 * Returns true if obj is an object and contains at least one of the specified
	 * methods.
	 */
	    return function(t, n) {
	        if ("object" != typeof t || null === t) return !1;
	        for (var i = t, e = 0, r = n; e < r.length; e++) {
	            var u = r[e];
	            if (u in i && "function" == typeof i[u]) return !0;
	        }
	        return !1;
	    }
	    /**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	    /**
	 * Converts Firestore's internal types to the JavaScript types that we expose
	 * to the user.
	 */ (t, [ "next", "error", "complete" ]);
	}
	
	var hr = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.firestore = t, this.timestampsInSnapshots = n, this.Xd = i, this.converter = e;
	    }
	    return t.prototype.$d = function(t) {
	        switch (tt(t)) {
	          case 0 /* NullValue */ :
	            return null;
	
	          case 1 /* BooleanValue */ :
	            return t.booleanValue;
	
	          case 2 /* NumberValue */ :
	            return ht(t.integerValue || t.doubleValue);
	
	          case 3 /* TimestampValue */ :
	            return this.Zd(t.timestampValue);
	
	          case 4 /* ServerTimestampValue */ :
	            return this.tv(t);
	
	          case 5 /* StringValue */ :
	            return t.stringValue;
	
	          case 6 /* BlobValue */ :
	            return new Ie(ct(t.bytesValue));
	
	          case 7 /* RefValue */ :
	            return this.nv(t.referenceValue);
	
	          case 8 /* GeoPointValue */ :
	            return new Ne(t.geoPointValue.latitude, t.geoPointValue.longitude);
	
	          case 9 /* ArrayValue */ :
	            return this.iv(t.arrayValue);
	
	          case 10 /* ObjectValue */ :
	            return this.ev(t.mapValue);
	
	          default:
	            throw Gn("Invalid value type: " + JSON.stringify(t));
	        }
	    }, t.prototype.ev = function(t) {
	        var n = this, i = {};
	        return W(t.fields || {}, (function(t, e) {
	            i[t] = n.$d(e);
	        })), i;
	    }, t.prototype.iv = function(t) {
	        var n = this;
	        return (t.values || []).map((function(t) {
	            return n.$d(t);
	        }));
	    }, t.prototype.tv = function(t) {
	        switch (this.Xd) {
	          case "previous":
	            var n = function t(n) {
	                var i = n.mapValue.fields.__previous_value__;
	                return X(i) ? t(i) : i;
	            }(t);
	            return null == n ? null : this.$d(n);
	
	          case "estimate":
	            return this.Zd($(t));
	
	          default:
	            return null;
	        }
	    }, t.prototype.Zd = function(t) {
	        var n = ot(t), i = new V(n.seconds, n.nanos);
	        return this.timestampsInSnapshots ? i : i.toDate();
	    }, t.prototype.nv = function(t) {
	        var n = O.H(t);
	        Wn(Un(n), "ReferenceValue is not valid " + t);
	        var i = new Xn(n.get(1), n.get(3)), e = new j(n.j(5));
	        return i.isEqual(this.firestore.rv) || 
	        // TODO(b/64130202): Somehow support foreign references.
	        Bn("Document " + e + " contains a document reference within a different database (" + i.projectId + "/" + i.database + ") which is not supported. It will be treated as a reference in the current database (" + this.firestore.rv.projectId + "/" + this.firestore.rv.database + ") instead."), 
	        new vr(e, this.firestore, this.converter);
	    }, t;
	}(), cr = ai.Nu, ar = /** @class */ function() {
	    function t(t) {
	        var n, i;
	        if (void 0 === t.host) {
	            if (void 0 !== t.ssl) throw new E(T.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
	            this.host = "firestore.googleapis.com", this.ssl = !0;
	        } else ue("settings", "non-empty string", "host", t.host), this.host = t.host, se("settings", "boolean", "ssl", t.ssl), 
	        this.ssl = null === (n = t.ssl) || void 0 === n || n;
	        if (ve("settings", t, [ "host", "ssl", "credentials", "timestampsInSnapshots", "cacheSizeBytes", "experimentalForceLongPolling" ]), 
	        se("settings", "object", "credentials", t.credentials), this.credentials = t.credentials, 
	        se("settings", "boolean", "timestampsInSnapshots", t.timestampsInSnapshots), 
	        // Nobody should set timestampsInSnapshots anymore, but the error depends on
	        // whether they set it to true or false...
	        !0 === t.timestampsInSnapshots ? Bn("\n  The timestampsInSnapshots setting now defaults to true and you no\n  longer need to explicitly set it. In a future release, the setting\n  will be removed entirely and so it is recommended that you remove it\n  from your firestore.settings() call now.") : !1 === t.timestampsInSnapshots && Bn("\n  The timestampsInSnapshots setting will soon be removed. YOU MUST UPDATE\n  YOUR CODE.\n\n  To hide this warning, stop using the timestampsInSnapshots setting in your\n  firestore.settings({ ... }) call.\n\n  Once you remove the setting, Timestamps stored in Cloud Firestore will be\n  read back as Firebase Timestamp objects instead of as system Date objects.\n  So you will also need to update code expecting a Date to instead expect a\n  Timestamp. For example:\n\n  // Old:\n  const date = snapshot.get('created_at');\n  // New:\n  const timestamp = snapshot.get('created_at'); const date =\n  timestamp.toDate();\n\n  Please audit all existing usages of Date when you enable the new\n  behavior."), 
	        this.timestampsInSnapshots = null === (i = t.timestampsInSnapshots) || void 0 === i || i, 
	        se("settings", "number", "cacheSizeBytes", t.cacheSizeBytes), void 0 === t.cacheSizeBytes) this.cacheSizeBytes = ai.Fu; else {
	            if (t.cacheSizeBytes !== cr && t.cacheSizeBytes < ai.Ou) throw new E(T.INVALID_ARGUMENT, "cacheSizeBytes must be at least " + ai.Ou);
	            this.cacheSizeBytes = t.cacheSizeBytes;
	        }
	        se("settings", "boolean", "experimentalForceLongPolling", t.experimentalForceLongPolling), 
	        this.forceLongPolling = void 0 !== t.experimentalForceLongPolling && t.experimentalForceLongPolling;
	    }
	    return t.prototype.isEqual = function(t) {
	        return this.host === t.host && this.ssl === t.ssl && this.timestampsInSnapshots === t.timestampsInSnapshots && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.forceLongPolling === t.forceLongPolling;
	    }, t;
	}(), fr = /** @class */ function() {
	    // Note: We are using `MemoryPersistenceProvider` as a default
	    // PersistenceProvider to ensure backwards compatibility with the format
	    // expected by the console build.
	    function t(n, i, e) {
	        var s = this;
	        if (void 0 === e && (e = new zi), this.uv = null, 
	        // Public for use in tests.
	        // TODO(mikelehen): Use modularized initialization instead.
	        this.sv = new ui, this.INTERNAL = {
	            delete: function() {
	                return tslib.__awaiter(s, void 0, void 0, (function() {
	                    return tslib.__generator(this, (function(t) {
	                        switch (t.label) {
	                          case 0:
	                            // The client must be initalized to ensure that all subsequent API usage
	                            // throws an exception.
	                            return this.ov(), [ 4 /*yield*/ , this.hv.terminate() ];
	
	                          case 1:
	                            return t.sent(), [ 2 /*return*/ ];
	                        }
	                    }));
	                }));
	            }
	        }, "object" == typeof n.options) {
	            // This is very likely a Firebase app object
	            // TODO(b/34177605): Can we somehow use instanceof?
	            var o = n;
	            this.uv = o, this.rv = t.cv(o), this.av = o.name, this.fv = new S(i);
	        } else {
	            var h = n;
	            if (!h.projectId) throw new E(T.INVALID_ARGUMENT, "Must provide projectId");
	            this.rv = new Xn(h.projectId, h.database), 
	            // Use a default persistenceKey that lines up with FirebaseApp.
	            this.av = "[DEFAULT]", this.fv = new R;
	        }
	        this.lv = e, this.dv = new ar({}), this.vv = this.wv(this.rv);
	    }
	    return t.prototype.settings = function(t) {
	        if (Zi("Firestore.settings", arguments, 1), ee("Firestore.settings", "object", 1, t), 
	        Sr(t, "persistence")) throw new E(T.INVALID_ARGUMENT, '"persistence" is now specified with a separate call to firestore.enablePersistence().');
	        var n = new ar(t);
	        if (this.hv && !this.dv.isEqual(n)) throw new E(T.FAILED_PRECONDITION, "Firestore has already been started and its settings can no longer be changed. You can only call settings() before calling any other methods on a Firestore object.");
	        this.dv = n, void 0 !== n.credentials && (this.fv = P(n.credentials));
	    }, t.prototype.enableNetwork = function() {
	        return this.ov(), this.hv.enableNetwork();
	    }, t.prototype.disableNetwork = function() {
	        return this.ov(), this.hv.disableNetwork();
	    }, t.prototype.enablePersistence = function(t) {
	        var n, i;
	        if (this.hv) throw new E(T.FAILED_PRECONDITION, "Firestore has already been started and persistence can no longer be enabled. You can only call enablePersistence() before calling any other methods on a Firestore object.");
	        var e = !1;
	        return t && (void 0 !== t.experimentalTabSynchronization && Bn("The 'experimentalTabSynchronization' setting has been renamed to 'synchronizeTabs'. In a future release, the setting will be removed and it is recommended that you update your firestore.enablePersistence() call to use 'synchronizeTabs'."), 
	        e = null !== (i = null !== (n = t.synchronizeTabs) && void 0 !== n ? n : t.experimentalTabSynchronization) && void 0 !== i && i), 
	        this.mv(this.lv, {
	            zc: !0,
	            cacheSizeBytes: this.dv.cacheSizeBytes,
	            synchronizeTabs: e
	        });
	    }, t.prototype.clearPersistence = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t, n = this;
	            return tslib.__generator(this, (function(i) {
	                if (void 0 !== this.hv && !this.hv.zd) throw new E(T.FAILED_PRECONDITION, "Persistence cannot be cleared after this Firestore instance is initialized.");
	                return t = new ei, this.sv.Xr((function() {
	                    return tslib.__awaiter(n, void 0, void 0, (function() {
	                        var n, i;
	                        return tslib.__generator(this, (function(e) {
	                            switch (e.label) {
	                              case 0:
	                                return e.trys.push([ 0, 2, , 3 ]), n = this.pv(), [ 4 /*yield*/ , this.lv.clearPersistence(n) ];
	
	                              case 1:
	                                return e.sent(), t.resolve(), [ 3 /*break*/ , 3 ];
	
	                              case 2:
	                                return i = e.sent(), t.reject(i), [ 3 /*break*/ , 3 ];
	
	                              case 3:
	                                return [ 2 /*return*/ ];
	                            }
	                        }));
	                    }));
	                })), [ 2 /*return*/ , t.promise ];
	            }));
	        }));
	    }, t.prototype.terminate = function() {
	        return this.app._removeServiceInstance("firestore"), this.INTERNAL.delete();
	    }, Object.defineProperty(t.prototype, "bv", {
	        get: function() {
	            return this.ov(), this.hv.zd;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.waitForPendingWrites = function() {
	        return this.ov(), this.hv.waitForPendingWrites();
	    }, t.prototype.onSnapshotsInSync = function(t) {
	        if (this.ov(), or(t)) return this.gv(t);
	        ee("Firestore.onSnapshotsInSync", "function", 1, t);
	        var n = {
	            next: t
	        };
	        return this.gv(n);
	    }, t.prototype.gv = function(t) {
	        var n = this, i = new sr({
	            next: function() {
	                t.next && t.next();
	            },
	            error: function(t) {
	                throw Gn("Uncaught Error in onSnapshotsInSync");
	            }
	        });
	        return this.hv.Sd(i), function() {
	            i.Yd(), n.hv.Ad(i);
	        };
	    }, t.prototype.ov = function() {
	        return this.hv || 
	        // Kick off starting the client but don't actually wait for it.
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.mv(new zi, {
	            zc: !1
	        }), this.hv;
	    }, t.prototype.pv = function() {
	        return new Yn(this.rv, this.av, this.dv.host, this.dv.ssl, this.dv.forceLongPolling);
	    }, t.prototype.mv = function(t, n) {
	        Wn(!!this.dv.host, "FirestoreSettings.host is not set"), Wn(!this.hv, "configureClient() called multiple times");
	        var i = this.pv();
	        return this.hv = new ur(jn.xt(), i, this.fv, this.sv), this.hv.start(t, n);
	    }, t.prototype.wv = function(t) {
	        var n = new Fn(t, {
	            de: jn.xt().de
	        });
	        return new Me(n, (function(n) {
	            if (n instanceof vr) {
	                var i = t, e = n.firestore.rv;
	                if (!e.isEqual(i)) throw new E(T.INVALID_ARGUMENT, "Document reference is for database " + e.projectId + "/" + e.database + " but should be for database " + i.projectId + "/" + i.database);
	                return new Le(t, n.yv);
	            }
	            return n;
	        }));
	    }, t.cv = function(t) {
	        if (!Sr(t.options, "projectId")) throw new E(T.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
	        var n = t.options.projectId;
	        if (!n || "string" != typeof n) throw new E(T.INVALID_ARGUMENT, "projectId must be a string in FirebaseApp.options");
	        return new Xn(n);
	    }, Object.defineProperty(t.prototype, "app", {
	        get: function() {
	            if (!this.uv) throw new E(T.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
	            return this.uv;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.collection = function(t) {
	        return Zi("Firestore.collection", arguments, 1), ee("Firestore.collection", "non-empty string", 1, t), 
	        this.ov(), new yr(O.H(t), this);
	    }, t.prototype.doc = function(t) {
	        return Zi("Firestore.doc", arguments, 1), ee("Firestore.doc", "non-empty string", 1, t), 
	        this.ov(), vr._v(O.H(t), this);
	    }, t.prototype.collectionGroup = function(t) {
	        if (Zi("Firestore.collectionGroup", arguments, 1), ee("Firestore.collectionGroup", "non-empty string", 1, t), 
	        t.indexOf("/") >= 0) throw new E(T.INVALID_ARGUMENT, "Invalid collection ID '" + t + "' passed to function Firestore.collectionGroup(). Collection IDs must not contain '/'.");
	        return this.ov(), new br(new Bt(O.Y, t), this);
	    }, t.prototype.runTransaction = function(t) {
	        var n = this;
	        return Zi("Firestore.runTransaction", arguments, 1), ee("Firestore.runTransaction", "function", 1, t), 
	        this.ov().transaction((function(i) {
	            return t(new lr(n, i));
	        }));
	    }, t.prototype.batch = function() {
	        return this.ov(), new dr(this);
	    }, Object.defineProperty(t, "logLevel", {
	        get: function() {
	            switch (Ln()) {
	              case logger.LogLevel.DEBUG:
	                return "debug";
	
	              case logger.LogLevel.SILENT:
	                return "silent";
	
	              default:
	                // The default log level is error
	                return "error";
	            }
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.setLogLevel = function(t) {
	        switch (Zi("Firestore.setLogLevel", arguments, 1), ee("Firestore.setLogLevel", "non-empty string", 1, t), 
	        t) {
	          case "debug":
	            Mn(logger.LogLevel.DEBUG);
	            break;
	
	          case "error":
	            Mn(logger.LogLevel.ERROR);
	            break;
	
	          case "silent":
	            Mn(logger.LogLevel.SILENT);
	            break;
	
	          default:
	            throw new E(T.INVALID_ARGUMENT, "Invalid log level: " + t);
	        }
	    }, 
	    // Note: this is not a property because the minifier can't work correctly with
	    // the way TypeScript compiler outputs properties.
	    t.prototype.Iv = function() {
	        return this.dv.timestampsInSnapshots;
	    }, t;
	}(), lr = /** @class */ function() {
	    function t(t, n) {
	        this.Tv = t, this.Ev = n;
	    }
	    return t.prototype.get = function(t) {
	        var n = this;
	        Zi("Transaction.get", arguments, 1);
	        var i = Er("Transaction.get", t, this.Tv);
	        return this.Ev.lookup([ i.yv ]).then((function(t) {
	            if (!t || 1 !== t.length) return Gn("Mismatch in docs returned from document lookup.");
	            var e = t[0];
	            if (e instanceof Lt) return new mr(n.Tv, i.yv, null, 
	            /* fromCache= */ !1, 
	            /* hasPendingWrites= */ !1, i.Dv);
	            if (e instanceof xt) return new mr(n.Tv, i.yv, e, 
	            /* fromCache= */ !1, 
	            /* hasPendingWrites= */ !1, i.Dv);
	            throw Gn("BatchGetDocumentsRequest returned unexpected document type: " + e.constructor.name);
	        }));
	    }, t.prototype.set = function(t, n, i) {
	        ne("Transaction.set", arguments, 2, 3);
	        var e = Er("Transaction.set", t, this.Tv);
	        i = _r("Transaction.set", i);
	        var r = Rr(e.Dv, n, "Transaction.set"), u = r[0], s = r[1], o = i.merge || i.mergeFields ? this.Tv.vv.uf(s, u, i.mergeFields) : this.Tv.vv.ef(s, u);
	        return this.Ev.set(e.yv, o), this;
	    }, t.prototype.update = function(t, n, i) {
	        for (var e, r, u = [], s = 3; s < arguments.length; s++) u[s - 3] = arguments[s];
	        return "string" == typeof n || n instanceof Ee ? (te("Transaction.update", arguments, 3), 
	        e = Er("Transaction.update", t, this.Tv), r = this.Tv.vv.af("Transaction.update", n, i, u)) : (Zi("Transaction.update", arguments, 2), 
	        e = Er("Transaction.update", t, this.Tv), r = this.Tv.vv.sf("Transaction.update", n)), 
	        this.Ev.update(e.yv, r), this;
	    }, t.prototype.delete = function(t) {
	        Zi("Transaction.delete", arguments, 1);
	        var n = Er("Transaction.delete", t, this.Tv);
	        return this.Ev.delete(n.yv), this;
	    }, t;
	}(), dr = /** @class */ function() {
	    function t(t) {
	        this.Tv = t, this.Rv = [], this.Sv = !1;
	    }
	    return t.prototype.set = function(t, n, i) {
	        ne("WriteBatch.set", arguments, 2, 3), this.Av();
	        var e = Er("WriteBatch.set", t, this.Tv);
	        i = _r("WriteBatch.set", i);
	        var r = Rr(e.Dv, n, "WriteBatch.set"), u = r[0], s = r[1], o = i.merge || i.mergeFields ? this.Tv.vv.uf(s, u, i.mergeFields) : this.Tv.vv.ef(s, u);
	        return this.Rv = this.Rv.concat(o.Ka(e.yv, At.NONE)), this;
	    }, t.prototype.update = function(t, n, i) {
	        for (var e, r, u = [], s = 3; s < arguments.length; s++) u[s - 3] = arguments[s];
	        return this.Av(), "string" == typeof n || n instanceof Ee ? (te("WriteBatch.update", arguments, 3), 
	        e = Er("WriteBatch.update", t, this.Tv), r = this.Tv.vv.af("WriteBatch.update", n, i, u)) : (Zi("WriteBatch.update", arguments, 2), 
	        e = Er("WriteBatch.update", t, this.Tv), r = this.Tv.vv.sf("WriteBatch.update", n)), 
	        this.Rv = this.Rv.concat(r.Ka(e.yv, At.exists(!0))), this;
	    }, t.prototype.delete = function(t) {
	        Zi("WriteBatch.delete", arguments, 1), this.Av();
	        var n = Er("WriteBatch.delete", t, this.Tv);
	        return this.Rv = this.Rv.concat(new Nt(n.yv, At.NONE)), this;
	    }, t.prototype.commit = function() {
	        return this.Av(), this.Sv = !0, this.Rv.length > 0 ? this.Tv.ov().write(this.Rv) : Promise.resolve();
	    }, t.prototype.Av = function() {
	        if (this.Sv) throw new E(T.FAILED_PRECONDITION, "A write batch can no longer be used after commit() has been called.");
	    }, t;
	}(), vr = /** @class */ function() {
	    function t(t, n, i) {
	        this.yv = t, this.firestore = n, this.Dv = i, this.hv = this.firestore.ov();
	    }
	    return t._v = function(n, i, e) {
	        if (n.length % 2 != 0) throw new E(T.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but " + n.J() + " has " + n.length);
	        return new t(new j(n), i, e);
	    }, Object.defineProperty(t.prototype, "id", {
	        get: function() {
	            return this.yv.path.B();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "parent", {
	        get: function() {
	            return new yr(this.yv.path.L(), this.firestore, this.Dv);
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "path", {
	        get: function() {
	            return this.yv.path.J();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.collection = function(t) {
	        if (Zi("DocumentReference.collection", arguments, 1), ee("DocumentReference.collection", "non-empty string", 1, t), 
	        !t) throw new E(T.INVALID_ARGUMENT, "Must provide a non-empty collection name to collection()");
	        var n = O.H(t);
	        return new yr(this.yv.path.child(n), this.firestore);
	    }, t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) throw we("isEqual", "DocumentReference", 1, n);
	        return this.firestore === n.firestore && this.yv.isEqual(n.yv) && this.Dv === n.Dv;
	    }, t.prototype.set = function(t, n) {
	        ne("DocumentReference.set", arguments, 1, 2), n = _r("DocumentReference.set", n);
	        var i = Rr(this.Dv, t, "DocumentReference.set"), e = i[0], r = i[1], u = n.merge || n.mergeFields ? this.firestore.vv.uf(r, e, n.mergeFields) : this.firestore.vv.ef(r, e);
	        return this.hv.write(u.Ka(this.yv, At.NONE));
	    }, t.prototype.update = function(t, n) {
	        for (var i, e = [], r = 2; r < arguments.length; r++) e[r - 2] = arguments[r];
	        return "string" == typeof t || t instanceof Ee ? (te("DocumentReference.update", arguments, 2), 
	        i = this.firestore.vv.af("DocumentReference.update", t, n, e)) : (Zi("DocumentReference.update", arguments, 1), 
	        i = this.firestore.vv.sf("DocumentReference.update", t)), this.hv.write(i.Ka(this.yv, At.exists(!0)));
	    }, t.prototype.delete = function() {
	        return Zi("DocumentReference.delete", arguments, 0), this.hv.write([ new Nt(this.yv, At.NONE) ]);
	    }, t.prototype.onSnapshot = function() {
	        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
	        ne("DocumentReference.onSnapshot", arguments, 1, 4);
	        var i, e = {
	            includeMetadataChanges: !1
	        }, r = 0;
	        "object" != typeof t[r] || or(t[r]) || (ve("DocumentReference.onSnapshot", e = t[r], [ "includeMetadataChanges" ]), 
	        se("DocumentReference.onSnapshot", "boolean", "includeMetadataChanges", e.includeMetadataChanges), 
	        r++);
	        var u = {
	            includeMetadataChanges: e.includeMetadataChanges
	        };
	        return or(t[r]) ? i = t[r] : (ee("DocumentReference.onSnapshot", "function", r, t[r]), 
	        re("DocumentReference.onSnapshot", "function", r + 1, t[r + 1]), re("DocumentReference.onSnapshot", "function", r + 2, t[r + 2]), 
	        i = {
	            next: t[r],
	            error: t[r + 1],
	            complete: t[r + 2]
	        }), this.Cv(u, i);
	    }, t.prototype.Cv = function(t, n) {
	        var i = this, e = function(t) {
	            console.error("Uncaught Error in onSnapshot:", t);
	        };
	        n.error && (e = n.error.bind(n));
	        var r = new sr({
	            next: function(t) {
	                if (n.next) {
	                    Wn(t.docs.size <= 1, "Too many documents returned on a document query");
	                    var e = t.docs.get(i.yv);
	                    n.next(new mr(i.firestore, i.yv, e, t.fromCache, t.hasPendingWrites, i.Dv));
	                }
	            },
	            error: e
	        }), u = this.hv.listen(Bt.Cn(this.yv.path), r, t);
	        return function() {
	            r.Yd(), i.hv.nl(u);
	        };
	    }, t.prototype.get = function(t) {
	        var n = this;
	        return ne("DocumentReference.get", arguments, 0, 1), Tr("DocumentReference.get", t), 
	        new Promise((function(i, e) {
	            t && "cache" === t.source ? n.firestore.ov().Kd(n.yv).then((function(t) {
	                i(new mr(n.firestore, n.yv, t, 
	                /*fromCache=*/ !0, t instanceof xt && t.nn, n.Dv));
	            }), e) : n.Pv(i, e, t);
	        }));
	    }, t.prototype.Pv = function(t, n, i) {
	        var e = this.Cv({
	            includeMetadataChanges: !0,
	            Fd: !0
	        }, {
	            next: function(r) {
	                // Remove query first before passing event to user to avoid
	                // user actions affecting the now stale query.
	                e(), !r.exists && r.metadata.fromCache ? 
	                // TODO(dimond): If we're online and the document doesn't
	                // exist then we resolve with a doc.exists set to false. If
	                // we're offline however, we reject the Promise in this
	                // case. Two options: 1) Cache the negative response from
	                // the server so we can deliver that even when you're
	                // offline 2) Actually reject the Promise in the online case
	                // if the document doesn't exist.
	                n(new E(T.UNAVAILABLE, "Failed to get document because the client is offline.")) : r.exists && r.metadata.fromCache && i && "server" === i.source ? n(new E(T.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')) : t(r);
	            },
	            error: n
	        });
	    }, t.prototype.withConverter = function(n) {
	        return new t(this.yv, this.firestore, n);
	    }, t;
	}(), wr = /** @class */ function() {
	    function t(t, n) {
	        this.hasPendingWrites = t, this.fromCache = n;
	    }
	    return t.prototype.isEqual = function(t) {
	        return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;
	    }, t;
	}(), mr = /** @class */ function() {
	    function t(t, n, i, e, r, u) {
	        this.Tv = t, this.yv = n, this.Vv = i, this.kv = e, this.Nv = r, this.Dv = u;
	    }
	    return t.prototype.data = function(t) {
	        if (ne("DocumentSnapshot.data", arguments, 0, 1), t = Ir("DocumentSnapshot.data", t), 
	        this.Vv) {
	            // We only want to use the converter and create a new DocumentSnapshot
	            // if a converter has been provided.
	            if (this.Dv) {
	                var n = new pr(this.Tv, this.yv, this.Vv, this.kv, this.Nv);
	                return this.Dv.fromFirestore(n, t);
	            }
	            var i = new hr(this.Tv, this.Tv.Iv(), t.serverTimestamps, 
	            /* converter= */ void 0);
	            return i.$d(this.Vv.yn());
	        }
	    }, t.prototype.get = function(t, n) {
	        if (ne("DocumentSnapshot.get", arguments, 1, 2), n = Ir("DocumentSnapshot.get", n), 
	        this.Vv) {
	            var i = this.Vv.data().field(Qe("DocumentSnapshot.get", t));
	            if (null !== i) {
	                var e = new hr(this.Tv, this.Tv.Iv(), n.serverTimestamps, this.Dv);
	                return e.$d(i);
	            }
	        }
	    }, Object.defineProperty(t.prototype, "id", {
	        get: function() {
	            return this.yv.path.B();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "ref", {
	        get: function() {
	            return new vr(this.yv, this.Tv, this.Dv);
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "exists", {
	        get: function() {
	            return null !== this.Vv;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "metadata", {
	        get: function() {
	            return new wr(this.Nv, this.kv);
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) throw we("isEqual", "DocumentSnapshot", 1, n);
	        return this.Tv === n.Tv && this.kv === n.kv && this.yv.isEqual(n.yv) && (null === this.Vv ? null === n.Vv : this.Vv.isEqual(n.Vv)) && this.Dv === n.Dv;
	    }, t;
	}(), pr = /** @class */ function(t) {
	    function i() {
	        return null !== t && t.apply(this, arguments) || this;
	    }
	    return tslib.__extends(i, t), i.prototype.data = function(n) {
	        var i = t.prototype.data.call(this, n);
	        return Wn(void 0 !== i, "Document in a QueryDocumentSnapshot should exist"), i;
	    }, i;
	}(mr), br = /** @class */ function() {
	    function t(t, n, i) {
	        this.Ov = t, this.firestore = n, this.Dv = i;
	    }
	    return t.prototype.where = function(n, i, e) {
	        Zi("Query.where", arguments, 3), de("Query.where", 3, e);
	        // Enumerated from the WhereFilterOp type in index.d.ts.
	        var r, u = [ "<", "<=", "==", ">=", ">", "array-contains", "in", "array-contains-any" ];
	        ce("Query.where", u, 2, i);
	        var s = Qe("Query.where", n), o = Gt.H(i);
	        if (s.$()) {
	            if (o === Gt.ARRAY_CONTAINS || o === Gt.ARRAY_CONTAINS_ANY) throw new E(T.INVALID_ARGUMENT, "Invalid Query. You can't perform '" + o.toString() + "' queries on FieldPath.documentId().");
	            if (o === Gt.IN) {
	                this.Fv(e, o);
	                for (var h = [], c = 0, a = e; c < a.length; c++) {
	                    var f = a[c];
	                    h.push(this.Uv(f));
	                }
	                r = {
	                    arrayValue: {
	                        values: h
	                    }
	                };
	            } else r = this.Uv(e);
	        } else o !== Gt.IN && o !== Gt.ARRAY_CONTAINS_ANY || this.Fv(e, o), r = this.firestore.vv.ff("Query.where", e, 
	        // We only allow nested arrays for IN queries.
	        /** allowArrays = */ o === Gt.IN);
	        var l = Wt.create(s, o, r);
	        return this.jv(l), new t(this.Ov.kn(l), this.firestore, this.Dv);
	    }, t.prototype.orderBy = function(n, i) {
	        var e;
	        if (ne("Query.orderBy", arguments, 1, 2), re("Query.orderBy", "non-empty string", 2, i), 
	        void 0 === i || "asc" === i) e = Xt.ASCENDING; else {
	            if ("desc" !== i) throw new E(T.INVALID_ARGUMENT, "Function Query.orderBy() has unknown direction '" + i + "', expected 'asc' or 'desc'.");
	            e = Xt.DESCENDING;
	        }
	        if (null !== this.Ov.startAt) throw new E(T.INVALID_ARGUMENT, "Invalid query. You must not call Query.startAt() or Query.startAfter() before calling Query.orderBy().");
	        if (null !== this.Ov.endAt) throw new E(T.INVALID_ARGUMENT, "Invalid query. You must not call Query.endAt() or Query.endBefore() before calling Query.orderBy().");
	        var r = Qe("Query.orderBy", n), u = new Zt(r, e);
	        return this.xv(u), new t(this.Ov.On(u), this.firestore, this.Dv);
	    }, t.prototype.limit = function(n) {
	        return Zi("Query.limit", arguments, 1), ee("Query.limit", "number", 1, n), me("Query.limit", 1, n), 
	        new t(this.Ov.Fn(n), this.firestore, this.Dv);
	    }, t.prototype.limitToLast = function(n) {
	        return Zi("Query.limitToLast", arguments, 1), ee("Query.limitToLast", "number", 1, n), 
	        me("Query.limitToLast", 1, n), new t(this.Ov.Un(n), this.firestore, this.Dv);
	    }, t.prototype.startAt = function(n) {
	        for (var i = [], e = 1; e < arguments.length; e++) i[e - 1] = arguments[e];
	        te("Query.startAt", arguments, 1);
	        var r = this.Lv("Query.startAt", n, i, 
	        /*before=*/ !0);
	        return new t(this.Ov.jn(r), this.firestore, this.Dv);
	    }, t.prototype.startAfter = function(n) {
	        for (var i = [], e = 1; e < arguments.length; e++) i[e - 1] = arguments[e];
	        te("Query.startAfter", arguments, 1);
	        var r = this.Lv("Query.startAfter", n, i, 
	        /*before=*/ !1);
	        return new t(this.Ov.jn(r), this.firestore, this.Dv);
	    }, t.prototype.endBefore = function(n) {
	        for (var i = [], e = 1; e < arguments.length; e++) i[e - 1] = arguments[e];
	        te("Query.endBefore", arguments, 1);
	        var r = this.Lv("Query.endBefore", n, i, 
	        /*before=*/ !0);
	        return new t(this.Ov.xn(r), this.firestore, this.Dv);
	    }, t.prototype.endAt = function(n) {
	        for (var i = [], e = 1; e < arguments.length; e++) i[e - 1] = arguments[e];
	        te("Query.endAt", arguments, 1);
	        var r = this.Lv("Query.endAt", n, i, 
	        /*before=*/ !1);
	        return new t(this.Ov.xn(r), this.firestore, this.Dv);
	    }, t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) throw we("isEqual", "Query", 1, n);
	        return this.firestore === n.firestore && this.Ov.isEqual(n.Ov);
	    }, t.prototype.withConverter = function(n) {
	        return new t(this.Ov, this.firestore, n);
	    }, 
	    /** Helper function to create a bound from a document or fields */
	    t.prototype.Lv = function(t, n, i, e) {
	        if (de(t, 1, n), n instanceof mr) {
	            if (i.length > 0) throw new E(T.INVALID_ARGUMENT, "Too many arguments provided to " + t + "().");
	            var r = n;
	            if (!r.exists) throw new E(T.NOT_FOUND, "Can't use a DocumentSnapshot that doesn't exist for " + t + "().");
	            return this.Mv(r.Vv, e);
	        }
	        var u = [ n ].concat(i);
	        return this.qv(t, u, e);
	    }, 
	    /**
	     * Create a Bound from a query and a document.
	     *
	     * Note that the Bound will always include the key of the document
	     * and so only the provided document will compare equal to the returned
	     * position.
	     *
	     * Will throw if the document does not contain all fields of the order by
	     * of the query or if any of the fields in the order by are an uncommitted
	     * server timestamp.
	     */
	    t.prototype.Mv = function(t, n) {
	        // Because people expect to continue/end a query at the exact document
	        // provided, we need to use the implicit sort order rather than the explicit
	        // sort order, because it's guaranteed to contain the document key. That way
	        // the position becomes unambiguous and the query continues/ends exactly at
	        // the provided document. Without the key (by using the explicit sort
	        // orders), multiple documents could match the position, yielding duplicate
	        // results.
	        for (var i = [], e = 0, r = this.Ov.orderBy; e < r.length; e++) {
	            var u = r[e];
	            if (u.field.$()) i.push(at(this.firestore.rv, t.key)); else {
	                var s = t.field(u.field);
	                if (X(s)) throw new E(T.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field "' + u.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');
	                if (null === s) {
	                    var o = u.field.J();
	                    throw new E(T.INVALID_ARGUMENT, "Invalid query. You are trying to start or end a query using a document for which the field '" + o + "' (used as the orderBy) does not exist.");
	                }
	                i.push(s);
	            }
	        }
	        return new $t(i, n);
	    }, 
	    /**
	     * Converts a list of field values to a Bound for the given query.
	     */
	    t.prototype.qv = function(t, n, i) {
	        // Use explicit order by's because it has to match the query the user made
	        var e = this.Ov.En;
	        if (n.length > e.length) throw new E(T.INVALID_ARGUMENT, "Too many arguments provided to " + t + "(). The number of arguments must be less than or equal to the number of Query.orderBy() clauses");
	        for (var r = [], u = 0; u < n.length; u++) {
	            var s = n[u];
	            if (e[u].field.$()) {
	                if ("string" != typeof s) throw new E(T.INVALID_ARGUMENT, "Invalid query. Expected a string for document ID in " + t + "(), but got a " + typeof s);
	                if (!this.Ov.Yn() && -1 !== s.indexOf("/")) throw new E(T.INVALID_ARGUMENT, "Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to " + t + "() must be a plain document ID, but '" + s + "' contains a slash.");
	                var o = this.Ov.path.child(O.H(s));
	                if (!j.nt(o)) throw new E(T.INVALID_ARGUMENT, "Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to " + t + "() must result in a valid document path, but '" + o + "' is not because it contains an odd number of segments.");
	                var h = new j(o);
	                r.push(at(this.firestore.rv, h));
	            } else {
	                var c = this.firestore.vv.ff(t, s);
	                r.push(c);
	            }
	        }
	        return new $t(r, i);
	    }, t.prototype.onSnapshot = function() {
	        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
	        ne("Query.onSnapshot", arguments, 1, 4);
	        var i, e = {}, r = 0;
	        return "object" != typeof t[r] || or(t[r]) || (ve("Query.onSnapshot", e = t[r], [ "includeMetadataChanges" ]), 
	        se("Query.onSnapshot", "boolean", "includeMetadataChanges", e.includeMetadataChanges), 
	        r++), or(t[r]) ? i = t[r] : (ee("Query.onSnapshot", "function", r, t[r]), re("Query.onSnapshot", "function", r + 1, t[r + 1]), 
	        re("Query.onSnapshot", "function", r + 2, t[r + 2]), i = {
	            next: t[r],
	            error: t[r + 1],
	            complete: t[r + 2]
	        }), this.Bv(this.Ov), this.Cv(e, i);
	    }, t.prototype.Cv = function(t, n) {
	        var i = this, e = function(t) {
	            console.error("Uncaught Error in onSnapshot:", t);
	        };
	        n.error && (e = n.error.bind(n));
	        var r = new sr({
	            next: function(t) {
	                n.next && n.next(new gr(i.firestore, i.Ov, t, i.Dv));
	            },
	            error: e
	        }), u = this.firestore.ov(), s = u.listen(this.Ov, r, t);
	        return function() {
	            r.Yd(), u.nl(s);
	        };
	    }, t.prototype.Bv = function(t) {
	        if (t.Jn() && 0 === t.En.length) throw new E(T.UNIMPLEMENTED, "limitToLast() queries require specifying at least one orderBy() clause");
	    }, t.prototype.get = function(t) {
	        var n = this;
	        return ne("Query.get", arguments, 0, 1), Tr("Query.get", t), this.Bv(this.Ov), new Promise((function(i, e) {
	            t && "cache" === t.source ? n.firestore.ov().Jd(n.Ov).then((function(t) {
	                i(new gr(n.firestore, n.Ov, t, n.Dv));
	            }), e) : n.Pv(i, e, t);
	        }));
	    }, t.prototype.Pv = function(t, n, i) {
	        var e = this.Cv({
	            includeMetadataChanges: !0,
	            Fd: !0
	        }, {
	            next: function(r) {
	                // Remove query first before passing event to user to avoid
	                // user actions affecting the now stale query.
	                e(), r.metadata.fromCache && i && "server" === i.source ? n(new E(T.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')) : t(r);
	            },
	            error: n
	        });
	    }, 
	    /**
	     * Parses the given documentIdValue into a ReferenceValue, throwing
	     * appropriate errors if the value is anything other than a DocumentReference
	     * or String, or if the string is malformed.
	     */
	    t.prototype.Uv = function(t) {
	        if ("string" == typeof t) {
	            if ("" === t) throw new E(T.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");
	            if (!this.Ov.Yn() && -1 !== t.indexOf("/")) throw new E(T.INVALID_ARGUMENT, "Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '" + t + "' contains a '/' character.");
	            var n = this.Ov.path.child(O.H(t));
	            if (!j.nt(n)) throw new E(T.INVALID_ARGUMENT, "Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '" + n + "' is not because it has an odd number of segments (" + n.length + ").");
	            return at(this.firestore.rv, new j(n));
	        }
	        if (t instanceof vr) {
	            var i = t;
	            return at(this.firestore.rv, i.yv);
	        }
	        throw new E(T.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: " + le(t) + ".");
	    }, 
	    /**
	     * Validates that the value passed into a disjunctrive filter satisfies all
	     * array requirements.
	     */
	    t.prototype.Fv = function(t, n) {
	        if (!Array.isArray(t) || 0 === t.length) throw new E(T.INVALID_ARGUMENT, "Invalid Query. A non-empty array is required for '" + n.toString() + "' filters.");
	        if (t.length > 10) throw new E(T.INVALID_ARGUMENT, "Invalid Query. '" + n.toString() + "' filters support a maximum of 10 elements in the value array.");
	        if (t.indexOf(null) >= 0) throw new E(T.INVALID_ARGUMENT, "Invalid Query. '" + n.toString() + "' filters cannot contain 'null' in the value array.");
	        if (t.filter((function(t) {
	            return Number.isNaN(t);
	        })).length > 0) throw new E(T.INVALID_ARGUMENT, "Invalid Query. '" + n.toString() + "' filters cannot contain 'NaN' in the value array.");
	    }, t.prototype.jv = function(t) {
	        if (t instanceof Wt) {
	            var n = [ Gt.ARRAY_CONTAINS, Gt.ARRAY_CONTAINS_ANY ], i = [ Gt.IN, Gt.ARRAY_CONTAINS_ANY ], e = n.indexOf(t.op) >= 0, r = i.indexOf(t.op) >= 0;
	            if (t.Nn()) {
	                var u = this.Ov.Pn();
	                if (null !== u && !u.isEqual(t.field)) throw new E(T.INVALID_ARGUMENT, "Invalid query. All where filters with an inequality (<, <=, >, or >=) must be on the same field. But you have inequality filters on '" + u.toString() + "' and '" + t.field.toString() + "'");
	                var s = this.Ov.Vn();
	                null !== s && this.Qv(t.field, s);
	            } else if (r || e) {
	                // You can have at most 1 disjunctive filter and 1 array filter. Check if
	                // the new filter conflicts with an existing one.
	                var o = null;
	                if (r && (o = this.Ov.Hn(i)), null === o && e && (o = this.Ov.Hn(n)), null != o) 
	                // We special case when it's a duplicate op to give a slightly clearer error message.
	                throw o === t.op ? new E(T.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '" + t.op.toString() + "' filter.") : new E(T.INVALID_ARGUMENT, "Invalid query. You cannot use '" + t.op.toString() + "' filters with '" + o.toString() + "' filters.");
	            }
	        }
	    }, t.prototype.xv = function(t) {
	        if (null === this.Ov.Vn()) {
	            // This is the first order by. It must match any inequality.
	            var n = this.Ov.Pn();
	            null !== n && this.Qv(n, t.field);
	        }
	    }, t.prototype.Qv = function(t, n) {
	        if (!n.isEqual(t)) throw new E(T.INVALID_ARGUMENT, "Invalid query. You have a where filter with an inequality (<, <=, >, or >=) on field '" + t.toString() + "' and so you must also use '" + t.toString() + "' as your first Query.orderBy(), but your first Query.orderBy() is on field '" + n.toString() + "' instead.");
	    }, t;
	}(), gr = /** @class */ function() {
	    function t(t, n, i, e) {
	        this.Tv = t, this.Gv = n, this.Wv = i, this.Dv = e, this.zv = null, this.Kv = null, 
	        this.metadata = new wr(i.hasPendingWrites, i.fromCache);
	    }
	    return Object.defineProperty(t.prototype, "docs", {
	        get: function() {
	            var t = [];
	            return this.forEach((function(n) {
	                return t.push(n);
	            })), t;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "empty", {
	        get: function() {
	            return this.Wv.docs.M();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "size", {
	        get: function() {
	            return this.Wv.docs.size;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.forEach = function(t, n) {
	        var i = this;
	        ne("QuerySnapshot.forEach", arguments, 1, 2), ee("QuerySnapshot.forEach", "function", 1, t), 
	        this.Wv.docs.forEach((function(e) {
	            t.call(n, i.Jv(e));
	        }));
	    }, Object.defineProperty(t.prototype, "query", {
	        get: function() {
	            return new br(this.Gv, this.Tv, this.Dv);
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.docChanges = function(t) {
	        t && (ve("QuerySnapshot.docChanges", t, [ "includeMetadataChanges" ]), se("QuerySnapshot.docChanges", "boolean", "includeMetadataChanges", t.includeMetadataChanges));
	        var n = !(!t || !t.includeMetadataChanges);
	        if (n && this.Wv.di) throw new E(T.INVALID_ARGUMENT, "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");
	        return this.zv && this.Kv === n || (this.zv = 
	        /**
	 * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.
	 *
	 * Exported for testing.
	 */
	        function(t, n, i, e) {
	            if (i.ai.M()) {
	                // Special case the first snapshot because index calculation is easy and
	                // fast
	                var r, u = 0;
	                return i.docChanges.map((function(n) {
	                    var s = new pr(t, n.doc.key, n.doc, i.fromCache, i.fi.has(n.doc.key), e);
	                    return Wn(0 /* Added */ === n.type, "Invalid event type for first snapshot"), Wn(!r || i.query.Bn(r, n.doc) < 0, "Got added events in wrong order"), 
	                    r = n.doc, {
	                        type: "added",
	                        doc: s,
	                        oldIndex: -1,
	                        newIndex: u++
	                    };
	                }));
	            }
	            // A DocumentSet that is updated incrementally as changes are applied to use
	            // to lookup the index of a document.
	            var s = i.ai;
	            return i.docChanges.filter((function(t) {
	                return n || 3 /* Metadata */ !== t.type;
	            })).map((function(n) {
	                var r = new pr(t, n.doc.key, n.doc, i.fromCache, i.fi.has(n.doc.key), e), u = -1, o = -1;
	                return 0 /* Added */ !== n.type && (Wn((u = s.indexOf(n.doc.key)) >= 0, "Index for document not found"), 
	                s = s.delete(n.doc.key)), 1 /* Removed */ !== n.type && (o = (s = s.add(n.doc)).indexOf(n.doc.key)), 
	                {
	                    type: Dr(n.type),
	                    doc: r,
	                    oldIndex: u,
	                    newIndex: o
	                };
	            }));
	        }(this.Tv, n, this.Wv, this.Dv), this.Kv = n), this.zv;
	    }, 
	    /** Check the equality. The call can be very expensive. */
	    t.prototype.isEqual = function(n) {
	        if (!(n instanceof t)) throw we("isEqual", "QuerySnapshot", 1, n);
	        return this.Tv === n.Tv && this.Gv.isEqual(n.Gv) && this.Wv.isEqual(n.Wv) && this.Dv === n.Dv;
	    }, t.prototype.Jv = function(t) {
	        return new pr(this.Tv, t.key, t, this.metadata.fromCache, this.Wv.fi.has(t.key), this.Dv);
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// settings() defaults:
	tslib.__spreadArrays([ "length", "forEach", "map" ], "undefined" != typeof Symbol ? [ Symbol.iterator ] : []).forEach((function(t) {
	    /**
	     * We are (re-)defining properties on QuerySnapshot.prototype.docChanges which
	     * is a Function. This could fail, in particular in the case of 'length' which
	     * already exists on Function.prototype and on IE11 is improperly defined with
	     * `{ configurable: false }`. So we wrap this in a try/catch to ensure that we
	     * still have a functional SDK.
	     */
	    try {
	        Object.defineProperty(gr.prototype.docChanges, t, {
	            get: function() {
	                // TODO(2018/11/01): As of 2018/04/17 we're changing docChanges from an array
	                // into a method. Because this is a runtime breaking change and somewhat subtle
	                // (both Array and Function have a .length, etc.), we'll replace commonly-used
	                // properties (including Symbol.iterator) to throw a custom error message. In
	                // ~6 months we can delete the custom error as most folks will have hopefully
	                // migrated.
	                return function() {
	                    throw new E(T.INVALID_ARGUMENT, 'QuerySnapshot.docChanges has been changed from a property into a method, so usages like "querySnapshot.docChanges" should become "querySnapshot.docChanges()"');
	                }();
	            }
	        });
	    } catch (t) {}
	 // Ignore this failure intentionally
	}));
	
	var yr = /** @class */ function(t) {
	    function i(n, i, e) {
	        var r = t.call(this, Bt.Cn(n), i, e) || this;
	        if (r.Hv = n, n.length % 2 != 1) throw new E(T.INVALID_ARGUMENT, "Invalid collection reference. Collection references must have an odd number of segments, but " + n.J() + " has " + n.length);
	        return r;
	    }
	    return tslib.__extends(i, t), Object.defineProperty(i.prototype, "id", {
	        get: function() {
	            return this.Ov.path.B();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(i.prototype, "parent", {
	        get: function() {
	            var t = this.Ov.path.L();
	            return t.M() ? null : new vr(new j(t), this.firestore);
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(i.prototype, "path", {
	        get: function() {
	            return this.Ov.path.J();
	        },
	        enumerable: !0,
	        configurable: !0
	    }), i.prototype.doc = function(t) {
	        if (ne("CollectionReference.doc", arguments, 0, 1), 
	        // We allow omission of 'pathString' but explicitly prohibit passing in both
	        // 'undefined' and 'null'.
	        0 === arguments.length && (t = zn.pr()), ee("CollectionReference.doc", "non-empty string", 1, t), 
	        "" === t) throw new E(T.INVALID_ARGUMENT, "Document path must be a non-empty string");
	        var n = O.H(t);
	        return vr._v(this.Ov.path.child(n), this.firestore, this.Dv);
	    }, i.prototype.add = function(t) {
	        Zi("CollectionReference.add", arguments, 1);
	        var n = this.Dv ? this.Dv.toFirestore(t) : t;
	        ee("CollectionReference.add", "object", 1, n);
	        var i = this.doc();
	        return i.set(t).then((function() {
	            return i;
	        }));
	    }, i.prototype.withConverter = function(t) {
	        return new i(this.Hv, this.firestore, t);
	    }, i;
	}(br);
	
	function _r(t, n) {
	    if (void 0 === n) return {
	        merge: !1
	    };
	    if (ve(t, n, [ "merge", "mergeFields" ]), se(t, "boolean", "merge", n.merge), oe(t, "mergeFields", "a string or a FieldPath", n.mergeFields, (function(t) {
	        return "string" == typeof t || t instanceof Ee;
	    })), void 0 !== n.mergeFields && void 0 !== n.merge) throw new E(T.INVALID_ARGUMENT, "Invalid options passed to function " + t + '(): You cannot specify both "merge" and "mergeFields".');
	    return n;
	}
	
	function Ir(t, n) {
	    return void 0 === n ? {} : (ve(t, n, [ "serverTimestamps" ]), he(t, 0, "serverTimestamps", n.serverTimestamps, [ "estimate", "previous", "none" ]), 
	    n);
	}
	
	function Tr(t, n) {
	    re(t, "object", 1, n), n && (ve(t, n, [ "source" ]), he(t, 0, "source", n.source, [ "default", "server", "cache" ]));
	}
	
	function Er(t, n, i) {
	    if (n instanceof vr) {
	        if (n.firestore !== i) throw new E(T.INVALID_ARGUMENT, "Provided document reference is from a different Firestore instance.");
	        return n;
	    }
	    throw we(t, "DocumentReference", 1, n);
	}
	
	function Dr(t) {
	    switch (t) {
	      case 0 /* Added */ :
	        return "added";
	
	      case 2 /* Modified */ :
	      case 3 /* Metadata */ :
	        return "modified";
	
	      case 1 /* Removed */ :
	        return "removed";
	
	      default:
	        return Gn("Unknown change type: " + t);
	    }
	}
	
	/**
	 * Converts custom model object of type T into DocumentData by applying the
	 * converter if it exists.
	 *
	 * This function is used when converting user objects to DocumentData
	 * because we want to provide the user with a more specific error message if
	 * their set() or fails due to invalid data originating from a toFirestore()
	 * call.
	 */ function Rr(t, n, i) {
	    var e;
	    return t ? (e = t.toFirestore(n), i = "toFirestore() in " + i) : e = n, [ e, i ];
	}
	
	function Sr(t, n) {
	    return Object.prototype.hasOwnProperty.call(t, n);
	}
	
	// Export the classes with a private constructor (it will fail if invoked
	// at runtime). Note that this still allows instanceof checks.
	// We're treating the variables as class names, so disable checking for lower
	// case variable names.
	var Ar = ge(fr, "Use firebase.firestore() instead."), Cr = ge(lr, "Use firebase.firestore().runTransaction() instead."), Pr = ge(dr, "Use firebase.firestore().batch() instead."), Vr = ge(vr, "Use firebase.firestore().doc() instead."), kr = ge(mr), Nr = ge(pr), Or = ge(br), Fr = ge(gr), Ur = ge(yr, "Use firebase.firestore().collection() instead."), jr = /** @class */ function() {
	    function t(n) {
	        this.db = n, 
	        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
	        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for
	        // whatever reason it's much harder to hit after 12.2 so we only proactively
	        // log on 12.2.
	        12.2 === t.Yv(util.getUA()) && Bn("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
	    }
	    /**
	     * Opens the specified database, creating or upgrading it if necessary.
	     *
	     * Note that `version` must not be a downgrade. IndexedDB does not support downgrading the schema
	     * version. We currently do not support any way to do versioning outside of IndexedDB's versioning
	     * mechanism, as only version-upgrade transactions are allowed to do things like create
	     * objectstores.
	     */    return t.Xv = function(n, i, e) {
	        return Wn(t.th(), "IndexedDB not supported in current environment."), qn("SimpleDb", "Opening database:", n), 
	        new si((function(r, u) {
	            // TODO(mikelehen): Investigate browser compatibility.
	            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
	            // suggests IE9 and older WebKit browsers handle upgrade
	            // differently. They expect setVersion, as described here:
	            // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
	            var s = window.indexedDB.open(n, i);
	            s.onsuccess = function(n) {
	                var i = n.target.result;
	                r(new t(i));
	            }, s.onblocked = function() {
	                u(new E(T.FAILED_PRECONDITION, "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));
	            }, s.onerror = function(t) {
	                var n = t.target.error;
	                "VersionError" === n.name ? u(new E(T.FAILED_PRECONDITION, "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")) : u(n);
	            }, s.onupgradeneeded = function(t) {
	                qn("SimpleDb", 'Database "' + n + '" requires upgrade from version:', t.oldVersion);
	                var i = t.target.result;
	                e.createOrUpgrade(i, s.transaction, t.oldVersion, su).next((function() {
	                    qn("SimpleDb", "Database upgrade to version " + su + " complete");
	                }));
	            };
	        })).wu();
	    }, 
	    /** Deletes the specified database. */
	    t.delete = function(t) {
	        return qn("SimpleDb", "Removing database:", t), qr(window.indexedDB.deleteDatabase(t)).wu();
	    }, 
	    /** Returns true if IndexedDB is available in the current environment. */
	    t.th = function() {
	        if ("undefined" == typeof window || null == window.indexedDB) return !1;
	        if (t.$v()) return !0;
	        // In some Node environments, `window` is defined, but `window.navigator` is
	        // not. We don't support IndexedDB persistence in Node if the
	        // isMockPersistence() check above returns false.
	                if (void 0 === window.navigator) return !1;
	        // We extensively use indexed array values and compound keys,
	        // which IE and Edge do not support. However, they still have indexedDB
	        // defined on the window, so we need to check for them here and make sure
	        // to return that persistence is not enabled for those browsers.
	        // For tracking support of this feature, see here:
	        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
	        // Check the UA string to find out the browser.
	                var n = util.getUA(), i = t.Yv(n), e = 0 < i && i < 10, r = t.Zv(n), u = 0 < r && r < 4.5;
	        // IE 10
	        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
	        // IE 11
	        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
	        // Edge
	        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
	        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
	        // iOS Safari: Disable for users running iOS version < 10.
	                return !(n.indexOf("MSIE ") > 0 || n.indexOf("Trident/") > 0 || n.indexOf("Edge/") > 0 || e || u);
	    }, 
	    /**
	     * Returns true if the backing IndexedDB store is the Node IndexedDBShim
	     * (see https://github.com/axemclion/IndexedDBShim).
	     */
	    t.$v = function() {
	        var t;
	        return "undefined" != typeof process && "YES" === (null === (t = ({"NODE_ENV":"production","PUBLIC_URL":""})) || void 0 === t ? void 0 : t.tw);
	    }, 
	    /** Helper to get a typed SimpleDbStore from a transaction. */
	    t.nw = function(t, n) {
	        return t.store(n);
	    }, 
	    // visible for testing
	    /** Parse User Agent to determine iOS version. Returns -1 if not found. */
	    t.Yv = function(t) {
	        var n = t.match(/i(?:phone|pad|pod) os ([\d_]+)/i), i = n ? n[1].split("_").slice(0, 2).join(".") : "-1";
	        return Number(i);
	    }, 
	    // visible for testing
	    /** Parse User Agent to determine Android version. Returns -1 if not found. */
	    t.Zv = function(t) {
	        var n = t.match(/Android ([\d.]+)/i), i = n ? n[1].split(".").slice(0, 2).join(".") : "-1";
	        return Number(i);
	    }, t.prototype.iw = function(t) {
	        this.db.onversionchange = function(n) {
	            return t(n);
	        };
	    }, t.prototype.runTransaction = function(t, n, i) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var e, r, s, o, h;
	            return tslib.__generator(this, (function(c) {
	                switch (c.label) {
	                  case 0:
	                    e = "readonly" === t, r = 0, s = function() {
	                        var t, s, h, c;
	                        return tslib.__generator(this, (function(u) {
	                            switch (u.label) {
	                              case 0:
	                                ++r, t = Lr.open(o.db, e ? "readonly" : "readwrite", n), u.label = 1;
	
	                              case 1:
	                                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
	                                // fire), but still return the original transactionFnResult back to the
	                                // caller.
	                                return u.trys.push([ 1, 3, , 4 ]), 
	                                // As noted above, errors are propagated by aborting the transaction. So
	                                // we swallow any error here to avoid the browser logging it as unhandled.
	                                (s = i(t).catch((function(n) {
	                                    // We cannot actually recover, and calling `abort()` will cause the transaction's
	                                    // completion promise to be rejected. This in turn means that we won't use
	                                    // `transactionFnResult` below. We return a rejection here so that we don't add the
	                                    // possibility of returning `void` to the type of `transactionFnResult`.
	                                    // Abort the transaction if there was an error.
	                                    return t.abort(n), si.reject(n);
	                                })).wu()).catch((function() {})), [ 4 /*yield*/ , t.ew ];
	
	                              case 2:
	                                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
	                                // fire), but still return the original transactionFnResult back to the
	                                // caller.
	                                return u.sent(), [ 2 /*return*/ , {
	                                    value: s
	                                } ];
	
	                              case 3:
	                                return h = u.sent(), c = "FirebaseError" !== h.name && r < 3, qn("SimpleDb", "Transaction failed with error: %s. Retrying: %s.", h.message, c), 
	                                c ? [ 3 /*break*/ , 4 ] : [ 2 /*return*/ , {
	                                    value: Promise.reject(h)
	                                } ];
	
	                              case 4:
	                                return [ 2 /*return*/ ];
	                            }
	                        }));
	                    }, o = this, c.label = 1;
	
	                  case 1:
	                    return [ 5 /*yield**/ , s() ];
	
	                  case 2:
	                    return "object" == typeof (h = c.sent()) ? [ 2 /*return*/ , h.value ] : [ 3 /*break*/ , 1 ];
	
	                  case 3:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.close = function() {
	        this.db.close();
	    }, t;
	}(), xr = /** @class */ function() {
	    function t(t) {
	        this.rw = t, this.uw = !1, this.sw = null;
	    }
	    return Object.defineProperty(t.prototype, "fu", {
	        get: function() {
	            return this.uw;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "ow", {
	        get: function() {
	            return this.sw;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "cursor", {
	        set: function(t) {
	            this.rw = t;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), 
	    /**
	     * This function can be called to stop iteration at any point.
	     */
	    t.prototype.done = function() {
	        this.uw = !0;
	    }, 
	    /**
	     * This function can be called to skip to that next key, which could be
	     * an index or a primary key.
	     */
	    t.prototype.hw = function(t) {
	        this.sw = t;
	    }, 
	    /**
	     * Delete the current cursor value from the object store.
	     *
	     * NOTE: You CANNOT do this with a keysOnly query.
	     */
	    t.prototype.delete = function() {
	        return qr(this.rw.delete());
	    }, t;
	}(), Lr = /** @class */ function() {
	    function t(t) {
	        var n = this;
	        this.transaction = t, this.aborted = !1, 
	        /**
	         * A promise that resolves with the result of the IndexedDb transaction.
	         */
	        this.cw = new ei, this.transaction.oncomplete = function() {
	            n.cw.resolve();
	        }, this.transaction.onabort = function() {
	            t.error ? n.cw.reject(t.error) : n.cw.resolve();
	        }, this.transaction.onerror = function(t) {
	            var i = Qr(t.target.error);
	            n.cw.reject(i);
	        };
	    }
	    return t.open = function(n, i, e) {
	        return new t(n.transaction(e, i));
	    }, Object.defineProperty(t.prototype, "ew", {
	        get: function() {
	            return this.cw.promise;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.abort = function(t) {
	        t && this.cw.reject(t), this.aborted || (qn("SimpleDb", "Aborting transaction:", t ? t.message : "Client-initiated abort"), 
	        this.aborted = !0, this.transaction.abort());
	    }, 
	    /**
	     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
	     * operations performed on the SimpleDbStore happen within the context of this
	     * transaction and it cannot be used anymore once the transaction is
	     * completed.
	     *
	     * Note that we can't actually enforce that the KeyType and ValueType are
	     * correct, but they allow type safety through the rest of the consuming code.
	     */
	    t.prototype.store = function(t) {
	        var n = this.transaction.objectStore(t);
	        return Wn(!!n, "Object store not part of transaction: " + t), new Mr(n);
	    }, t;
	}(), Mr = /** @class */ function() {
	    function t(t) {
	        this.store = t;
	    }
	    return t.prototype.put = function(t, n) {
	        var i;
	        return void 0 !== n ? (qn("SimpleDb", "PUT", this.store.name, t, n), i = this.store.put(n, t)) : (qn("SimpleDb", "PUT", this.store.name, "<auto-key>", t), 
	        i = this.store.put(t)), qr(i);
	    }, 
	    /**
	     * Adds a new value into an Object Store and returns the new key. Similar to
	     * IndexedDb's `add()`, this method will fail on primary key collisions.
	     *
	     * @param value The object to write.
	     * @return The key of the value to add.
	     */
	    t.prototype.add = function(t) {
	        return qn("SimpleDb", "ADD", this.store.name, t, t), qr(this.store.add(t));
	    }, 
	    /**
	     * Gets the object with the specified key from the specified store, or null
	     * if no object exists with the specified key.
	     *
	     * @key The key of the object to get.
	     * @return The object with the specified key or null if no object exists.
	     */
	    t.prototype.get = function(t) {
	        var n = this;
	        // We're doing an unsafe cast to ValueType.
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        return qr(this.store.get(t)).next((function(i) {
	            // Normalize nonexistence to null.
	            return void 0 === i && (i = null), qn("SimpleDb", "GET", n.store.name, t, i), i;
	        }));
	    }, t.prototype.delete = function(t) {
	        return qn("SimpleDb", "DELETE", this.store.name, t), qr(this.store.delete(t));
	    }, 
	    /**
	     * If we ever need more of the count variants, we can add overloads. For now,
	     * all we need is to count everything in a store.
	     *
	     * Returns the number of rows in the store.
	     */
	    t.prototype.count = function() {
	        return qn("SimpleDb", "COUNT", this.store.name), qr(this.store.count());
	    }, t.prototype.aw = function(t, n) {
	        var i = this.cursor(this.options(t, n)), e = [];
	        return this.fw(i, (function(t, n) {
	            e.push(n);
	        })).next((function() {
	            return e;
	        }));
	    }, t.prototype.lw = function(t, n) {
	        qn("SimpleDb", "DELETE ALL", this.store.name);
	        var i = this.options(t, n);
	        i.dw = !1;
	        var e = this.cursor(i);
	        return this.fw(e, (function(t, n, i) {
	            // NOTE: Calling delete() on a cursor is documented as more efficient than
	            // calling delete() on an object store with a single key
	            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),
	            // however, this requires us *not* to use a keysOnly cursor
	            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We
	            // may want to compare the performance of each method.
	            return i.delete();
	        }));
	    }, t.prototype.vw = function(t, n) {
	        var i;
	        n ? i = t : (i = {}, n = t);
	        var e = this.cursor(i);
	        return this.fw(e, n);
	    }, 
	    /**
	     * Iterates over a store, but waits for the given callback to complete for
	     * each entry before iterating the next entry. This allows the callback to do
	     * asynchronous work to determine if this iteration should continue.
	     *
	     * The provided callback should return `true` to continue iteration, and
	     * `false` otherwise.
	     */
	    t.prototype.ww = function(t) {
	        var n = this.cursor({});
	        return new si((function(i, e) {
	            n.onerror = function(t) {
	                var n = Qr(t.target.error);
	                e(n);
	            }, n.onsuccess = function(n) {
	                var e = n.target.result;
	                e ? t(e.primaryKey, e.value).next((function(t) {
	                    t ? e.continue() : i();
	                })) : i();
	            };
	        }));
	    }, t.prototype.fw = function(t, n) {
	        var i = [];
	        return new si((function(e, r) {
	            t.onerror = function(t) {
	                r(t.target.error);
	            }, t.onsuccess = function(t) {
	                var r = t.target.result;
	                if (r) {
	                    var u = new xr(r), s = n(r.primaryKey, r.value, u);
	                    if (s instanceof si) {
	                        var o = s.catch((function(t) {
	                            return u.done(), si.reject(t);
	                        }));
	                        i.push(o);
	                    }
	                    u.fu ? e() : null === u.ow ? r.continue() : r.continue(u.ow);
	                } else e();
	            };
	        })).next((function() {
	            return si.pu(i);
	        }));
	    }, t.prototype.options = function(t, n) {
	        var i = void 0;
	        return void 0 !== t && ("string" == typeof t ? i = t : (Wn(void 0 === n, "3rd argument must not be defined if 2nd is a range."), 
	        n = t)), {
	            index: i,
	            range: n
	        };
	    }, t.prototype.cursor = function(t) {
	        var n = "next";
	        if (t.reverse && (n = "prev"), t.index) {
	            var i = this.store.index(t.index);
	            return t.dw ? i.openKeyCursor(t.range, n) : i.openCursor(t.range, n);
	        }
	        return this.store.openCursor(t.range, n);
	    }, t;
	}();
	
	/**
	 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
	 * handlers to resolve / reject the PersistencePromise as appropriate.
	 */
	function qr(t) {
	    return new si((function(n, i) {
	        t.onsuccess = function(t) {
	            var i = t.target.result;
	            n(i);
	        }, t.onerror = function(t) {
	            var n = Qr(t.target.error);
	            i(n);
	        };
	    }));
	}
	
	// Guard so we only report the error once.
	var Br = !1;
	
	function Qr(t) {
	    var n = jr.Yv(util.getUA());
	    if (n >= 12.2 && n < 13) {
	        var i = "An internal error was encountered in the Indexed Database server";
	        if (t.message.indexOf(i) >= 0) {
	            // Wrap error in a more descriptive one.
	            var e = new E("internal", "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '" + i + "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
	            return Br || (Br = !0, 
	            // Throw a global exception outside of this promise chain, for the user to
	            // potentially catch.
	            setTimeout((function() {
	                throw e;
	            }), 0)), e;
	        }
	    }
	    return t;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/** A mutation queue for a specific user, backed by IndexedDB. */ var Gr = /** @class */ function() {
	    function t(
	    /**
	     * The normalized userId (e.g. null UID => "" userId) used to store /
	     * retrieve mutations.
	     */
	    t, n, i, e) {
	        this.userId = t, this.serializer = n, this.Bh = i, this.Cs = e, 
	        /**
	         * Caches the document keys for pending mutation batches. If the mutation
	         * has been removed from IndexedDb, the cached value may continue to
	         * be used to retrieve the batch's document keys. To remove a cached value
	         * locally, `removeCachedMutationKeys()` should be invoked either directly
	         * or through `removeMutationBatches()`.
	         *
	         * With multi-tab, when the primary client acknowledges or rejects a mutation,
	         * this cache is used by secondary clients to invalidate the local
	         * view of the documents that were previously affected by the mutation.
	         */
	        // PORTING NOTE: Multi-tab only.
	        this.mw = {};
	    }
	    /**
	     * Creates a new mutation queue for the given user.
	     * @param user The user for which to create a mutation queue.
	     * @param serializer The serializer to use when persisting to IndexedDb.
	     */    return t.pw = function(n, i, e, r) {
	        // TODO(mcg): Figure out what constraints there are on userIDs
	        // In particular, are there any reserved characters? are empty ids allowed?
	        // For the moment store these together in the same mutations table assuming
	        // that empty userIDs aren't allowed.
	        return Wn("" !== n.uid, "UserID must not be an empty string."), new t(n.t() ? n.uid : "", i, e, r);
	    }, t.prototype.oc = function(t) {
	        var n = !0, i = IDBKeyRange.bound([ this.userId, Number.NEGATIVE_INFINITY ], [ this.userId, Number.POSITIVE_INFINITY ]);
	        return Kr(t).vw({
	            index: fu.userMutationsIndex,
	            range: i
	        }, (function(t, i, e) {
	            n = !1, e.done();
	        })).next((function() {
	            return n;
	        }));
	    }, t.prototype.Ys = function(t, n, i) {
	        return this.bw(t).next((function(n) {
	            // We can't store the resumeToken as a ByteString in IndexedDB, so we
	            // convert it to a Base64 string for storage.
	            return n.lastStreamToken = i.toBase64(), Hr(t).put(n);
	        }));
	    }, t.prototype.uo = function(t) {
	        return this.bw(t).next((function(t) {
	            return K.fromBase64String(t.lastStreamToken);
	        }));
	    }, t.prototype.so = function(t, n) {
	        return this.bw(t).next((function(i) {
	            // We can't store the resumeToken as a ByteString in IndexedDB, so we
	            // convert it to a Base64 string for storage.
	            return i.lastStreamToken = n.toBase64(), Hr(t).put(i);
	        }));
	    }, t.prototype.Ks = function(t, n, i, e) {
	        var r = this, u = Jr(t), s = Kr(t);
	        // The IndexedDb implementation in Chrome (and Firefox) does not handle
	        // compound indices that include auto-generated keys correctly. To ensure
	        // that the index entry is added correctly in all browsers, we perform two
	        // writes: The first write is used to retrieve the next auto-generated Batch
	        // ID, and the second write populates the index and stores the actual
	        // mutation batch.
	        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
	        // We write an empty object to obtain key
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        return s.add({}).next((function(o) {
	            Wn("number" == typeof o, "Auto-generated key is not a number");
	            for (var h = new $n(o, n, i, e), c = r.serializer.gw(r.userId, h), a = [], f = new B((function(t, n) {
	                return Kn(t.J(), n.J());
	            })), l = 0, d = e; l < d.length; l++) {
	                var v = d[l], w = lu.key(r.userId, v.key.path, o);
	                f = f.add(v.key.path.L()), a.push(s.put(c)), a.push(u.put(w, lu.PLACEHOLDER));
	            }
	            return f.forEach((function(n) {
	                a.push(r.Bh.rc(t, n));
	            })), t.Lh((function() {
	                r.mw[o] = h.keys();
	            })), si.pu(a).next((function() {
	                return h;
	            }));
	        }));
	    }, t.prototype.io = function(t, n) {
	        var i = this;
	        return Kr(t).get(n).next((function(t) {
	            return t ? (Wn(t.userId === i.userId, "Unexpected user '" + t.userId + "' for mutation batch " + n), 
	            i.serializer.yw(t)) : null;
	        }));
	    }, t.prototype.Hs = function(t, n) {
	        var i = this;
	        return this.mw[n] ? si.resolve(this.mw[n]) : this.io(t, n).next((function(t) {
	            if (t) {
	                var e = t.keys();
	                return i.mw[n] = e, e;
	            }
	            return null;
	        }));
	    }, t.prototype._o = function(t, n) {
	        var i = this, e = n + 1, r = IDBKeyRange.lowerBound([ this.userId, e ]), u = null;
	        return Kr(t).vw({
	            index: fu.userMutationsIndex,
	            range: r
	        }, (function(t, n, r) {
	            n.userId === i.userId && (Wn(n.batchId >= e, "Should have found mutation after " + e), 
	            u = i.serializer.yw(n)), r.done();
	        })).next((function() {
	            return u;
	        }));
	    }, t.prototype.ro = function(t) {
	        var n = IDBKeyRange.upperBound([ this.userId, Number.POSITIVE_INFINITY ]), i = -1;
	        return Kr(t).vw({
	            index: fu.userMutationsIndex,
	            range: n,
	            reverse: !0
	        }, (function(t, n, e) {
	            i = n.batchId, e.done();
	        })).next((function() {
	            return i;
	        }));
	    }, t.prototype.qs = function(t) {
	        var n = this, i = IDBKeyRange.bound([ this.userId, -1 ], [ this.userId, Number.POSITIVE_INFINITY ]);
	        return Kr(t).aw(fu.userMutationsIndex, i).next((function(t) {
	            return t.map((function(t) {
	                return n.serializer.yw(t);
	            }));
	        }));
	    }, t.prototype.Qh = function(t, n) {
	        var i = this, e = lu.prefixForPath(this.userId, n.path), r = IDBKeyRange.lowerBound(e), u = [];
	        // Scan the document-mutation index starting with a prefix starting with
	        // the given documentKey.
	                return Jr(t).vw({
	            range: r
	        }, (function(e, r, s) {
	            var o = e[0], h = e[1], c = e[2], a = Fi(h);
	            // Only consider rows matching exactly the specific key of
	            // interest. Note that because we order by path first, and we
	            // order terminators before path separators, we'll encounter all
	            // the index rows for documentKey contiguously. In particular, all
	            // the rows for documentKey will occur before any rows for
	            // documents nested in a subcollection beneath documentKey so we
	            // can stop as soon as we hit any such row.
	                        if (o === i.userId && n.path.isEqual(a)) 
	            // Look up the mutation batch in the store.
	            return Kr(t).get(c).next((function(t) {
	                if (!t) throw Gn("Dangling document-mutation reference found: " + e + " which points to " + c);
	                Wn(t.userId === i.userId, "Unexpected user '" + t.userId + "' for mutation batch " + c), 
	                u.push(i.serializer.yw(t));
	            }));
	            s.done();
	        })).next((function() {
	            return u;
	        }));
	    }, t.prototype.zh = function(t, n) {
	        var i = this, e = new B(Kn), r = [];
	        return n.forEach((function(n) {
	            var u = lu.prefixForPath(i.userId, n.path), s = IDBKeyRange.lowerBound(u), o = Jr(t).vw({
	                range: s
	            }, (function(t, r, u) {
	                var s = t[0], o = t[1], h = t[2], c = Fi(o);
	                // Only consider rows matching exactly the specific key of
	                // interest. Note that because we order by path first, and we
	                // order terminators before path separators, we'll encounter all
	                // the index rows for documentKey contiguously. In particular, all
	                // the rows for documentKey will occur before any rows for
	                // documents nested in a subcollection beneath documentKey so we
	                // can stop as soon as we hit any such row.
	                                s === i.userId && n.path.isEqual(c) ? e = e.add(h) : u.done();
	            }));
	            r.push(o);
	        })), si.pu(r).next((function() {
	            return i._w(t, e);
	        }));
	    }, t.prototype.Xh = function(t, n) {
	        var i = this;
	        Wn(!n.Tn(), "Document queries shouldn't go down this path"), Wn(!n.Yn(), "CollectionGroup queries should be handled in LocalDocumentsView");
	        var e = n.path, r = e.length + 1, u = lu.prefixForPath(this.userId, e), s = IDBKeyRange.lowerBound(u), o = new B(Kn);
	        return Jr(t).vw({
	            range: s
	        }, (function(t, n, u) {
	            var s = t[0], h = t[1], c = t[2], a = Fi(h);
	            s === i.userId && e.G(a) ? 
	            // Rows with document keys more than one segment longer than the
	            // query path can't be matches. For example, a query on 'rooms'
	            // can't match the document /rooms/abc/messages/xyx.
	            // TODO(mcg): we'll need a different scanner when we implement
	            // ancestor queries.
	            a.length === r && (o = o.add(c)) : u.done();
	        })).next((function() {
	            return i._w(t, o);
	        }));
	    }, t.prototype._w = function(t, n) {
	        var i = this, e = [], r = [];
	        // TODO(rockwood): Implement this using iterate.
	        return n.forEach((function(n) {
	            r.push(Kr(t).get(n).next((function(t) {
	                if (null === t) throw Gn("Dangling document-mutation reference found, which points to " + n);
	                Wn(t.userId === i.userId, "Unexpected user '" + t.userId + "' for mutation batch " + n), 
	                e.push(i.serializer.yw(t));
	            })));
	        })), si.pu(r).next((function() {
	            return e;
	        }));
	    }, t.prototype.eo = function(t, n) {
	        var i = this;
	        return zr(t.Iw, this.userId, n).next((function(e) {
	            return t.Lh((function() {
	                i.Uo(n.batchId);
	            })), si.forEach(e, (function(n) {
	                return i.Cs.lc(t, n);
	            }));
	        }));
	    }, t.prototype.Uo = function(t) {
	        delete this.mw[t];
	    }, t.prototype.to = function(t) {
	        var n = this;
	        return this.oc(t).next((function(i) {
	            if (!i) return si.resolve();
	            // Verify that there are no entries in the documentMutations index if
	            // the queue is empty.
	                        var e = IDBKeyRange.lowerBound(lu.prefixForUser(n.userId)), r = [];
	            return Jr(t).vw({
	                range: e
	            }, (function(t, i, e) {
	                if (t[0] === n.userId) {
	                    var u = Fi(t[1]);
	                    r.push(u);
	                } else e.done();
	            })).next((function() {
	                Wn(0 === r.length, "Document leak -- detected dangling mutation references when queue is empty. Dangling keys: " + r.map((function(t) {
	                    return t.J();
	                })));
	            }));
	        }));
	    }, t.prototype.fs = function(t, n) {
	        return Wr(t, this.userId, n);
	    }, 
	    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).
	    /** Returns the mutation queue's metadata from IndexedDb. */
	    t.prototype.bw = function(t) {
	        var n = this;
	        return Hr(t).get(this.userId).next((function(t) {
	            return t || new au(n.userId, -1, 
	            /*lastStreamToken=*/ "");
	        }));
	    }, t;
	}();
	
	/**
	 * @return true if the mutation queue for the given user contains a pending
	 *         mutation for the given key.
	 */ function Wr(t, n, i) {
	    var e = lu.prefixForPath(n, i.path), r = e[1], u = IDBKeyRange.lowerBound(e), s = !1;
	    return Jr(t).vw({
	        range: u,
	        dw: !0
	    }, (function(t, i, e) {
	        var u = t[0], o = t[1];
	        t[2];
	        u === n && o === r && (s = !0), e.done();
	    })).next((function() {
	        return s;
	    }));
	}
	
	/** Returns true if any mutation queue contains the given document. */
	/**
	 * Delete a mutation batch and the associated document mutations.
	 * @return A PersistencePromise of the document mutations that were removed.
	 */
	function zr(t, n, i) {
	    var e = t.store(fu.store), r = t.store(lu.store), u = [], s = IDBKeyRange.only(i.batchId), o = 0, h = e.vw({
	        range: s
	    }, (function(t, n, i) {
	        return o++, i.delete();
	    }));
	    u.push(h.next((function() {
	        Wn(1 === o, "Dangling document-mutation reference found: Missing batch " + i.batchId);
	    })));
	    for (var c = [], a = 0, f = i.mutations; a < f.length; a++) {
	        var l = f[a], d = lu.key(n, l.key.path, i.batchId);
	        u.push(r.delete(d)), c.push(l.key);
	    }
	    return si.pu(u).next((function() {
	        return c;
	    }));
	}
	
	/**
	 * Helper to get a typed SimpleDbStore for the mutations object store.
	 */ function Kr(t) {
	    return ku.nw(t, fu.store);
	}
	
	/**
	 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
	 */ function Jr(t) {
	    return ku.nw(t, lu.store);
	}
	
	/**
	 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
	 */ function Hr(t) {
	    return ku.nw(t, au.store);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var Yr = /** @class */ function() {
	    function t(t, n) {
	        this.Cs = t, this.serializer = n, 
	        // PORTING NOTE: We don't cache global metadata for the target cache, since
	        // some of it (in particular `highestTargetId`) can be modified by secondary
	        // tabs. We could perhaps be more granular (and e.g. still cache
	        // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
	        // to IndexedDb whenever we need to read metadata. We can revisit if it turns
	        // out to have a meaningful performance impact.
	        this.Sc = Mi.Ic();
	    }
	    return t.prototype.Ro = function(t) {
	        var n = this;
	        return this.Tw(t).next((function(i) {
	            return i.highestTargetId = n.Sc.after(i.highestTargetId), n.Ew(t, i).next((function() {
	                return i.highestTargetId;
	            }));
	        }));
	    }, t.prototype.oo = function(t) {
	        return this.Tw(t).next((function(t) {
	            return k.P(new V(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));
	        }));
	    }, t.prototype.Ac = function(t) {
	        return Zr(t.Iw);
	    }, t.prototype.wo = function(t, n, i) {
	        var e = this;
	        return this.Tw(t).next((function(r) {
	            return r.highestListenSequenceNumber = n, i && (r.lastRemoteSnapshotVersion = i.O()), 
	            n > r.highestListenSequenceNumber && (r.highestListenSequenceNumber = n), e.Ew(t, r);
	        }));
	    }, t.prototype.So = function(t, n) {
	        var i = this;
	        return this.Cc(t, n).next((function() {
	            return i.Tw(t).next((function(e) {
	                return e.targetCount += 1, i.Dw(n, e), i.Ew(t, e);
	            }));
	        }));
	    }, t.prototype.do = function(t, n) {
	        return this.Cc(t, n);
	    }, t.prototype.Pc = function(t, n) {
	        var i = this;
	        return this.Vc(t, n.targetId).next((function() {
	            return Xr(t).delete(n.targetId);
	        })).next((function() {
	            return i.Tw(t);
	        })).next((function(n) {
	            return Wn(n.targetCount > 0, "Removing from an empty target cache"), n.targetCount -= 1, 
	            i.Ew(t, n);
	        }));
	    }, 
	    /**
	     * Drops any targets with sequence number less than or equal to the upper bound, excepting those
	     * present in `activeTargetIds`. Document associations for the removed targets are also removed.
	     * Returns the number of targets removed.
	     */
	    t.prototype.Ju = function(t, n, i) {
	        var e = this, r = 0, u = [];
	        return Xr(t).vw((function(s, o) {
	            var h = e.serializer.Rw(o);
	            h.sequenceNumber <= n && null === i.get(h.targetId) && (r++, u.push(e.Pc(t, h)));
	        })).next((function() {
	            return si.pu(u);
	        })).next((function() {
	            return r;
	        }));
	    }, 
	    /**
	     * Call provided function with each `TargetData` that we have cached.
	     */
	    t.prototype.$i = function(t, n) {
	        var i = this;
	        return Xr(t).vw((function(t, e) {
	            var r = i.serializer.Rw(e);
	            n(r);
	        }));
	    }, t.prototype.Tw = function(t) {
	        return $r(t.Iw);
	    }, t.prototype.Ew = function(t, n) {
	        return (i = t, ku.nw(i, gu.store)).put(gu.key, n);
	        /**
	 * Helper to get a typed SimpleDbStore for the target globals object store.
	 */
	        var i;
	    }, t.prototype.Cc = function(t, n) {
	        return Xr(t).put(this.serializer.Sw(n));
	    }, 
	    /**
	     * In-place updates the provided metadata to account for values in the given
	     * TargetData. Saving is done separately. Returns true if there were any
	     * changes to the metadata.
	     */
	    t.prototype.Dw = function(t, n) {
	        var i = !1;
	        return t.targetId > n.highestTargetId && (n.highestTargetId = t.targetId, i = !0), 
	        t.sequenceNumber > n.highestListenSequenceNumber && (n.highestListenSequenceNumber = t.sequenceNumber, 
	        i = !0), i;
	    }, t.prototype.kc = function(t) {
	        return this.Tw(t).next((function(t) {
	            return t.targetCount;
	        }));
	    }, t.prototype.Do = function(t, n) {
	        var i = this, e = n.canonicalId(), r = IDBKeyRange.bound([ e, Number.NEGATIVE_INFINITY ], [ e, Number.POSITIVE_INFINITY ]), u = null;
	        // Iterating by the canonicalId may yield more than one result because
	        // canonicalId values are not required to be unique per target. This query
	        // depends on the queryTargets index to be efficient.
	                return Xr(t).vw({
	            range: r,
	            index: pu.queryTargetsIndexName
	        }, (function(t, e, r) {
	            var s = i.serializer.Rw(e);
	            // After finding a potential match, check that the target is
	            // actually equal to the requested target.
	                        n.isEqual(s.target) && (u = s, r.done());
	        })).next((function() {
	            return u;
	        }));
	    }, t.prototype.ao = function(t, n, i) {
	        var e = this, r = [], u = tu(t);
	        // PORTING NOTE: The reverse index (documentsTargets) is maintained by
	        // IndexedDb.
	                return n.forEach((function(n) {
	            var s = ki(n.path);
	            r.push(u.put(new bu(i, s))), r.push(e.Cs.es(t, n));
	        })), si.pu(r);
	    }, t.prototype.co = function(t, n, i) {
	        var e = this, r = tu(t);
	        // PORTING NOTE: The reverse index (documentsTargets) is maintained by
	        // IndexedDb.
	                return si.forEach(n, (function(n) {
	            var u = ki(n.path);
	            return si.pu([ r.delete([ i, u ]), e.Cs.us(t, n) ]);
	        }));
	    }, t.prototype.Vc = function(t, n) {
	        var i = tu(t), e = IDBKeyRange.bound([ n ], [ n + 1 ], 
	        /*lowerOpen=*/ !1, 
	        /*upperOpen=*/ !0);
	        return i.delete(e);
	    }, t.prototype.Po = function(t, n) {
	        var i = IDBKeyRange.bound([ n ], [ n + 1 ], 
	        /*lowerOpen=*/ !1, 
	        /*upperOpen=*/ !0), e = tu(t), r = wn();
	        return e.vw({
	            range: i,
	            dw: !0
	        }, (function(t, n, i) {
	            var e = Fi(t[1]), u = new j(e);
	            r = r.add(u);
	        })).next((function() {
	            return r;
	        }));
	    }, t.prototype.fs = function(t, n) {
	        var i = ki(n.path), e = IDBKeyRange.bound([ i ], [ Hn(i) ], 
	        /*lowerOpen=*/ !1, 
	        /*upperOpen=*/ !0), r = 0;
	        return tu(t).vw({
	            index: bu.documentTargetsIndex,
	            dw: !0,
	            range: e
	        }, (function(t, n, i) {
	            var e = t[0];
	            // Having a sentinel row for a document does not count as containing that document;
	            // For the target cache, containing the document means the document is part of some
	            // target.
	                        t[1];
	            0 !== e && (r++, i.done());
	        })).next((function() {
	            return r > 0;
	        }));
	    }, t.prototype.ce = function(t, n) {
	        var i = this;
	        return Xr(t).get(n).next((function(t) {
	            return t ? i.serializer.Rw(t) : null;
	        }));
	    }, t;
	}();
	
	/**
	 * Helper to get a typed SimpleDbStore for the queries object store.
	 */ function Xr(t) {
	    return ku.nw(t, pu.store);
	}
	
	function $r(t) {
	    return jr.nw(t, gu.store).get(gu.key).next((function(t) {
	        return Wn(null !== t, "Missing metadata row."), t;
	    }));
	}
	
	function Zr(t) {
	    return $r(t).next((function(t) {
	        return t.highestListenSequenceNumber;
	    }));
	}
	
	/**
	 * Helper to get a typed SimpleDbStore for the document target object store.
	 */ function tu(t) {
	    return ku.nw(t, bu.store);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var nu = /** @class */ function() {
	    /**
	     * @param {LocalSerializer} serializer The document serializer.
	     * @param {IndexManager} indexManager The query indexes that need to be maintained.
	     */
	    function t(t, n) {
	        this.serializer = t, this.Bh = n;
	    }
	    /**
	     * Adds the supplied entries to the cache.
	     *
	     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
	     */    return t.prototype.ms = function(t, n, i) {
	        return eu(t).put(ru(n), i);
	    }, 
	    /**
	     * Removes a document from the cache.
	     *
	     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
	     */
	    t.prototype.bs = function(t, n) {
	        var i = eu(t), e = ru(n);
	        return i.delete(e);
	    }, 
	    /**
	     * Updates the current cache size.
	     *
	     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
	     * cache's metadata.
	     */
	    t.prototype.updateMetadata = function(t, n) {
	        var i = this;
	        return this.getMetadata(t).next((function(e) {
	            return e.byteSize += n, i.Aw(t, e);
	        }));
	    }, t.prototype.gs = function(t, n) {
	        var i = this;
	        return eu(t).get(ru(n)).next((function(t) {
	            return i.Cw(t);
	        }));
	    }, 
	    /**
	     * Looks up an entry in the cache.
	     *
	     * @param documentKey The key of the entry to look up.
	     * @return The cached MaybeDocument entry and its size, or null if we have nothing cached.
	     */
	    t.prototype.Pw = function(t, n) {
	        var i = this;
	        return eu(t).get(ru(n)).next((function(t) {
	            var n = i.Cw(t);
	            return n ? {
	                vc: n,
	                size: uu(t)
	            } : null;
	        }));
	    }, t.prototype.getEntries = function(t, n) {
	        var i = this, e = cn();
	        return this.Vw(t, n, (function(t, n) {
	            var r = i.Cw(n);
	            e = e.ut(t, r);
	        })).next((function() {
	            return e;
	        }));
	    }, 
	    /**
	     * Looks up several entries in the cache.
	     *
	     * @param documentKeys The set of keys entries to look up.
	     * @return A map of MaybeDocuments indexed by key (if a document cannot be
	     *     found, the key will be mapped to null) and a map of sizes indexed by
	     *     key (zero if the key cannot be found).
	     */
	    t.prototype.kw = function(t, n) {
	        var i = this, e = cn(), r = new x(j.F);
	        return this.Vw(t, n, (function(t, n) {
	            var u = i.Cw(n);
	            u ? (e = e.ut(t, u), r = r.ut(t, uu(n))) : (e = e.ut(t, null), r = r.ut(t, 0));
	        })).next((function() {
	            return {
	                Nw: e,
	                Ow: r
	            };
	        }));
	    }, t.prototype.Vw = function(t, n, i) {
	        if (n.M()) return si.resolve();
	        var e = IDBKeyRange.bound(n.first().path.K(), n.last().path.K()), r = n.ft(), u = r.bt();
	        return eu(t).vw({
	            range: e
	        }, (function(t, n, e) {
	            // Go through keys not found in cache.
	            for (var s = j.rt(t); u && j.F(u, s) < 0; ) i(u, null), u = r.bt();
	            u && u.isEqual(s) && (
	            // Key found in cache.
	            i(u, n), u = r.gt() ? r.bt() : null), 
	            // Skip to the next key (if there is one).
	            u ? e.hw(u.path.K()) : e.done();
	        })).next((function() {
	            // The rest of the keys are not in the cache. One case where `iterate`
	            // above won't go through them is when the cache is empty.
	            for (;u; ) i(u, null), u = r.gt() ? r.bt() : null;
	        }));
	    }, t.prototype.Vo = function(t, n, i) {
	        var e = this;
	        Wn(!n.Yn(), "CollectionGroup queries should be handled in LocalDocumentsView");
	        var r = fn(), u = n.path.length + 1, s = {};
	        if (i.isEqual(k.MIN)) {
	            // Documents are ordered by key, so we can use a prefix scan to narrow
	            // down the documents we need to match the query against.
	            var o = n.path.K();
	            s.range = IDBKeyRange.lowerBound(o);
	        } else {
	            // Execute an index-free query and filter by read time. This is safe
	            // since all document changes to queries that have a
	            // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
	            var h = n.path.K(), c = this.serializer.Fw(i);
	            s.range = IDBKeyRange.lowerBound([ h, c ], 
	            /* open= */ !0), s.index = wu.collectionReadTimeIndex;
	        }
	        return eu(t).vw(s, (function(t, i, s) {
	            // The query is actually returning any path that starts with the query
	            // path prefix which may include documents in subcollections. For
	            // example, a query on 'rooms' will return rooms/abc/messages/xyx but we
	            // shouldn't match it. Fix this by discarding rows with document keys
	            // more than one segment longer than the query path.
	            if (t.length === u) {
	                var o = e.serializer.Uw(i);
	                n.path.G(o.key.path) ? o instanceof xt && n.matches(o) && (r = r.ut(o.key, o)) : s.done();
	            }
	        })).next((function() {
	            return r;
	        }));
	    }, t.prototype.Lo = function(t, n) {
	        var i = this, e = hn(), r = this.serializer.Fw(n), u = eu(t), s = IDBKeyRange.lowerBound(r, !0);
	        return u.vw({
	            index: wu.readTimeIndex,
	            range: s
	        }, (function(t, n) {
	            // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
	            // the documents directly since we want to keep sentinel deletes.
	            var u = i.serializer.Uw(n);
	            e = e.ut(u.key, u), r = n.readTime;
	        })).next((function() {
	            return {
	                Mo: e,
	                readTime: i.serializer.jw(r)
	            };
	        }));
	    }, t.prototype.qo = function(t) {
	        var n = this, i = eu(t), e = k.MIN;
	        return i.vw({
	            index: wu.readTimeIndex,
	            reverse: !0
	        }, (function(t, i, r) {
	            i.readTime && (e = n.serializer.jw(i.readTime)), r.done();
	        })).next((function() {
	            return e;
	        }));
	    }, t.prototype.Xs = function(n) {
	        return new t.mc(this, !!n && n.$s);
	    }, t.prototype.pc = function(t) {
	        return this.getMetadata(t).next((function(t) {
	            return t.byteSize;
	        }));
	    }, t.prototype.getMetadata = function(t) {
	        return iu(t).get(mu.key).next((function(t) {
	            return Wn(!!t, "Missing document cache metadata"), t;
	        }));
	    }, t.prototype.Aw = function(t, n) {
	        return iu(t).put(mu.key, n);
	    }, 
	    /**
	     * Decodes `remoteDoc` and returns the document (or null, if the document
	     * corresponds to the format used for sentinel deletes).
	     */
	    t.prototype.Cw = function(t) {
	        if (t) {
	            var n = this.serializer.Uw(t);
	            return n instanceof Lt && n.version.isEqual(k.V()) ? null : n;
	        }
	        return null;
	    }, 
	    /**
	     * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.
	     *
	     * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size
	     * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb
	     * when we apply the changes.
	     */
	    t.mc = /** @class */ function(t) {
	        /**
	         * @param documentCache The IndexedDbRemoteDocumentCache to apply the changes to.
	         * @param trackRemovals Whether to create sentinel deletes that can be tracked by
	         * `getNewDocumentChanges()`.
	         */
	        function i(n, i) {
	            var e = t.call(this) || this;
	            return e.bc = n, e.$s = i, 
	            // A map of document sizes prior to applying the changes in this buffer.
	            e.xw = new ti((function(t) {
	                return t.toString();
	            })), e;
	        }
	        return tslib.__extends(i, t), i.prototype.Is = function(t) {
	            var n = this, i = [], e = 0, r = new B((function(t, n) {
	                return Kn(t.J(), n.J());
	            }));
	            return this.ds.forEach((function(u, s) {
	                var o = n.xw.get(u);
	                if (Wn(void 0 !== o, "Cannot modify a document that wasn't read (for " + u + ")"), 
	                s) {
	                    Wn(!n.readTime.isEqual(k.MIN), "Cannot add a document with a read time of zero");
	                    var h = n.bc.serializer.Lw(s, n.readTime);
	                    r = r.add(u.path.L());
	                    var c = uu(h);
	                    e += c - o, i.push(n.bc.ms(t, u, h));
	                } else if (e -= o, n.$s) {
	                    // In order to track removals, we store a "sentinel delete" in the
	                    // RemoteDocumentCache. This entry is represented by a NoDocument
	                    // with a version of 0 and ignored by `maybeDecodeDocument()` but
	                    // preserved in `getNewDocumentChanges()`.
	                    var a = n.bc.serializer.Lw(new Lt(u, k.V()), n.readTime);
	                    i.push(n.bc.ms(t, u, a));
	                } else i.push(n.bc.bs(t, u));
	            })), r.forEach((function(e) {
	                i.push(n.bc.Bh.rc(t, e));
	            })), i.push(this.bc.updateMetadata(t, e)), si.pu(i);
	        }, i.prototype.ys = function(t, n) {
	            var i = this;
	            // Record the size of everything we load from the cache so we can compute a delta later.
	                        return this.bc.Pw(t, n).next((function(t) {
	                return null === t ? (i.xw.set(n, 0), null) : (i.xw.set(n, t.size), t.vc);
	            }));
	        }, i.prototype._s = function(t, n) {
	            var i = this;
	            // Record the size of everything we load from the cache so we can compute
	            // a delta later.
	                        return this.bc.kw(t, n).next((function(t) {
	                var n = t.Nw;
	                // Note: `getAllFromCache` returns two maps instead of a single map from
	                // keys to `DocumentSizeEntry`s. This is to allow returning the
	                // `NullableMaybeDocumentMap` directly, without a conversion.
	                                return t.Ow.forEach((function(t, n) {
	                    i.xw.set(t, n);
	                })), n;
	            }));
	        }, i;
	    }(wi), t;
	}();
	
	function iu(t) {
	    return ku.nw(t, mu.store);
	}
	
	/**
	 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
	 */ function eu(t) {
	    return ku.nw(t, wu.store);
	}
	
	function ru(t) {
	    return t.path.K();
	}
	
	/**
	 * Retrusn an approximate size for the given document.
	 */ function uu(t) {
	    var n;
	    if (t.document) n = t.document; else if (t.unknownDocument) n = t.unknownDocument; else {
	        if (!t.noDocument) throw Gn("Unknown remote document type");
	        n = t.noDocument;
	    }
	    return JSON.stringify(n).length;
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Schema Version for the Web client:
	 * 1.  Initial version including Mutation Queue, Query Cache, and Remote
	 *     Document Cache
	 * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No
	 *     longer required because migration 3 unconditionally clears it.
	 * 3.  Dropped and re-created Query Cache to deal with cache corruption related
	 *     to limbo resolution. Addresses
	 *     https://github.com/firebase/firebase-ios-sdk/issues/1548
	 * 4.  Multi-Tab Support.
	 * 5.  Removal of held write acks.
	 * 6.  Create document global for tracking document cache size.
	 * 7.  Ensure every cached document has a sentinel row with a sequence number.
	 * 8.  Add collection-parent index for Collection Group queries.
	 * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than
	 *     an auto-incrementing ID. This is required for Index-Free queries.
	 * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.
	 */ var su = 10, ou = /** @class */ function() {
	    function t(t) {
	        this.serializer = t;
	    }
	    /**
	     * Performs database creation and schema upgrades.
	     *
	     * Note that in production, this method is only ever used to upgrade the schema
	     * to SCHEMA_VERSION. Different values of toVersion are only used for testing
	     * and local feature development.
	     */    return t.prototype.createOrUpgrade = function(t, n, i, e) {
	        var r = this;
	        Wn(i < e && i >= 0 && e <= su, "Unexpected schema upgrade from v" + i + " to v" + e + ".");
	        var u = new Lr(n);
	        i < 1 && e >= 1 && (function(t) {
	            t.createObjectStore(cu.store);
	        }
	        /**
	 * An object to be stored in the 'mutationQueues' store in IndexedDb.
	 *
	 * Each user gets a single queue of MutationBatches to apply to the server.
	 * DbMutationQueue tracks the metadata about the queue.
	 */ (t), function(t) {
	            t.createObjectStore(au.store, {
	                keyPath: au.keyPath
	            }), t.createObjectStore(fu.store, {
	                keyPath: fu.keyPath,
	                autoIncrement: !0
	            }).createIndex(fu.userMutationsIndex, fu.userMutationsKeyPath, {
	                unique: !0
	            }), t.createObjectStore(lu.store);
	        }
	        /**
	 * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads
	 * and rewrites all data.
	 */ (t), _u(t), function(t) {
	            t.createObjectStore(wu.store);
	        }
	        /**
	 * Represents the known absence of a document at a particular version.
	 * Stored in IndexedDb as part of a DbRemoteDocument object.
	 */ (t));
	        // Migration 2 to populate the targetGlobal object no longer needed since
	        // migration 3 unconditionally clears it.
	                var s = si.resolve();
	        return i < 3 && e >= 3 && (
	        // Brand new clients don't need to drop and recreate--only clients that
	        // potentially have corrupt data.
	        0 !== i && (!function(t) {
	            t.deleteObjectStore(bu.store), t.deleteObjectStore(pu.store), t.deleteObjectStore(gu.store);
	        }(t), _u(t)), s = s.next((function() {
	            /**
	 * Creates the target global singleton row.
	 *
	 * @param {IDBTransaction} txn The version upgrade transaction for indexeddb
	 */ return function(t) {
	                var n = t.store(gu.store), i = new gu(
	                /*highestTargetId=*/ 0, 
	                /*lastListenSequenceNumber=*/ 0, k.MIN.O(), 
	                /*targetCount=*/ 0);
	                return n.put(gu.key, i);
	            }
	            /**
	 * Creates indices on the RemoteDocuments store used for both multi-tab
	 * and Index-Free queries.
	 */ (u);
	        }))), i < 4 && e >= 4 && (0 !== i && (
	        // Schema version 3 uses auto-generated keys to generate globally unique
	        // mutation batch IDs (this was previously ensured internally by the
	        // client). To migrate to the new schema, we have to read all mutations
	        // and write them back out. We preserve the existing batch IDs to guarantee
	        // consistency with other object stores. Any further mutation batch IDs will
	        // be auto-generated.
	        s = s.next((function() {
	            return function(t, n) {
	                return n.store(fu.store).aw().next((function(i) {
	                    t.deleteObjectStore(fu.store), t.createObjectStore(fu.store, {
	                        keyPath: fu.keyPath,
	                        autoIncrement: !0
	                    }).createIndex(fu.userMutationsIndex, fu.userMutationsKeyPath, {
	                        unique: !0
	                    });
	                    var e = n.store(fu.store), r = i.map((function(t) {
	                        return e.put(t);
	                    }));
	                    return si.pu(r);
	                }));
	            }
	            /**
	 * An object to be stored in the 'documentMutations' store in IndexedDb.
	 *
	 * A manually maintained index of all the mutation batches that affect a given
	 * document key. The rows in this table are references based on the contents of
	 * DbMutationBatch.mutations.
	 */ (t, u);
	        }))), s = s.next((function() {
	            !function(t) {
	                t.createObjectStore(Iu.store, {
	                    keyPath: Iu.keyPath
	                });
	            }
	            // Visible for testing
	            (t);
	        }))), i < 5 && e >= 5 && (s = s.next((function() {
	            return r.removeAcknowledgedMutations(u);
	        }))), i < 6 && e >= 6 && (s = s.next((function() {
	            return function(t) {
	                t.createObjectStore(mu.store);
	            }
	            /**
	 * An object to be stored in the 'targets' store in IndexedDb.
	 *
	 * This is based on and should be kept in sync with the proto used in the iOS
	 * client.
	 *
	 * Each query the client listens to against the server is tracked on disk so
	 * that the query can be efficiently resumed on restart.
	 */ (t), r.addDocumentGlobal(u);
	        }))), i < 7 && e >= 7 && (s = s.next((function() {
	            return r.ensureSequenceNumbers(u);
	        }))), i < 8 && e >= 8 && (s = s.next((function() {
	            return r.createCollectionParentIndex(t, u);
	        }))), i < 9 && e >= 9 && (s = s.next((function() {
	            // Multi-Tab used to manage its own changelog, but this has been moved
	            // to the DbRemoteDocument object store itself. Since the previous change
	            // log only contained transient data, we can drop its object store.
	            !function(t) {
	                t.objectStoreNames.contains("remoteDocumentChanges") && t.deleteObjectStore("remoteDocumentChanges");
	            }(t), function(t) {
	                var n = t.objectStore(wu.store);
	                n.createIndex(wu.readTimeIndex, wu.readTimeIndexPath, {
	                    unique: !1
	                }), n.createIndex(wu.collectionReadTimeIndex, wu.collectionReadTimeIndexPath, {
	                    unique: !1
	                });
	            }
	            /**
	 * A record of the metadata state of each client.
	 *
	 * PORTING NOTE: This is used to synchronize multi-tab state and does not need
	 * to be ported to iOS or Android.
	 */ (n);
	        }))), i < 10 && e >= 10 && (s = s.next((function() {
	            return r.rewriteCanonicalIds(u);
	        }))), s;
	    }, t.prototype.addDocumentGlobal = function(t) {
	        var n = 0;
	        return t.store(wu.store).vw((function(t, i) {
	            n += uu(i);
	        })).next((function() {
	            var i = new mu(n);
	            return t.store(mu.store).put(mu.key, i);
	        }));
	    }, t.prototype.removeAcknowledgedMutations = function(t) {
	        var n = this, i = t.store(au.store), e = t.store(fu.store);
	        return i.aw().next((function(i) {
	            return si.forEach(i, (function(i) {
	                var r = IDBKeyRange.bound([ i.userId, -1 ], [ i.userId, i.lastAcknowledgedBatchId ]);
	                return e.aw(fu.userMutationsIndex, r).next((function(e) {
	                    return si.forEach(e, (function(e) {
	                        Wn(e.userId === i.userId, "Cannot process batch " + e.batchId + " from unexpected user");
	                        var r = n.serializer.yw(e);
	                        return zr(t, i.userId, r).next((function() {}));
	                    }));
	                }));
	            }));
	        }));
	    }, 
	    /**
	     * Ensures that every document in the remote document cache has a corresponding sentinel row
	     * with a sequence number. Missing rows are given the most recently used sequence number.
	     */
	    t.prototype.ensureSequenceNumbers = function(t) {
	        var n = t.store(bu.store), i = t.store(wu.store);
	        return Zr(t).next((function(t) {
	            var e = [];
	            return i.vw((function(i, r) {
	                var u = new O(i), s = function(t) {
	                    return [ 0, ki(t) ];
	                }
	                /**
	 * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.
	 */ (u);
	                e.push(n.get(s).next((function(i) {
	                    return i ? si.resolve() : function(i) {
	                        return n.put(new bu(0, ki(i), t));
	                    }(u);
	                })));
	            })).next((function() {
	                return si.pu(e);
	            }));
	        }));
	    }, t.prototype.createCollectionParentIndex = function(t, n) {
	        // Create the index.
	        t.createObjectStore(yu.store, {
	            keyPath: yu.keyPath
	        });
	        var i = n.store(yu.store), e = new ji, r = function(t) {
	            if (e.add(t)) {
	                var n = t.B(), r = t.L();
	                return i.put({
	                    collectionId: n,
	                    parent: ki(r)
	                });
	            }
	        };
	        // Helper to add an index entry iff we haven't already written it.
	                // Index existing remote documents.
	        return n.store(wu.store).vw({
	            dw: !0
	        }, (function(t, n) {
	            var i = new O(t);
	            return r(i.L());
	        })).next((function() {
	            // Index existing mutations.
	            return n.store(lu.store).vw({
	                dw: !0
	            }, (function(t, n) {
	                t[0];
	                var i = t[1], e = (t[2], Fi(i));
	                return r(e.L());
	            }));
	        }));
	    }, t.prototype.rewriteCanonicalIds = function(t) {
	        var n = this, i = t.store(pu.store);
	        return i.vw((function(t, e) {
	            var r = n.serializer.Rw(e), u = n.serializer.Sw(r);
	            return i.put(u);
	        }));
	    }, t;
	}();
	
	/** Performs database creation and schema upgrades. */ var hu = function(t, n) {
	    this.seconds = t, this.nanoseconds = n;
	}, cu = /** @class */ function() {
	    function t(t, 
	    /** Whether to allow shared access from multiple tabs. */
	    n, i) {
	        this.ownerId = t, this.allowTabSynchronization = n, this.leaseTimestampMs = i;
	    }
	    /**
	     * Name of the IndexedDb object store.
	     *
	     * Note that the name 'owner' is chosen to ensure backwards compatibility with
	     * older clients that only supported single locked access to the persistence
	     * layer.
	     */    return t.store = "owner", 
	    /**
	     * The key string used for the single object that exists in the
	     * DbPrimaryClient store.
	     */
	    t.key = "owner", t;
	}();
	
	/**
	 * A singleton object to be stored in the 'owner' store in IndexedDb.
	 *
	 * A given database can have a single primary tab assigned at a given time. That
	 * tab must validate that it is still holding the primary lease before every
	 * operation that requires locked access. The primary tab should regularly
	 * write an updated timestamp to this lease to prevent other tabs from
	 * "stealing" the primary lease
	 */ var au = /** @class */ function() {
	    function t(
	    /**
	     * The normalized user ID to which this queue belongs.
	     */
	    t, 
	    /**
	     * An identifier for the highest numbered batch that has been acknowledged
	     * by the server. All MutationBatches in this queue with batchIds less
	     * than or equal to this value are considered to have been acknowledged by
	     * the server.
	     *
	     * NOTE: this is deprecated and no longer used by the code.
	     */
	    n, 
	    /**
	     * A stream token that was previously sent by the server.
	     *
	     * See StreamingWriteRequest in datastore.proto for more details about
	     * usage.
	     *
	     * After sending this token, earlier tokens may not be used anymore so
	     * only a single stream token is retained.
	     */
	    i) {
	        this.userId = t, this.lastAcknowledgedBatchId = n, this.lastStreamToken = i;
	    }
	    /** Name of the IndexedDb object store.  */    return t.store = "mutationQueues", 
	    /** Keys are automatically assigned via the userId property. */
	    t.keyPath = "userId", t;
	}(), fu = /** @class */ function() {
	    function t(
	    /**
	     * The normalized user ID to which this batch belongs.
	     */
	    t, 
	    /**
	     * An identifier for this batch, allocated using an auto-generated key.
	     */
	    n, 
	    /**
	     * The local write time of the batch, stored as milliseconds since the
	     * epoch.
	     */
	    i, 
	    /**
	     * A list of "mutations" that represent a partial base state from when this
	     * write batch was initially created. During local application of the write
	     * batch, these baseMutations are applied prior to the real writes in order
	     * to override certain document fields from the remote document cache. This
	     * is necessary in the case of non-idempotent writes (e.g. `increment()`
	     * transforms) to make sure that the local view of the modified documents
	     * doesn't flicker if the remote document cache receives the result of the
	     * non-idempotent write before the write is removed from the queue.
	     *
	     * These mutations are never sent to the backend.
	     */
	    e, 
	    /**
	     * A list of mutations to apply. All mutations will be applied atomically.
	     *
	     * Mutations are serialized via JsonProtoSerializer.toMutation().
	     */
	    r) {
	        this.userId = t, this.batchId = n, this.localWriteTimeMs = i, this.baseMutations = e, 
	        this.mutations = r;
	    }
	    /** Name of the IndexedDb object store.  */    return t.store = "mutations", 
	    /** Keys are automatically assigned via the userId, batchId properties. */
	    t.keyPath = "batchId", 
	    /** The index name for lookup of mutations by user. */
	    t.userMutationsIndex = "userMutationsIndex", 
	    /** The user mutations index is keyed by [userId, batchId] pairs. */
	    t.userMutationsKeyPath = [ "userId", "batchId" ], t;
	}();
	
	/**
	 * An object to be stored in the 'mutations' store in IndexedDb.
	 *
	 * Represents a batch of user-level mutations intended to be sent to the server
	 * in a single write. Each user-level batch gets a separate DbMutationBatch
	 * with a new batchId.
	 */ var lu = /** @class */ function() {
	    function t() {}
	    /**
	     * Creates a [userId] key for use in the DbDocumentMutations index to iterate
	     * over all of a user's document mutations.
	     */    return t.prefixForUser = function(t) {
	        return [ t ];
	    }, 
	    /**
	     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
	     * index to iterate over all at document mutations for a given path or lower.
	     */
	    t.prefixForPath = function(t, n) {
	        return [ t, ki(n) ];
	    }, 
	    /**
	     * Creates a full index key of [userId, encodedPath, batchId] for inserting
	     * and deleting into the DbDocumentMutations index.
	     */
	    t.key = function(t, n, i) {
	        return [ t, ki(n), i ];
	    }, t.store = "documentMutations", 
	    /**
	     * Because we store all the useful information for this store in the key,
	     * there is no useful information to store as the value. The raw (unencoded)
	     * path cannot be stored because IndexedDb doesn't store prototype
	     * information.
	     */
	    t.PLACEHOLDER = new t, t;
	}();
	
	var du = function(t, n) {
	    this.path = t, this.readTime = n;
	}, vu = function(t, n) {
	    this.path = t, this.version = n;
	}, wu = /** @class */ function() {
	    // TODO: We are currently storing full document keys almost three times
	    // (once as part of the primary key, once - partly - as `parentPath` and once
	    // inside the encoded documents). During our next migration, we should
	    // rewrite the primary key as parentPath + document ID which would allow us
	    // to drop one value.
	    function t(
	    /**
	     * Set to an instance of DbUnknownDocument if the data for a document is
	     * not known, but it is known that a document exists at the specified
	     * version (e.g. it had a successful update applied to it)
	     */
	    t, 
	    /**
	     * Set to an instance of a DbNoDocument if it is known that no document
	     * exists.
	     */
	    n, 
	    /**
	     * Set to an instance of a Document if there's a cached version of the
	     * document.
	     */
	    i, 
	    /**
	     * Documents that were written to the remote document store based on
	     * a write acknowledgment are marked with `hasCommittedMutations`. These
	     * documents are potentially inconsistent with the backend's copy and use
	     * the write's commit version as their document version.
	     */
	    e, 
	    /**
	     * When the document was read from the backend. Undefined for data written
	     * prior to schema version 9.
	     */
	    r, 
	    /**
	     * The path of the collection this document is part of. Undefined for data
	     * written prior to schema version 9.
	     */
	    u) {
	        this.unknownDocument = t, this.noDocument = n, this.document = i, this.hasCommittedMutations = e, 
	        this.readTime = r, this.parentPath = u;
	    }
	    return t.store = "remoteDocuments", 
	    /**
	     * An index that provides access to all entries sorted by read time (which
	     * corresponds to the last modification time of each row).
	     *
	     * This index is used to provide a changelog for Multi-Tab.
	     */
	    t.readTimeIndex = "readTimeIndex", t.readTimeIndexPath = "readTime", 
	    /**
	     * An index that provides access to documents in a collection sorted by read
	     * time.
	     *
	     * This index is used to allow the RemoteDocumentCache to fetch newly changed
	     * documents in a collection.
	     */
	    t.collectionReadTimeIndex = "collectionReadTimeIndex", t.collectionReadTimeIndexPath = [ "parentPath", "readTime" ], 
	    t;
	}(), mu = /** @class */ function() {
	    /**
	     * @param byteSize Approximately the total size in bytes of all the documents in the document
	     * cache.
	     */
	    function t(t) {
	        this.byteSize = t;
	    }
	    return t.store = "remoteDocumentGlobal", t.key = "remoteDocumentGlobalKey", t;
	}();
	
	/**
	 * Represents a document that is known to exist but whose data is unknown.
	 * Stored in IndexedDb as part of a DbRemoteDocument object.
	 */ var pu = /** @class */ function() {
	    function t(
	    /**
	     * An auto-generated sequential numeric identifier for the query.
	     *
	     * Queries are stored using their canonicalId as the key, but these
	     * canonicalIds can be quite long so we additionally assign a unique
	     * queryId which can be used by referenced data structures (e.g.
	     * indexes) to minimize the on-disk cost.
	     */
	    t, 
	    /**
	     * The canonical string representing this query. This is not unique.
	     */
	    n, 
	    /**
	     * The last readTime received from the Watch Service for this query.
	     *
	     * This is the same value as TargetChange.read_time in the protos.
	     */
	    i, 
	    /**
	     * An opaque, server-assigned token that allows watching a query to be
	     * resumed after disconnecting without retransmitting all the data
	     * that matches the query. The resume token essentially identifies a
	     * point in time from which the server should resume sending results.
	     *
	     * This is related to the snapshotVersion in that the resumeToken
	     * effectively also encodes that value, but the resumeToken is opaque
	     * and sometimes encodes additional information.
	     *
	     * A consequence of this is that the resumeToken should be used when
	     * asking the server to reason about where this client is in the watch
	     * stream, but the client should use the snapshotVersion for its own
	     * purposes.
	     *
	     * This is the same value as TargetChange.resume_token in the protos.
	     */
	    e, 
	    /**
	     * A sequence number representing the last time this query was
	     * listened to, used for garbage collection purposes.
	     *
	     * Conventionally this would be a timestamp value, but device-local
	     * clocks are unreliable and they must be able to create new listens
	     * even while disconnected. Instead this should be a monotonically
	     * increasing number that's incremented on each listen call.
	     *
	     * This is different from the queryId since the queryId is an
	     * immutable identifier assigned to the Query on first use while
	     * lastListenSequenceNumber is updated every time the query is
	     * listened to.
	     */
	    r, 
	    /**
	     * Denotes the maximum snapshot version at which the associated query view
	     * contained no limbo documents.  Undefined for data written prior to
	     * schema version 9.
	     */
	    u, 
	    /**
	     * The query for this target.
	     *
	     * Because canonical ids are not unique we must store the actual query. We
	     * use the proto to have an object we can persist without having to
	     * duplicate translation logic to and from a `Query` object.
	     */
	    s) {
	        this.targetId = t, this.canonicalId = n, this.readTime = i, this.resumeToken = e, 
	        this.lastListenSequenceNumber = r, this.lastLimboFreeSnapshotVersion = u, this.query = s;
	    }
	    return t.store = "targets", 
	    /** Keys are automatically assigned via the targetId property. */
	    t.keyPath = "targetId", 
	    /** The name of the queryTargets index. */
	    t.queryTargetsIndexName = "queryTargetsIndex", 
	    /**
	     * The index of all canonicalIds to the targets that they match. This is not
	     * a unique mapping because canonicalId does not promise a unique name for all
	     * possible queries, so we append the targetId to make the mapping unique.
	     */
	    t.queryTargetsKeyPath = [ "canonicalId", "targetId" ], t;
	}(), bu = /** @class */ function() {
	    function t(
	    /**
	     * The targetId identifying a target or 0 for a sentinel row.
	     */
	    t, 
	    /**
	     * The path to the document, as encoded in the key.
	     */
	    n, 
	    /**
	     * If this is a sentinel row, this should be the sequence number of the last
	     * time the document specified by `path` was used. Otherwise, it should be
	     * `undefined`.
	     */
	    i) {
	        this.targetId = t, this.path = n, this.sequenceNumber = i, Wn(0 === t == (void 0 !== i), "A target-document row must either have targetId == 0 and a defined sequence number, or a non-zero targetId and no sequence number");
	    }
	    /** Name of the IndexedDb object store.  */    return t.store = "targetDocuments", 
	    /** Keys are automatically assigned via the targetId, path properties. */
	    t.keyPath = [ "targetId", "path" ], 
	    /** The index name for the reverse index. */
	    t.documentTargetsIndex = "documentTargetsIndex", 
	    /** We also need to create the reverse index for these properties. */
	    t.documentTargetsKeyPath = [ "path", "targetId" ], t;
	}(), gu = /** @class */ function() {
	    function t(
	    /**
	     * The highest numbered target id across all targets.
	     *
	     * See DbTarget.targetId.
	     */
	    t, 
	    /**
	     * The highest numbered lastListenSequenceNumber across all targets.
	     *
	     * See DbTarget.lastListenSequenceNumber.
	     */
	    n, 
	    /**
	     * A global snapshot version representing the last consistent snapshot we
	     * received from the backend. This is monotonically increasing and any
	     * snapshots received from the backend prior to this version (e.g. for
	     * targets resumed with a resumeToken) should be suppressed (buffered)
	     * until the backend has caught up to this snapshot version again. This
	     * prevents our cache from ever going backwards in time.
	     */
	    i, 
	    /**
	     * The number of targets persisted.
	     */
	    e) {
	        this.highestTargetId = t, this.highestListenSequenceNumber = n, this.lastRemoteSnapshotVersion = i, 
	        this.targetCount = e;
	    }
	    /**
	     * The key string used for the single object that exists in the
	     * DbTargetGlobal store.
	     */    return t.key = "targetGlobalKey", t.store = "targetGlobal", t;
	}(), yu = /** @class */ function() {
	    function t(
	    /**
	     * The collectionId (e.g. 'messages')
	     */
	    t, 
	    /**
	     * The path to the parent (either a document location or an empty path for
	     * a root-level collection).
	     */
	    n) {
	        this.collectionId = t, this.parent = n;
	    }
	    /** Name of the IndexedDb object store. */    return t.store = "collectionParents", 
	    /** Keys are automatically assigned via the collectionId, parent properties. */
	    t.keyPath = [ "collectionId", "parent" ], t;
	}();
	
	/**
	 * An object representing an association between a target and a document, or a
	 * sentinel row marking the last sequence number at which a document was used.
	 * Each document cached must have a corresponding sentinel row before lru
	 * garbage collection is enabled.
	 *
	 * The target associations and sentinel rows are co-located so that orphaned
	 * documents and their sequence numbers can be identified efficiently via a scan
	 * of this store.
	 */ function _u(t) {
	    t.createObjectStore(bu.store, {
	        keyPath: bu.keyPath
	    }).createIndex(bu.documentTargetsIndex, bu.documentTargetsKeyPath, {
	        unique: !0
	    }), 
	    // NOTE: This is unique only because the TargetId is the suffix.
	    t.createObjectStore(pu.store, {
	        keyPath: pu.keyPath
	    }).createIndex(pu.queryTargetsIndexName, pu.queryTargetsKeyPath, {
	        unique: !0
	    }), t.createObjectStore(gu.store);
	}
	
	var Iu = /** @class */ function() {
	    function t(
	    // Note: Previous schema versions included a field
	    // "lastProcessedDocumentChangeId". Don't use anymore.
	    /** The auto-generated client id assigned at client startup. */
	    t, 
	    /** The last time this state was updated. */
	    n, 
	    /** Whether the client's network connection is enabled. */
	    i, 
	    /** Whether this client is running in a foreground tab. */
	    e) {
	        this.clientId = t, this.updateTimeMs = n, this.networkEnabled = i, this.inForeground = e;
	    }
	    /** Name of the IndexedDb object store. */    return t.store = "clientMetadata", 
	    /** Keys are automatically assigned via the clientId properties. */
	    t.keyPath = "clientId", t;
	}();
	
	var Tu = [ au.store, fu.store, lu.store, wu.store, pu.store, cu.store, gu.store, bu.store ], Eu = tslib.__spreadArrays(Tu, [ Iu.store ]), Du = tslib.__spreadArrays(Eu, [ mu.store ]), Ru = tslib.__spreadArrays(Du, [ yu.store ]), Su = /** @class */ function() {
	    function t() {
	        /**
	         * An in-memory copy of the index entries we've already written since the SDK
	         * launched. Used to avoid re-writing the same entry repeatedly.
	         *
	         * This is *NOT* a complete cache of what's in persistence and so can never be used to
	         * satisfy reads.
	         */
	        this.Mw = new ji;
	    }
	    /**
	     * Adds a new entry to the collection parent index.
	     *
	     * Repeated calls for the same collectionPath should be avoided within a
	     * transaction as IndexedDbIndexManager only caches writes once a transaction
	     * has been committed.
	     */    return t.prototype.rc = function(t, n) {
	        var i = this;
	        if (Wn(n.length % 2 == 1, "Expected a collection path."), !this.Mw.has(n)) {
	            var e = n.B(), r = n.L();
	            t.Lh((function() {
	                // Add the collection to the in memory cache only if the transaction was
	                // successfully committed.
	                i.Mw.add(n);
	            }));
	            var u = {
	                collectionId: e,
	                parent: ki(r)
	            };
	            return Au(t).put(u);
	        }
	        return si.resolve();
	    }, t.prototype.Yh = function(t, n) {
	        var i = [], e = IDBKeyRange.bound([ n, "" ], [ Hn(n), "" ], 
	        /*lowerOpen=*/ !1, 
	        /*upperOpen=*/ !0);
	        return Au(t).aw(e).next((function(t) {
	            for (var e = 0, r = t; e < r.length; e++) {
	                var u = r[e];
	                // This collectionId guard shouldn't be necessary (and isn't as long
	                // as we're running in a real browser), but there's a bug in
	                // indexeddbshim that breaks our range in our tests running in node:
	                // https://github.com/axemclion/IndexedDBShim/issues/334
	                                if (u.collectionId !== n) break;
	                i.push(Fi(u.parent));
	            }
	            return i;
	        }));
	    }, t;
	}();
	
	// V2 is no longer usable (see comment at top of file)
	// Visible for testing
	/**
	 * Helper to get a typed SimpleDbStore for the collectionParents
	 * document store.
	 */
	function Au(t) {
	    return ku.nw(t, yu.store);
	}
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/** Serializer for values stored in the LocalStore. */ var Cu = /** @class */ function() {
	    function t(t) {
	        this.qw = t;
	    }
	    /** Decodes a remote document from storage locally to a Document. */    return t.prototype.Uw = function(t) {
	        if (t.document) return this.qw.Ae(t.document, !!t.hasCommittedMutations);
	        if (t.noDocument) {
	            var n = j.rt(t.noDocument.path), i = this.Bw(t.noDocument.readTime);
	            return new Lt(n, i, {
	                hasCommittedMutations: !!t.hasCommittedMutations
	            });
	        }
	        if (t.unknownDocument) {
	            n = j.rt(t.unknownDocument.path), i = this.Bw(t.unknownDocument.version);
	            return new Mt(n, i);
	        }
	        return Gn("Unexpected DbRemoteDocument");
	    }, 
	    /** Encodes a document for storage locally. */
	    t.prototype.Lw = function(t, n) {
	        var i = this.Fw(n), e = t.key.path.L().K();
	        if (t instanceof xt) {
	            var r = this.qw.Se(t), u = t.hasCommittedMutations;
	            return new wu(
	            /* unknownDocument= */ null, 
	            /* noDocument= */ null, r, u, i, e);
	        }
	        if (t instanceof Lt) {
	            var s = t.key.path.K(), o = this.Qw(t.version);
	            u = t.hasCommittedMutations;
	            return new wu(
	            /* unknownDocument= */ null, new du(s, o), 
	            /* document= */ null, u, i, e);
	        }
	        if (t instanceof Mt) {
	            s = t.key.path.K();
	            var h = this.Qw(t.version);
	            return new wu(new vu(s, h), 
	            /* noDocument= */ null, 
	            /* document= */ null, 
	            /* hasCommittedMutations= */ !0, i, e);
	        }
	        return Gn("Unexpected MaybeDocument");
	    }, t.prototype.Fw = function(t) {
	        var n = t.O();
	        return [ n.seconds, n.nanoseconds ];
	    }, t.prototype.jw = function(t) {
	        var n = new V(t[0], t[1]);
	        return k.P(n);
	    }, t.prototype.Qw = function(t) {
	        var n = t.O();
	        return new hu(n.seconds, n.nanoseconds);
	    }, t.prototype.Bw = function(t) {
	        var n = new V(t.seconds, t.nanoseconds);
	        return k.P(n);
	    }, 
	    /** Encodes a batch of mutations into a DbMutationBatch for local storage. */
	    t.prototype.gw = function(t, n) {
	        var i = this, e = n.baseMutations.map((function(t) {
	            return i.qw.Fe(t);
	        })), r = n.mutations.map((function(t) {
	            return i.qw.Fe(t);
	        }));
	        return new fu(t, n.batchId, n.gr.toMillis(), e, r);
	    }, 
	    /** Decodes a DbMutationBatch into a MutationBatch */
	    t.prototype.yw = function(t) {
	        var n = this, i = (t.baseMutations || []).map((function(t) {
	            return n.qw.Le(t);
	        })), e = t.mutations.map((function(t) {
	            return n.qw.Le(t);
	        })), r = V.fromMillis(t.localWriteTimeMs);
	        return new $n(t.batchId, r, i, e);
	    }, 
	    /*
	     * Encodes a set of document keys into an array of EncodedResourcePaths.
	     */
	    t.prototype.Gw = function(t) {
	        var n = [];
	        return t.forEach((function(t) {
	            n.push(ki(t.path));
	        })), n;
	    }, 
	    /** Decodes an array of EncodedResourcePaths into a set of document keys. */
	    t.prototype.Ww = function(t) {
	        for (var n = wn(), i = 0, e = t; i < e.length; i++) {
	            var r = e[i];
	            n = n.add(new j(Fi(r)));
	        }
	        return n;
	    }, 
	    /** Decodes a DbTarget into TargetData */
	    t.prototype.Rw = function(t) {
	        var n, i = this.Bw(t.readTime), e = void 0 !== t.lastLimboFreeSnapshotVersion ? this.Bw(t.lastLimboFreeSnapshotVersion) : k.MIN;
	        return n = void 0 !== t.query.documents ? this.qw.ze(t.query) : this.qw.Xe(t.query), 
	        new en(n, t.targetId, 0 /* Listen */ , t.lastListenSequenceNumber, i, e, K.fromBase64String(t.resumeToken));
	    }, 
	    /** Encodes TargetData into a DbTarget for storage locally. */
	    t.prototype.Sw = function(t) {
	        Wn(0 /* Listen */ === t.ti, "Only queries with purpose 0 may be stored, got " + t.ti);
	        var n, i = this.Qw(t.ni), e = this.Qw(t.lastLimboFreeSnapshotVersion);
	        n = t.target.Tn() ? this.qw.We(t.target) : this.qw.Ke(t.target);
	        // We can't store the resumeToken as a ByteString in IndexedDb, so we
	        // convert it to a base64 string for storage.
	                var r = t.resumeToken.toBase64();
	        // lastListenSequenceNumber is always 0 until we do real GC.
	                return new pu(t.targetId, t.target.canonicalId(), i, r, t.sequenceNumber, e, n);
	    }, t;
	}();
	
	/**
	 * A helper function for figuring out what kind of query has been stored.
	 */
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Pu = "Another tab has exclusive access to the persistence layer. To allow shared access, make sure to invoke `enablePersistence()` with `synchronizeTabs:true` in all tabs.", Vu = /** @class */ function(t) {
	    function i(n, i) {
	        var e = t.call(this) || this;
	        return e.Iw = n, e.fo = i, e;
	    }
	    return tslib.__extends(i, t), i;
	}(Ci), ku = /** @class */ function() {
	    function t(n, i, e, r, u, s, o, h) {
	        if (this.allowTabSynchronization = n, this.persistenceKey = i, this.clientId = e, 
	        this.zo = s, this.zw = h, this.Fc = !1, this.isPrimary = !1, this.networkEnabled = !0, 
	        /** Our window.unload handler, if registered. */
	        this.Kw = null, this.inForeground = !1, 
	        /** Our 'visibilitychange' listener if registered. */
	        this.Jw = null, 
	        /** The client metadata refresh task. */
	        this.Hw = null, 
	        /** The last time we garbage collected the client metadata object store. */
	        this.Yw = Number.NEGATIVE_INFINITY, 
	        /** A listener to notify on primary state changes. */
	        this.Xw = function(t) {
	            return Promise.resolve();
	        }, this.Cs = new Fu(this, u), this.$w = i + t.Zw, this.serializer = new Cu(o), this.document = r.document, 
	        this.Os = new Yr(this.Cs, this.serializer), this.Bh = new Su, this.qh = new nu(this.serializer, this.Bh), 
	        !r.window || !r.window.localStorage) throw new E(T.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
	        this.window = r.window, this.tm = this.window.localStorage;
	    }
	    return t.nw = function(t, n) {
	        if (t instanceof Vu) return jr.nw(t.Iw, n);
	        throw Gn("IndexedDbPersistence must use instances of IndexedDbTransaction");
	    }, t.nm = function(n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    if (!t.th()) throw new E(T.UNIMPLEMENTED, "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");
	                    return [ 4 /*yield*/ , (i = new t(n.allowTabSynchronization, n.persistenceKey, n.clientId, n.platform, n.im, n.zo, n.serializer, n.zw)).start() ];
	
	                  case 1:
	                    return e.sent(), [ 2 /*return*/ , i ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Attempt to start IndexedDb persistence.
	     *
	     * @return {Promise<void>} Whether persistence was enabled.
	     */
	    t.prototype.start = function() {
	        var t = this;
	        return Wn(!this.qu, "IndexedDbPersistence double-started!"), Wn(null !== this.window, "Expected 'window' to be defined"), 
	        jr.Xv(this.$w, su, new ou(this.serializer)).then((function(n) {
	            // NOTE: This is expected to fail sometimes (in the case of another tab already
	            // having the persistence lock), so it's the first thing we should do.
	            return t.em = n, t.rm();
	        })).then((function() {
	            return t.um(), t.sm(), t.om(), t.em.runTransaction("readonly", [ gu.store ], (function(t) {
	                return Zr(t);
	            }));
	        })).then((function(n) {
	            t.Oc = new ii(n, t.zw);
	        })).then((function() {
	            t.Fc = !0;
	        })).catch((function(n) {
	            return t.em && t.em.close(), Promise.reject(n);
	        }));
	    }, t.prototype.jc = function(t) {
	        var n = this;
	        return this.Xw = function(i) {
	            return tslib.__awaiter(n, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(n) {
	                    return this.qu ? [ 2 /*return*/ , t(i) ] : [ 2 /*return*/ ];
	                }));
	            }));
	        }, t(this.isPrimary);
	    }, t.prototype.xc = function(t) {
	        var n = this;
	        this.em.iw((function(i) {
	            return tslib.__awaiter(n, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(n) {
	                    switch (n.label) {
	                      case 0:
	                        return null !== i.newVersion ? [ 3 /*break*/ , 2 ] : [ 4 /*yield*/ , t() ];
	
	                      case 1:
	                        n.sent(), n.label = 2;
	
	                      case 2:
	                        return [ 2 /*return*/ ];
	                    }
	                }));
	            }));
	        }));
	    }, t.prototype.jo = function(t) {
	        var n = this;
	        this.networkEnabled !== t && (this.networkEnabled = t, 
	        // Schedule a primary lease refresh for immediate execution. The eventual
	        // lease update will be propagated via `primaryStateListener`.
	        this.zo.Qr((function() {
	            return tslib.__awaiter(n, void 0, void 0, (function() {
	                return tslib.__generator(this, (function(t) {
	                    switch (t.label) {
	                      case 0:
	                        return this.qu ? [ 4 /*yield*/ , this.rm() ] : [ 3 /*break*/ , 2 ];
	
	                      case 1:
	                        t.sent(), t.label = 2;
	
	                      case 2:
	                        return [ 2 /*return*/ ];
	                    }
	                }));
	            }));
	        })));
	    }, 
	    /**
	     * Updates the client metadata in IndexedDb and attempts to either obtain or
	     * extend the primary lease for the local client. Asynchronously notifies the
	     * primary state listener if the client either newly obtained or released its
	     * primary lease.
	     */
	    t.prototype.rm = function() {
	        var t = this;
	        return this.em.runTransaction("readwrite", Ru, (function(n) {
	            return Ou(n).put(new Iu(t.clientId, Date.now(), t.networkEnabled, t.inForeground)).next((function() {
	                if (t.isPrimary) return t.hm(n).next((function(n) {
	                    n || (t.isPrimary = !1, t.zo.Qr((function() {
	                        return t.Xw(!1);
	                    })));
	                }));
	            })).next((function() {
	                return t.cm(n);
	            })).next((function(i) {
	                return t.isPrimary && !i ? t.am(n).next((function() {
	                    return !1;
	                })) : !!i && t.fm(n).next((function() {
	                    return !0;
	                }));
	            }));
	        })).catch((function(n) {
	            if (!t.allowTabSynchronization) throw n;
	            return qn("IndexedDbPersistence", "Releasing owner lease after error during lease refresh", n), 
	            /* isPrimary= */ !1;
	        })).then((function(n) {
	            t.isPrimary !== n && t.zo.Qr((function() {
	                return t.Xw(n);
	            })), t.isPrimary = n;
	        }));
	    }, t.prototype.hm = function(t) {
	        var n = this;
	        return Nu(t).get(cu.key).next((function(t) {
	            return si.resolve(n.lm(t));
	        }));
	    }, t.prototype.dm = function(t) {
	        return Ou(t).delete(this.clientId);
	    }, 
	    /**
	     * If the garbage collection threshold has passed, prunes the
	     * RemoteDocumentChanges and the ClientMetadata store based on the last update
	     * time of all clients.
	     */
	    t.prototype.vm = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var n = this;
	            return tslib.__generator(this, (function(i) {
	                switch (i.label) {
	                  case 0:
	                    return !this.isPrimary || this.wm(this.Yw, 18e5) ? [ 3 /*break*/ , 2 ] : (this.Yw = Date.now(), 
	                    [ 4 /*yield*/ , this.runTransaction("maybeGarbageCollectMultiClientState", "readwrite-primary", (function(i) {
	                        var e = t.nw(i, Iu.store);
	                        return e.aw().next((function(t) {
	                            var i = n.mm(t, 18e5), r = t.filter((function(t) {
	                                return -1 === i.indexOf(t);
	                            }));
	                            // Delete metadata for clients that are no longer considered active.
	                            return si.forEach(r, (function(t) {
	                                return e.delete(t.clientId);
	                            })).next((function() {
	                                return r;
	                            }));
	                        }));
	                    })).catch((function() {
	                        // Ignore primary lease violations or any other type of error. The next
	                        // primary will run `maybeGarbageCollectMultiClientState()` again.
	                        // We don't use `ignoreIfPrimaryLeaseLoss()` since we don't want to depend
	                        // on LocalStore.
	                        return [];
	                    })) ]);
	
	                  case 1:
	                    // Delete potential leftover entries that may continue to mark the
	                    // inactive clients as zombied in LocalStorage.
	                    // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
	                    // the client atomically, but we can't. So we opt to delete the IndexedDb
	                    // entries first to avoid potentially reviving a zombied client.
	                    i.sent().forEach((function(t) {
	                        n.window.localStorage.removeItem(n.pm(t.clientId));
	                    })), i.label = 2;
	
	                  case 2:
	                    return [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Schedules a recurring timer to update the client metadata and to either
	     * extend or acquire the primary lease if the client is eligible.
	     */
	    t.prototype.om = function() {
	        var t = this;
	        this.Hw = this.zo.iu("client_metadata_refresh" /* ClientMetadataRefresh */ , 4e3, (function() {
	            return t.rm().then((function() {
	                return t.vm();
	            })).then((function() {
	                return t.om();
	            }));
	        }));
	    }, 
	    /** Checks whether `client` is the local client. */
	    t.prototype.lm = function(t) {
	        return !!t && t.ownerId === this.clientId;
	    }, 
	    /**
	     * Evaluate the state of all active clients and determine whether the local
	     * client is or can act as the holder of the primary lease. Returns whether
	     * the client is eligible for the lease, but does not actually acquire it.
	     * May return 'false' even if there is no active leaseholder and another
	     * (foreground) client should become leaseholder instead.
	     */
	    t.prototype.cm = function(t) {
	        var n = this;
	        return Nu(t).get(cu.key).next((function(i) {
	            // A client is eligible for the primary lease if:
	            // - its network is enabled and the client's tab is in the foreground.
	            // - its network is enabled and no other client's tab is in the
	            //   foreground.
	            // - every clients network is disabled and the client's tab is in the
	            //   foreground.
	            // - every clients network is disabled and no other client's tab is in
	            //   the foreground.
	            if (null !== i && n.wm(i.leaseTimestampMs, 5e3) && !n.bm(i.ownerId)) {
	                if (n.lm(i) && n.networkEnabled) return !0;
	                if (!n.lm(i)) {
	                    if (!i.allowTabSynchronization) 
	                    // Fail the `canActAsPrimary` check if the current leaseholder has
	                    // not opted into multi-tab synchronization. If this happens at
	                    // client startup, we reject the Promise returned by
	                    // `enablePersistence()` and the user can continue to use Firestore
	                    // with in-memory persistence.
	                    // If this fails during a lease refresh, we will instead block the
	                    // AsyncQueue from executing further operations. Note that this is
	                    // acceptable since mixing & matching different `synchronizeTabs`
	                    // settings is not supported.
	                    // TODO(b/114226234): Remove this check when `synchronizeTabs` can
	                    // no longer be turned off.
	                    throw new E(T.FAILED_PRECONDITION, Pu);
	                    return !1;
	                }
	            }
	            return !(!n.networkEnabled || !n.inForeground) || Ou(t).aw().next((function(t) {
	                return void 0 === n.mm(t, 5e3).find((function(t) {
	                    if (n.clientId !== t.clientId) {
	                        var i = !n.networkEnabled && t.networkEnabled, e = !n.inForeground && t.inForeground, r = n.networkEnabled === t.networkEnabled;
	                        if (i || e && r) return !0;
	                    }
	                    return !1;
	                }));
	            }));
	        })).next((function(t) {
	            return n.isPrimary !== t && qn("IndexedDbPersistence", "Client " + (t ? "is" : "is not") + " eligible for a primary lease."), 
	            t;
	        }));
	    }, t.prototype.shutdown = function() {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var t = this;
	            return tslib.__generator(this, (function(n) {
	                switch (n.label) {
	                  case 0:
	                    // The shutdown() operations are idempotent and can be called even when
	                    // start() aborted (e.g. because it couldn't acquire the persistence lease).
	                    return this.Fc = !1, this.gm(), this.Hw && (this.Hw.cancel(), this.Hw = null), this.ym(), 
	                    this._m(), [ 4 /*yield*/ , this.em.runTransaction("readwrite", [ cu.store, Iu.store ], (function(n) {
	                        return t.am(n).next((function() {
	                            return t.dm(n);
	                        }));
	                    })) ];
	
	                  case 1:
	                    return n.sent(), this.em.close(), 
	                    // Remove the entry marking the client as zombied from LocalStorage since
	                    // we successfully deleted its metadata from IndexedDb.
	                    this.Im(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, 
	    /**
	     * Returns clients that are not zombied and have an updateTime within the
	     * provided threshold.
	     */
	    t.prototype.mm = function(t, n) {
	        var i = this;
	        return t.filter((function(t) {
	            return i.wm(t.updateTimeMs, n) && !i.bm(t.clientId);
	        }));
	    }, t.prototype.Oo = function() {
	        var t = this;
	        return this.em.runTransaction("readonly", [ Iu.store ], (function(n) {
	            return Ou(n).aw().next((function(n) {
	                return t.mm(n, 18e5).map((function(t) {
	                    return t.clientId;
	                }));
	            }));
	        }));
	    }, t.clearPersistence = function(n) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var i;
	            return tslib.__generator(this, (function(e) {
	                switch (e.label) {
	                  case 0:
	                    return t.th() ? (i = n + t.Zw, [ 4 /*yield*/ , jr.delete(i) ]) : [ 2 /*return*/ , Promise.resolve() ];
	
	                  case 1:
	                    return e.sent(), [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, Object.defineProperty(t.prototype, "qu", {
	        get: function() {
	            return this.Fc;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.Vs = function(t) {
	        return Wn(this.qu, "Cannot initialize MutationQueue before persistence is started."), 
	        Gr.pw(t, this.serializer, this.Bh, this.Cs);
	    }, t.prototype.Fs = function() {
	        return Wn(this.qu, "Cannot initialize TargetCache before persistence is started."), 
	        this.Os;
	    }, t.prototype.Ns = function() {
	        return Wn(this.qu, "Cannot initialize RemoteDocumentCache before persistence is started."), 
	        this.qh;
	    }, t.prototype.js = function() {
	        return Wn(this.qu, "Cannot initialize IndexManager before persistence is started."), 
	        this.Bh;
	    }, t.prototype.runTransaction = function(t, n, i) {
	        var e = this;
	        qn("IndexedDbPersistence", "Starting transaction:", t);
	        var r, u = "readonly" === n ? "readonly" : "readwrite";
	        // Do all transactions as readwrite against all object stores, since we
	        // are the only reader/writer.
	        return this.em.runTransaction(u, Ru, (function(u) {
	            return r = new Vu(u, e.Oc.next()), "readwrite-primary" === n ? e.hm(u).next((function(t) {
	                return !!t || e.cm(u);
	            })).next((function(n) {
	                if (!n) throw Bn("Failed to obtain primary lease for action '" + t + "'."), e.isPrimary = !1, 
	                e.zo.Qr((function() {
	                    return e.Xw(!1);
	                })), new E(T.FAILED_PRECONDITION, Ai);
	                return i(r);
	            })).next((function(t) {
	                return e.fm(u).next((function() {
	                    return t;
	                }));
	            })) : e.Tm(u).next((function() {
	                return i(r);
	            }));
	        })).then((function(t) {
	            return r.Mh(), t;
	        }));
	    }, 
	    /**
	     * Verifies that the current tab is the primary leaseholder or alternatively
	     * that the leaseholder has opted into multi-tab synchronization.
	     */
	    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
	    // be turned off.
	    t.prototype.Tm = function(t) {
	        var n = this;
	        return Nu(t).get(cu.key).next((function(t) {
	            if (null !== t && n.wm(t.leaseTimestampMs, 5e3) && !n.bm(t.ownerId) && !n.lm(t) && !t.allowTabSynchronization) throw new E(T.FAILED_PRECONDITION, Pu);
	        }));
	    }, 
	    /**
	     * Obtains or extends the new primary lease for the local client. This
	     * method does not verify that the client is eligible for this lease.
	     */
	    t.prototype.fm = function(t) {
	        var n = new cu(this.clientId, this.allowTabSynchronization, Date.now());
	        return Nu(t).put(cu.key, n);
	    }, t.th = function() {
	        return jr.th();
	    }, 
	    /**
	     * Generates a string used as a prefix when storing data in IndexedDB and
	     * LocalStorage.
	     */
	    t.Em = function(t) {
	        // Use two different prefix formats:
	        //   * firestore / persistenceKey / projectID . databaseID / ...
	        //   * firestore / persistenceKey / projectID / ...
	        // projectIDs are DNS-compatible names and cannot contain dots
	        // so there's no danger of collisions.
	        var n = t.ae.projectId;
	        return t.ae.br || (n += "." + t.ae.database), "firestore/" + t.persistenceKey + "/" + n + "/";
	    }, 
	    /** Checks the primary lease and removes it if we are the current primary. */
	    t.prototype.am = function(t) {
	        var n = this, i = Nu(t);
	        return i.get(cu.key).next((function(t) {
	            return n.lm(t) ? (qn("IndexedDbPersistence", "Releasing primary lease."), i.delete(cu.key)) : si.resolve();
	        }));
	    }, 
	    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */
	    t.prototype.wm = function(t, n) {
	        var i = Date.now();
	        return !(t < i - n) && (!(t > i) || (Bn("Detected an update time that is in the future: " + t + " > " + i), 
	        !1));
	    }, t.prototype.um = function() {
	        var t = this;
	        null !== this.document && "function" == typeof this.document.addEventListener && (this.Jw = function() {
	            t.zo.Qr((function() {
	                return t.inForeground = "visible" === t.document.visibilityState, t.rm();
	            }));
	        }, this.document.addEventListener("visibilitychange", this.Jw), this.inForeground = "visible" === this.document.visibilityState);
	    }, t.prototype.ym = function() {
	        this.Jw && (Wn(null !== this.document && "function" == typeof this.document.addEventListener, "Expected 'document.addEventListener' to be a function"), 
	        this.document.removeEventListener("visibilitychange", this.Jw), this.Jw = null);
	    }, 
	    /**
	     * Attaches a window.unload handler that will synchronously write our
	     * clientId to a "zombie client id" location in LocalStorage. This can be used
	     * by tabs trying to acquire the primary lease to determine that the lease
	     * is no longer valid even if the timestamp is recent. This is particularly
	     * important for the refresh case (so the tab correctly re-acquires the
	     * primary lease). LocalStorage is used for this rather than IndexedDb because
	     * it is a synchronous API and so can be used reliably from  an unload
	     * handler.
	     */
	    t.prototype.sm = function() {
	        var t = this;
	        "function" == typeof this.window.addEventListener && (this.Kw = function() {
	            // Note: In theory, this should be scheduled on the AsyncQueue since it
	            // accesses internal state. We execute this code directly during shutdown
	            // to make sure it gets a chance to run.
	            t.gm(), t.zo.Qr((function() {
	                // Attempt graceful shutdown (including releasing our primary lease),
	                // but there's no guarantee it will complete.
	                return t.shutdown();
	            }));
	        }, this.window.addEventListener("unload", this.Kw));
	    }, t.prototype._m = function() {
	        this.Kw && (Wn("function" == typeof this.window.removeEventListener, "Expected 'window.removeEventListener' to be a function"), 
	        this.window.removeEventListener("unload", this.Kw), this.Kw = null);
	    }, 
	    /**
	     * Returns whether a client is "zombied" based on its LocalStorage entry.
	     * Clients become zombied when their tab closes without running all of the
	     * cleanup logic in `shutdown()`.
	     */
	    t.prototype.bm = function(t) {
	        try {
	            var n = null !== this.tm.getItem(this.pm(t));
	            return qn("IndexedDbPersistence", "Client '" + t + "' " + (n ? "is" : "is not") + " zombied in LocalStorage"), 
	            n;
	        } catch (t) {
	            // Gracefully handle if LocalStorage isn't working.
	            return Bn("IndexedDbPersistence", "Failed to get zombied client id.", t), !1;
	        }
	    }, 
	    /**
	     * Record client as zombied (a client that had its tab closed). Zombied
	     * clients are ignored during primary tab selection.
	     */
	    t.prototype.gm = function() {
	        try {
	            this.tm.setItem(this.pm(this.clientId), String(Date.now()));
	        } catch (t) {
	            // Gracefully handle if LocalStorage isn't available / working.
	            Bn("Failed to set zombie client id.", t);
	        }
	    }, 
	    /** Removes the zombied client entry if it exists. */
	    t.prototype.Im = function() {
	        try {
	            this.tm.removeItem(this.pm(this.clientId));
	        } catch (t) {
	            // Ignore
	        }
	    }, t.prototype.pm = function(t) {
	        return "firestore_zombie_" + this.persistenceKey + "_" + t;
	    }, 
	    /**
	     * The name of the main (and currently only) IndexedDB database. this name is
	     * appended to the prefix provided to the IndexedDbPersistence constructor.
	     */
	    t.Zw = "main", t;
	}();
	
	/**
	 * Oldest acceptable age in milliseconds for client metadata before the client
	 * is considered inactive and its associated data is garbage collected.
	 */
	/**
	 * Helper to get a typed SimpleDbStore for the primary client object store.
	 */
	function Nu(t) {
	    return t.store(cu.store);
	}
	
	/**
	 * Helper to get a typed SimpleDbStore for the client metadata object store.
	 */ function Ou(t) {
	    return t.store(Iu.store);
	}
	
	/** Provides LRU functionality for IndexedDB persistence. */ var Fu = /** @class */ function() {
	    function t(t, n) {
	        this.db = t, this.Bc = null, this.ju = new li(this, n);
	    }
	    return t.prototype.Wu = function(t) {
	        var n = this.Dm(t);
	        return this.db.Fs().kc(t).next((function(t) {
	            return n.next((function(n) {
	                return t + n;
	            }));
	        }));
	    }, t.prototype.Dm = function(t) {
	        var n = 0;
	        return this.Ku(t, (function(t) {
	            n++;
	        })).next((function() {
	            return n;
	        }));
	    }, t.prototype.$i = function(t, n) {
	        return this.db.Fs().$i(t, n);
	    }, t.prototype.Ku = function(t, n) {
	        return this.Rm(t, (function(t, i) {
	            return n(i);
	        }));
	    }, t.prototype.As = function(t) {
	        this.Bc = t;
	    }, t.prototype.es = function(t, n) {
	        return Uu(t, n);
	    }, t.prototype.us = function(t, n) {
	        return Uu(t, n);
	    }, t.prototype.Ju = function(t, n, i) {
	        return this.db.Fs().Ju(t, n, i);
	    }, t.prototype.lc = function(t, n) {
	        return Uu(t, n);
	    }, 
	    /**
	     * Returns true if anything would prevent this document from being garbage
	     * collected, given that the document in question is not present in any
	     * targets and has a sequence number less than or equal to the upper bound for
	     * the collection run.
	     */
	    t.prototype.Sm = function(t, n) {
	        return this.Bc.fs(n) ? si.resolve(!0) : function(t, n) {
	            var i = !1;
	            return Hr(t).ww((function(e) {
	                return Wr(t, e, n).next((function(t) {
	                    return t && (i = !0), si.resolve(!t);
	                }));
	            })).next((function() {
	                return i;
	            }));
	        }(t, n);
	    }, t.prototype.Hu = function(t, n) {
	        var i = this, e = this.db.Ns().Xs(), r = [], u = 0;
	        return this.Rm(t, (function(s, o) {
	            if (o <= n) {
	                var h = i.Sm(t, s).next((function(n) {
	                    if (!n) 
	                    // Our size accounting requires us to read all documents before
	                    // removing them.
	                    return u++, e.gs(t, s).next((function() {
	                        return e.bs(s), tu(t).delete([ 0, ki(s.path) ]);
	                    }));
	                }));
	                r.push(h);
	            }
	        })).next((function() {
	            return si.pu(r);
	        })).next((function() {
	            return e.apply(t);
	        })).next((function() {
	            return u;
	        }));
	    }, t.prototype.removeTarget = function(t, n) {
	        var i = n.ii(t.fo);
	        return this.db.Fs().do(t, i);
	    }, t.prototype.vo = function(t, n) {
	        return Uu(t, n);
	    }, 
	    /**
	     * Call provided function for each document in the cache that is 'orphaned'. Orphaned
	     * means not a part of any target, so the only entry in the target-document index for
	     * that document will be the sentinel row (targetId 0), which will also have the sequence
	     * number for the last time the document was accessed.
	     */
	    t.prototype.Rm = function(t, n) {
	        var i, e = tu(t), r = ii.Nr;
	        return e.vw({
	            index: bu.documentTargetsIndex
	        }, (function(t, e) {
	            var u = t[0], s = (t[1], e.path), o = e.sequenceNumber;
	            0 === u ? (
	            // if nextToReport is valid, report it, this is a new key so the
	            // last one must not be a member of any targets.
	            r !== ii.Nr && n(new j(Fi(i)), r), 
	            // set nextToReport to be this sequence number. It's the next one we
	            // might report, if we don't find any targets for this document.
	            // Note that the sequence number must be defined when the targetId
	            // is 0.
	            r = o, i = s) : 
	            // set nextToReport to be invalid, we know we don't need to report
	            // this one since we found a target for it.
	            r = ii.Nr;
	        })).next((function() {
	            // Since we report sequence numbers after getting to the next key, we
	            // need to check if the last key we iterated over was an orphaned
	            // document and report it.
	            r !== ii.Nr && n(new j(Fi(i)), r);
	        }));
	    }, t.prototype.Xu = function(t) {
	        return this.db.Ns().pc(t);
	    }, t;
	}();
	
	function Uu(t, n) {
	    return tu(t).put(
	    /**
	 * @return A value suitable for writing a sentinel row in the target-document
	 * store.
	 */
	    function(t, n) {
	        return new bu(0, ki(t.path), n);
	    }(n, t.fo));
	}
	
	/**
	 * Provides all components needed for IndexedDb persistence.
	 */ var ju = /** @class */ function() {
	    function t() {}
	    return t.prototype.initialize = function(t, n, i, e, s, o) {
	        return tslib.__awaiter(this, void 0, void 0, (function() {
	            var r, h, c, a;
	            return tslib.__generator(this, (function(u) {
	                switch (u.label) {
	                  case 0:
	                    if (Wn(o.zc, "IndexedDbPersistenceProvider can only provide durable persistence"), 
	                    Wn(!this.persistence, "configure() already called"), r = ku.Em(n), h = new Fn(n.ae, {
	                        de: jn.xt().de
	                    }), !Ri.th(i)) throw new E(T.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
	                    return this.Ml = o.synchronizeTabs ? new Ri(t, i, r, e, s) : new Si, c = this, [ 4 /*yield*/ , ku.nm({
	                        allowTabSynchronization: o.synchronizeTabs,
	                        persistenceKey: r,
	                        clientId: e,
	                        platform: i,
	                        zo: t,
	                        serializer: h,
	                        im: ai.Pu(o.cacheSizeBytes),
	                        zw: this.Ml
	                    }) ];
	
	                  case 1:
	                    return c.persistence = u.sent(), a = this.persistence.Cs.ju, this.Md = new fi(a, t), 
	                    [ 2 /*return*/ ];
	                }
	            }));
	        }));
	    }, t.prototype.Jc = function() {
	        return Wn(!!this.persistence, "initialize() not called"), this.persistence;
	    }, t.prototype.Hc = function() {
	        return Wn(!!this.Ml, "initialize() not called"), this.Ml;
	    }, t.prototype.Kc = function() {
	        return Wn(!!this.Md, "initialize() not called"), this.Md;
	    }, t.prototype.clearPersistence = function(t) {
	        var n = ku.Em(t);
	        return ku.clearPersistence(n);
	    }, t;
	}(), xu = {
	    Firestore: Ar,
	    GeoPoint: Ne,
	    Timestamp: V,
	    Blob: Te,
	    Transaction: Cr,
	    WriteBatch: Pr,
	    DocumentReference: Vr,
	    DocumentSnapshot: kr,
	    Query: Or,
	    QueryDocumentSnapshot: Nr,
	    QuerySnapshot: Fr,
	    CollectionReference: Ur,
	    FieldPath: Ee,
	    FieldValue: ke,
	    setLogLevel: fr.setLogLevel,
	    CACHE_SIZE_UNLIMITED: cr
	};
	
	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */ var Lu = /** @class */ function() {
	    function t() {}
	    return t.prototype.jf = function(t) {
	        // No-op.
	    }, t.prototype.shutdown = function() {
	        // No-op.
	    }, t;
	}(), Mu = /** @class */ function() {
	    function t() {
	        var t = this;
	        this.Am = function() {
	            return t.Cm();
	        }, this.Pm = function() {
	            return t.Vm();
	        }, this.km = [], this.Nm();
	    }
	    return t.prototype.jf = function(t) {
	        this.km.push(t);
	    }, t.prototype.shutdown = function() {
	        window.removeEventListener("online", this.Am), window.removeEventListener("offline", this.Pm);
	    }, t.prototype.Nm = function() {
	        window.addEventListener("online", this.Am), window.addEventListener("offline", this.Pm);
	    }, t.prototype.Cm = function() {
	        qn("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");
	        for (var t = 0, n = this.km; t < n.length; t++) {
	            (0, n[t])(0 /* AVAILABLE */);
	        }
	    }, t.prototype.Vm = function() {
	        qn("ConnectivityMonitor", "Network connectivity changed: UNAVAILABLE");
	        for (var t = 0, n = this.km; t < n.length; t++) {
	            (0, n[t])(1 /* UNAVAILABLE */);
	        }
	    }, 
	    // TODO(chenbrian): Consider passing in window either into this component or
	    // here for testing via FakeWindow.
	    /** Checks that all used attributes of window are available. */
	    t.th = function() {
	        return "undefined" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
	    }, t;
	}(), qu = /** @class */ function() {
	    function t(t) {
	        this.Om = t.Om, this.Fm = t.Fm;
	    }
	    return t.prototype.Ea = function(t) {
	        Wn(!this.Um, "Called onOpen on stream twice!"), this.Um = t;
	    }, t.prototype.ga = function(t) {
	        Wn(!this.jm, "Called onClose on stream twice!"), this.jm = t;
	    }, t.prototype.onMessage = function(t) {
	        Wn(!this.xm, "Called onMessage on stream twice!"), this.xm = t;
	    }, t.prototype.close = function() {
	        this.Fm();
	    }, t.prototype.send = function(t) {
	        this.Om(t);
	    }, t.prototype.Lm = function() {
	        Wn(void 0 !== this.Um, "Cannot call onOpen because no callback was set"), this.Um();
	    }, t.prototype.Mm = function(t) {
	        Wn(void 0 !== this.jm, "Cannot call onClose because no callback was set"), this.jm(t);
	    }, t.prototype.qm = function(t) {
	        Wn(void 0 !== this.xm, "Cannot call onMessage because no callback was set"), this.xm(t);
	    }, t;
	}(), Bu = {
	    BatchGetDocuments: "batchGet",
	    Commit: "commit"
	}, Qu = "gl-js/ fire/" + _, Gu = /** @class */ function() {
	    function t(t) {
	        this.ae = t.ae;
	        var n = t.ssl ? "https" : "http";
	        this.Bm = n + "://" + t.host, this.forceLongPolling = t.forceLongPolling;
	    }
	    /**
	     * Modifies the headers for a request, adding any authorization token if
	     * present and any additional headers for the request.
	     */    return t.prototype.Qm = function(t, n) {
	        if (n) for (var i in n.o) n.o.hasOwnProperty(i) && (t[i] = n.o[i]);
	        t["X-Goog-Api-Client"] = Qu;
	    }, t.prototype.Ua = function(t, n, e) {
	        var r = this, u = this.Gm(t);
	        return new Promise((function(s, o) {
	            var h = new webchannelWrapper.XhrIo;
	            h.listenOnce(webchannelWrapper.EventType.COMPLETE, (function() {
	                try {
	                    switch (h.getLastErrorCode()) {
	                      case webchannelWrapper.ErrorCode.NO_ERROR:
	                        var n = h.getResponseJson();
	                        qn("Connection", "XHR received:", JSON.stringify(n)), s(n);
	                        break;
	
	                      case webchannelWrapper.ErrorCode.TIMEOUT:
	                        qn("Connection", 'RPC "' + t + '" timed out'), o(new E(T.DEADLINE_EXCEEDED, "Request time out"));
	                        break;
	
	                      case webchannelWrapper.ErrorCode.HTTP_ERROR:
	                        var i = h.getStatus();
	                        if (qn("Connection", 'RPC "' + t + '" failed with status:', i, "response text:", h.getResponseText()), 
	                        i > 0) {
	                            var e = h.getResponseJson().error;
	                            if (e && e.status && e.message) {
	                                var r = (u = e.status, c = u.toLowerCase().replace("_", "-"), Object.values(T).indexOf(c) >= 0 ? c : T.UNKNOWN);
	                                o(new E(r, e.message));
	                            } else o(new E(T.UNKNOWN, "Server responded with status " + h.getStatus()));
	                        } else 
	                        // If we received an HTTP_ERROR but there's no status code,
	                        // it's most probably a connection issue
	                        qn("Connection", 'RPC "' + t + '" failed'), o(new E(T.UNAVAILABLE, "Connection failed."));
	                        break;
	
	                      default:
	                        Gn('RPC "' + t + '" failed with unanticipated webchannel error ' + h.getLastErrorCode() + ": " + h.getLastError() + ", giving up.");
	                    }
	                } finally {
	                    qn("Connection", 'RPC "' + t + '" completed.');
	                }
	                var u, c;
	            }));
	            // The database field is already encoded in URL. Specifying it again in
	            // the body is not necessary in production, and will cause duplicate field
	            // errors in the Firestore Emulator. Let's remove it.
	            var c = tslib.__assign({}, n);
	            delete c.database;
	            var a = JSON.stringify(c);
	            qn("Connection", "XHR sending: ", u + " " + a);
	            // Content-Type: text/plain will avoid preflight requests which might
	            // mess with CORS and redirects by proxies. If we add custom headers
	            // we will need to change this code to potentially use the
	            // $httpOverwrite parameter supported by ESF to avoid
	            // triggering preflight requests.
	            var f = {
	                "Content-Type": "text/plain"
	            };
	            r.Qm(f, e), h.send(u, "POST", a, f, 15);
	        }));
	    }, t.prototype.ja = function(t, n, i) {
	        // The REST API automatically aggregates all of the streamed results, so we
	        // can just use the normal invoke() method.
	        return this.Ua(t, n, i);
	    }, t.prototype.Da = function(t, n) {
	        var i = [ this.Bm, "/", "google.firestore.v1.Firestore", "/", t, "/channel" ], e = webchannelWrapper.createWebChannelTransport(), r = {
	            // Required for backend stickiness, routing behavior is based on this
	            // parameter.
	            httpSessionIdParam: "gsessionid",
	            initMessageHeaders: {},
	            messageUrlParams: {
	                // This param is used to improve routing and project isolation by the
	                // backend and must be included in every request.
	                database: "projects/" + this.ae.projectId + "/databases/" + this.ae.database
	            },
	            sendRawJson: !0,
	            supportsCrossDomainXhr: !0,
	            internalChannelParams: {
	                // Override the default timeout (randomized between 10-20 seconds) since
	                // a large write batch on a slow internet connection may take a long
	                // time to send to the backend. Rather than have WebChannel impose a
	                // tight timeout which could lead to infinite timeouts and retries, we
	                // set it very large (5-10 minutes) and rely on the browser's builtin
	                // timeouts to kick in if the request isn't working.
	                forwardChannelRequestTimeoutMs: 6e5
	            },
	            forceLongPolling: this.forceLongPolling
	        };
	        this.Qm(r.initMessageHeaders, n), 
	        // Sending the custom headers we just added to request.initMessageHeaders
	        // (Authorization, etc.) will trigger the browser to make a CORS preflight
	        // request because the XHR will no longer meet the criteria for a "simple"
	        // CORS request:
	        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
	        // Therefore to avoid the CORS preflight request (an extra network
	        // roundtrip), we use the httpHeadersOverwriteParam option to specify that
	        // the headers should instead be encoded into a special "$httpHeaders" query
	        // parameter, which is recognized by the webchannel backend. This is
	        // formally defined here:
	        // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32
	        // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request
	        // doesn't have an Origin header. So we have to exclude a few browser environments that are
	        // known to (sometimes) not include an Origin. See
	        // https://github.com/firebase/firebase-js-sdk/issues/1491.
	        util.isMobileCordova() || util.isReactNative() || util.isElectron() || util.isIE() || util.isUWP() || util.isBrowserExtension() || (r.httpHeadersOverwriteParam = "$httpHeaders");
	        var u = i.join("");
	        qn("Connection", "Creating WebChannel: " + u + " " + r);
	        var s = e.createWebChannel(u, r), o = !1, h = !1, w = new qu({
	            Om: function(t) {
	                h ? qn("Connection", "Not sending because WebChannel is closed:", t) : (o || (qn("Connection", "Opening WebChannel transport."), 
	                s.open(), o = !0), qn("Connection", "WebChannel sending:", t), s.send(t));
	            },
	            Fm: function() {
	                return s.close();
	            }
	        }), m = function(t, n) {
	            // TODO(dimond): closure typing seems broken because WebChannel does
	            // not implement goog.events.Listenable
	            s.listen(t, (function(t) {
	                try {
	                    n(t);
	                } catch (t) {
	                    setTimeout((function() {
	                        throw t;
	                    }), 0);
	                }
	            }));
	        };
	        // WebChannel supports sending the first message with the handshake - saving
	        // a network round trip. However, it will have to call send in the same
	        // JS event loop as open. In order to enforce this, we delay actually
	        // opening the WebChannel until send is called. Whether we have called
	        // open is tracked with this variable.
	                return m(webchannelWrapper.WebChannel.EventType.OPEN, (function() {
	            h || qn("Connection", "WebChannel transport opened.");
	        })), m(webchannelWrapper.WebChannel.EventType.CLOSE, (function() {
	            h || (h = !0, qn("Connection", "WebChannel transport closed"), w.Mm());
	        })), m(webchannelWrapper.WebChannel.EventType.ERROR, (function(t) {
	            h || (h = !0, qn("Connection", "WebChannel transport errored:", t), w.Mm(new E(T.UNAVAILABLE, "The operation could not be completed")));
	        })), m(webchannelWrapper.WebChannel.EventType.MESSAGE, (function(t) {
	            var n;
	            if (!h) {
	                var i = t.data[0];
	                Wn(!!i, "Got a webchannel message without data.");
	                // TODO(b/35143891): There is a bug in One Platform that caused errors
	                // (and only errors) to be wrapped in an extra array. To be forward
	                // compatible with the bug we need to check either condition. The latter
	                // can be removed once the fix has been rolled out.
	                // Use any because msgData.error is not typed.
	                var e = i, r = e.error || (null === (n = e[0]) || void 0 === n ? void 0 : n.error);
	                if (r) {
	                    qn("Connection", "WebChannel received error:", r);
	                    // error.status will be a string like 'OK' or 'NOT_FOUND'.
	                    var u = r.status, o = function(t) {
	                        // lookup by string
	                        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                        var n = Tt[t];
	                        if (void 0 !== n) return sn(n);
	                    }(u), c = r.message;
	                    void 0 === o && (o = T.INTERNAL, c = "Unknown error status: " + u + " with message " + r.message), 
	                    // Mark closed so no further events are propagated
	                    h = !0, w.Mm(new E(o, c)), s.close();
	                } else qn("Connection", "WebChannel received:", i), w.qm(i);
	            }
	        })), setTimeout((function() {
	            // Technically we could/should wait for the WebChannel opened event,
	            // but because we want to send the first message with the WebChannel
	            // handshake we pretend the channel opened here (asynchronously), and
	            // then delay the actual open until the first message is sent.
	            w.Lm();
	        }), 0), w;
	    }, 
	    // visible for testing
	    t.prototype.Gm = function(t) {
	        var n = Bu[t];
	        return Wn(void 0 !== n, "Unknown REST mapping for: " + t), this.Bm + "/v1/projects/" + this.ae.projectId + "/databases/" + this.ae.database + "/documents:" + n;
	    }, t;
	}(), Wu = window.crypto || window.__PRIVATE_msCrypto, zu = /** @class */ function() {
	    function t() {
	        this.de = !0, this.xa = "undefined" != typeof atob;
	    }
	    return Object.defineProperty(t.prototype, "document", {
	        get: function() {
	            return "undefined" != typeof document ? document : null;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), Object.defineProperty(t.prototype, "window", {
	        get: function() {
	            return "undefined" != typeof window ? window : null;
	        },
	        enumerable: !0,
	        configurable: !0
	    }), t.prototype.Bd = function(t) {
	        return Promise.resolve(new Gu(t));
	    }, t.prototype.Qd = function() {
	        return Mu.th() ? new Mu : new Lu;
	    }, t.prototype.Gd = function(t) {
	        return new Fn(t, {
	            de: !0
	        });
	    }, t.prototype.mr = function(t) {
	        return JSON.stringify(t);
	    }, t.prototype.atob = function(t) {
	        return atob(t);
	    }, t.prototype.btoa = function(t) {
	        return btoa(t);
	    }, t.prototype.randomBytes = function(t) {
	        if (t <= 0) return new Uint8Array;
	        var n = new Uint8Array(t);
	        return Wu.getRandomValues(n), n;
	    }, t;
	}();
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Registers the main Firestore build with the components framework.
	 * Persistence can be enabled via `firebase.firestore().enablePersistence()`.
	 */
	function Ku(t) {
	    !
	    /**
	 * Configures Firestore as part of the Firebase SDK by calling registerService.
	 *
	 * @param firebase The FirebaseNamespace to register Firestore with
	 * @param firestoreFactory A factory function that returns a new Firestore
	 *    instance.
	 */
	    function(t, n) {
	        t.INTERNAL.registerComponent(new component.Component("firestore", (function(t) {
	            var i = t.getProvider("app").getImmediate();
	            return n(i, t.getProvider("auth-internal"));
	        }), "PUBLIC" /* PUBLIC */).setServiceProps(tslib.__assign({}, xu)));
	    }(t, (function(t, n) {
	        return new fr(t, n, new ju);
	    })), t.registerVersion("@firebase/firestore", "1.13.1");
	}
	
	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * This code needs to run before Firestore is used. This can be achieved in
	 * several ways:
	 *   1) Through the JSCompiler compiling this code and then (automatically)
	 *      executing it before exporting the Firestore symbols.
	 *   2) Through importing this module first in a Firestore main module
	 */
	jn.wr(new zu), Ku(t);
	
	exports.__PRIVATE_registerFirestore = Ku;
	//# sourceMappingURL=index.cjs.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(319)))

/***/ },
/* 340 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {(function() {/*
	
	 Copyright The Closure Library Authors.
	 SPDX-License-Identifier: Apache-2.0
	*/
	'use strict';var h,goog=goog||{},l=this||self;function aa(){}
	function ba(b){var c=typeof b;if("object"==c)if(b){if(b instanceof Array)return"array";if(b instanceof Object)return c;var d=Object.prototype.toString.call(b);if("[object Window]"==d)return"object";if("[object Array]"==d||"number"==typeof b.length&&"undefined"!=typeof b.splice&&"undefined"!=typeof b.propertyIsEnumerable&&!b.propertyIsEnumerable("splice"))return"array";if("[object Function]"==d||"undefined"!=typeof b.call&&"undefined"!=typeof b.propertyIsEnumerable&&!b.propertyIsEnumerable("call"))return"function"}else return"null";
	else if("function"==c&&"undefined"==typeof b.call)return"object";return c}function ca(b){var c=ba(b);return"array"==c||"object"==c&&"number"==typeof b.length}function m(b){var c=typeof b;return"object"==c&&null!=b||"function"==c}function da(b){return Object.prototype.hasOwnProperty.call(b,ea)&&b[ea]||(b[ea]=++fa)}var ea="closure_uid_"+(1E9*Math.random()>>>0),fa=0;function ha(b,c,d){return b.call.apply(b.bind,arguments)}
	function ia(b,c,d){if(!b)throw Error();if(2<arguments.length){var e=Array.prototype.slice.call(arguments,2);return function(){var f=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(f,e);return b.apply(c,f)}}return function(){return b.apply(c,arguments)}}function p(b,c,d){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?p=ha:p=ia;return p.apply(null,arguments)}
	function ja(b,c){var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice();e.push.apply(e,arguments);return b.apply(this,e)}}var q=Date.now||function(){return+new Date};function r(b,c){function d(){}d.prototype=c.prototype;b.N=c.prototype;b.prototype=new d;b.prototype.constructor=b;b.vb=function(e,f,g){for(var k=Array(arguments.length-2),n=2;n<arguments.length;n++)k[n-2]=arguments[n];return c.prototype[f].apply(e,k)}};function t(){0!=ka&&(la[da(this)]=this);this.j=this.j;this.i=this.i}var ka=0,la={};t.prototype.j=!1;t.prototype.ka=function(){if(!this.j&&(this.j=!0,this.F(),0!=ka)){var b=da(this);if(0!=ka&&this.i&&0<this.i.length)throw Error(this+" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete la[b]}};t.prototype.F=function(){if(this.i)for(;this.i.length;)this.i.shift()()};var ma=Array.prototype.indexOf?function(b,c){return Array.prototype.indexOf.call(b,c,void 0)}:function(b,c){if("string"===typeof b)return"string"!==typeof c||1!=c.length?-1:b.indexOf(c,0);for(var d=0;d<b.length;d++)if(d in b&&b[d]===c)return d;return-1},na=Array.prototype.forEach?function(b,c,d){Array.prototype.forEach.call(b,c,d)}:function(b,c,d){for(var e=b.length,f="string"===typeof b?b.split(""):b,g=0;g<e;g++)g in f&&c.call(d,f[g],g,b)};
	function oa(b){a:{var c=pa;for(var d=b.length,e="string"===typeof b?b.split(""):b,f=0;f<d;f++)if(f in e&&c.call(void 0,e[f],f,b)){c=f;break a}c=-1}return 0>c?null:"string"===typeof b?b.charAt(c):b[c]}function qa(b){return Array.prototype.concat.apply([],arguments)}function ra(b){var c=b.length;if(0<c){for(var d=Array(c),e=0;e<c;e++)d[e]=b[e];return d}return[]};function sa(b){return/^[\s\xa0]*$/.test(b)}var ta=String.prototype.trim?function(b){return b.trim()}:function(b){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(b)[1]};function u(b,c){return-1!=b.indexOf(c)}function ua(b,c){return b<c?-1:b>c?1:0};var v;a:{var va=l.navigator;if(va){var wa=va.userAgent;if(wa){v=wa;break a}}v=""};function xa(b,c,d){for(const e in b)c.call(d,b[e],e,b)}function ya(b){const c={};for(const d in b)c[d]=b[d];return c}var za="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function Aa(b,c){let d,e;for(let f=1;f<arguments.length;f++){e=arguments[f];for(d in e)b[d]=e[d];for(let g=0;g<za.length;g++)d=za[g],Object.prototype.hasOwnProperty.call(e,d)&&(b[d]=e[d])}};function Ba(b){Ba[" "](b);return b}Ba[" "]=aa;function Ca(b,c){var d=Da;return Object.prototype.hasOwnProperty.call(d,b)?d[b]:d[b]=c(b)};var Ea=u(v,"Opera"),w=u(v,"Trident")||u(v,"MSIE"),Fa=u(v,"Edge"),Ga=Fa||w,Ha=u(v,"Gecko")&&!(u(v.toLowerCase(),"webkit")&&!u(v,"Edge"))&&!(u(v,"Trident")||u(v,"MSIE"))&&!u(v,"Edge"),Ia=u(v.toLowerCase(),"webkit")&&!u(v,"Edge");function Ja(){var b=l.document;return b?b.documentMode:void 0}var Ka;
	a:{var La="",Ma=function(){var b=v;if(Ha)return/rv:([^\);]+)(\)|;)/.exec(b);if(Fa)return/Edge\/([\d\.]+)/.exec(b);if(w)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(b);if(Ia)return/WebKit\/(\S+)/.exec(b);if(Ea)return/(?:Version)[ \/]?(\S+)/.exec(b)}();Ma&&(La=Ma?Ma[1]:"");if(w){var Na=Ja();if(null!=Na&&Na>parseFloat(La)){Ka=String(Na);break a}}Ka=La}var Da={};
	function Oa(b){return Ca(b,function(){{var c=0;const f=ta(String(Ka)).split("."),g=ta(String(b)).split("."),k=Math.max(f.length,g.length);for(let n=0;0==c&&n<k;n++){var d=f[n]||"",e=g[n]||"";do{d=/(\d*)(\D*)(.*)/.exec(d)||["","","",""];e=/(\d*)(\D*)(.*)/.exec(e)||["","","",""];if(0==d[0].length&&0==e[0].length)break;c=ua(0==d[1].length?0:parseInt(d[1],10),0==e[1].length?0:parseInt(e[1],10))||ua(0==d[2].length,0==e[2].length)||ua(d[2],e[2]);d=d[3];e=e[3]}while(0==c)}}return 0<=c})}var Pa;
	Pa=l.document&&w?Ja():void 0;var Qa=!w||9<=Number(Pa),Ra=w&&!Oa("9"),Sa=function(){if(!l.addEventListener||!Object.defineProperty)return!1;var b=!1,c=Object.defineProperty({},"passive",{get:function(){b=!0}});try{l.addEventListener("test",aa,c),l.removeEventListener("test",aa,c)}catch(d){}return b}();function x(b,c){this.type=b;this.a=this.target=c;this.defaultPrevented=!1}x.prototype.b=function(){this.defaultPrevented=!0};function y(b,c){x.call(this,b?b.type:"");this.relatedTarget=this.a=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType="";this.c=null;if(b){var d=this.type=b.type,e=b.changedTouches&&b.changedTouches.length?b.changedTouches[0]:null;this.target=b.target||b.srcElement;this.a=c;if(c=b.relatedTarget){if(Ha){a:{try{Ba(c.nodeName);var f=!0;break a}catch(g){}f=!1}f||(c=null)}}else"mouseover"==
	d?c=b.fromElement:"mouseout"==d&&(c=b.toElement);this.relatedTarget=c;e?(this.clientX=void 0!==e.clientX?e.clientX:e.pageX,this.clientY=void 0!==e.clientY?e.clientY:e.pageY,this.screenX=e.screenX||0,this.screenY=e.screenY||0):(this.clientX=void 0!==b.clientX?b.clientX:b.pageX,this.clientY=void 0!==b.clientY?b.clientY:b.pageY,this.screenX=b.screenX||0,this.screenY=b.screenY||0);this.button=b.button;this.key=b.key||"";this.ctrlKey=b.ctrlKey;this.altKey=b.altKey;this.shiftKey=b.shiftKey;this.metaKey=
	b.metaKey;this.pointerId=b.pointerId||0;this.pointerType="string"===typeof b.pointerType?b.pointerType:Ta[b.pointerType]||"";this.c=b;b.defaultPrevented&&this.b()}}r(y,x);var Ta={2:"touch",3:"pen",4:"mouse"};y.prototype.b=function(){y.N.b.call(this);var b=this.c;if(b.preventDefault)b.preventDefault();else if(b.returnValue=!1,Ra)try{if(b.ctrlKey||112<=b.keyCode&&123>=b.keyCode)b.keyCode=-1}catch(c){}};var z="closure_listenable_"+(1E6*Math.random()|0),Ua=0;function Va(b,c,d,e,f){this.listener=b;this.proxy=null;this.src=c;this.type=d;this.capture=!!e;this.da=f;this.key=++Ua;this.X=this.Z=!1}function Wa(b){b.X=!0;b.listener=null;b.proxy=null;b.src=null;b.da=null};function Xa(b){this.src=b;this.a={};this.b=0}Xa.prototype.add=function(b,c,d,e,f){var g=b.toString();b=this.a[g];b||(b=this.a[g]=[],this.b++);var k=Ya(b,c,e,f);-1<k?(c=b[k],d||(c.Z=!1)):(c=new Va(c,this.src,g,!!e,f),c.Z=d,b.push(c));return c};function Za(b,c){var d=c.type;if(d in b.a){var e=b.a[d],f=ma(e,c),g;(g=0<=f)&&Array.prototype.splice.call(e,f,1);g&&(Wa(c),0==b.a[d].length&&(delete b.a[d],b.b--))}}
	function Ya(b,c,d,e){for(var f=0;f<b.length;++f){var g=b[f];if(!g.X&&g.listener==c&&g.capture==!!d&&g.da==e)return f}return-1};var $a="closure_lm_"+(1E6*Math.random()|0),ab={},bb=0;function cb(b,c,d,e,f){if(e&&e.once)return db(b,c,d,e,f);if(Array.isArray(c)){for(var g=0;g<c.length;g++)cb(b,c[g],d,e,f);return null}d=eb(d);return b&&b[z]?b.ya(c,d,m(e)?!!e.capture:!!e,f):fb(b,c,d,!1,e,f)}
	function fb(b,c,d,e,f,g){if(!c)throw Error("Invalid event type");var k=m(f)?!!f.capture:!!f;if(k&&!Qa)return null;var n=gb(b);n||(b[$a]=n=new Xa(b));d=n.add(c,d,e,k,g);if(d.proxy)return d;e=hb();d.proxy=e;e.src=b;e.listener=d;if(b.addEventListener)Sa||(f=k),void 0===f&&(f=!1),b.addEventListener(c.toString(),e,f);else if(b.attachEvent)b.attachEvent(ib(c.toString()),e);else if(b.addListener&&b.removeListener)b.addListener(e);else throw Error("addEventListener and attachEvent are unavailable.");bb++;
	return d}function hb(){var b=jb,c=Qa?function(d){return b.call(c.src,c.listener,d)}:function(d){d=b.call(c.src,c.listener,d);if(!d)return d};return c}function db(b,c,d,e,f){if(Array.isArray(c)){for(var g=0;g<c.length;g++)db(b,c[g],d,e,f);return null}d=eb(d);return b&&b[z]?b.za(c,d,m(e)?!!e.capture:!!e,f):fb(b,c,d,!0,e,f)}
	function kb(b,c,d,e,f){if(Array.isArray(c))for(var g=0;g<c.length;g++)kb(b,c[g],d,e,f);else(e=m(e)?!!e.capture:!!e,d=eb(d),b&&b[z])?(b=b.c,c=String(c).toString(),c in b.a&&(g=b.a[c],d=Ya(g,d,e,f),-1<d&&(Wa(g[d]),Array.prototype.splice.call(g,d,1),0==g.length&&(delete b.a[c],b.b--)))):b&&(b=gb(b))&&(c=b.a[c.toString()],b=-1,c&&(b=Ya(c,d,e,f)),(d=-1<b?c[b]:null)&&lb(d))}
	function lb(b){if("number"!==typeof b&&b&&!b.X){var c=b.src;if(c&&c[z])Za(c.c,b);else{var d=b.type,e=b.proxy;c.removeEventListener?c.removeEventListener(d,e,b.capture):c.detachEvent?c.detachEvent(ib(d),e):c.addListener&&c.removeListener&&c.removeListener(e);bb--;(d=gb(c))?(Za(d,b),0==d.b&&(d.src=null,c[$a]=null)):Wa(b)}}}function ib(b){return b in ab?ab[b]:ab[b]="on"+b}function mb(b,c){var d=b.listener,e=b.da||b.src;b.Z&&lb(b);return d.call(e,c)}
	function jb(b,c){if(b.X)return!0;if(!Qa){if(!c)a:{c=["window","event"];for(var d=l,e=0;e<c.length;e++)if(d=d[c[e]],null==d){c=null;break a}c=d}c=new y(c,this);return mb(b,c)}return mb(b,new y(c,this))}function gb(b){b=b[$a];return b instanceof Xa?b:null}var nb="__closure_events_fn_"+(1E9*Math.random()>>>0);function eb(b){if("function"==ba(b))return b;b[nb]||(b[nb]=function(c){return b.handleEvent(c)});return b[nb]};function A(){t.call(this);this.c=new Xa(this);this.I=this;this.B=null}r(A,t);A.prototype[z]=!0;h=A.prototype;h.addEventListener=function(b,c,d,e){cb(this,b,c,d,e)};h.removeEventListener=function(b,c,d,e){kb(this,b,c,d,e)};
	h.dispatchEvent=function(b){var c,d=this.B;if(d)for(c=[];d;d=d.B)c.push(d);d=this.I;var e=b.type||b;if("string"===typeof b)b=new x(b,d);else if(b instanceof x)b.target=b.target||d;else{var f=b;b=new x(e,d);Aa(b,f)}f=!0;if(c)for(var g=c.length-1;0<=g;g--){var k=b.a=c[g];f=ob(k,e,!0,b)&&f}k=b.a=d;f=ob(k,e,!0,b)&&f;f=ob(k,e,!1,b)&&f;if(c)for(g=0;g<c.length;g++)k=b.a=c[g],f=ob(k,e,!1,b)&&f;return f};
	h.F=function(){A.N.F.call(this);if(this.c){var b=this.c,c=0,d;for(d in b.a){for(var e=b.a[d],f=0;f<e.length;f++)++c,Wa(e[f]);delete b.a[d];b.b--}}this.B=null};h.ya=function(b,c,d,e){return this.c.add(String(b),c,!1,d,e)};h.za=function(b,c,d,e){return this.c.add(String(b),c,!0,d,e)};
	function ob(b,c,d,e){c=b.c.a[String(c)];if(!c)return!0;c=c.concat();for(var f=!0,g=0;g<c.length;++g){var k=c[g];if(k&&!k.X&&k.capture==d){var n=k.listener,D=k.da||k.src;k.Z&&Za(b.c,k);f=!1!==n.call(D,e)&&f}}return f&&!e.defaultPrevented};var pb=l.JSON.stringify;function qb(){this.b=this.a=null}var tb=new class{constructor(b,c,d){this.f=d;this.c=b;this.g=c;this.b=0;this.a=null}get(){let b;0<this.b?(this.b--,b=this.a,this.a=b.next,b.next=null):b=this.c();return b}}(function(){return new sb},function(b){b.reset()},100);qb.prototype.add=function(b,c){var d=tb.get();d.set(b,c);this.b?this.b.next=d:this.a=d;this.b=d};function ub(){var b=vb,c=null;b.a&&(c=b.a,b.a=b.a.next,b.a||(b.b=null),c.next=null);return c}function sb(){this.next=this.b=this.a=null}
	sb.prototype.set=function(b,c){this.a=b;this.b=c;this.next=null};sb.prototype.reset=function(){this.next=this.b=this.a=null};try{(new self.OffscreenCanvas(0,0)).getContext("2d")}catch(b){};function wb(b){l.setTimeout(function(){throw b;},0)};function xb(b,c){yb||zb();Ab||(yb(),Ab=!0);vb.add(b,c)}var yb;function zb(){var b=l.Promise.resolve(void 0);yb=function(){b.then(Bb)}}var Ab=!1,vb=new qb;function Bb(){for(var b;b=ub();){try{b.a.call(b.b)}catch(d){wb(d)}var c=tb;c.g(b);c.b<c.f&&(c.b++,b.next=c.a,c.a=b)}Ab=!1};function Cb(b,c){A.call(this);this.b=b||1;this.a=c||l;this.f=p(this.cb,this);this.g=q()}r(Cb,A);h=Cb.prototype;h.ba=!1;h.L=null;h.cb=function(){if(this.ba){var b=q()-this.g;0<b&&b<.8*this.b?this.L=this.a.setTimeout(this.f,this.b-b):(this.L&&(this.a.clearTimeout(this.L),this.L=null),this.dispatchEvent("tick"),this.ba&&(Db(this),this.start()))}};h.start=function(){this.ba=!0;this.L||(this.L=this.a.setTimeout(this.f,this.b),this.g=q())};function Db(b){b.ba=!1;b.L&&(b.a.clearTimeout(b.L),b.L=null)}
	h.F=function(){Cb.N.F.call(this);Db(this);delete this.a};function Eb(b,c,d){if("function"==ba(b))d&&(b=p(b,d));else if(b&&"function"==typeof b.handleEvent)b=p(b.handleEvent,b);else throw Error("Invalid listener argument");return 2147483647<Number(c)?-1:l.setTimeout(b,c||0)};function Fb(b,c,d){t.call(this);this.f=null!=d?p(b,d):b;this.c=c;this.b=p(this.Ya,this);this.a=[]}r(Fb,t);h=Fb.prototype;h.ea=!1;h.U=null;h.Ra=function(b){this.a=arguments;this.U?this.ea=!0:Gb(this)};h.F=function(){Fb.N.F.call(this);this.U&&(l.clearTimeout(this.U),this.U=null,this.ea=!1,this.a=[])};h.Ya=function(){this.U=null;this.ea&&(this.ea=!1,Gb(this))};function Gb(b){b.U=Eb(b.b,b.c);b.f.apply(null,b.a)};function B(b){t.call(this);this.b=b;this.a={}}r(B,t);var Hb=[];function Ib(b,c,d,e){Array.isArray(d)||(d&&(Hb[0]=d.toString()),d=Hb);for(var f=0;f<d.length;f++){var g=cb(c,d[f],e||b.handleEvent,!1,b.b||b);if(!g)break;b.a[g.key]=g}}function Jb(b){xa(b.a,function(c,d){this.a.hasOwnProperty(d)&&lb(c)},b);b.a={}}B.prototype.F=function(){B.N.F.call(this);Jb(this)};B.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented");};function Kb(){};var Lb=null;function Mb(){return Lb=Lb||new A}function Nb(b){x.call(this,"serverreachability",b)}r(Nb,x);function C(b){var c=Mb();c.dispatchEvent(new Nb(c,b))}function Ob(b){x.call(this,"statevent",b)}r(Ob,x);function E(b){var c=Mb();c.dispatchEvent(new Ob(c,b))}function Pb(b){x.call(this,"timingevent",b)}r(Pb,x);function Qb(b,c){if("function"!=ba(b))throw Error("Fn must not be null and must be a function");return l.setTimeout(function(){b()},c)};var Rb={NO_ERROR:0,eb:1,lb:2,kb:3,hb:4,jb:5,mb:6,Ja:7,TIMEOUT:8,pb:9};var Sb={gb:"complete",tb:"success",Ka:"error",Ja:"abort",rb:"ready",sb:"readystatechange",TIMEOUT:"timeout",nb:"incrementaldata",qb:"progress",ib:"downloadprogress",ub:"uploadprogress"};function Tb(){}Tb.prototype.a=null;function Ub(b){var c;(c=b.a)||(c=b.a={});return c};function Vb(){}var F={OPEN:"a",fb:"b",Ka:"c",ob:"d"};function Wb(){x.call(this,"d")}r(Wb,x);function Xb(){x.call(this,"c")}r(Xb,x);var Yb;function Zb(){}r(Zb,Tb);Yb=new Zb;function G(b,c,d){this.g=b;this.W=c;this.V=d||1;this.H=new B(this);this.O=$b;b=Ga?125:void 0;this.P=new Cb(b);this.h=null;this.b=!1;this.l=this.C=this.f=this.D=this.v=this.R=this.i=null;this.j=[];this.a=null;this.A=0;this.c=this.w=null;this.o=-1;this.m=!1;this.I=0;this.B=null;this.s=this.S=this.G=!1}var $b=45E3,ac={},bc={};h=G.prototype;h.setTimeout=function(b){this.O=b};function cc(b,c,d){b.D=1;b.f=dc(H(c));b.l=d;b.G=!0;ec(b,null)}function fc(b,c,d,e){b.D=1;b.f=dc(H(c));b.l=null;b.G=d;ec(b,e)}
	function ec(b,c){b.v=q();I(b);b.C=H(b.f);gc(b.C,"t",b.V);b.A=0;b.a=b.g.$(b.g.Y()?c:null);0<b.I&&(b.B=new Fb(p(b.Ha,b,b.a),b.I));Ib(b.H,b.a,"readystatechange",b.ab);c=b.h?ya(b.h):{};b.l?(b.w||(b.w="POST"),c["Content-Type"]="application/x-www-form-urlencoded",b.a.ca(b.C,b.w,b.l,c)):(b.w="GET",b.a.ca(b.C,b.w,null,c));C(1)}h.ab=function(b){b=b.target;var c=this.B;c&&3==J(b)?c.Ra():this.Ha(b)};
	h.Ha=function(b){try{if(b==this.a)a:{var c=J(this.a),d=this.a.xa(),e=this.a.T();if(!(3>c||3==c&&!Ga&&!this.a.aa())){this.m||4!=c||7==d||(8==d||0>=e?C(3):C(2));hc(this);var f=this.a.T();this.o=f;var g=this.a.aa();if(this.b=200==f){if(this.S&&!this.s){b:{if(this.a){var k=K(this.a,"X-HTTP-Initial-Response");if(k&&!sa(k)){var n=k;break b}}n=null}if(n)this.s=!0,ic(this,n);else{this.b=!1;this.c=3;E(12);L(this);jc(this);break a}}this.G?(kc(this,c,g),Ga&&this.b&&3==c&&(Ib(this.H,this.P,"tick",this.$a),this.P.start())):
	ic(this,g);4==c&&L(this);this.b&&!this.m&&(4==c?this.g.ma(this):(this.b=!1,I(this)))}else 400==f&&0<g.indexOf("Unknown SID")?(this.c=3,E(12)):(this.c=0,E(13)),L(this),jc(this)}}}catch(D){}finally{}};function kc(b,c,d){for(var e=!0;!b.m&&b.A<d.length;){var f=lc(b,d);if(f==bc){4==c&&(b.c=4,E(14),e=!1);break}else if(f==ac){b.c=4;E(15);e=!1;break}else ic(b,f)}4==c&&0==d.length&&(b.c=1,E(16),e=!1);b.b=b.b&&e;e||(L(b),jc(b))}
	h.$a=function(){if(this.a){var b=J(this.a),c=this.a.aa();this.A<c.length&&(hc(this),kc(this,b,c),this.b&&4!=b&&I(this))}};function lc(b,c){var d=b.A,e=c.indexOf("\n",d);if(-1==e)return bc;d=Number(c.substring(d,e));if(isNaN(d))return ac;e+=1;if(e+d>c.length)return bc;c=c.substr(e,d);b.A=e+d;return c}h.cancel=function(){this.m=!0;L(this)};function I(b){b.R=q()+b.O;mc(b,b.O)}function mc(b,c){if(null!=b.i)throw Error("WatchDog timer not null");b.i=Qb(p(b.Za,b),c)}
	function hc(b){b.i&&(l.clearTimeout(b.i),b.i=null)}h.Za=function(){this.i=null;var b=q();0<=b-this.R?(2!=this.D&&(C(3),E(17)),L(this),this.c=2,jc(this)):mc(this,this.R-b)};function jc(b){b.g.Ba()||b.m||b.g.ma(b)}function L(b){hc(b);var c=b.B;c&&"function"==typeof c.ka&&c.ka();b.B=null;Db(b.P);Jb(b.H);b.a&&(c=b.a,b.a=null,c.abort(),c.ka())}function ic(b,c){try{b.g.Ea(b,c),C(4)}catch(d){}};function nc(b){if(b.J&&"function"==typeof b.J)return b.J();if("string"===typeof b)return b.split("");if(ca(b)){for(var c=[],d=b.length,e=0;e<d;e++)c.push(b[e]);return c}c=[];d=0;for(e in b)c[d++]=b[e];return b=c}
	function oc(b,c){if(b.forEach&&"function"==typeof b.forEach)b.forEach(c,void 0);else if(ca(b)||"string"===typeof b)na(b,c,void 0);else{if(b.K&&"function"==typeof b.K)var d=b.K();else if(b.J&&"function"==typeof b.J)d=void 0;else if(ca(b)||"string"===typeof b){d=[];for(var e=b.length,f=0;f<e;f++)d.push(f)}else for(f in d=[],e=0,b)d[e++]=f;e=nc(b);f=e.length;for(var g=0;g<f;g++)c.call(void 0,e[g],d&&d[g],b)}};function M(b,c){this.b={};this.a=[];this.c=0;var d=arguments.length;if(1<d){if(d%2)throw Error("Uneven number of arguments");for(var e=0;e<d;e+=2)this.set(arguments[e],arguments[e+1])}else if(b)if(b instanceof M)for(d=b.K(),e=0;e<d.length;e++)this.set(d[e],b.get(d[e]));else for(e in b)this.set(e,b[e])}h=M.prototype;h.J=function(){pc(this);for(var b=[],c=0;c<this.a.length;c++)b.push(this.b[this.a[c]]);return b};h.K=function(){pc(this);return this.a.concat()};
	function pc(b){if(b.c!=b.a.length){for(var c=0,d=0;c<b.a.length;){var e=b.a[c];N(b.b,e)&&(b.a[d++]=e);c++}b.a.length=d}if(b.c!=b.a.length){var f={};for(d=c=0;c<b.a.length;)e=b.a[c],N(f,e)||(b.a[d++]=e,f[e]=1),c++;b.a.length=d}}h.get=function(b,c){return N(this.b,b)?this.b[b]:c};h.set=function(b,c){N(this.b,b)||(this.c++,this.a.push(b));this.b[b]=c};h.forEach=function(b,c){for(var d=this.K(),e=0;e<d.length;e++){var f=d[e],g=this.get(f);b.call(c,g,f,this)}};
	function N(b,c){return Object.prototype.hasOwnProperty.call(b,c)};var qc=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/\\#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function rc(b,c){if(b){b=b.split("&");for(var d=0;d<b.length;d++){var e=b[d].indexOf("="),f=null;if(0<=e){var g=b[d].substring(0,e);f=b[d].substring(e+1)}else g=b[d];c(g,f?decodeURIComponent(f.replace(/\+/g," ")):"")}}};function O(b,c){this.c=this.j=this.f="";this.h=null;this.i=this.g="";this.a=!1;if(b instanceof O){this.a=void 0!==c?c:b.a;sc(this,b.f);this.j=b.j;tc(this,b.c);uc(this,b.h);this.g=b.g;c=b.b;var d=new P;d.c=c.c;c.a&&(d.a=new M(c.a),d.b=c.b);vc(this,d);this.i=b.i}else b&&(d=String(b).match(qc))?(this.a=!!c,sc(this,d[1]||"",!0),this.j=Q(d[2]||""),tc(this,d[3]||"",!0),uc(this,d[4]),this.g=Q(d[5]||"",!0),vc(this,d[6]||"",!0),this.i=Q(d[7]||"")):(this.a=!!c,this.b=new P(null,this.a))}
	O.prototype.toString=function(){var b=[],c=this.f;c&&b.push(R(c,wc,!0),":");var d=this.c;if(d||"file"==c)b.push("//"),(c=this.j)&&b.push(R(c,wc,!0),"@"),b.push(encodeURIComponent(String(d)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),d=this.h,null!=d&&b.push(":",String(d));if(d=this.g)this.c&&"/"!=d.charAt(0)&&b.push("/"),b.push(R(d,"/"==d.charAt(0)?xc:yc,!0));(d=this.b.toString())&&b.push("?",d);(d=this.i)&&b.push("#",R(d,zc));return b.join("")};function H(b){return new O(b)}
	function sc(b,c,d){b.f=d?Q(c,!0):c;b.f&&(b.f=b.f.replace(/:$/,""))}function tc(b,c,d){b.c=d?Q(c,!0):c}function uc(b,c){if(c){c=Number(c);if(isNaN(c)||0>c)throw Error("Bad port number "+c);b.h=c}else b.h=null}function vc(b,c,d){c instanceof P?(b.b=c,Ac(b.b,b.a)):(d||(c=R(c,Bc)),b.b=new P(c,b.a))}function S(b,c,d){b.b.set(c,d)}function gc(b,c,d){Array.isArray(d)||(d=[String(d)]);Cc(b.b,c,d)}
	function dc(b){S(b,"zx",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^q()).toString(36));return b}function Dc(b){return b instanceof O?H(b):new O(b,void 0)}function Ec(b,c,d,e){var f=new O(null,void 0);b&&sc(f,b);c&&tc(f,c);d&&uc(f,d);e&&(f.g=e);return f}function Q(b,c){return b?c?decodeURI(b.replace(/%25/g,"%2525")):decodeURIComponent(b):""}
	function R(b,c,d){return"string"===typeof b?(b=encodeURI(b).replace(c,Fc),d&&(b=b.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),b):null}function Fc(b){b=b.charCodeAt(0);return"%"+(b>>4&15).toString(16)+(b&15).toString(16)}var wc=/[#\/\?@]/g,yc=/[#\?:]/g,xc=/[#\?]/g,Bc=/[#\?@]/g,zc=/#/g;function P(b,c){this.b=this.a=null;this.c=b||null;this.f=!!c}function T(b){b.a||(b.a=new M,b.b=0,b.c&&rc(b.c,function(c,d){b.add(decodeURIComponent(c.replace(/\+/g," ")),d)}))}h=P.prototype;
	h.add=function(b,c){T(this);this.c=null;b=U(this,b);var d=this.a.get(b);d||this.a.set(b,d=[]);d.push(c);this.b+=1;return this};function Gc(b,c){T(b);c=U(b,c);N(b.a.b,c)&&(b.c=null,b.b-=b.a.get(c).length,b=b.a,N(b.b,c)&&(delete b.b[c],b.c--,b.a.length>2*b.c&&pc(b)))}function Hc(b,c){T(b);c=U(b,c);return N(b.a.b,c)}h.forEach=function(b,c){T(this);this.a.forEach(function(d,e){na(d,function(f){b.call(c,f,e,this)},this)},this)};
	h.K=function(){T(this);for(var b=this.a.J(),c=this.a.K(),d=[],e=0;e<c.length;e++)for(var f=b[e],g=0;g<f.length;g++)d.push(c[e]);return d};h.J=function(b){T(this);var c=[];if("string"===typeof b)Hc(this,b)&&(c=qa(c,this.a.get(U(this,b))));else{b=this.a.J();for(var d=0;d<b.length;d++)c=qa(c,b[d])}return c};h.set=function(b,c){T(this);this.c=null;b=U(this,b);Hc(this,b)&&(this.b-=this.a.get(b).length);this.a.set(b,[c]);this.b+=1;return this};
	h.get=function(b,c){if(!b)return c;b=this.J(b);return 0<b.length?String(b[0]):c};function Cc(b,c,d){Gc(b,c);0<d.length&&(b.c=null,b.a.set(U(b,c),ra(d)),b.b+=d.length)}h.toString=function(){if(this.c)return this.c;if(!this.a)return"";for(var b=[],c=this.a.K(),d=0;d<c.length;d++){var e=c[d],f=encodeURIComponent(String(e));e=this.J(e);for(var g=0;g<e.length;g++){var k=f;""!==e[g]&&(k+="="+encodeURIComponent(String(e[g])));b.push(k)}}return this.c=b.join("&")};
	function U(b,c){c=String(c);b.f&&(c=c.toLowerCase());return c}function Ac(b,c){c&&!b.f&&(T(b),b.c=null,b.a.forEach(function(d,e){var f=e.toLowerCase();e!=f&&(Gc(this,e),Cc(this,f,d))},b));b.f=c};function Jc(b){this.a=b;this.b=this.h=null;this.g=!1;this.i=null;this.c=-1;this.l=this.f=null}h=Jc.prototype;h.M=null;function Kc(b){var c=b.a.D.a;if(null!=c)E(4),c?(E(10),V(b.a,b,!1)):(E(11),V(b.a,b,!0));else{b.b=new G(b,void 0,void 0);b.b.h=b.h;c=b.a;c=Lc(c,c.Y()?b.f:null,b.i);E(4);gc(c,"TYPE","xmlhttp");var d=b.a.j,e=b.a.H;d&&e&&S(c,d,e);fc(b.b,c,!1,b.f)}}h.$=function(b){return this.a.$(b)};h.abort=function(){this.b&&(this.b.cancel(),this.b=null);this.c=-1};h.Ba=function(){return!1};
	h.Ea=function(b,c){this.c=b.o;if(0==this.M){if(!this.a.o&&(b=b.a)){var d=K(b,"X-Client-Wire-Protocol");this.l=d?d:null;this.a.j&&(b=K(b,"X-HTTP-Session-Id"))&&(this.a.H=b)}if(c){try{var e=this.a.ja.a.parse(c)}catch(f){c=this.a;c.m=this.c;W(c,2);return}this.f=e[0]}else c=this.a,c.m=this.c,W(c,2)}else if(1==this.M)if(this.g)E(6);else if("11111"==c){if(E(5),this.g=!0,!w||10<=Number(Pa))this.c=200,this.b.cancel(),E(11),V(this.a,this,!0)}else E(7),this.g=!1};
	h.ma=function(){this.c=this.b.o;if(this.b.b)0==this.M?(this.M=1,Kc(this)):1==this.M&&(this.g?(E(11),V(this.a,this,!0)):(E(10),V(this.a,this,!1)));else{0==this.M?E(8):1==this.M&&E(9);var b=this.a;b.m=this.c;W(b,2)}};h.Y=function(){return this.a.Y()};h.la=function(){return this.a.la()};function Mc(){this.a=this.b=null};function Nc(b,c){this.b=b;this.a=c};function Oc(b){this.g=b||Pc;l.PerformanceNavigationTiming?(b=l.performance.getEntriesByType("navigation"),b=0<b.length&&("hq"==b[0].nextHopProtocol||"h2"==b[0].nextHopProtocol)):b=!!(l.a&&l.a.Ca&&l.a.Ca()&&l.a.Ca().wb);this.f=b?this.g:1;this.a=null;1<this.f&&(this.a=new Set);this.b=null;this.c=[]}var Pc=10;function Qc(b,c){!b.a&&(u(c,"spdy")||u(c,"quic")||u(c,"h2"))&&(b.f=b.g,b.a=new Set,b.b&&(Rc(b,b.b),b.b=null))}function Sc(b){return b.b?!0:b.a?b.a.size>=b.f:!1}
	function Tc(b){return b.b?1:b.a?b.a.size:0}function Uc(b,c){return b.b?b.b==c:b.a?b.a.has(c):!1}function Rc(b,c){b.a?b.a.add(c):b.b=c}function Vc(b,c){b.b&&b.b==c?b.b=null:b.a&&b.a.has(c)&&b.a.delete(c)}Oc.prototype.cancel=function(){this.c=Wc(this);if(this.b)this.b.cancel(),this.b=null;else if(this.a&&0!==this.a.size){for(const b of this.a.values())b.cancel();this.a.clear()}};
	function Wc(b){if(null!=b.b)return b.c.concat(b.b.j);if(null!=b.a&&0!==b.a.size){let c=b.c;for(const d of b.a.values())c=c.concat(d.j);return c}return ra(b.c)};function Xc(){}Xc.prototype.stringify=function(b){return l.JSON.stringify(b,void 0)};Xc.prototype.parse=function(b){return l.JSON.parse(b,void 0)};function Yc(){this.a=new Xc}function Zc(b,c,d){var e=d||"";try{oc(b,function(f,g){var k=f;m(f)&&(k=pb(f));c.push(e+g+"="+encodeURIComponent(k))})}catch(f){throw c.push(e+"type="+encodeURIComponent("_badmap")),f;}};function $c(b,c){var d=new Kb;if(l.Image){var e=new Image;e.onload=ja(ad,d,e,"TestLoadImage: loaded",!0,c);e.onerror=ja(ad,d,e,"TestLoadImage: error",!1,c);e.onabort=ja(ad,d,e,"TestLoadImage: abort",!1,c);e.ontimeout=ja(ad,d,e,"TestLoadImage: timeout",!1,c);l.setTimeout(function(){if(e.ontimeout)e.ontimeout()},1E4);e.src=b}else c(!1)}function ad(b,c,d,e,f){try{c.onload=null,c.onerror=null,c.onabort=null,c.ontimeout=null,f(e)}catch(g){}};var bd=l.JSON.parse;function X(b){A.call(this);this.headers=new M;this.G=b||null;this.b=!1;this.s=this.a=null;this.A="";this.h=0;this.f="";this.g=this.w=this.l=this.v=!1;this.o=0;this.m=null;this.H=cd;this.C=this.D=!1}r(X,A);var cd="",dd=/^https?$/i,ed=["POST","PUT"];h=X.prototype;
	h.ca=function(b,c,d,e){if(this.a)throw Error("[goog.net.XhrIo] Object is active with another request="+this.A+"; newUri="+b);c=c?c.toUpperCase():"GET";this.A=b;this.f="";this.h=0;this.v=!1;this.b=!0;this.a=new XMLHttpRequest;this.s=this.G?Ub(this.G):Ub(Yb);this.a.onreadystatechange=p(this.Da,this);try{this.w=!0,this.a.open(c,String(b),!0),this.w=!1}catch(g){fd(this,g);return}b=d||"";var f=new M(this.headers);e&&oc(e,function(g,k){f.set(k,g)});e=oa(f.K());d=l.FormData&&b instanceof l.FormData;!(0<=
	ma(ed,c))||e||d||f.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8");f.forEach(function(g,k){this.a.setRequestHeader(k,g)},this);this.H&&(this.a.responseType=this.H);"withCredentials"in this.a&&this.a.withCredentials!==this.D&&(this.a.withCredentials=this.D);try{gd(this),0<this.o&&((this.C=hd(this.a))?(this.a.timeout=this.o,this.a.ontimeout=p(this.Aa,this)):this.m=Eb(this.Aa,this.o,this)),this.l=!0,this.a.send(b),this.l=!1}catch(g){fd(this,g)}};
	function hd(b){return w&&Oa(9)&&"number"===typeof b.timeout&&void 0!==b.ontimeout}function pa(b){return"content-type"==b.toLowerCase()}h.Aa=function(){"undefined"!=typeof goog&&this.a&&(this.f="Timed out after "+this.o+"ms, aborting",this.h=8,this.dispatchEvent("timeout"),this.abort(8))};function fd(b,c){b.b=!1;b.a&&(b.g=!0,b.a.abort(),b.g=!1);b.f=c;b.h=5;id(b);jd(b)}function id(b){b.v||(b.v=!0,b.dispatchEvent("complete"),b.dispatchEvent("error"))}
	h.abort=function(b){this.a&&this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1,this.h=b||7,this.dispatchEvent("complete"),this.dispatchEvent("abort"),jd(this))};h.F=function(){this.a&&(this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1),jd(this,!0));X.N.F.call(this)};h.Da=function(){this.j||(this.w||this.l||this.g?kd(this):this.Xa())};h.Xa=function(){kd(this)};
	function kd(b){if(b.b&&"undefined"!=typeof goog&&(!b.s[1]||4!=J(b)||2!=b.T()))if(b.l&&4==J(b))Eb(b.Da,0,b);else if(b.dispatchEvent("readystatechange"),4==J(b)){b.b=!1;try{var c=b.T();a:switch(c){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var d=!0;break a;default:d=!1}var e;if(!(e=d)){var f;if(f=0===c){var g=String(b.A).match(qc)[1]||null;if(!g&&l.self&&l.self.location){var k=l.self.location.protocol;g=k.substr(0,k.length-1)}f=!dd.test(g?g.toLowerCase():"")}e=f}if(e)b.dispatchEvent("complete"),
	b.dispatchEvent("success");else{b.h=6;try{var n=2<J(b)?b.a.statusText:""}catch(D){n=""}b.f=n+" ["+b.T()+"]";id(b)}}finally{jd(b)}}}function jd(b,c){if(b.a){gd(b);var d=b.a,e=b.s[0]?aa:null;b.a=null;b.s=null;c||b.dispatchEvent("ready");try{d.onreadystatechange=e}catch(f){}}}function gd(b){b.a&&b.C&&(b.a.ontimeout=null);b.m&&(l.clearTimeout(b.m),b.m=null)}function J(b){return b.a?b.a.readyState:0}h.T=function(){try{return 2<J(this)?this.a.status:-1}catch(b){return-1}};
	h.aa=function(){try{return this.a?this.a.responseText:""}catch(b){return""}};h.Sa=function(b){if(this.a){var c=this.a.responseText;b&&0==c.indexOf(b)&&(c=c.substring(b.length));return bd(c)}};function K(b,c){return b.a?b.a.getResponseHeader(c):null}h.xa=function(){return this.h};h.Va=function(){return"string"===typeof this.f?this.f:String(this.f)};function ld(b){var c="";xa(b,function(d,e){c+=e;c+=":";c+=d;c+="\r\n"});return c}function md(b,c,d){a:{for(e in d){var e=!1;break a}e=!0}if(e)return b;d=ld(d);if("string"===typeof b){c=encodeURIComponent(String(c));d=null!=d?"="+encodeURIComponent(String(d)):"";if(c+=d){d=b.indexOf("#");0>d&&(d=b.length);e=b.indexOf("?");if(0>e||e>d){e=d;var f=""}else f=b.substring(e+1,d);b=[b.substr(0,e),f,b.substr(d)];d=b[1];b[1]=c?d?d+"&"+c:c:d;b=b[0]+(b[1]?"?"+b[1]:"")+b[2]}return b}S(b,c,d);return b};function nd(b,c,d){return d&&d.internalChannelParams?d.internalChannelParams[b]||c:c}
	function od(b){this.f=[];this.D=new Mc;this.ga=this.oa=this.B=this.ha=this.a=this.H=this.j=this.V=this.g=this.I=this.i=null;this.Oa=this.P=0;this.Ma=nd("failFast",!1,b);this.ia=this.w=this.s=this.l=this.h=this.c=null;this.na=!0;this.m=this.qa=this.O=-1;this.S=this.v=this.A=0;this.La=nd("baseRetryDelayMs",5E3,b);this.Pa=nd("retryDelaySeedMs",1E4,b);this.Na=nd("forwardChannelMaxRetries",2,b);this.pa=nd("forwardChannelRequestTimeoutMs",2E4,b);this.Ia=b&&b.xb||void 0;this.C=void 0;this.R=b&&b.supportsCrossDomainXhr||
	!1;this.G="";this.b=new Oc(b&&b.concurrentRequestLimit);this.ja=new Yc;this.o=!0;(this.W=b&&b.fastHandshake||!1)&&!this.o&&(this.o=!0);b&&b.forceLongPolling&&(this.na=!1);this.fa=void 0}h=od.prototype;h.va=8;h.u=1;
	function pd(b){qd(b);if(3==b.u){var c=b.P++,d=H(b.B);S(d,"SID",b.G);S(d,"RID",c);S(d,"TYPE","terminate");rd(b,d);c=new G(b,c,void 0);c.D=2;c.f=dc(H(d));d=!1;l.navigator&&l.navigator.sendBeacon&&(d=l.navigator.sendBeacon(c.f.toString(),""));!d&&l.Image&&((new Image).src=c.f,d=!0);d||(c.a=c.g.$(null),c.a.ca(c.f));c.v=q();I(c)}sd(b)}
	function qd(b){b.w&&(b.w.abort(),b.w=null);b.a&&(b.a.cancel(),b.a=null);b.l&&(l.clearTimeout(b.l),b.l=null);td(b);b.b.cancel();b.h&&("number"===typeof b.h&&l.clearTimeout(b.h),b.h=null)}function ud(b,c){b.f.push(new Nc(b.Oa++,c));3==b.u&&vd(b)}h.Ba=function(){return 0==this.u};function vd(b){Sc(b.b)||b.h||(b.h=!0,xb(b.Ga,b),b.A=0)}
	function wd(b,c){if(Tc(b.b)>=b.b.f-(b.h?1:0))return!1;if(b.h)return b.f=c.j.concat(b.f),!0;if(1==b.u||2==b.u||b.A>=(b.Ma?0:b.Na))return!1;b.h=Qb(p(b.Ga,b,c),xd(b,b.A));b.A++;return!0}
	h.Ga=function(b){if(this.h)if(this.h=null,1==this.u){if(!b){this.P=Math.floor(1E5*Math.random());b=this.P++;var c=new G(this,b,void 0),d=this.i;this.I&&(d?(d=ya(d),Aa(d,this.I)):d=this.I);null===this.g&&(c.h=d);var e;if(this.W)a:{for(var f=e=0;f<this.f.length;f++){b:{var g=this.f[f];if("__data__"in g.a&&(g=g.a.__data__,"string"===typeof g)){g=g.length;break b}g=void 0}if(void 0===g)break;e+=g;if(4096<e){e=f;break a}if(4096===e||f===this.f.length-1){e=f+1;break a}}e=1E3}else e=1E3;e=yd(this,c,e);f=
	H(this.B);S(f,"RID",b);S(f,"CVER",22);this.o&&this.j&&S(f,"X-HTTP-Session-Id",this.j);rd(this,f);this.g&&d&&md(f,this.g,d);Rc(this.b,c);this.W?(S(f,"$req",e),S(f,"SID","null"),c.S=!0,cc(c,f,null)):cc(c,f,e);this.u=2}}else 3==this.u&&(b?zd(this,b):0==this.f.length||Sc(this.b)||zd(this))};
	function zd(b,c){var d;c?d=c.W:d=b.P++;var e=H(b.B);S(e,"SID",b.G);S(e,"RID",d);S(e,"AID",b.O);rd(b,e);b.g&&b.i&&md(e,b.g,b.i);d=new G(b,d,b.A+1);null===b.g&&(d.h=b.i);c&&(b.f=c.j.concat(b.f));c=yd(b,d,1E3);d.setTimeout(Math.round(.5*b.pa)+Math.round(.5*b.pa*Math.random()));Rc(b.b,d);cc(d,e,c)}function rd(b,c){b.c&&oc({},function(d,e){S(c,e,d)})}
	function yd(b,c,d){d=Math.min(b.f.length,d);var e=b.c?p(b.c.Qa,b.c,b):null;a:for(var f=b.f,g=-1;;){var k=["count="+d];-1==g?0<d?(g=f[0].b,k.push("ofs="+g)):g=0:k.push("ofs="+g);for(var n=!0,D=0;D<d;D++){var rb=f[D].b,Ic=f[D].a;rb-=g;if(0>rb)g=Math.max(0,f[D].b-100),n=!1;else try{Zc(Ic,k,"req"+rb+"_")}catch(Hd){e&&e(Ic)}}if(n){e=k.join("&");break a}}b=b.f.splice(0,d);c.j=b;return e}function Ad(b){b.a||b.l||(b.S=1,xb(b.Fa,b),b.v=0)}
	function Bd(b){if(b.a||b.l||3<=b.v)return!1;b.S++;b.l=Qb(p(b.Fa,b),xd(b,b.v));b.v++;return!0}h.Fa=function(){this.l=null;this.a=new G(this,"rpc",this.S);null===this.g&&(this.a.h=this.i);this.a.I=0;var b=H(this.oa);S(b,"RID","rpc");S(b,"SID",this.G);S(b,"CI",this.ia?"0":"1");S(b,"AID",this.O);rd(this,b);S(b,"TYPE","xmlhttp");this.g&&this.i&&md(b,this.g,this.i);this.C&&this.a.setTimeout(this.C);fc(this.a,b,!0,this.ga)};
	function V(b,c,d){var e=c.l;e&&Qc(b.b,e);b.ia=b.na&&d;b.m=c.c;b.B=Lc(b,null,b.ha);vd(b)}
	h.Ea=function(b,c){if(0!=this.u&&(this.a==b||Uc(this.b,b)))if(this.m=b.o,!b.s&&Uc(this.b,b)&&3==this.u){try{var d=this.ja.a.parse(c)}catch(g){d=null}if(Array.isArray(d)&&3==d.length){c=d;if(0==c[0])a:{if(!this.l){if(this.a)if(this.a.v+3E3<b.v)td(this),this.a.cancel(),this.a=null;else break a;Bd(this);E(18)}}else this.qa=c[1],0<this.qa-this.O&&37500>c[2]&&this.ia&&0==this.v&&!this.s&&(this.s=Qb(p(this.Wa,this),6E3));if(1>=Tc(this.b)&&this.fa){try{this.fa()}catch(g){}this.fa=void 0}}else W(this,11)}else if((b.s||
	this.a==b)&&td(this),!sa(c))for(c=d=this.ja.a.parse(c),d=0;d<c.length;d++){var e=c[d];this.O=e[0];e=e[1];if(2==this.u)if("c"==e[0]){this.G=e[1];this.ga=e[2];var f=e[3];null!=f&&(this.va=f);e=e[5];null!=e&&"number"===typeof e&&0<e&&(this.C=1.5*e);this.o&&(e=b.a)&&((f=K(e,"X-Client-Wire-Protocol"))&&Qc(this.b,f),this.j&&(e=K(e,"X-HTTP-Session-Id")))&&(this.H=e,S(this.B,this.j,e));this.u=3;this.c&&this.c.ua();e=b;this.oa=Lc(this,this.Y()?this.ga:null,this.ha);e.s?(Vc(this.b,e),(f=this.C)&&e.setTimeout(f),
	e.i&&(hc(e),I(e)),this.a=e):Ad(this);0<this.f.length&&vd(this)}else"stop"!=e[0]&&"close"!=e[0]||W(this,7);else 3==this.u&&("stop"==e[0]||"close"==e[0]?"stop"==e[0]?W(this,7):pd(this):"noop"!=e[0]&&this.c&&this.c.ta(e),this.v=0)}};h.Wa=function(){null!=this.s&&(this.s=null,this.a.cancel(),this.a=null,Bd(this),E(19))};function td(b){null!=b.s&&(l.clearTimeout(b.s),b.s=null)}
	h.ma=function(b){var c=null;if(this.a==b){td(this);this.a=null;var d=2}else if(Uc(this.b,b))c=b.j,Vc(this.b,b),d=1;else return;this.m=b.o;if(0!=this.u)if(b.b)if(1==d){c=b.l?b.l.length:0;b=q()-b.v;var e=this.A;d=Mb();d.dispatchEvent(new Pb(d,c,b,e));vd(this)}else Ad(this);else if(e=b.c,3==e||0==e&&0<this.m||!(1==d&&wd(this,b)||2==d&&Bd(this)))switch(c&&0<c.length&&(b=this.b,b.c=b.c.concat(c)),e){case 1:W(this,5);break;case 4:W(this,10);break;case 3:W(this,6);break;default:W(this,2)}};
	function xd(b,c){var d=b.La+Math.floor(Math.random()*b.Pa);b.la()||(d*=2);return d*c}function W(b,c){if(2==c){var d=null;b.c&&(d=null);var e=p(b.bb,b);d||(d=new O("//www.google.com/images/cleardot.gif"),l.location&&"http"==l.location.protocol||sc(d,"https"),dc(d));$c(d.toString(),e)}else E(2);b.u=0;b.c&&b.c.sa(c);sd(b);qd(b)}h.bb=function(b){b?E(2):E(1)};function sd(b){b.u=0;b.m=-1;if(b.c){if(0!=Wc(b.b).length||0!=b.f.length)b.b.c.length=0,ra(b.f),b.f.length=0;b.c.ra()}}
	function Lc(b,c,d){var e=Dc(d);if(""!=e.c)c&&tc(e,c+"."+e.c),uc(e,e.h);else{var f=l.location;e=Ec(f.protocol,c?c+"."+f.hostname:f.hostname,+f.port,d)}b.V&&xa(b.V,function(g,k){S(e,k,g)});c=b.j;d=b.H;c&&d&&S(e,c,d);S(e,"VER",b.va);rd(b,e);return e}h.$=function(b){if(b&&!this.R)throw Error("Can't create secondary domain capable XhrIo object.");b=new X(this.Ia);b.D=this.R;return b};h.la=function(){return!!this.c&&!0};h.Y=function(){return this.R};function Cd(){}h=Cd.prototype;h.ua=function(){};
	h.ta=function(){};h.sa=function(){};h.ra=function(){};h.Qa=function(){};function Dd(b){for(var c=arguments[0],d=1;d<arguments.length;d++){var e=arguments[d];if(0==e.lastIndexOf("/",0))c=e;else{var f;(f=""==c)||(f=c.length-1,f=0<=f&&c.indexOf("/",f)==f);f?c+=e:c+="/"+e}}return c};function Ed(){if(w&&!(10<=Number(Pa)))throw Error("Environmental error: no available transport.");}Ed.prototype.a=function(b,c){return new Y(b,c)};
	function Y(b,c){A.call(this);this.a=new od(c);this.g=b;this.m=Dd(this.g,"test");this.b=c&&c.messageUrlParams||null;b=c&&c.messageHeaders||null;c&&c.clientProtocolHeaderRequired&&(b?b["X-Client-Protocol"]="webchannel":b={"X-Client-Protocol":"webchannel"});this.a.i=b;b=c&&c.initMessageHeaders||null;c&&c.messageContentType&&(b?b["X-WebChannel-Content-Type"]=c.messageContentType:b={"X-WebChannel-Content-Type":c.messageContentType});c&&c.wa&&(b?b["X-WebChannel-Client-Profile"]=c.wa:b={"X-WebChannel-Client-Profile":c.wa});
	this.a.I=b;(b=c&&c.httpHeadersOverwriteParam)&&!sa(b)&&(this.a.g=b);this.l=c&&c.supportsCrossDomainXhr||!1;this.h=c&&c.sendRawJson||!1;(c=c&&c.httpSessionIdParam)&&!sa(c)&&(this.a.j=c,b=this.b,null!==b&&c in b&&(b=this.b,c in b&&delete b[c]));this.f=new Z(this)}r(Y,A);h=Y.prototype;h.addEventListener=function(b,c,d,e){Y.N.addEventListener.call(this,b,c,d,e)};h.removeEventListener=function(b,c,d,e){Y.N.removeEventListener.call(this,b,c,d,e)};
	h.Ta=function(){this.a.c=this.f;this.l&&(this.a.R=!0);var b=this.a,c=this.m,d=this.g,e=this.b||void 0;E(0);b.ha=d;b.V=e||{};b.o&&(b.D.b=[],b.D.a=!1);b.w=new Jc(b);null===b.g&&(b.w.h=b.i);d=c;b.g&&b.i&&(d=md(c,b.g,b.i));b=b.w;b.i=d;c=Lc(b.a,null,b.i);E(3);d=b.a.D.b;null!=d?(b.f=d[0],b.M=1,Kc(b)):(gc(c,"MODE","init"),!b.a.o&&b.a.j&&gc(c,"X-HTTP-Session-Id",b.a.j),b.b=new G(b,void 0,void 0),b.b.h=b.h,fc(b.b,c,!1,null),b.M=0)};h.close=function(){pd(this.a)};
	h.Ua=function(b){if("string"===typeof b){var c={};c.__data__=b;ud(this.a,c)}else this.h?(c={},c.__data__=pb(b),ud(this.a,c)):ud(this.a,b)};h.F=function(){this.a.c=null;delete this.f;pd(this.a);delete this.a;Y.N.F.call(this)};function Fd(b){Wb.call(this);var c=b.__sm__;if(c){a:{for(const d in c){b=d;break a}b=void 0}(this.c=b)?(b=this.c,this.data=null!==c&&b in c?c[b]:void 0):this.data=c}else this.data=b}r(Fd,Wb);function Gd(){Xb.call(this);this.status=1}r(Gd,Xb);function Z(b){this.a=b}r(Z,Cd);
	Z.prototype.ua=function(){this.a.dispatchEvent("a")};Z.prototype.ta=function(b){this.a.dispatchEvent(new Fd(b))};Z.prototype.sa=function(b){this.a.dispatchEvent(new Gd(b))};Z.prototype.ra=function(){this.a.dispatchEvent("b")};/*
	
	 Copyright 2017 Google Inc.
	
	 Licensed under the Apache License, Version 2.0 (the "License");
	 you may not use this file except in compliance with the License.
	 You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	 Unless required by applicable law or agreed to in writing, software
	 distributed under the License is distributed on an "AS IS" BASIS,
	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 See the License for the specific language governing permissions and
	 limitations under the License.
	*/
	Ed.prototype.createWebChannel=Ed.prototype.a;Y.prototype.send=Y.prototype.Ua;Y.prototype.open=Y.prototype.Ta;Y.prototype.close=Y.prototype.close;Rb.NO_ERROR=0;Rb.TIMEOUT=8;Rb.HTTP_ERROR=6;Sb.COMPLETE="complete";Vb.EventType=F;F.OPEN="a";F.CLOSE="b";F.ERROR="c";F.MESSAGE="d";A.prototype.listen=A.prototype.ya;X.prototype.listenOnce=X.prototype.za;X.prototype.getLastError=X.prototype.Va;X.prototype.getLastErrorCode=X.prototype.xa;X.prototype.getStatus=X.prototype.T;X.prototype.getResponseJson=X.prototype.Sa;
	X.prototype.getResponseText=X.prototype.aa;X.prototype.send=X.prototype.ca;module.exports={createWebChannelTransport:function(){return new Ed},ErrorCode:Rb,EventType:Sb,WebChannel:Vb,XhrIo:X};}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {})
	//# sourceMappingURL=index.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 341 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	// Use the fastest means possible to execute a task in its own turn, with
	// priority over other events including IO, animation, reflow, and redraw
	// events in browsers.
	//
	// An exception thrown by a task will permanently interrupt the processing of
	// subsequent tasks. The higher level `asap` function ensures that if an
	// exception is thrown by a task, that the task queue will continue flushing as
	// soon as possible, but if you use `rawAsap` directly, you are responsible to
	// either ensure that no exceptions are thrown from your task, or to manually
	// call `rawAsap.requestFlush` if an exception is thrown.
	module.exports = rawAsap;
	function rawAsap(task) {
	    if (!queue.length) {
	        requestFlush();
	        flushing = true;
	    }
	    // Equivalent to push, but avoids a function call.
	    queue[queue.length] = task;
	}
	
	var queue = [];
	// Once a flush has been requested, no further calls to `requestFlush` are
	// necessary until the next `flush` completes.
	var flushing = false;
	// `requestFlush` is an implementation-specific method that attempts to kick
	// off a `flush` event as quickly as possible. `flush` will attempt to exhaust
	// the event queue before yielding to the browser's own event loop.
	var requestFlush;
	// The position of the next task to execute in the task queue. This is
	// preserved between calls to `flush` so that it can be resumed if
	// a task throws an exception.
	var index = 0;
	// If a task schedules additional tasks recursively, the task queue can grow
	// unbounded. To prevent memory exhaustion, the task queue will periodically
	// truncate already-completed tasks.
	var capacity = 1024;
	
	// The flush function processes all tasks that have been scheduled with
	// `rawAsap` unless and until one of those tasks throws an exception.
	// If a task throws an exception, `flush` ensures that its state will remain
	// consistent and will resume where it left off when called again.
	// However, `flush` does not make any arrangements to be called again if an
	// exception is thrown.
	function flush() {
	    while (index < queue.length) {
	        var currentIndex = index;
	        // Advance the index before calling the task. This ensures that we will
	        // begin flushing on the next task the task throws an error.
	        index = index + 1;
	        queue[currentIndex].call();
	        // Prevent leaking memory for long chains of recursive calls to `asap`.
	        // If we call `asap` within tasks scheduled by `asap`, the queue will
	        // grow, but to avoid an O(n) walk for every task we execute, we don't
	        // shift tasks off the queue after they have been executed.
	        // Instead, we periodically shift 1024 tasks off the queue.
	        if (index > capacity) {
	            // Manually shift all values starting at the index back to the
	            // beginning of the queue.
	            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
	                queue[scan] = queue[scan + index];
	            }
	            queue.length -= index;
	            index = 0;
	        }
	    }
	    queue.length = 0;
	    index = 0;
	    flushing = false;
	}
	
	// `requestFlush` is implemented using a strategy based on data collected from
	// every available SauceLabs Selenium web driver worker at time of writing.
	// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593
	
	// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
	// have WebKitMutationObserver but not un-prefixed MutationObserver.
	// Must use `global` or `self` instead of `window` to work in both frames and web
	// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.
	
	/* globals self */
	var scope = typeof global !== "undefined" ? global : self;
	var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
	
	// MutationObservers are desirable because they have high priority and work
	// reliably everywhere they are implemented.
	// They are implemented in all modern browsers.
	//
	// - Android 4-4.3
	// - Chrome 26-34
	// - Firefox 14-29
	// - Internet Explorer 11
	// - iPad Safari 6-7.1
	// - iPhone Safari 7-7.1
	// - Safari 6-7
	if (typeof BrowserMutationObserver === "function") {
	    requestFlush = makeRequestCallFromMutationObserver(flush);
	
	// MessageChannels are desirable because they give direct access to the HTML
	// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
	// 11-12, and in web workers in many engines.
	// Although message channels yield to any queued rendering and IO tasks, they
	// would be better than imposing the 4ms delay of timers.
	// However, they do not work reliably in Internet Explorer or Safari.
	
	// Internet Explorer 10 is the only browser that has setImmediate but does
	// not have MutationObservers.
	// Although setImmediate yields to the browser's renderer, it would be
	// preferrable to falling back to setTimeout since it does not have
	// the minimum 4ms penalty.
	// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
	// Desktop to a lesser extent) that renders both setImmediate and
	// MessageChannel useless for the purposes of ASAP.
	// https://github.com/kriskowal/q/issues/396
	
	// Timers are implemented universally.
	// We fall back to timers in workers in most engines, and in foreground
	// contexts in the following browsers.
	// However, note that even this simple case requires nuances to operate in a
	// broad spectrum of browsers.
	//
	// - Firefox 3-13
	// - Internet Explorer 6-9
	// - iPad Safari 4.3
	// - Lynx 2.8.7
	} else {
	    requestFlush = makeRequestCallFromTimer(flush);
	}
	
	// `requestFlush` requests that the high priority event queue be flushed as
	// soon as possible.
	// This is useful to prevent an error thrown in a task from stalling the event
	// queue if the exception handled by Node.js’s
	// `process.on("uncaughtException")` or by a domain.
	rawAsap.requestFlush = requestFlush;
	
	// To request a high priority event, we induce a mutation observer by toggling
	// the text of a text node between "1" and "-1".
	function makeRequestCallFromMutationObserver(callback) {
	    var toggle = 1;
	    var observer = new BrowserMutationObserver(callback);
	    var node = document.createTextNode("");
	    observer.observe(node, {characterData: true});
	    return function requestCall() {
	        toggle = -toggle;
	        node.data = toggle;
	    };
	}
	
	// The message channel technique was discovered by Malte Ubl and was the
	// original foundation for this library.
	// http://www.nonblocking.io/2011/06/windownexttick.html
	
	// Safari 6.0.5 (at least) intermittently fails to create message ports on a
	// page's first load. Thankfully, this version of Safari supports
	// MutationObservers, so we don't need to fall back in that case.
	
	// function makeRequestCallFromMessageChannel(callback) {
	//     var channel = new MessageChannel();
	//     channel.port1.onmessage = callback;
	//     return function requestCall() {
	//         channel.port2.postMessage(0);
	//     };
	// }
	
	// For reasons explained above, we are also unable to use `setImmediate`
	// under any circumstances.
	// Even if we were, there is another bug in Internet Explorer 10.
	// It is not sufficient to assign `setImmediate` to `requestFlush` because
	// `setImmediate` must be called *by name* and therefore must be wrapped in a
	// closure.
	// Never forget.
	
	// function makeRequestCallFromSetImmediate(callback) {
	//     return function requestCall() {
	//         setImmediate(callback);
	//     };
	// }
	
	// Safari 6.0 has a problem where timers will get lost while the user is
	// scrolling. This problem does not impact ASAP because Safari 6.0 supports
	// mutation observers, so that implementation is used instead.
	// However, if we ever elect to use timers in Safari, the prevalent work-around
	// is to add a scroll event listener that calls for a flush.
	
	// `setTimeout` does not call the passed callback if the delay is less than
	// approximately 7 in web workers in Firefox 8 through 18, and sometimes not
	// even then.
	
	function makeRequestCallFromTimer(callback) {
	    return function requestCall() {
	        // We dispatch a timeout with a specified delay of 0 for engines that
	        // can reliably accommodate that request. This will usually be snapped
	        // to a 4 milisecond delay, but once we're flushing, there's no delay
	        // between events.
	        var timeoutHandle = setTimeout(handleTimer, 0);
	        // However, since this timer gets frequently dropped in Firefox
	        // workers, we enlist an interval handle that will try to fire
	        // an event 20 times per second until it succeeds.
	        var intervalHandle = setInterval(handleTimer, 50);
	
	        function handleTimer() {
	            // Whichever timer succeeds will cancel both timers and
	            // execute the callback.
	            clearTimeout(timeoutHandle);
	            clearInterval(intervalHandle);
	            callback();
	        }
	    };
	}
	
	// This is for `asap.js` only.
	// Its name will be periodically randomized to break any code that depends on
	// its existence.
	rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;
	
	// ASAP was originally a nextTick shim included in Q. This was factored out
	// into this ASAP package. It was later adapted to RSVP which made further
	// amendments. These decisions, particularly to marginalize MessageChannel and
	// to capture the MutationObserver implementation in a closure, were integrated
	// back into ASAP proper.
	// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _Navbar = __webpack_require__(347);
	
	var _Navbar2 = _interopRequireDefault(_Navbar);
	
	var _Dashboard = __webpack_require__(345);
	
	var _Dashboard2 = _interopRequireDefault(_Dashboard);
	
	var _Projectdetail = __webpack_require__(352);
	
	var _Projectdetail2 = _interopRequireDefault(_Projectdetail);
	
	var _SignIn = __webpack_require__(343);
	
	var _SignIn2 = _interopRequireDefault(_SignIn);
	
	var _SignUp = __webpack_require__(344);
	
	var _SignUp2 = _interopRequireDefault(_SignUp);
	
	var _CreateProject = __webpack_require__(350);
	
	var _CreateProject2 = _interopRequireDefault(_CreateProject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var App = function (_Component) {
	  _inherits(App, _Component);
	
	  function App() {
	    _classCallCheck(this, App);
	
	    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
	  }
	
	  _createClass(App, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          'div',
	          { className: 'App' },
	          _react2.default.createElement(_Navbar2.default, null),
	          _react2.default.createElement(
	            _reactRouterDom.Switch,
	            null,
	            _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/', component: _Dashboard2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/project/:id', component: _Projectdetail2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/signin', component: _SignIn2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/signup', component: _SignUp2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/create', component: _CreateProject2.default })
	          )
	        )
	      );
	    }
	  }]);
	
	  return App;
	}(_react.Component);
	
	exports.default = App;

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(17);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _authAction = __webpack_require__(81);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SignIn = function (_Component) {
	    _inherits(SignIn, _Component);
	
	    function SignIn() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, SignIn);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SignIn.__proto__ || Object.getPrototypeOf(SignIn)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	            email: '',
	            password: ''
	        }, _this.handleChange = function (e) {
	            _this.setState(_defineProperty({}, e.target.id, e.target.value));
	        }, _this.handleSubmit = function (e) {
	            e.preventDefault();
	            _this.props.signIn(_this.state);
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(SignIn, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                authError = _props.authError,
	                auth = _props.auth;
	
	            if (auth.uid) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/' });
	            return _react2.default.createElement(
	                'div',
	                { className: 'container' },
	                _react2.default.createElement(
	                    'form',
	                    { onSubmit: this.handleSubmit, className: 'white' },
	                    _react2.default.createElement(
	                        'h5',
	                        { className: 'grey-text text-darken-3' },
	                        'Sign In'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'email' },
	                            'Email'
	                        ),
	                        _react2.default.createElement('input', { type: 'email', id: 'email', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'password' },
	                            'Password'
	                        ),
	                        _react2.default.createElement('input', { type: 'password', id: 'password', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn pink lighten-1 z-depth-0' },
	                            'Login'
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'red-text center' },
	                            authError ? _react2.default.createElement(
	                                'p',
	                                null,
	                                authError
	                            ) : null
	                        )
	                    )
	                )
	            );
	        }
	    }]);
	
	    return SignIn;
	}(_react.Component);
	
	var mapStateToProps = function mapStateToProps(state) {
	    return {
	        authError: state.auth.authError,
	        auth: state.firebase.auth
	    };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        signIn: function signIn(creds) {
	            dispatch((0, _authAction.signIn)(creds));
	        }
	    };
	};
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SignIn);

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _reactRedux = __webpack_require__(17);
	
	var _authAction = __webpack_require__(81);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SignUp = function (_Component) {
	    _inherits(SignUp, _Component);
	
	    function SignUp() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, SignUp);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SignUp.__proto__ || Object.getPrototypeOf(SignUp)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	            email: '',
	            password: '',
	            firstName: '',
	            lastName: ''
	        }, _this.handleChange = function (e) {
	            _this.setState(_defineProperty({}, e.target.id, e.target.value));
	        }, _this.handleSubmit = function (e) {
	            e.preventDefault();
	            _this.props.signUp(_this.state);
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(SignUp, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                auth = _props.auth,
	                authError = _props.authError;
	
	            if (auth.uid) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/' });
	            return _react2.default.createElement(
	                'div',
	                { className: 'container' },
	                _react2.default.createElement(
	                    'form',
	                    { onSubmit: this.handleSubmit, className: 'white' },
	                    _react2.default.createElement(
	                        'h5',
	                        { className: 'grey-text text-darken-3' },
	                        'Sign Up'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'firstName' },
	                            'First Name'
	                        ),
	                        _react2.default.createElement('input', { type: 'text', id: 'firstName', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'lastName' },
	                            'Last Name'
	                        ),
	                        _react2.default.createElement('input', { type: 'text', id: 'lastName', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'email' },
	                            'Email'
	                        ),
	                        _react2.default.createElement('input', { type: 'email', id: 'email', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'password' },
	                            'Password'
	                        ),
	                        _react2.default.createElement('input', { type: 'password', id: 'password', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn pink lighten-1 z-depth-0' },
	                            'Sign Up'
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'red-text center' },
	                            authError ? _react2.default.createElement(
	                                'p',
	                                null,
	                                authError
	                            ) : null
	                        )
	                    )
	                )
	            );
	        }
	    }]);
	
	    return SignUp;
	}(_react.Component);
	
	var mapActionToProps = function mapActionToProps(dispatch) {
	    return {
	        signUp: function signUp(newUser) {
	            dispatch((0, _authAction.signUp)(newUser));
	        }
	    };
	};
	var mapStateToProps = function mapStateToProps(state) {
	    return {
	        auth: state.firebase.auth,
	        authError: state.auth.authError
	    };
	};
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapActionToProps)(SignUp);

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Notification = __webpack_require__(346);
	
	var _Notification2 = _interopRequireDefault(_Notification);
	
	var _ProjectList = __webpack_require__(351);
	
	var _ProjectList2 = _interopRequireDefault(_ProjectList);
	
	var _reactReduxFirebase = __webpack_require__(71);
	
	var _reactRedux = __webpack_require__(17);
	
	var _redux = __webpack_require__(46);
	
	var _reactRouterDom = __webpack_require__(13);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Dashboard = function (_Component) {
	  _inherits(Dashboard, _Component);
	
	  function Dashboard() {
	    _classCallCheck(this, Dashboard);
	
	    return _possibleConstructorReturn(this, (Dashboard.__proto__ || Object.getPrototypeOf(Dashboard)).apply(this, arguments));
	  }
	
	  _createClass(Dashboard, [{
	    key: 'render',
	    value: function render() {
	      //console.log(this.props)
	      var _props = this.props,
	          projects = _props.projects,
	          auth = _props.auth,
	          notifications = _props.notifications;
	
	      console.log(this.props);
	      if (!auth.uid) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/signin' });
	      return _react2.default.createElement(
	        'div',
	        { className: 'dashboard container' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col s12 m6' },
	            _react2.default.createElement(_ProjectList2.default, { projects: projects })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col s12 m5 offset-m1' },
	            _react2.default.createElement(_Notification2.default, { notifications: notifications })
	          )
	        )
	      );
	    }
	  }]);
	
	  return Dashboard;
	}(_react.Component);
	
	var mapStateToProps = function mapStateToProps(state) {
	  //console.log(state)
	  return {
	    projects: state.firestore.ordered.projects,
	    auth: state.firebase.auth,
	    notifications: state.firestore.ordered.notifications
	  };
	};
	exports.default = (0, _redux.compose)((0, _reactRedux.connect)(mapStateToProps), (0, _reactReduxFirebase.firestoreConnect)([{ collection: 'projects', orderBy: ['createdAt', 'desc'] }, { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }]))(Dashboard);

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _moment = __webpack_require__(1);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Notifications = function Notifications(props) {
	    var notifications = props.notifications;
	
	    console.log(notifications);
	    return _react2.default.createElement(
	        'div',
	        { className: 'section' },
	        _react2.default.createElement(
	            'div',
	            { className: 'card z-depth-0' },
	            _react2.default.createElement(
	                'div',
	                { className: 'card-content' },
	                _react2.default.createElement(
	                    'span',
	                    { className: 'card-title' },
	                    'Notifications'
	                ),
	                _react2.default.createElement(
	                    'ul',
	                    { className: 'notifications' },
	                    notifications && notifications.map(function (item) {
	                        return _react2.default.createElement(
	                            'li',
	                            { key: item.id },
	                            _react2.default.createElement(
	                                'span',
	                                { className: 'pink-text' },
	                                item.user
	                            ),
	                            _react2.default.createElement(
	                                'span',
	                                null,
	                                item.content
	                            ),
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'grey-text note-date' },
	                                (0, _moment2.default)(item.time.toDate()).fromNow()
	                            )
	                        );
	                    })
	                )
	            )
	        )
	    );
	};
	
	exports.default = Notifications;

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _reactRedux = __webpack_require__(17);
	
	var _SignedInLink = __webpack_require__(348);
	
	var _SignedInLink2 = _interopRequireDefault(_SignedInLink);
	
	var _SignedOutLink = __webpack_require__(349);
	
	var _SignedOutLink2 = _interopRequireDefault(_SignedOutLink);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Navbar = function Navbar(props) {
	    var auth = props.auth,
	        profile = props.profile;
	    //console.log('hello',auth)
	
	    var Links = auth.uid ? _react2.default.createElement(_SignedInLink2.default, { profile: profile }) : _react2.default.createElement(_SignedOutLink2.default, null);
	    return _react2.default.createElement(
	        'nav',
	        { className: 'nav-wrapper grey darken-3' },
	        _react2.default.createElement(
	            'div',
	            { className: 'container' },
	            _react2.default.createElement(
	                _reactRouterDom.Link,
	                { to: '/', className: 'brand-logo' },
	                'MarioPlan'
	            ),
	            auth.isLoaded && Links
	        )
	    );
	};
	var mapStateToProps = function mapStateToProps(state) {
	    //console.log(state)
	    return {
	        auth: state.firebase.auth,
	        profile: state.firebase.profile
	    };
	};
	exports.default = (0, _reactRedux.connect)(mapStateToProps)(Navbar);

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _reactRedux = __webpack_require__(17);
	
	var _authAction = __webpack_require__(81);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SignedInLinks = function SignedInLinks(props) {
	    return _react2.default.createElement(
	        'ul',
	        { className: 'right' },
	        _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	                _reactRouterDom.NavLink,
	                { to: '/create' },
	                'New Project'
	            )
	        ),
	        _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	                'a',
	                { onClick: props.signOut },
	                'Log Out'
	            )
	        ),
	        _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	                _reactRouterDom.NavLink,
	                { to: '/', className: 'btn btn-floating pink lighten-1' },
	                props.profile.initials
	            )
	        )
	    );
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        signOut: function signOut() {
	            dispatch((0, _authAction.signOut)());
	        }
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SignedInLinks);

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	   value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(13);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SignedOutLinks = function SignedOutLinks() {
	   return _react2.default.createElement(
	      'ul',
	      { className: 'right' },
	      _react2.default.createElement(
	         'li',
	         null,
	         _react2.default.createElement(
	            _reactRouterDom.NavLink,
	            { to: '/signup' },
	            'Signup'
	         )
	      ),
	      _react2.default.createElement(
	         'li',
	         null,
	         _react2.default.createElement(
	            _reactRouterDom.NavLink,
	            { to: '/signin' },
	            'Login'
	         )
	      )
	   );
	};
	
	exports.default = SignedOutLinks;

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(17);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _createProjectAction = __webpack_require__(356);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CreateProject = function (_Component) {
	    _inherits(CreateProject, _Component);
	
	    function CreateProject() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, CreateProject);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CreateProject.__proto__ || Object.getPrototypeOf(CreateProject)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	            title: '',
	            content: ''
	        }, _this.handleChange = function (e) {
	            _this.setState(_defineProperty({}, e.target.id, e.target.value));
	        }, _this.handleSubmit = function (e) {
	            e.preventDefault();
	            _this.props.createProject(_this.state);
	            _this.props.history.push('/');
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(CreateProject, [{
	        key: 'render',
	        value: function render() {
	            var auth = this.props.auth;
	
	            if (!auth.uid) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/signin' });
	            return _react2.default.createElement(
	                'div',
	                { className: 'container' },
	                _react2.default.createElement(
	                    'form',
	                    { onSubmit: this.handleSubmit, className: 'white' },
	                    _react2.default.createElement(
	                        'h5',
	                        { className: 'grey-text text-darken-3' },
	                        'Create Project'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'title' },
	                            'Title'
	                        ),
	                        _react2.default.createElement('input', { type: 'text', id: 'title', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'label',
	                            { htmlFor: 'content' },
	                            'Create Content'
	                        ),
	                        _react2.default.createElement('textarea', { id: 'content', className: 'materialize-textarea', onChange: this.handleChange })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-field' },
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn pink lighten-1 z-depth-0' },
	                            'Create'
	                        )
	                    )
	                )
	            );
	        }
	    }]);
	
	    return CreateProject;
	}(_react.Component);
	
	var mapStateToProps = function mapStateToProps(state) {
	    return {
	        auth: state.firebase.auth
	    };
	};
	var mapDispatchToActions = function mapDispatchToActions(dispatch) {
	    return {
	        createProject: function createProject(project) {
	            dispatch((0, _createProjectAction.createProject)(project));
	        }
	    };
	};
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToActions)(CreateProject);

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Projectsummary = __webpack_require__(353);
	
	var _Projectsummary2 = _interopRequireDefault(_Projectsummary);
	
	var _reactRouterDom = __webpack_require__(13);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ProjectList = function ProjectList(_ref) {
	  var projects = _ref.projects;
	
	  return _react2.default.createElement(
	    'div',
	    { className: 'project-list section' },
	    projects && projects.map(function (project) {
	      return _react2.default.createElement(
	        _reactRouterDom.Link,
	        { to: '/project/' + project.id, key: project.id },
	        _react2.default.createElement(_Projectsummary2.default, { project: project, key: project.id })
	      );
	    })
	  );
	};
	
	exports.default = ProjectList;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(13);
	
	var _reactRedux = __webpack_require__(17);
	
	var _reactReduxFirebase = __webpack_require__(71);
	
	var _redux = __webpack_require__(46);
	
	var _moment = __webpack_require__(1);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ProjectDetails = function ProjectDetails(props) {
	    var project = props.project,
	        auth = props.auth;
	
	    if (!auth.uid) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/signin' });
	    if (project) {
	        return _react2.default.createElement(
	            'div',
	            { className: 'container section project-details' },
	            _react2.default.createElement(
	                'div',
	                { className: 'card z-depth-0' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'card-content' },
	                    _react2.default.createElement(
	                        'span',
	                        { className: 'card-title' },
	                        project.title
	                    ),
	                    _react2.default.createElement(
	                        'p',
	                        null,
	                        project.content
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'card-action grey lighten-4 grey-text' },
	                    _react2.default.createElement(
	                        'div',
	                        null,
	                        'Posted by ',
	                        project.authorFirstName,
	                        ' ',
	                        project.authorLastName
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        null,
	                        (0, _moment2.default)(project.createdAt.toDate()).calendar()
	                    )
	                )
	            )
	        );
	    } else {
	        return _react2.default.createElement(
	            'div',
	            { className: 'container center' },
	            _react2.default.createElement(
	                'p',
	                null,
	                'Loading Project...'
	            )
	        );
	    }
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	    var id = ownProps.match.params.id;
	    //console.log(state)
	    var projects = state.firestore.data.projects;
	    var project = projects ? projects[id] : null;
	    return {
	        project: project,
	        auth: state.firebase.auth
	    };
	};
	
	exports.default = (0, _redux.compose)((0, _reactRedux.connect)(mapStateToProps), (0, _reactReduxFirebase.firestoreConnect)([{ collection: 'projects' }]))(ProjectDetails);

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _moment = __webpack_require__(1);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ProjectSummary = function ProjectSummary(_ref) {
	  var project = _ref.project;
	
	  return _react2.default.createElement(
	    'div',
	    { className: 'card z-depth-0 project-summary' },
	    _react2.default.createElement(
	      'div',
	      { className: 'card-content grey-text text-darken-3' },
	      _react2.default.createElement(
	        'span',
	        { className: 'card-title ' },
	        project.title
	      ),
	      _react2.default.createElement(
	        'p',
	        null,
	        'Posted by ',
	        project.authorFirstName,
	        ' ',
	        project.authorLastName
	      ),
	      _react2.default.createElement(
	        'p',
	        { className: 'grey-text' },
	        (0, _moment2.default)(project.createdAt.toDate()).calendar()
	      )
	    )
	  );
	};
	exports.default = ProjectSummary;

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	   value: true
	});
	
	var _app = __webpack_require__(131);
	
	var _app2 = _interopRequireDefault(_app);
	
	__webpack_require__(362);
	
	__webpack_require__(361);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var firebaseConfig = {
	   apiKey: "AIzaSyBZRErreoeNhkQHogiqiBNJoiEmc3Qu3Gk",
	   authDomain: "mario-plan-ab8d8.firebaseapp.com",
	   databaseURL: "https://mario-plan-ab8d8.firebaseio.com",
	   projectId: "mario-plan-ab8d8",
	   storageBucket: "mario-plan-ab8d8.appspot.com",
	   messagingSenderId: "278968901387",
	   appId: "1:278968901387:web:b7feee259e105c94954c0e",
	   measurementId: "G-43L7M08PK1"
	};
	// Initialize Firebase
	// Your web app's Firebase configuration
	_app2.default.initializeApp(firebaseConfig);
	//firebase.analytics();
	// firebase.firestore().settings({timestampsInSnapshots:true});
	
	exports.default = _app2.default;

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _rrfProps;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(525);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	__webpack_require__(360);
	
	var _App = __webpack_require__(342);
	
	var _App2 = _interopRequireDefault(_App);
	
	var _redux = __webpack_require__(46);
	
	var _rootReducer = __webpack_require__(359);
	
	var _rootReducer2 = _interopRequireDefault(_rootReducer);
	
	var _reactRedux = __webpack_require__(17);
	
	var _reduxThunk = __webpack_require__(570);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reduxFirestore = __webpack_require__(334);
	
	var _reactReduxFirebase = __webpack_require__(71);
	
	var _fbConfig = __webpack_require__(354);
	
	var _fbConfig2 = _interopRequireDefault(_fbConfig);
	
	var _app = __webpack_require__(131);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	// import * as serviceWorker from './serviceWorker';
	
	
	var store = (0, _redux.createStore)(_rootReducer2.default, (0, _redux.compose)((0, _redux.applyMiddleware)(_reduxThunk2.default.withExtraArgument({ getFirestore: _reduxFirestore.getFirestore, getFirebase: _reactReduxFirebase.getFirebase })), (0, _reduxFirestore.reduxFirestore)(_app2.default, _fbConfig2.default)
	//reactReduxFirebase({userProfile: 'users', useFirestoreForProfile: true})
	));
	var profileSpecificProps = {
	    userProfile: 'users',
	    useFirestoreForProfile: true,
	    enableRedirectHandling: false,
	    resetBeforeLogin: false
	};
	
	var rrfProps = (_rrfProps = {
	    firebase: _app2.default,
	    config: _fbConfig2.default
	}, _defineProperty(_rrfProps, 'config', profileSpecificProps), _defineProperty(_rrfProps, 'dispatch', store.dispatch), _defineProperty(_rrfProps, 'createFirestoreInstance', _reduxFirestore.createFirestoreInstance), _rrfProps);
	
	_reactDom2.default.render(_react2.default.createElement(
	    _reactRedux.Provider,
	    { store: store },
	    _react2.default.createElement(
	        _reactReduxFirebase.ReactReduxFirebaseProvider,
	        rrfProps,
	        _react2.default.createElement(_App2.default, null)
	    )
	), document.getElementById("root"));

/***/ },
/* 356 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var createProject = exports.createProject = function createProject(project) {
	    return function (dispatch, getState, _ref) {
	        var getFirebase = _ref.getFirebase,
	            getFirestore = _ref.getFirestore;
	
	
	        var firestore = getFirestore();
	        var profile = getState().firebase.profile;
	        var authorId = getState().firebase.auth.uid;
	        firestore.collection('projects').add(Object.assign({}, project, {
	            authorFirstName: profile.firstName,
	            authorLastName: profile.lastName,
	            authorId: authorId,
	            createdAt: new Date()
	        })).then(function () {
	            dispatch({ type: 'CREATE_PROJECT', project: project });
	        }).catch(function (err) {
	            dispatch({ type: 'CREATE_PROJECT_ERROR', err: err });
	        });
	    };
	};

/***/ },
/* 357 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	     value: true
	});
	var initState = {
	     authError: null
	};
	var authReducer = function authReducer() {
	     var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;
	     var action = arguments[1];
	
	     switch (action.type) {
	          case 'LOGIN_ERROR':
	               console.log('login error');
	               return Object.assign({}, state, {
	                    authError: 'Login failed'
	               });
	          case 'LOGIN_SUCCESS':
	               console.log('login sucess');
	               return Object.assign({}, state, {
	                    authError: null
	               });
	          case 'SIGNOUT_SUCCESS':
	               console.log('logout sucess');
	               return state;
	          case 'SIGNUP_SUCCESS':
	               console.log('signup success');
	               return Object.assign({}, state, {
	                    authError: null
	               });
	          case 'SIGNUP_ERROR':
	               console.log('signup error');
	               console.log(action.err.message);
	               return Object.assign({}, state, {
	                    authError: action.err.message
	               });
	          default:
	               return state;
	     }
	};
	
	exports.default = authReducer;

/***/ },
/* 358 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	     value: true
	});
	var initState = {
	     projects: [{ id: '1', title: 'help me find peach', content: 'blah blah blah' }, { id: '2', title: 'collect all the stars', content: 'blah blah blah' }, { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }]
	};
	var projectReducer = function projectReducer() {
	     var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;
	     var action = arguments[1];
	
	     switch (action.type) {
	          case 'CREATE_PROJECT':
	               console.log('create project', action.project);
	               return state;
	          case 'CREATE_PROJECT_ERROR':
	               console.log('create project error', action.err);
	               return state;
	          default:
	               return state;
	     }
	};
	
	exports.default = projectReducer;

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(46);
	
	var _authReducer = __webpack_require__(357);
	
	var _authReducer2 = _interopRequireDefault(_authReducer);
	
	var _projectReducer = __webpack_require__(358);
	
	var _projectReducer2 = _interopRequireDefault(_projectReducer);
	
	var _reduxFirestore = __webpack_require__(334);
	
	var _reactReduxFirebase = __webpack_require__(71);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var rootReducer = (0, _redux.combineReducers)({
	    auth: _authReducer2.default,
	    project: _projectReducer2.default,
	    firestore: _reduxFirestore.firestoreReducer,
	    firebase: _reactReduxFirebase.firebaseReducer
	});
	
	exports.default = rootReducer;

/***/ },
/* 360 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(338);
	
	//# sourceMappingURL=index.cjs.js.map


/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(339);
	
	//# sourceMappingURL=index.cjs.js.map


/***/ },
/* 363 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {// @flow
	'use strict';
	
	var key = '__global_unique_id__';
	
	module.exports = function() {
	  return global[key] = (global[key] || 0) + 1;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}Object.defineProperty(exports,"__esModule",{value:!0});var resolvePathname=_interopDefault(__webpack_require__(572)),valueEqual=_interopDefault(__webpack_require__(578));__webpack_require__(73);var invariant=_interopDefault(__webpack_require__(128));function _extends(){return(_extends=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}return t}).apply(this,arguments)}function addLeadingSlash(t){return"/"===t.charAt(0)?t:"/"+t}function stripLeadingSlash(t){return"/"===t.charAt(0)?t.substr(1):t}function hasBasename(t,n){return 0===t.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(t.charAt(n.length))}function stripBasename(t,n){return hasBasename(t,n)?t.substr(n.length):t}function stripTrailingSlash(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t}function parsePath(t){var n=t||"/",e="",a="",r=n.indexOf("#");-1!==r&&(a=n.substr(r),n=n.substr(0,r));var o=n.indexOf("?");return-1!==o&&(e=n.substr(o),n=n.substr(0,o)),{pathname:n,search:"?"===e?"":e,hash:"#"===a?"":a}}function createPath(t){var n=t.pathname,e=t.search,a=t.hash,r=n||"/";return e&&"?"!==e&&(r+="?"===e.charAt(0)?e:"?"+e),a&&"#"!==a&&(r+="#"===a.charAt(0)?a:"#"+a),r}function createLocation(t,n,e,a){var r;"string"==typeof t?(r=parsePath(t)).state=n:(void 0===(r=_extends({},t)).pathname&&(r.pathname=""),r.search?"?"!==r.search.charAt(0)&&(r.search="?"+r.search):r.search="",r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==n&&void 0===r.state&&(r.state=n));try{r.pathname=decodeURI(r.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return e&&(r.key=e),a?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=resolvePathname(r.pathname,a.pathname)):r.pathname=a.pathname:r.pathname||(r.pathname="/"),r}function locationsAreEqual(t,n){return t.pathname===n.pathname&&t.search===n.search&&t.hash===n.hash&&t.key===n.key&&valueEqual(t.state,n.state)}function createTransitionManager(){var o=null;var a=[];return{setPrompt:function(t){return o=t,function(){o===t&&(o=null)}},confirmTransitionTo:function(t,n,e,a){if(null!=o){var r="function"==typeof o?o(t,n):o;"string"==typeof r?"function"==typeof e?e(r,a):a(!0):a(!1!==r)}else a(!0)},appendListener:function(t){var n=!0;function e(){n&&t.apply(void 0,arguments)}return a.push(e),function(){n=!1,a=a.filter(function(t){return t!==e})}},notifyListeners:function(){for(var t=arguments.length,n=new Array(t),e=0;e<t;e++)n[e]=arguments[e];a.forEach(function(t){return t.apply(void 0,n)})}}}var canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement);function getConfirmation(t,n){n(window.confirm(t))}function supportsHistory(){var t=window.navigator.userAgent;return(-1===t.indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&(window.history&&"pushState"in window.history)}function supportsPopStateOnHashChange(){return-1===window.navigator.userAgent.indexOf("Trident")}function supportsGoWithoutReloadUsingHash(){return-1===window.navigator.userAgent.indexOf("Firefox")}function isExtraneousPopstateEvent(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")}var PopStateEvent="popstate",HashChangeEvent="hashchange";function getHistoryState(){try{return window.history.state||{}}catch(t){return{}}}function createBrowserHistory(t){void 0===t&&(t={}),canUseDOM||invariant(!1);var s=window.history,c=supportsHistory(),n=!supportsPopStateOnHashChange(),e=t,a=e.forceRefresh,h=void 0!==a&&a,r=e.getUserConfirmation,u=void 0===r?getConfirmation:r,o=e.keyLength,i=void 0===o?6:o,f=t.basename?stripTrailingSlash(addLeadingSlash(t.basename)):"";function l(t){var n=t||{},e=n.key,a=n.state,r=window.location,o=r.pathname+r.search+r.hash;return f&&(o=stripBasename(o,f)),createLocation(o,a,e)}function d(){return Math.random().toString(36).substr(2,i)}var v=createTransitionManager();function p(t){_extends(T,t),T.length=s.length,v.notifyListeners(T.location,T.action)}function g(t){isExtraneousPopstateEvent(t)||w(l(t.state))}function P(){w(l(getHistoryState()))}var m=!1;function w(n){if(m)m=!1,p();else{v.confirmTransitionTo(n,"POP",u,function(t){t?p({action:"POP",location:n}):function(t){var n=T.location,e=H.indexOf(n.key);-1===e&&(e=0);var a=H.indexOf(t.key);-1===a&&(a=0);var r=e-a;r&&(m=!0,L(r))}(n)})}}var y=l(getHistoryState()),H=[y.key];function x(t){return f+createPath(t)}function L(t){s.go(t)}var O=0;function E(t){1===(O+=t)&&1===t?(window.addEventListener(PopStateEvent,g),n&&window.addEventListener(HashChangeEvent,P)):0===O&&(window.removeEventListener(PopStateEvent,g),n&&window.removeEventListener(HashChangeEvent,P))}var S=!1;var T={length:s.length,action:"POP",location:y,createHref:x,push:function(t,n){var i=createLocation(t,n,d(),T.location);v.confirmTransitionTo(i,"PUSH",u,function(t){if(t){var n=x(i),e=i.key,a=i.state;if(c)if(s.pushState({key:e,state:a},null,n),h)window.location.href=n;else{var r=H.indexOf(T.location.key),o=H.slice(0,r+1);o.push(i.key),H=o,p({action:"PUSH",location:i})}else window.location.href=n}})},replace:function(t,n){var o="REPLACE",i=createLocation(t,n,d(),T.location);v.confirmTransitionTo(i,o,u,function(t){if(t){var n=x(i),e=i.key,a=i.state;if(c)if(s.replaceState({key:e,state:a},null,n),h)window.location.replace(n);else{var r=H.indexOf(T.location.key);-1!==r&&(H[r]=i.key),p({action:o,location:i})}else window.location.replace(n)}})},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(t){void 0===t&&(t=!1);var n=v.setPrompt(t);return S||(E(1),S=!0),function(){return S&&(S=!1,E(-1)),n()}},listen:function(t){var n=v.appendListener(t);return E(1),function(){E(-1),n()}}};return T}var HashChangeEvent$1="hashchange",HashPathCoders={hashbang:{encodePath:function(t){return"!"===t.charAt(0)?t:"!/"+stripLeadingSlash(t)},decodePath:function(t){return"!"===t.charAt(0)?t.substr(1):t}},noslash:{encodePath:stripLeadingSlash,decodePath:addLeadingSlash},slash:{encodePath:addLeadingSlash,decodePath:addLeadingSlash}};function stripHash(t){var n=t.indexOf("#");return-1===n?t:t.slice(0,n)}function getHashPath(){var t=window.location.href,n=t.indexOf("#");return-1===n?"":t.substring(n+1)}function pushHashPath(t){window.location.hash=t}function replaceHashPath(t){window.location.replace(stripHash(window.location.href)+"#"+t)}function createHashHistory(t){void 0===t&&(t={}),canUseDOM||invariant(!1);var n=window.history,e=(supportsGoWithoutReloadUsingHash(),t),a=e.getUserConfirmation,i=void 0===a?getConfirmation:a,r=e.hashType,o=void 0===r?"slash":r,s=t.basename?stripTrailingSlash(addLeadingSlash(t.basename)):"",c=HashPathCoders[o],h=c.encodePath,u=c.decodePath;function f(){var t=u(getHashPath());return s&&(t=stripBasename(t,s)),createLocation(t)}var l=createTransitionManager();function d(t){_extends(E,t),E.length=n.length,l.notifyListeners(E.location,E.action)}var v=!1,p=null;function g(){var t=getHashPath(),n=h(t);if(t!==n)replaceHashPath(n);else{var e=f(),a=E.location;if(!v&&function(t,n){return t.pathname===n.pathname&&t.search===n.search&&t.hash===n.hash}(a,e))return;if(p===createPath(e))return;p=null,function(n){if(v)v=!1,d();else{l.confirmTransitionTo(n,"POP",i,function(t){t?d({action:"POP",location:n}):function(t){var n=E.location,e=y.lastIndexOf(createPath(n));-1===e&&(e=0);var a=y.lastIndexOf(createPath(t));-1===a&&(a=0);var r=e-a;r&&(v=!0,H(r))}(n)})}}(e)}}var P=getHashPath(),m=h(P);P!==m&&replaceHashPath(m);var w=f(),y=[createPath(w)];function H(t){n.go(t)}var x=0;function L(t){1===(x+=t)&&1===t?window.addEventListener(HashChangeEvent$1,g):0===x&&window.removeEventListener(HashChangeEvent$1,g)}var O=!1;var E={length:n.length,action:"POP",location:w,createHref:function(t){var n=document.querySelector("base"),e="";return n&&n.getAttribute("href")&&(e=stripHash(window.location.href)),e+"#"+h(s+createPath(t))},push:function(t,n){var o=createLocation(t,void 0,void 0,E.location);l.confirmTransitionTo(o,"PUSH",i,function(t){if(t){var n=createPath(o),e=h(s+n);if(getHashPath()!==e){p=n,pushHashPath(e);var a=y.lastIndexOf(createPath(E.location)),r=y.slice(0,a+1);r.push(n),y=r,d({action:"PUSH",location:o})}else d()}})},replace:function(t,n){var r="REPLACE",o=createLocation(t,void 0,void 0,E.location);l.confirmTransitionTo(o,r,i,function(t){if(t){var n=createPath(o),e=h(s+n);getHashPath()!==e&&(p=n,replaceHashPath(e));var a=y.indexOf(createPath(E.location));-1!==a&&(y[a]=n),d({action:r,location:o})}})},go:H,goBack:function(){H(-1)},goForward:function(){H(1)},block:function(t){void 0===t&&(t=!1);var n=l.setPrompt(t);return O||(L(1),O=!0),function(){return O&&(O=!1,L(-1)),n()}},listen:function(t){var n=l.appendListener(t);return L(1),function(){L(-1),n()}}};return E}function clamp(t,n,e){return Math.min(Math.max(t,n),e)}function createMemoryHistory(t){void 0===t&&(t={});var n=t,r=n.getUserConfirmation,e=n.initialEntries,a=void 0===e?["/"]:e,o=n.initialIndex,i=void 0===o?0:o,s=n.keyLength,c=void 0===s?6:s,h=createTransitionManager();function u(t){_extends(g,t),g.length=g.entries.length,h.notifyListeners(g.location,g.action)}function f(){return Math.random().toString(36).substr(2,c)}var l=clamp(i,0,a.length-1),d=a.map(function(t){return createLocation(t,void 0,"string"==typeof t?f():t.key||f())}),v=createPath;function p(t){var n=clamp(g.index+t,0,g.entries.length-1),e=g.entries[n];h.confirmTransitionTo(e,"POP",r,function(t){t?u({action:"POP",location:e,index:n}):u()})}var g={length:d.length,action:"POP",location:d[l],index:l,entries:d,createHref:v,push:function(t,n){var a=createLocation(t,n,f(),g.location);h.confirmTransitionTo(a,"PUSH",r,function(t){if(t){var n=g.index+1,e=g.entries.slice(0);e.length>n?e.splice(n,e.length-n,a):e.push(a),u({action:"PUSH",location:a,index:n,entries:e})}})},replace:function(t,n){var e="REPLACE",a=createLocation(t,n,f(),g.location);h.confirmTransitionTo(a,e,r,function(t){t&&(g.entries[g.index]=a,u({action:e,location:a}))})},go:p,goBack:function(){p(-1)},goForward:function(){p(1)},canGo:function(t){var n=g.index+t;return 0<=n&&n<g.entries.length},block:function(t){return void 0===t&&(t=!1),h.setPrompt(t)},listen:function(t){return h.appendListener(t)}};return g}exports.createBrowserHistory=createBrowserHistory,exports.createHashHistory=createHashHistory,exports.createMemoryHistory=createMemoryHistory,exports.createLocation=createLocation,exports.locationsAreEqual=locationsAreEqual,exports.parsePath=parsePath,exports.createPath=createPath;


/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20),
	    root = __webpack_require__(6);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(427),
	    hashDelete = __webpack_require__(428),
	    hashGet = __webpack_require__(429),
	    hashHas = __webpack_require__(430),
	    hashSet = __webpack_require__(431);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(20),
	    root = __webpack_require__(6);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ },
/* 369 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `baseAggregator` for arrays.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform keys.
	 * @param {Object} accumulator The initial aggregated object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function arrayAggregator(array, setter, iteratee, accumulator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    var value = array[index];
	    setter(accumulator, value, iteratee(value), array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayAggregator;


/***/ },
/* 370 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.every` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check,
	 *  else `false`.
	 */
	function arrayEvery(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (!predicate(array[index], index, array)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = arrayEvery;


/***/ },
/* 371 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(148);
	
	/**
	 * Gets the size of an ASCII `string`.
	 *
	 * @private
	 * @param {string} string The string inspect.
	 * @returns {number} Returns the string size.
	 */
	var asciiSize = baseProperty('length');
	
	module.exports = asciiSize;


/***/ },
/* 373 */
/***/ function(module, exports) {

	/**
	 * Converts an ASCII `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function asciiToArray(string) {
	  return string.split('');
	}
	
	module.exports = asciiToArray;


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(18);
	
	/**
	 * Aggregates elements of `collection` on `accumulator` with keys transformed
	 * by `iteratee` and values set by `setter`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform keys.
	 * @param {Object} accumulator The initial aggregated object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function baseAggregator(collection, setter, iteratee, accumulator) {
	  baseEach(collection, function(value, key, collection) {
	    setter(accumulator, value, iteratee(value), collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseAggregator;


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(19),
	    keysIn = __webpack_require__(68);
	
	/**
	 * The base implementation of `_.assignIn` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssignIn(object, source) {
	  return object && copyObject(source, keysIn(source), object);
	}
	
	module.exports = baseAssignIn;


/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(85),
	    arrayIncludes = __webpack_require__(87),
	    arrayIncludesWith = __webpack_require__(138),
	    arrayMap = __webpack_require__(27),
	    baseUnary = __webpack_require__(60),
	    cacheHas = __webpack_require__(96);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee == null ? value : iteratee(value);
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(18);
	
	/**
	 * The base implementation of `_.every` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check,
	 *  else `false`
	 */
	function baseEvery(collection, predicate) {
	  var result = true;
	  baseEach(collection, function(value, index, collection) {
	    result = !!predicate(value, index, collection);
	    return result;
	  });
	  return result;
	}
	
	module.exports = baseEvery;


/***/ },
/* 378 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ },
/* 379 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  return object != null && hasOwnProperty.call(object, key);
	}
	
	module.exports = baseHas;


/***/ },
/* 380 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}
	
	module.exports = baseIsArguments;


/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(49),
	    equalArrays = __webpack_require__(160),
	    equalByTag = __webpack_require__(420),
	    equalObjects = __webpack_require__(421),
	    getTag = __webpack_require__(21),
	    isArray = __webpack_require__(3),
	    isBuffer = __webpack_require__(41),
	    isTypedArray = __webpack_require__(67);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);
	
	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;
	
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(21),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]';
	
	/**
	 * The base implementation of `_.isMap` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 */
	function baseIsMap(value) {
	  return isObjectLike(value) && getTag(value) == mapTag;
	}
	
	module.exports = baseIsMap;


/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(49),
	    baseIsEqual = __webpack_require__(90);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ },
/* 385 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}
	
	module.exports = baseIsNaN;


/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(66),
	    isMasked = __webpack_require__(438),
	    isObject = __webpack_require__(4),
	    toSource = __webpack_require__(178);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(21),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var setTag = '[object Set]';
	
	/**
	 * The base implementation of `_.isSet` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 */
	function baseIsSet(value) {
	  return isObjectLike(value) && getTag(value) == setTag;
	}
	
	module.exports = baseIsSet;


/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isLength = __webpack_require__(116),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(4),
	    isPrototype = __webpack_require__(36),
	    nativeKeysIn = __webpack_require__(453);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];
	
	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeysIn;


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(18),
	    isArrayLike = __webpack_require__(14);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(384),
	    getMatchData = __webpack_require__(423),
	    matchesStrictComparable = __webpack_require__(169);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(90),
	    get = __webpack_require__(11),
	    hasIn = __webpack_require__(184),
	    isKey = __webpack_require__(107),
	    isStrictComparable = __webpack_require__(168),
	    matchesStrictComparable = __webpack_require__(169),
	    toKey = __webpack_require__(22);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(141),
	    cloneBuffer = __webpack_require__(152),
	    cloneTypedArray = __webpack_require__(153),
	    copyArray = __webpack_require__(35),
	    initCloneObject = __webpack_require__(167),
	    isArguments = __webpack_require__(40),
	    isArray = __webpack_require__(3),
	    isArrayLikeObject = __webpack_require__(115),
	    isBuffer = __webpack_require__(41),
	    isFunction = __webpack_require__(66),
	    isObject = __webpack_require__(4),
	    isPlainObject = __webpack_require__(117),
	    isTypedArray = __webpack_require__(67),
	    safeGet = __webpack_require__(173),
	    toPlainObject = __webpack_require__(512);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = safeGet(object, key),
	      srcValue = safeGet(source, key),
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || isFunction(objValue)) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(147),
	    hasIn = __webpack_require__(184);
	
	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, paths) {
	  return basePickBy(object, paths, function(value, path) {
	    return hasIn(object, path);
	  });
	}
	
	module.exports = basePick;


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(57);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	var baseUnset = __webpack_require__(95),
	    isIndex = __webpack_require__(30);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * The base implementation of `_.pullAt` without support for individual
	 * indexes or capturing the removed elements.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {number[]} indexes The indexes of elements to remove.
	 * @returns {Array} Returns `array`.
	 */
	function basePullAt(array, indexes) {
	  var length = array ? indexes.length : 0,
	      lastIndex = length - 1;
	
	  while (length--) {
	    var index = indexes[length];
	    if (length == lastIndex || index !== previous) {
	      var previous = index;
	      if (isIndex(index)) {
	        splice.call(array, index, 1);
	      } else {
	        baseUnset(array, index);
	      }
	    }
	  }
	  return array;
	}
	
	module.exports = basePullAt;


/***/ },
/* 397 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of
	 *  `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseReduce;


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(179),
	    defineProperty = __webpack_require__(159),
	    identity = __webpack_require__(39);
	
	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};
	
	module.exports = baseSetToString;


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(18);
	
	/**
	 * The base implementation of `_.some` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function baseSome(collection, predicate) {
	  var result;
	
	  baseEach(collection, function(value, index, collection) {
	    result = predicate(value, index, collection);
	    return !result;
	  });
	  return !!result;
	}
	
	module.exports = baseSome;


/***/ },
/* 400 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(85),
	    arrayIncludes = __webpack_require__(87),
	    arrayIncludesWith = __webpack_require__(138),
	    cacheHas = __webpack_require__(96),
	    createSet = __webpack_require__(417),
	    setToArray = __webpack_require__(110);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      length = array.length,
	      isCommon = true,
	      result = [],
	      seen = result;
	
	  if (comparator) {
	    isCommon = false;
	    includes = arrayIncludesWith;
	  }
	  else if (length >= LARGE_ARRAY_SIZE) {
	    var set = iteratee ? null : createSet(array);
	    if (set) {
	      return setToArray(set);
	    }
	    isCommon = false;
	    includes = cacheHas;
	    seen = new SetCache;
	  }
	  else {
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (!includes(seen, computed, comparator)) {
	      if (seen !== result) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseUniq;


/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(39);
	
	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Function} Returns cast function.
	 */
	function castFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}
	
	module.exports = castFunction;


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(89);
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;
	
	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsEndIndex;


/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(98);
	
	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	module.exports = cloneDataView;


/***/ },
/* 405 */
/***/ function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(26);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(19),
	    getSymbols = __webpack_require__(104);
	
	/**
	 * Copies own symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(19),
	    getSymbolsIn = __webpack_require__(165);
	
	/**
	 * Copies own and inherited symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbolsIn(source, object) {
	  return copyObject(source, getSymbolsIn(source), object);
	}
	
	module.exports = copySymbolsIn;


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(6);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ },
/* 410 */
/***/ function(module, exports) {

	/**
	 * Gets the number of `placeholder` occurrences in `array`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} placeholder The placeholder to search for.
	 * @returns {number} Returns the placeholder count.
	 */
	function countHolders(array, placeholder) {
	  var length = array.length,
	      result = 0;
	
	  while (length--) {
	    if (array[length] === placeholder) {
	      ++result;
	    }
	  }
	  return result;
	}
	
	module.exports = countHolders;


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(14);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 412 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	var createCtor = __webpack_require__(61),
	    root = __webpack_require__(6);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBind(func, bitmask, thisArg) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}
	
	module.exports = createBind;


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	var castSlice = __webpack_require__(97),
	    hasUnicode = __webpack_require__(105),
	    stringToArray = __webpack_require__(112),
	    toString = __webpack_require__(23);
	
	/**
	 * Creates a function like `_.lowerFirst`.
	 *
	 * @private
	 * @param {string} methodName The name of the `String` case method to use.
	 * @returns {Function} Returns the new case function.
	 */
	function createCaseFirst(methodName) {
	  return function(string) {
	    string = toString(string);
	
	    var strSymbols = hasUnicode(string)
	      ? stringToArray(string)
	      : undefined;
	
	    var chr = strSymbols
	      ? strSymbols[0]
	      : string.charAt(0);
	
	    var trailing = strSymbols
	      ? castSlice(strSymbols, 1).join('')
	      : string.slice(1);
	
	    return chr[methodName]() + trailing;
	  };
	}
	
	module.exports = createCaseFirst;


/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(50),
	    createCtor = __webpack_require__(61),
	    createHybrid = __webpack_require__(157),
	    createRecurry = __webpack_require__(158),
	    getHolder = __webpack_require__(164),
	    replaceHolders = __webpack_require__(109),
	    root = __webpack_require__(6);
	
	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurry(func, bitmask, arity) {
	  var Ctor = createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length,
	        placeholder = getHolder(wrapper);
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);
	
	    length -= holders.length;
	    if (length < arity) {
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, undefined,
	        args, holders, undefined, undefined, arity - length);
	    }
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return apply(fn, this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createCurry;


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(50),
	    createCtor = __webpack_require__(61),
	    root = __webpack_require__(6);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the `this` binding
	 * of `thisArg` and `partials` prepended to the arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to
	 *  the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartial(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createPartial;


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	var Set = __webpack_require__(135),
	    noop = __webpack_require__(188),
	    setToArray = __webpack_require__(110);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Creates a set object of `values`.
	 *
	 * @private
	 * @param {Array} values The values to add to the set.
	 * @returns {Object} Returns the new set.
	 */
	var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	  return new Set(values);
	};
	
	module.exports = createSet;


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(92),
	    isObject = __webpack_require__(4);
	
	/**
	 * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
	 * objects into destination objects that are passed thru.
	 *
	 * @private
	 * @param {*} objValue The destination value.
	 * @param {*} srcValue The source value.
	 * @param {string} key The key of the property to merge.
	 * @param {Object} object The parent object of `objValue`.
	 * @param {Object} source The parent object of `srcValue`.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 * @returns {*} Returns the value to assign.
	 */
	function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
	  if (isObject(objValue) && isObject(srcValue)) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, objValue);
	    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
	    stack['delete'](srcValue);
	  }
	  return objValue;
	}
	
	module.exports = customDefaultsMerge;


/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	var isPlainObject = __webpack_require__(117);
	
	/**
	 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	 * objects.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {string} key The key of the property to inspect.
	 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	 */
	function customOmitClone(value) {
	  return isPlainObject(value) ? undefined : value;
	}
	
	module.exports = customOmitClone;


/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(26),
	    Uint8Array = __webpack_require__(136),
	    eq = __webpack_require__(37),
	    equalArrays = __webpack_require__(160),
	    mapToArray = __webpack_require__(449),
	    setToArray = __webpack_require__(110);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(162);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	var realNames = __webpack_require__(456);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the name of `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {string} Returns the function name.
	 */
	function getFuncName(func) {
	  var result = (func.name + ''),
	      array = realNames[result],
	      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	  while (length--) {
	    var data = array[length],
	        otherFunc = data.func;
	    if (otherFunc == null || otherFunc == func) {
	      return data.name;
	    }
	  }
	  return result;
	}
	
	module.exports = getFuncName;


/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(168),
	    keys = __webpack_require__(32);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(26);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ },
/* 425 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ },
/* 426 */
/***/ function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	    reSplitDetails = /,? & /;
	
	/**
	 * Extracts wrapper details from the `source` body comment.
	 *
	 * @private
	 * @param {string} source The source to inspect.
	 * @returns {Array} Returns the wrapper details.
	 */
	function getWrapDetails(source) {
	  var match = source.match(reWrapDetails);
	  return match ? match[1].split(reSplitDetails) : [];
	}
	
	module.exports = getWrapDetails;


/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(63);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}
	
	module.exports = hashClear;


/***/ },
/* 428 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = hashDelete;


/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(63);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(63);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(63);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ },
/* 432 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = new array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(98),
	    cloneDataView = __webpack_require__(404),
	    cloneRegExp = __webpack_require__(405),
	    cloneSymbol = __webpack_require__(406),
	    cloneTypedArray = __webpack_require__(153);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return new Ctor;
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return new Ctor;
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ },
/* 434 */
/***/ function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
	
	/**
	 * Inserts wrapper `details` in a comment at the top of the `source` body.
	 *
	 * @private
	 * @param {string} source The source to modify.
	 * @returns {Array} details The details to insert.
	 * @returns {string} Returns the modified source.
	 */
	function insertWrapDetails(source, details) {
	  var length = details.length;
	  if (!length) {
	    return source;
	  }
	  var lastIndex = length - 1;
	  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	  details = details.join(length > 2 ? ', ' : ' ');
	  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	}
	
	module.exports = insertWrapDetails;


/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(26),
	    isArguments = __webpack_require__(40),
	    isArray = __webpack_require__(3);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	module.exports = isFlattenable;


/***/ },
/* 436 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(82),
	    getData = __webpack_require__(163),
	    getFuncName = __webpack_require__(422),
	    lodash = __webpack_require__(517);
	
	/**
	 * Checks if `func` has a lazy counterpart.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	 *  else `false`.
	 */
	function isLaziable(func) {
	  var funcName = getFuncName(func),
	      other = lodash[funcName];
	
	  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	    return false;
	  }
	  if (func === other) {
	    return true;
	  }
	  var data = getData(other);
	  return !!data && func === data[0];
	}
	
	module.exports = isLaziable;


/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(409);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ },
/* 439 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}
	
	module.exports = listCacheClear;


/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(53);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(53);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(53);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(53);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(367),
	    ListCache = __webpack_require__(48),
	    Map = __webpack_require__(83);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(62);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = mapCacheDelete;


/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(62);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(62);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(62);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;
	
	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ },
/* 449 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(497);
	
	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;
	
	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });
	
	  var cache = result.cache;
	  return result;
	}
	
	module.exports = memoizeCapped;


/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(154),
	    composeArgsRight = __webpack_require__(155),
	    replaceHolders = __webpack_require__(109);
	
	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Merges the function metadata of `source` into `data`.
	 *
	 * Merging metadata reduces the number of wrappers used to invoke a function.
	 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	 * may be applied regardless of execution order. Methods like `_.ary` and
	 * `_.rearg` modify function arguments, making the order in which they are
	 * executed important, preventing the merging of metadata. However, we make
	 * an exception for a safe combined case where curried functions have `_.ary`
	 * and or `_.rearg` applied.
	 *
	 * @private
	 * @param {Array} data The destination metadata.
	 * @param {Array} source The source metadata.
	 * @returns {Array} Returns `data`.
	 */
	function mergeData(data, source) {
	  var bitmask = data[1],
	      srcBitmask = source[1],
	      newBitmask = bitmask | srcBitmask,
	      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
	  var isCombo =
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
	  // Exit early if metadata can't be merged.
	  if (!(isCommon || isCombo)) {
	    return data;
	  }
	  // Use source `thisArg` if available.
	  if (srcBitmask & WRAP_BIND_FLAG) {
	    data[2] = source[2];
	    // Set when currying a bound function.
	    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	  }
	  // Compose partial arguments.
	  var value = source[3];
	  if (value) {
	    var partials = data[3];
	    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	  }
	  // Compose partial right arguments.
	  value = source[5];
	  if (value) {
	    partials = data[5];
	    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	  }
	  // Use source `argPos` if available.
	  value = source[7];
	  if (value) {
	    data[7] = value;
	  }
	  // Use source `ary` if it's smaller.
	  if (srcBitmask & WRAP_ARY_FLAG) {
	    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	  }
	  // Use source `arity` if one is not provided.
	  if (data[9] == null) {
	    data[9] = source[9];
	  }
	  // Use source `func` and merge bitmasks.
	  data[0] = source[0];
	  data[1] = newBitmask;
	
	  return data;
	}
	
	module.exports = mergeData;


/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(171);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ },
/* 453 */
/***/ function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ },
/* 454 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(57),
	    baseSlice = __webpack_require__(150);
	
	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	}
	
	module.exports = parent;


/***/ },
/* 456 */
/***/ function(module, exports) {

	/** Used to lookup unminified function names. */
	var realNames = {};
	
	module.exports = realNames;


/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(35),
	    isIndex = __webpack_require__(30);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);
	
	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}
	
	module.exports = reorder;


/***/ },
/* 458 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ },
/* 459 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(48);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}
	
	module.exports = stackClear;


/***/ },
/* 461 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);
	
	  this.size = data.size;
	  return result;
	}
	
	module.exports = stackDelete;


/***/ },
/* 462 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 463 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(48),
	    Map = __webpack_require__(83),
	    MapCache = __webpack_require__(84);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 465 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = strictIndexOf;


/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	var asciiSize = __webpack_require__(372),
	    hasUnicode = __webpack_require__(105),
	    unicodeSize = __webpack_require__(467);
	
	/**
	 * Gets the number of symbols in `string`.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {number} Returns the string size.
	 */
	function stringSize(string) {
	  return hasUnicode(string)
	    ? unicodeSize(string)
	    : asciiSize(string);
	}
	
	module.exports = stringSize;


/***/ },
/* 467 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Gets the size of a Unicode `string`.
	 *
	 * @private
	 * @param {string} string The string inspect.
	 * @returns {number} Returns the string size.
	 */
	function unicodeSize(string) {
	  var result = reUnicode.lastIndex = 0;
	  while (reUnicode.test(string)) {
	    ++result;
	  }
	  return result;
	}
	
	module.exports = unicodeSize;


/***/ },
/* 468 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts a Unicode `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function unicodeToArray(string) {
	  return string.match(reUnicode) || [];
	}
	
	module.exports = unicodeToArray;


/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(51),
	    arrayIncludes = __webpack_require__(87);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256,
	    WRAP_FLIP_FLAG = 512;
	
	/** Used to associate wrap methods with their bit flags. */
	var wrapFlags = [
	  ['ary', WRAP_ARY_FLAG],
	  ['bind', WRAP_BIND_FLAG],
	  ['bindKey', WRAP_BIND_KEY_FLAG],
	  ['curry', WRAP_CURRY_FLAG],
	  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	  ['flip', WRAP_FLIP_FLAG],
	  ['partial', WRAP_PARTIAL_FLAG],
	  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	  ['rearg', WRAP_REARG_FLAG]
	];
	
	/**
	 * Updates wrapper `details` based on `bitmask` flags.
	 *
	 * @private
	 * @returns {Array} details The details to modify.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Array} Returns `details`.
	 */
	function updateWrapDetails(details, bitmask) {
	  arrayEach(wrapFlags, function(pair) {
	    var value = '_.' + pair[0];
	    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	      details.push(value);
	    }
	  });
	  return details.sort();
	}
	
	module.exports = updateWrapDetails;


/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(82),
	    LodashWrapper = __webpack_require__(134),
	    copyArray = __webpack_require__(35);
	
	/**
	 * Creates a clone of `wrapper`.
	 *
	 * @private
	 * @param {Object} wrapper The wrapper to clone.
	 * @returns {Object} Returns the cloned wrapper.
	 */
	function wrapperClone(wrapper) {
	  if (wrapper instanceof LazyWrapper) {
	    return wrapper.clone();
	  }
	  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	  result.__actions__ = copyArray(wrapper.__actions__);
	  result.__index__  = wrapper.__index__;
	  result.__values__ = wrapper.__values__;
	  return result;
	}
	
	module.exports = wrapperClone;


/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	var createWrap = __webpack_require__(100);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_ARY_FLAG = 128;
	
	/**
	 * Creates a function that invokes `func`, with up to `n` arguments,
	 * ignoring any additional arguments.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {Function} func The function to cap arguments for.
	 * @param {number} [n=func.length] The arity cap.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Function} Returns the new capped function.
	 * @example
	 *
	 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	 * // => [6, 8, 10]
	 */
	function ary(func, n, guard) {
	  n = guard ? undefined : n;
	  n = (func && n == null) ? func.length : n;
	  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	}
	
	module.exports = ary;


/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(52),
	    copyObject = __webpack_require__(19),
	    createAssigner = __webpack_require__(99),
	    isArrayLike = __webpack_require__(14),
	    isPrototype = __webpack_require__(36),
	    keys = __webpack_require__(32);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns own enumerable string keyed properties of source objects to the
	 * destination object. Source objects are applied from left to right.
	 * Subsequent sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assignIn
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assign({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var assign = createAssigner(function(object, source) {
	  if (isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keys(source), object);
	    return;
	  }
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      assignValue(object, key, source[key]);
	    }
	  }
	});
	
	module.exports = assign;


/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(23),
	    upperFirst = __webpack_require__(516);
	
	/**
	 * Converts the first character of `string` to upper case and the remaining
	 * to lower case.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to capitalize.
	 * @returns {string} Returns the capitalized string.
	 * @example
	 *
	 * _.capitalize('FRED');
	 * // => 'Fred'
	 */
	function capitalize(string) {
	  return upperFirst(toString(string).toLowerCase());
	}
	
	module.exports = capitalize;


/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(54);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * Creates a shallow clone of `value`.
	 *
	 * **Note:** This method is loosely based on the
	 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	 * and supports cloning arrays, array buffers, booleans, date objects, maps,
	 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	 * arrays. The own enumerable properties of `arguments` objects are cloned
	 * as plain objects. An empty object is returned for uncloneable values such
	 * as error objects, functions, DOM nodes, and WeakMaps.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to clone.
	 * @returns {*} Returns the cloned value.
	 * @see _.cloneDeep
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var shallow = _.clone(objects);
	 * console.log(shallow[0] === objects[0]);
	 * // => true
	 */
	function clone(value) {
	  return baseClone(value, CLONE_SYMBOLS_FLAG);
	}
	
	module.exports = clone;


/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(54);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * This method is like `_.clone` except that it recursively clones `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Lang
	 * @param {*} value The value to recursively clone.
	 * @returns {*} Returns the deep cloned value.
	 * @see _.clone
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var deep = _.cloneDeep(objects);
	 * console.log(deep[0] === objects[0]);
	 * // => false
	 */
	function cloneDeep(value) {
	  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
	}
	
	module.exports = cloneDeep;


/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	var createWrap = __webpack_require__(100);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_CURRY_FLAG = 8;
	
	/**
	 * Creates a function that accepts arguments of `func` and either invokes
	 * `func` returning its result, if at least `arity` number of arguments have
	 * been provided, or returns a function that accepts the remaining `func`
	 * arguments, and so on. The arity of `func` may be specified if `func.length`
	 * is not sufficient.
	 *
	 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	 * may be used as a placeholder for provided arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of curried functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.0.0
	 * @category Function
	 * @param {Function} func The function to curry.
	 * @param {number} [arity=func.length] The arity of `func`.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Function} Returns the new curried function.
	 * @example
	 *
	 * var abc = function(a, b, c) {
	 *   return [a, b, c];
	 * };
	 *
	 * var curried = _.curry(abc);
	 *
	 * curried(1)(2)(3);
	 * // => [1, 2, 3]
	 *
	 * curried(1, 2)(3);
	 * // => [1, 2, 3]
	 *
	 * curried(1, 2, 3);
	 * // => [1, 2, 3]
	 *
	 * // Curried with placeholders.
	 * curried(1)(_, 3)(2);
	 * // => [1, 2, 3]
	 */
	function curry(func, arity, guard) {
	  arity = guard ? undefined : arity;
	  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	  result.placeholder = curry.placeholder;
	  return result;
	}
	
	// Assign default placeholders.
	curry.placeholder = {};
	
	module.exports = curry;


/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(50),
	    baseRest = __webpack_require__(59),
	    customDefaultsMerge = __webpack_require__(418),
	    mergeWith = __webpack_require__(498);
	
	/**
	 * This method is like `_.defaults` except that it recursively assigns
	 * default properties.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.defaults
	 * @example
	 *
	 * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	 * // => { 'a': { 'b': 2, 'c': 3 } }
	 */
	var defaultsDeep = baseRest(function(args) {
	  args.push(undefined, customDefaultsMerge);
	  return apply(mergeWith, undefined, args);
	});
	
	module.exports = defaultsDeep;


/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEvery = __webpack_require__(370),
	    baseEvery = __webpack_require__(377),
	    baseIteratee = __webpack_require__(7),
	    isArray = __webpack_require__(3),
	    isIterateeCall = __webpack_require__(106);
	
	/**
	 * Checks if `predicate` returns truthy for **all** elements of `collection`.
	 * Iteration is stopped once `predicate` returns falsey. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * **Note:** This method returns `true` for
	 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	 * elements of empty collections.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check,
	 *  else `false`.
	 * @example
	 *
	 * _.every([true, 1, null, 'yes'], Boolean);
	 * // => false
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': false },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.every(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.every(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.every(users, 'active');
	 * // => false
	 */
	function every(collection, predicate, guard) {
	  var func = isArray(collection) ? arrayEvery : baseEvery;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = every;


/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(56),
	    map = __webpack_require__(33);
	
	/**
	 * Creates a flattened array of values by running each element in `collection`
	 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	 * with three arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * function duplicate(n) {
	 *   return [n, n];
	 * }
	 *
	 * _.flatMap([1, 2], duplicate);
	 * // => [1, 1, 2, 2]
	 */
	function flatMap(collection, iteratee) {
	  return baseFlatten(map(collection, iteratee), 1);
	}
	
	module.exports = flatMap;


/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	var mapping = __webpack_require__(481),
	    fallbackHolder = __webpack_require__(38);
	
	/** Built-in value reference. */
	var push = Array.prototype.push;
	
	/**
	 * Creates a function, with an arity of `n`, that invokes `func` with the
	 * arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} n The arity of the new function.
	 * @returns {Function} Returns the new function.
	 */
	function baseArity(func, n) {
	  return n == 2
	    ? function(a, b) { return func.apply(undefined, arguments); }
	    : function(a) { return func.apply(undefined, arguments); };
	}
	
	/**
	 * Creates a function that invokes `func`, with up to `n` arguments, ignoring
	 * any additional arguments.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @param {number} n The arity cap.
	 * @returns {Function} Returns the new function.
	 */
	function baseAry(func, n) {
	  return n == 2
	    ? function(a, b) { return func(a, b); }
	    : function(a) { return func(a); };
	}
	
	/**
	 * Creates a clone of `array`.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the cloned array.
	 */
	function cloneArray(array) {
	  var length = array ? array.length : 0,
	      result = Array(length);
	
	  while (length--) {
	    result[length] = array[length];
	  }
	  return result;
	}
	
	/**
	 * Creates a function that clones a given object using the assignment `func`.
	 *
	 * @private
	 * @param {Function} func The assignment function.
	 * @returns {Function} Returns the new cloner function.
	 */
	function createCloner(func) {
	  return function(object) {
	    return func({}, object);
	  };
	}
	
	/**
	 * A specialized version of `_.spread` which flattens the spread array into
	 * the arguments of the invoked `func`.
	 *
	 * @private
	 * @param {Function} func The function to spread arguments over.
	 * @param {number} start The start position of the spread.
	 * @returns {Function} Returns the new function.
	 */
	function flatSpread(func, start) {
	  return function() {
	    var length = arguments.length,
	        lastIndex = length - 1,
	        args = Array(length);
	
	    while (length--) {
	      args[length] = arguments[length];
	    }
	    var array = args[start],
	        otherArgs = args.slice(0, start);
	
	    if (array) {
	      push.apply(otherArgs, array);
	    }
	    if (start != lastIndex) {
	      push.apply(otherArgs, args.slice(start + 1));
	    }
	    return func.apply(this, otherArgs);
	  };
	}
	
	/**
	 * Creates a function that wraps `func` and uses `cloner` to clone the first
	 * argument it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} cloner The function to clone arguments.
	 * @returns {Function} Returns the new immutable function.
	 */
	function wrapImmutable(func, cloner) {
	  return function() {
	    var length = arguments.length;
	    if (!length) {
	      return;
	    }
	    var args = Array(length);
	    while (length--) {
	      args[length] = arguments[length];
	    }
	    var result = args[0] = cloner.apply(undefined, args);
	    func.apply(undefined, args);
	    return result;
	  };
	}
	
	/**
	 * The base implementation of `convert` which accepts a `util` object of methods
	 * required to perform conversions.
	 *
	 * @param {Object} util The util object.
	 * @param {string} name The name of the function to convert.
	 * @param {Function} func The function to convert.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
	 * @param {boolean} [options.curry=true] Specify currying.
	 * @param {boolean} [options.fixed=true] Specify fixed arity.
	 * @param {boolean} [options.immutable=true] Specify immutable operations.
	 * @param {boolean} [options.rearg=true] Specify rearranging arguments.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function baseConvert(util, name, func, options) {
	  var isLib = typeof name == 'function',
	      isObj = name === Object(name);
	
	  if (isObj) {
	    options = func;
	    func = name;
	    name = undefined;
	  }
	  if (func == null) {
	    throw new TypeError;
	  }
	  options || (options = {});
	
	  var config = {
	    'cap': 'cap' in options ? options.cap : true,
	    'curry': 'curry' in options ? options.curry : true,
	    'fixed': 'fixed' in options ? options.fixed : true,
	    'immutable': 'immutable' in options ? options.immutable : true,
	    'rearg': 'rearg' in options ? options.rearg : true
	  };
	
	  var defaultHolder = isLib ? func : fallbackHolder,
	      forceCurry = ('curry' in options) && options.curry,
	      forceFixed = ('fixed' in options) && options.fixed,
	      forceRearg = ('rearg' in options) && options.rearg,
	      pristine = isLib ? func.runInContext() : undefined;
	
	  var helpers = isLib ? func : {
	    'ary': util.ary,
	    'assign': util.assign,
	    'clone': util.clone,
	    'curry': util.curry,
	    'forEach': util.forEach,
	    'isArray': util.isArray,
	    'isError': util.isError,
	    'isFunction': util.isFunction,
	    'isWeakMap': util.isWeakMap,
	    'iteratee': util.iteratee,
	    'keys': util.keys,
	    'rearg': util.rearg,
	    'toInteger': util.toInteger,
	    'toPath': util.toPath
	  };
	
	  var ary = helpers.ary,
	      assign = helpers.assign,
	      clone = helpers.clone,
	      curry = helpers.curry,
	      each = helpers.forEach,
	      isArray = helpers.isArray,
	      isError = helpers.isError,
	      isFunction = helpers.isFunction,
	      isWeakMap = helpers.isWeakMap,
	      keys = helpers.keys,
	      rearg = helpers.rearg,
	      toInteger = helpers.toInteger,
	      toPath = helpers.toPath;
	
	  var aryMethodKeys = keys(mapping.aryMethod);
	
	  var wrappers = {
	    'castArray': function(castArray) {
	      return function() {
	        var value = arguments[0];
	        return isArray(value)
	          ? castArray(cloneArray(value))
	          : castArray.apply(undefined, arguments);
	      };
	    },
	    'iteratee': function(iteratee) {
	      return function() {
	        var func = arguments[0],
	            arity = arguments[1],
	            result = iteratee(func, arity),
	            length = result.length;
	
	        if (config.cap && typeof arity == 'number') {
	          arity = arity > 2 ? (arity - 2) : 1;
	          return (length && length <= arity) ? result : baseAry(result, arity);
	        }
	        return result;
	      };
	    },
	    'mixin': function(mixin) {
	      return function(source) {
	        var func = this;
	        if (!isFunction(func)) {
	          return mixin(func, Object(source));
	        }
	        var pairs = [];
	        each(keys(source), function(key) {
	          if (isFunction(source[key])) {
	            pairs.push([key, func.prototype[key]]);
	          }
	        });
	
	        mixin(func, Object(source));
	
	        each(pairs, function(pair) {
	          var value = pair[1];
	          if (isFunction(value)) {
	            func.prototype[pair[0]] = value;
	          } else {
	            delete func.prototype[pair[0]];
	          }
	        });
	        return func;
	      };
	    },
	    'nthArg': function(nthArg) {
	      return function(n) {
	        var arity = n < 0 ? 1 : (toInteger(n) + 1);
	        return curry(nthArg(n), arity);
	      };
	    },
	    'rearg': function(rearg) {
	      return function(func, indexes) {
	        var arity = indexes ? indexes.length : 0;
	        return curry(rearg(func, indexes), arity);
	      };
	    },
	    'runInContext': function(runInContext) {
	      return function(context) {
	        return baseConvert(util, runInContext(context), options);
	      };
	    }
	  };
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Casts `func` to a function with an arity capped iteratee if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @returns {Function} Returns the cast function.
	   */
	  function castCap(name, func) {
	    if (config.cap) {
	      var indexes = mapping.iterateeRearg[name];
	      if (indexes) {
	        return iterateeRearg(func, indexes);
	      }
	      var n = !isLib && mapping.iterateeAry[name];
	      if (n) {
	        return iterateeAry(func, n);
	      }
	    }
	    return func;
	  }
	
	  /**
	   * Casts `func` to a curried function if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @param {number} n The arity of `func`.
	   * @returns {Function} Returns the cast function.
	   */
	  function castCurry(name, func, n) {
	    return (forceCurry || (config.curry && n > 1))
	      ? curry(func, n)
	      : func;
	  }
	
	  /**
	   * Casts `func` to a fixed arity function if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @param {number} n The arity cap.
	   * @returns {Function} Returns the cast function.
	   */
	  function castFixed(name, func, n) {
	    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
	      var data = mapping.methodSpread[name],
	          start = data && data.start;
	
	      return start  === undefined ? ary(func, n) : flatSpread(func, start);
	    }
	    return func;
	  }
	
	  /**
	   * Casts `func` to an rearged function if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @param {number} n The arity of `func`.
	   * @returns {Function} Returns the cast function.
	   */
	  function castRearg(name, func, n) {
	    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))
	      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])
	      : func;
	  }
	
	  /**
	   * Creates a clone of `object` by `path`.
	   *
	   * @private
	   * @param {Object} object The object to clone.
	   * @param {Array|string} path The path to clone by.
	   * @returns {Object} Returns the cloned object.
	   */
	  function cloneByPath(object, path) {
	    path = toPath(path);
	
	    var index = -1,
	        length = path.length,
	        lastIndex = length - 1,
	        result = clone(Object(object)),
	        nested = result;
	
	    while (nested != null && ++index < length) {
	      var key = path[index],
	          value = nested[key];
	
	      if (value != null &&
	          !(isFunction(value) || isError(value) || isWeakMap(value))) {
	        nested[key] = clone(index == lastIndex ? value : Object(value));
	      }
	      nested = nested[key];
	    }
	    return result;
	  }
	
	  /**
	   * Converts `lodash` to an immutable auto-curried iteratee-first data-last
	   * version with conversion `options` applied.
	   *
	   * @param {Object} [options] The options object. See `baseConvert` for more details.
	   * @returns {Function} Returns the converted `lodash`.
	   */
	  function convertLib(options) {
	    return _.runInContext.convert(options)(undefined);
	  }
	
	  /**
	   * Create a converter function for `func` of `name`.
	   *
	   * @param {string} name The name of the function to convert.
	   * @param {Function} func The function to convert.
	   * @returns {Function} Returns the new converter function.
	   */
	  function createConverter(name, func) {
	    var realName = mapping.aliasToReal[name] || name,
	        methodName = mapping.remap[realName] || realName,
	        oldOptions = options;
	
	    return function(options) {
	      var newUtil = isLib ? pristine : helpers,
	          newFunc = isLib ? pristine[methodName] : func,
	          newOptions = assign(assign({}, oldOptions), options);
	
	      return baseConvert(newUtil, realName, newFunc, newOptions);
	    };
	  }
	
	  /**
	   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
	   * arguments, ignoring any additional arguments.
	   *
	   * @private
	   * @param {Function} func The function to cap iteratee arguments for.
	   * @param {number} n The arity cap.
	   * @returns {Function} Returns the new function.
	   */
	  function iterateeAry(func, n) {
	    return overArg(func, function(func) {
	      return typeof func == 'function' ? baseAry(func, n) : func;
	    });
	  }
	
	  /**
	   * Creates a function that wraps `func` to invoke its iteratee with arguments
	   * arranged according to the specified `indexes` where the argument value at
	   * the first index is provided as the first argument, the argument value at
	   * the second index is provided as the second argument, and so on.
	   *
	   * @private
	   * @param {Function} func The function to rearrange iteratee arguments for.
	   * @param {number[]} indexes The arranged argument indexes.
	   * @returns {Function} Returns the new function.
	   */
	  function iterateeRearg(func, indexes) {
	    return overArg(func, function(func) {
	      var n = indexes.length;
	      return baseArity(rearg(baseAry(func, n), indexes), n);
	    });
	  }
	
	  /**
	   * Creates a function that invokes `func` with its first argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function() {
	      var length = arguments.length;
	      if (!length) {
	        return func();
	      }
	      var args = Array(length);
	      while (length--) {
	        args[length] = arguments[length];
	      }
	      var index = config.rearg ? 0 : (length - 1);
	      args[index] = transform(args[index]);
	      return func.apply(undefined, args);
	    };
	  }
	
	  /**
	   * Creates a function that wraps `func` and applys the conversions
	   * rules by `name`.
	   *
	   * @private
	   * @param {string} name The name of the function to wrap.
	   * @param {Function} func The function to wrap.
	   * @returns {Function} Returns the converted function.
	   */
	  function wrap(name, func, placeholder) {
	    var result,
	        realName = mapping.aliasToReal[name] || name,
	        wrapped = func,
	        wrapper = wrappers[realName];
	
	    if (wrapper) {
	      wrapped = wrapper(func);
	    }
	    else if (config.immutable) {
	      if (mapping.mutate.array[realName]) {
	        wrapped = wrapImmutable(func, cloneArray);
	      }
	      else if (mapping.mutate.object[realName]) {
	        wrapped = wrapImmutable(func, createCloner(func));
	      }
	      else if (mapping.mutate.set[realName]) {
	        wrapped = wrapImmutable(func, cloneByPath);
	      }
	    }
	    each(aryMethodKeys, function(aryKey) {
	      each(mapping.aryMethod[aryKey], function(otherName) {
	        if (realName == otherName) {
	          var data = mapping.methodSpread[realName],
	              afterRearg = data && data.afterRearg;
	
	          result = afterRearg
	            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)
	            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);
	
	          result = castCap(realName, result);
	          result = castCurry(realName, result, aryKey);
	          return false;
	        }
	      });
	      return !result;
	    });
	
	    result || (result = wrapped);
	    if (result == func) {
	      result = forceCurry ? curry(result, 1) : function() {
	        return func.apply(this, arguments);
	      };
	    }
	    result.convert = createConverter(realName, func);
	    result.placeholder = func.placeholder = placeholder;
	
	    return result;
	  }
	
	  /*--------------------------------------------------------------------------*/
	
	  if (!isObj) {
	    return wrap(name, func, defaultHolder);
	  }
	  var _ = func;
	
	  // Convert methods by ary cap.
	  var pairs = [];
	  each(aryMethodKeys, function(aryKey) {
	    each(mapping.aryMethod[aryKey], function(key) {
	      var func = _[mapping.remap[key] || key];
	      if (func) {
	        pairs.push([key, wrap(key, func, _)]);
	      }
	    });
	  });
	
	  // Convert remaining methods.
	  each(keys(_), function(key) {
	    var func = _[key];
	    if (typeof func == 'function') {
	      var length = pairs.length;
	      while (length--) {
	        if (pairs[length][0] == key) {
	          return;
	        }
	      }
	      func.convert = createConverter(key, func);
	      pairs.push([key, func]);
	    }
	  });
	
	  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
	  each(pairs, function(pair) {
	    _[pair[0]] = pair[1];
	  });
	
	  _.convert = convertLib;
	  _.placeholder = _;
	
	  // Assign aliases.
	  each(keys(_), function(key) {
	    each(mapping.realToAlias[key] || [], function(alias) {
	      _[alias] = _[key];
	    });
	  });
	
	  return _;
	}
	
	module.exports = baseConvert;


/***/ },
/* 481 */
/***/ function(module, exports) {

	/** Used to map aliases to their real names. */
	exports.aliasToReal = {
	
	  // Lodash aliases.
	  'each': 'forEach',
	  'eachRight': 'forEachRight',
	  'entries': 'toPairs',
	  'entriesIn': 'toPairsIn',
	  'extend': 'assignIn',
	  'extendAll': 'assignInAll',
	  'extendAllWith': 'assignInAllWith',
	  'extendWith': 'assignInWith',
	  'first': 'head',
	
	  // Methods that are curried variants of others.
	  'conforms': 'conformsTo',
	  'matches': 'isMatch',
	  'property': 'get',
	
	  // Ramda aliases.
	  '__': 'placeholder',
	  'F': 'stubFalse',
	  'T': 'stubTrue',
	  'all': 'every',
	  'allPass': 'overEvery',
	  'always': 'constant',
	  'any': 'some',
	  'anyPass': 'overSome',
	  'apply': 'spread',
	  'assoc': 'set',
	  'assocPath': 'set',
	  'complement': 'negate',
	  'compose': 'flowRight',
	  'contains': 'includes',
	  'dissoc': 'unset',
	  'dissocPath': 'unset',
	  'dropLast': 'dropRight',
	  'dropLastWhile': 'dropRightWhile',
	  'equals': 'isEqual',
	  'identical': 'eq',
	  'indexBy': 'keyBy',
	  'init': 'initial',
	  'invertObj': 'invert',
	  'juxt': 'over',
	  'omitAll': 'omit',
	  'nAry': 'ary',
	  'path': 'get',
	  'pathEq': 'matchesProperty',
	  'pathOr': 'getOr',
	  'paths': 'at',
	  'pickAll': 'pick',
	  'pipe': 'flow',
	  'pluck': 'map',
	  'prop': 'get',
	  'propEq': 'matchesProperty',
	  'propOr': 'getOr',
	  'props': 'at',
	  'symmetricDifference': 'xor',
	  'symmetricDifferenceBy': 'xorBy',
	  'symmetricDifferenceWith': 'xorWith',
	  'takeLast': 'takeRight',
	  'takeLastWhile': 'takeRightWhile',
	  'unapply': 'rest',
	  'unnest': 'flatten',
	  'useWith': 'overArgs',
	  'where': 'conformsTo',
	  'whereEq': 'isMatch',
	  'zipObj': 'zipObject'
	};
	
	/** Used to map ary to method names. */
	exports.aryMethod = {
	  '1': [
	    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',
	    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',
	    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',
	    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',
	    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',
	    'uniqueId', 'words', 'zipAll'
	  ],
	  '2': [
	    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',
	    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',
	    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',
	    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',
	    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',
	    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',
	    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',
	    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',
	    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',
	    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',
	    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',
	    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',
	    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',
	    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',
	    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',
	    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',
	    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',
	    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',
	    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',
	    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',
	    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',
	    'zipObjectDeep'
	  ],
	  '3': [
	    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',
	    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',
	    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',
	    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',
	    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',
	    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',
	    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',
	    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',
	    'xorWith', 'zipWith'
	  ],
	  '4': [
	    'fill', 'setWith', 'updateWith'
	  ]
	};
	
	/** Used to map ary to rearg configs. */
	exports.aryRearg = {
	  '2': [1, 0],
	  '3': [2, 0, 1],
	  '4': [3, 2, 0, 1]
	};
	
	/** Used to map method names to their iteratee ary. */
	exports.iterateeAry = {
	  'dropRightWhile': 1,
	  'dropWhile': 1,
	  'every': 1,
	  'filter': 1,
	  'find': 1,
	  'findFrom': 1,
	  'findIndex': 1,
	  'findIndexFrom': 1,
	  'findKey': 1,
	  'findLast': 1,
	  'findLastFrom': 1,
	  'findLastIndex': 1,
	  'findLastIndexFrom': 1,
	  'findLastKey': 1,
	  'flatMap': 1,
	  'flatMapDeep': 1,
	  'flatMapDepth': 1,
	  'forEach': 1,
	  'forEachRight': 1,
	  'forIn': 1,
	  'forInRight': 1,
	  'forOwn': 1,
	  'forOwnRight': 1,
	  'map': 1,
	  'mapKeys': 1,
	  'mapValues': 1,
	  'partition': 1,
	  'reduce': 2,
	  'reduceRight': 2,
	  'reject': 1,
	  'remove': 1,
	  'some': 1,
	  'takeRightWhile': 1,
	  'takeWhile': 1,
	  'times': 1,
	  'transform': 2
	};
	
	/** Used to map method names to iteratee rearg configs. */
	exports.iterateeRearg = {
	  'mapKeys': [1],
	  'reduceRight': [1, 0]
	};
	
	/** Used to map method names to rearg configs. */
	exports.methodRearg = {
	  'assignInAllWith': [1, 0],
	  'assignInWith': [1, 2, 0],
	  'assignAllWith': [1, 0],
	  'assignWith': [1, 2, 0],
	  'differenceBy': [1, 2, 0],
	  'differenceWith': [1, 2, 0],
	  'getOr': [2, 1, 0],
	  'intersectionBy': [1, 2, 0],
	  'intersectionWith': [1, 2, 0],
	  'isEqualWith': [1, 2, 0],
	  'isMatchWith': [2, 1, 0],
	  'mergeAllWith': [1, 0],
	  'mergeWith': [1, 2, 0],
	  'padChars': [2, 1, 0],
	  'padCharsEnd': [2, 1, 0],
	  'padCharsStart': [2, 1, 0],
	  'pullAllBy': [2, 1, 0],
	  'pullAllWith': [2, 1, 0],
	  'rangeStep': [1, 2, 0],
	  'rangeStepRight': [1, 2, 0],
	  'setWith': [3, 1, 2, 0],
	  'sortedIndexBy': [2, 1, 0],
	  'sortedLastIndexBy': [2, 1, 0],
	  'unionBy': [1, 2, 0],
	  'unionWith': [1, 2, 0],
	  'updateWith': [3, 1, 2, 0],
	  'xorBy': [1, 2, 0],
	  'xorWith': [1, 2, 0],
	  'zipWith': [1, 2, 0]
	};
	
	/** Used to map method names to spread configs. */
	exports.methodSpread = {
	  'assignAll': { 'start': 0 },
	  'assignAllWith': { 'start': 0 },
	  'assignInAll': { 'start': 0 },
	  'assignInAllWith': { 'start': 0 },
	  'defaultsAll': { 'start': 0 },
	  'defaultsDeepAll': { 'start': 0 },
	  'invokeArgs': { 'start': 2 },
	  'invokeArgsMap': { 'start': 2 },
	  'mergeAll': { 'start': 0 },
	  'mergeAllWith': { 'start': 0 },
	  'partial': { 'start': 1 },
	  'partialRight': { 'start': 1 },
	  'without': { 'start': 1 },
	  'zipAll': { 'start': 0 }
	};
	
	/** Used to identify methods which mutate arrays or objects. */
	exports.mutate = {
	  'array': {
	    'fill': true,
	    'pull': true,
	    'pullAll': true,
	    'pullAllBy': true,
	    'pullAllWith': true,
	    'pullAt': true,
	    'remove': true,
	    'reverse': true
	  },
	  'object': {
	    'assign': true,
	    'assignAll': true,
	    'assignAllWith': true,
	    'assignIn': true,
	    'assignInAll': true,
	    'assignInAllWith': true,
	    'assignInWith': true,
	    'assignWith': true,
	    'defaults': true,
	    'defaultsAll': true,
	    'defaultsDeep': true,
	    'defaultsDeepAll': true,
	    'merge': true,
	    'mergeAll': true,
	    'mergeAllWith': true,
	    'mergeWith': true,
	  },
	  'set': {
	    'set': true,
	    'setWith': true,
	    'unset': true,
	    'update': true,
	    'updateWith': true
	  }
	};
	
	/** Used to map real names to their aliases. */
	exports.realToAlias = (function() {
	  var hasOwnProperty = Object.prototype.hasOwnProperty,
	      object = exports.aliasToReal,
	      result = {};
	
	  for (var key in object) {
	    var value = object[key];
	    if (hasOwnProperty.call(result, value)) {
	      result[value].push(key);
	    } else {
	      result[value] = [key];
	    }
	  }
	  return result;
	}());
	
	/** Used to map method names to other names. */
	exports.remap = {
	  'assignAll': 'assign',
	  'assignAllWith': 'assignWith',
	  'assignInAll': 'assignIn',
	  'assignInAllWith': 'assignInWith',
	  'curryN': 'curry',
	  'curryRightN': 'curryRight',
	  'defaultsAll': 'defaults',
	  'defaultsDeepAll': 'defaultsDeep',
	  'findFrom': 'find',
	  'findIndexFrom': 'findIndex',
	  'findLastFrom': 'findLast',
	  'findLastIndexFrom': 'findLastIndex',
	  'getOr': 'get',
	  'includesFrom': 'includes',
	  'indexOfFrom': 'indexOf',
	  'invokeArgs': 'invoke',
	  'invokeArgsMap': 'invokeMap',
	  'lastIndexOfFrom': 'lastIndexOf',
	  'mergeAll': 'merge',
	  'mergeAllWith': 'mergeWith',
	  'padChars': 'pad',
	  'padCharsEnd': 'padEnd',
	  'padCharsStart': 'padStart',
	  'propertyOf': 'get',
	  'rangeStep': 'range',
	  'rangeStepRight': 'rangeRight',
	  'restFrom': 'rest',
	  'spreadFrom': 'spread',
	  'trimChars': 'trim',
	  'trimCharsEnd': 'trimEnd',
	  'trimCharsStart': 'trimStart',
	  'zipAll': 'zip'
	};
	
	/** Used to track methods that skip fixing their arity. */
	exports.skipFixed = {
	  'castArray': true,
	  'flow': true,
	  'flowRight': true,
	  'iteratee': true,
	  'mixin': true,
	  'rearg': true,
	  'runInContext': true
	};
	
	/** Used to track methods that skip rearranging arguments. */
	exports.skipRearg = {
	  'add': true,
	  'assign': true,
	  'assignIn': true,
	  'bind': true,
	  'bindKey': true,
	  'concat': true,
	  'difference': true,
	  'divide': true,
	  'eq': true,
	  'gt': true,
	  'gte': true,
	  'isEqual': true,
	  'lt': true,
	  'lte': true,
	  'matchesProperty': true,
	  'merge': true,
	  'multiply': true,
	  'overArgs': true,
	  'partial': true,
	  'partialRight': true,
	  'propertyOf': true,
	  'random': true,
	  'range': true,
	  'rangeRight': true,
	  'subtract': true,
	  'zip': true,
	  'zipObject': true,
	  'zipObjectDeep': true
	};


/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
	  'ary': __webpack_require__(471),
	  'assign': __webpack_require__(142),
	  'clone': __webpack_require__(474),
	  'curry': __webpack_require__(476),
	  'forEach': __webpack_require__(51),
	  'isArray': __webpack_require__(3),
	  'isError': __webpack_require__(488),
	  'isFunction': __webpack_require__(66),
	  'isWeakMap': __webpack_require__(494),
	  'iteratee': __webpack_require__(495),
	  'keys': __webpack_require__(58),
	  'rearg': __webpack_require__(502),
	  'toInteger': __webpack_require__(190),
	  'toPath': __webpack_require__(511)
	};


/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(65),
	    func = convert('assign', __webpack_require__(472));
	
	func.placeholder = __webpack_require__(38);
	module.exports = func;


/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(65),
	    func = convert('unset', __webpack_require__(191));
	
	func.placeholder = __webpack_require__(38);
	module.exports = func;


/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(28),
	    createAggregator = __webpack_require__(156);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an object composed of keys generated from the results of running
	 * each element of `collection` thru `iteratee`. The order of grouped values
	 * is determined by the order they occur in `collection`. The corresponding
	 * value of each key is an array of elements responsible for generating the
	 * key. The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	 * @returns {Object} Returns the composed aggregate object.
	 * @example
	 *
	 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	 * // => { '4': [4.2], '6': [6.1, 6.3] }
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.groupBy(['one', 'two', 'three'], 'length');
	 * // => { '3': ['one', 'two'], '5': ['three'] }
	 */
	var groupBy = createAggregator(function(result, value, key) {
	  if (hasOwnProperty.call(result, key)) {
	    result[key].push(value);
	  } else {
	    baseAssignValue(result, key, [value]);
	  }
	});
	
	module.exports = groupBy;


/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]';
	
	/**
	 * Checks if `value` is classified as a boolean primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	 * @example
	 *
	 * _.isBoolean(false);
	 * // => true
	 *
	 * _.isBoolean(null);
	 * // => false
	 */
	function isBoolean(value) {
	  return value === true || value === false ||
	    (isObjectLike(value) && baseGetTag(value) == boolTag);
	}
	
	module.exports = isBoolean;


/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(58),
	    getTag = __webpack_require__(21),
	    isArguments = __webpack_require__(40),
	    isArray = __webpack_require__(3),
	    isArrayLike = __webpack_require__(14),
	    isBuffer = __webpack_require__(41),
	    isPrototype = __webpack_require__(36),
	    isTypedArray = __webpack_require__(67);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if `value` is an empty object, collection, map, or set.
	 *
	 * Objects are considered empty if they have no own enumerable string keyed
	 * properties.
	 *
	 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	 * jQuery-like collections are considered empty if they have a `length` of `0`.
	 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (value == null) {
	    return true;
	  }
	  if (isArrayLike(value) &&
	      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	    return !value.length;
	  }
	  var tag = getTag(value);
	  if (tag == mapTag || tag == setTag) {
	    return !value.size;
	  }
	  if (isPrototype(value)) {
	    return !baseKeys(value).length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = isEmpty;


/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isObjectLike = __webpack_require__(5),
	    isPlainObject = __webpack_require__(117);
	
	/** `Object#toString` result references. */
	var domExcTag = '[object DOMException]',
	    errorTag = '[object Error]';
	
	/**
	 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	 * `SyntaxError`, `TypeError`, or `URIError` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	 * @example
	 *
	 * _.isError(new Error);
	 * // => true
	 *
	 * _.isError(Error);
	 * // => false
	 */
	function isError(value) {
	  if (!isObjectLike(value)) {
	    return false;
	  }
	  var tag = baseGetTag(value);
	  return tag == errorTag || tag == domExcTag ||
	    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	}
	
	module.exports = isError;


/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMap = __webpack_require__(383),
	    baseUnary = __webpack_require__(60),
	    nodeUtil = __webpack_require__(108);
	
	/* Node.js helper references. */
	var nodeIsMap = nodeUtil && nodeUtil.isMap;
	
	/**
	 * Checks if `value` is classified as a `Map` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 * @example
	 *
	 * _.isMap(new Map);
	 * // => true
	 *
	 * _.isMap(new WeakMap);
	 * // => false
	 */
	var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
	
	module.exports = isMap;


/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	var isNumber = __webpack_require__(185);
	
	/**
	 * Checks if `value` is `NaN`.
	 *
	 * **Note:** This method is based on
	 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	 * `undefined` and other non-number values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 * @example
	 *
	 * _.isNaN(NaN);
	 * // => true
	 *
	 * _.isNaN(new Number(NaN));
	 * // => true
	 *
	 * isNaN(undefined);
	 * // => true
	 *
	 * _.isNaN(undefined);
	 * // => false
	 */
	function isNaN(value) {
	  // An `NaN` primitive is the only value that is not equal to itself.
	  // Perform the `toStringTag` check first to avoid errors with some
	  // ActiveX objects in IE.
	  return isNumber(value) && value != +value;
	}
	
	module.exports = isNaN;


/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsSet = __webpack_require__(387),
	    baseUnary = __webpack_require__(60),
	    nodeUtil = __webpack_require__(108);
	
	/* Node.js helper references. */
	var nodeIsSet = nodeUtil && nodeUtil.isSet;
	
	/**
	 * Checks if `value` is classified as a `Set` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 * @example
	 *
	 * _.isSet(new Set);
	 * // => true
	 *
	 * _.isSet(new WeakSet);
	 * // => false
	 */
	var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
	
	module.exports = isSet;


/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(10),
	    isArray = __webpack_require__(3),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}
	
	module.exports = isString;


/***/ },
/* 493 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}
	
	module.exports = isUndefined;


/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(21),
	    isObjectLike = __webpack_require__(5);
	
	/** `Object#toString` result references. */
	var weakMapTag = '[object WeakMap]';
	
	/**
	 * Checks if `value` is classified as a `WeakMap` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	 * @example
	 *
	 * _.isWeakMap(new WeakMap);
	 * // => true
	 *
	 * _.isWeakMap(new Map);
	 * // => false
	 */
	function isWeakMap(value) {
	  return isObjectLike(value) && getTag(value) == weakMapTag;
	}
	
	module.exports = isWeakMap;


/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(54),
	    baseIteratee = __webpack_require__(7);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1;
	
	/**
	 * Creates a function that invokes `func` with the arguments of the created
	 * function. If `func` is a property name, the created function returns the
	 * property value for a given element. If `func` is an array or object, the
	 * created function returns `true` for elements that contain the equivalent
	 * source properties, otherwise it returns `false`.
	 *
	 * @static
	 * @since 4.0.0
	 * @memberOf _
	 * @category Util
	 * @param {*} [func=_.identity] The value to convert to a callback.
	 * @returns {Function} Returns the callback.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, _.iteratee(['user', 'fred']));
	 * // => [{ 'user': 'fred', 'age': 40 }]
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, _.iteratee('user'));
	 * // => ['barney', 'fred']
	 *
	 * // Create custom iteratee shorthands.
	 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	 *     return func.test(string);
	 *   };
	 * });
	 *
	 * _.filter(['abc', 'def'], /ef/);
	 * // => ['def']
	 */
	function iteratee(func) {
	  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	}
	
	module.exports = iteratee;


/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(28),
	    createAggregator = __webpack_require__(156);
	
	/**
	 * Creates an object composed of keys generated from the results of running
	 * each element of `collection` thru `iteratee`. The corresponding value of
	 * each key is the last element responsible for generating the key. The
	 * iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	 * @returns {Object} Returns the composed aggregate object.
	 * @example
	 *
	 * var array = [
	 *   { 'dir': 'left', 'code': 97 },
	 *   { 'dir': 'right', 'code': 100 }
	 * ];
	 *
	 * _.keyBy(array, function(o) {
	 *   return String.fromCharCode(o.code);
	 * });
	 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	 *
	 * _.keyBy(array, 'dir');
	 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	 */
	var keyBy = createAggregator(function(result, value, key) {
	  baseAssignValue(result, key, value);
	});
	
	module.exports = keyBy;


/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(84);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Expose `MapCache`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(92),
	    createAssigner = __webpack_require__(99);
	
	/**
	 * This method is like `_.merge` except that it accepts `customizer` which
	 * is invoked to produce the merged values of the destination and source
	 * properties. If `customizer` returns `undefined`, merging is handled by the
	 * method instead. The `customizer` is invoked with six arguments:
	 * (objValue, srcValue, key, object, source, stack).
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} sources The source objects.
	 * @param {Function} customizer The function to customize assigned values.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * function customizer(objValue, srcValue) {
	 *   if (_.isArray(objValue)) {
	 *     return objValue.concat(srcValue);
	 *   }
	 * }
	 *
	 * var object = { 'a': [1], 'b': [2] };
	 * var other = { 'a': [3], 'b': [4] };
	 *
	 * _.mergeWith(object, other, customizer);
	 * // => { 'a': [1, 3], 'b': [2, 4] }
	 */
	var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	  baseMerge(object, source, srcIndex, customizer);
	});
	
	module.exports = mergeWith;


/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(7),
	    negate = __webpack_require__(187),
	    pickBy = __webpack_require__(500);
	
	/**
	 * The opposite of `_.pickBy`; this method creates an object composed of
	 * the own and inherited enumerable string keyed properties of `object` that
	 * `predicate` doesn't return truthy for. The predicate is invoked with two
	 * arguments: (value, key).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omitBy(object, _.isNumber);
	 * // => { 'b': '2' }
	 */
	function omitBy(object, predicate) {
	  return pickBy(object, negate(baseIteratee(predicate)));
	}
	
	module.exports = omitBy;


/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(27),
	    baseIteratee = __webpack_require__(7),
	    basePickBy = __webpack_require__(147),
	    getAllKeysIn = __webpack_require__(102);
	
	/**
	 * Creates an object composed of the `object` properties `predicate` returns
	 * truthy for. The predicate is invoked with two arguments: (value, key).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pickBy(object, _.isNumber);
	 * // => { 'a': 1, 'c': 3 }
	 */
	function pickBy(object, predicate) {
	  if (object == null) {
	    return {};
	  }
	  var props = arrayMap(getAllKeysIn(object), function(prop) {
	    return [prop];
	  });
	  predicate = baseIteratee(predicate);
	  return basePickBy(object, props, function(value, path) {
	    return predicate(value, path[0]);
	  });
	}
	
	module.exports = pickBy;


/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(148),
	    basePropertyDeep = __webpack_require__(395),
	    isKey = __webpack_require__(107),
	    toKey = __webpack_require__(22);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	var createWrap = __webpack_require__(100),
	    flatRest = __webpack_require__(101);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_REARG_FLAG = 256;
	
	/**
	 * Creates a function that invokes `func` with arguments arranged according
	 * to the specified `indexes` where the argument value at the first index is
	 * provided as the first argument, the argument value at the second index is
	 * provided as the second argument, and so on.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {Function} func The function to rearrange arguments for.
	 * @param {...(number|number[])} indexes The arranged argument indexes.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var rearged = _.rearg(function(a, b, c) {
	 *   return [a, b, c];
	 * }, [2, 0, 1]);
	 *
	 * rearged('b', 'c', 'a')
	 * // => ['a', 'b', 'c']
	 */
	var rearg = flatRest(function(func, indexes) {
	  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	});
	
	module.exports = rearg;


/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(371),
	    baseEach = __webpack_require__(18),
	    baseIteratee = __webpack_require__(7),
	    baseReduce = __webpack_require__(397),
	    isArray = __webpack_require__(3);
	
	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;
	
	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}
	
	module.exports = reduce;


/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(86),
	    baseFilter = __webpack_require__(143),
	    baseIteratee = __webpack_require__(7),
	    isArray = __webpack_require__(3),
	    negate = __webpack_require__(187);
	
	/**
	 * The opposite of `_.filter`; this method returns the elements of `collection`
	 * that `predicate` does **not** return truthy for.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.filter
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': false },
	 *   { 'user': 'fred',   'age': 40, 'active': true }
	 * ];
	 *
	 * _.reject(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.reject(users, { 'age': 40, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.reject(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.reject(users, 'active');
	 * // => objects for ['barney']
	 */
	function reject(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, negate(baseIteratee(predicate, 3)));
	}
	
	module.exports = reject;


/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(7),
	    basePullAt = __webpack_require__(396);
	
	/**
	 * Removes all elements from `array` that `predicate` returns truthy for
	 * and returns an array of the removed elements. The predicate is invoked
	 * with three arguments: (value, index, array).
	 *
	 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	 * to pull elements from an array by value.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.0.0
	 * @category Array
	 * @param {Array} array The array to modify.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new array of removed elements.
	 * @example
	 *
	 * var array = [1, 2, 3, 4];
	 * var evens = _.remove(array, function(n) {
	 *   return n % 2 == 0;
	 * });
	 *
	 * console.log(array);
	 * // => [1, 3]
	 *
	 * console.log(evens);
	 * // => [2, 4]
	 */
	function remove(array, predicate) {
	  var result = [];
	  if (!(array && array.length)) {
	    return result;
	  }
	  var index = -1,
	      indexes = [],
	      length = array.length;
	
	  predicate = baseIteratee(predicate, 3);
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result.push(value);
	      indexes.push(index);
	    }
	  }
	  basePullAt(array, indexes);
	  return result;
	}
	
	module.exports = remove;


/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(23);
	
	/**
	 * Replaces matches for `pattern` in `string` with `replacement`.
	 *
	 * **Note:** This method is based on
	 * [`String#replace`](https://mdn.io/String/replace).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to modify.
	 * @param {RegExp|string} pattern The pattern to replace.
	 * @param {Function|string} replacement The match replacement.
	 * @returns {string} Returns the modified string.
	 * @example
	 *
	 * _.replace('Hi Fred', 'Fred', 'Barney');
	 * // => 'Hi Barney'
	 */
	function replace() {
	  var args = arguments,
	      string = toString(args[0]);
	
	  return args.length < 3 ? string : string.replace(args[1], args[2]);
	}
	
	module.exports = replace;


/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	var baseSet = __webpack_require__(93);
	
	/**
	 * This method is like `_.set` except that it accepts `customizer` which is
	 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	 * path creation is handled by the method instead. The `customizer` is invoked
	 * with three arguments: (nsValue, key, nsObject).
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {};
	 *
	 * _.setWith(object, '[0][1]', 'a', Object);
	 * // => { '0': { '1': 'a' } }
	 */
	function setWith(object, path, value, customizer) {
	  customizer = typeof customizer == 'function' ? customizer : undefined;
	  return object == null ? object : baseSet(object, path, value, customizer);
	}
	
	module.exports = setWith;


/***/ },
/* 508 */
/***/ function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(510);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(4),
	    isSymbol = __webpack_require__(42);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(27),
	    copyArray = __webpack_require__(35),
	    isArray = __webpack_require__(3),
	    isSymbol = __webpack_require__(42),
	    stringToPath = __webpack_require__(177),
	    toKey = __webpack_require__(22),
	    toString = __webpack_require__(23);
	
	/**
	 * Converts `value` to a property path array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Util
	 * @param {*} value The value to convert.
	 * @returns {Array} Returns the new property path array.
	 * @example
	 *
	 * _.toPath('a.b.c');
	 * // => ['a', 'b', 'c']
	 *
	 * _.toPath('a[0].b.c');
	 * // => ['a', '0', 'b', 'c']
	 */
	function toPath(value) {
	  if (isArray(value)) {
	    return arrayMap(value, toKey);
	  }
	  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	}
	
	module.exports = toPath;


/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(19),
	    keysIn = __webpack_require__(68);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(94),
	    castSlice = __webpack_require__(97),
	    charsEndIndex = __webpack_require__(403),
	    charsStartIndex = __webpack_require__(151),
	    stringToArray = __webpack_require__(112),
	    toString = __webpack_require__(23);
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/**
	 * Removes leading and trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trim('  abc  ');
	 * // => 'abc'
	 *
	 * _.trim('-_-abc-_-', '_-');
	 * // => 'abc'
	 *
	 * _.map(['  foo  ', '  bar  '], _.trim);
	 * // => ['foo', 'bar']
	 */
	function trim(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return string.replace(reTrim, '');
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      chrSymbols = stringToArray(chars),
	      start = charsStartIndex(strSymbols, chrSymbols),
	      end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
	  return castSlice(strSymbols, start, end).join('');
	}
	
	module.exports = trim;


/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(94),
	    castSlice = __webpack_require__(97),
	    charsStartIndex = __webpack_require__(151),
	    stringToArray = __webpack_require__(112),
	    toString = __webpack_require__(23);
	
	/** Used to match leading and trailing whitespace. */
	var reTrimStart = /^\s+/;
	
	/**
	 * Removes leading whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trimStart('  abc  ');
	 * // => 'abc  '
	 *
	 * _.trimStart('-_-abc-_-', '_-');
	 * // => 'abc-_-'
	 */
	function trimStart(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return string.replace(reTrimStart, '');
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      start = charsStartIndex(strSymbols, stringToArray(chars));
	
	  return castSlice(strSymbols, start).join('');
	}
	
	module.exports = trimStart;


/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(56),
	    baseIteratee = __webpack_require__(7),
	    baseRest = __webpack_require__(59),
	    baseUniq = __webpack_require__(401),
	    isArrayLikeObject = __webpack_require__(115),
	    last = __webpack_require__(118);
	
	/**
	 * This method is like `_.union` except that it accepts `iteratee` which is
	 * invoked for each element of each `arrays` to generate the criterion by
	 * which uniqueness is computed. Result values are chosen from the first
	 * array in which the value occurs. The iteratee is invoked with one argument:
	 * (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {Array} Returns the new array of combined values.
	 * @example
	 *
	 * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	 * // => [2.1, 1.2]
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	 * // => [{ 'x': 1 }, { 'x': 2 }]
	 */
	var unionBy = baseRest(function(arrays) {
	  var iteratee = last(arrays);
	  if (isArrayLikeObject(iteratee)) {
	    iteratee = undefined;
	  }
	  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));
	});
	
	module.exports = unionBy;


/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	var createCaseFirst = __webpack_require__(414);
	
	/**
	 * Converts the first character of `string` to upper case.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.upperFirst('fred');
	 * // => 'Fred'
	 *
	 * _.upperFirst('FRED');
	 * // => 'FRED'
	 */
	var upperFirst = createCaseFirst('toUpperCase');
	
	module.exports = upperFirst;


/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(82),
	    LodashWrapper = __webpack_require__(134),
	    baseLodash = __webpack_require__(91),
	    isArray = __webpack_require__(3),
	    isObjectLike = __webpack_require__(5),
	    wrapperClone = __webpack_require__(470);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates a `lodash` object which wraps `value` to enable implicit method
	 * chain sequences. Methods that operate on and return arrays, collections,
	 * and functions can be chained together. Methods that retrieve a single value
	 * or may return a primitive value will automatically end the chain sequence
	 * and return the unwrapped value. Otherwise, the value must be unwrapped
	 * with `_#value`.
	 *
	 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	 * enabled using `_.chain`.
	 *
	 * The execution of chained methods is lazy, that is, it's deferred until
	 * `_#value` is implicitly or explicitly called.
	 *
	 * Lazy evaluation allows several methods to support shortcut fusion.
	 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	 * the creation of intermediate arrays and can greatly reduce the number of
	 * iteratee executions. Sections of a chain sequence qualify for shortcut
	 * fusion if the section is applied to an array and iteratees accept only
	 * one argument. The heuristic for whether a section qualifies for shortcut
	 * fusion is subject to change.
	 *
	 * Chaining is supported in custom builds as long as the `_#value` method is
	 * directly or indirectly included in the build.
	 *
	 * In addition to lodash methods, wrappers have `Array` and `String` methods.
	 *
	 * The wrapper `Array` methods are:
	 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	 *
	 * The wrapper `String` methods are:
	 * `replace` and `split`
	 *
	 * The wrapper methods that support shortcut fusion are:
	 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	 *
	 * The chainable wrapper methods are:
	 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	 * `zipObject`, `zipObjectDeep`, and `zipWith`
	 *
	 * The wrapper methods that are **not** chainable by default are:
	 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	 * `upperFirst`, `value`, and `words`
	 *
	 * @name _
	 * @constructor
	 * @category Seq
	 * @param {*} value The value to wrap in a `lodash` instance.
	 * @returns {Object} Returns the new `lodash` wrapper instance.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var wrapped = _([1, 2, 3]);
	 *
	 * // Returns an unwrapped value.
	 * wrapped.reduce(_.add);
	 * // => 6
	 *
	 * // Returns a wrapped value.
	 * var squares = wrapped.map(square);
	 *
	 * _.isArray(squares);
	 * // => false
	 *
	 * _.isArray(squares.value());
	 * // => true
	 */
	function lodash(value) {
	  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	    if (value instanceof LodashWrapper) {
	      return value;
	    }
	    if (hasOwnProperty.call(value, '__wrapped__')) {
	      return wrapperClone(value);
	    }
	  }
	  return new LodashWrapper(value);
	}
	
	// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype = baseLodash.prototype;
	lodash.prototype.constructor = lodash;
	
	module.exports = lodash;


/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';function _interopDefault(e){return(e&&(typeof e==='object')&&'default'in e)?e['default']:e}var React=__webpack_require__(2),React__default=_interopDefault(React),_inheritsLoose=_interopDefault(__webpack_require__(76)),PropTypes=_interopDefault(__webpack_require__(15)),gud=_interopDefault(__webpack_require__(363)),warning=_interopDefault(__webpack_require__(73));var MAX_SIGNED_31_BIT_INT = 1073741823;
	
	function objectIs(x, y) {
	  if (x === y) {
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function createEventEmitter(value) {
	  var handlers = [];
	  return {
	    on: function on(handler) {
	      handlers.push(handler);
	    },
	    off: function off(handler) {
	      handlers = handlers.filter(function (h) {
	        return h !== handler;
	      });
	    },
	    get: function get() {
	      return value;
	    },
	    set: function set(newValue, changedBits) {
	      value = newValue;
	      handlers.forEach(function (handler) {
	        return handler(value, changedBits);
	      });
	    }
	  };
	}
	
	function onlyChild(children) {
	  return Array.isArray(children) ? children[0] : children;
	}
	
	function createReactContext(defaultValue, calculateChangedBits) {
	  var _Provider$childContex, _Consumer$contextType;
	
	  var contextProp = '__create-react-context-' + gud() + '__';
	
	  var Provider =
	  /*#__PURE__*/
	  function (_Component) {
	    _inheritsLoose(Provider, _Component);
	
	    function Provider() {
	      var _this;
	
	      _this = _Component.apply(this, arguments) || this;
	      _this.emitter = createEventEmitter(_this.props.value);
	      return _this;
	    }
	
	    var _proto = Provider.prototype;
	
	    _proto.getChildContext = function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
	    };
	
	    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      if (this.props.value !== nextProps.value) {
	        var oldValue = this.props.value;
	        var newValue = nextProps.value;
	        var changedBits;
	
	        if (objectIs(oldValue, newValue)) {
	          changedBits = 0;
	        } else {
	          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
	
	          if (false) {
	            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);
	          }
	
	          changedBits |= 0;
	
	          if (changedBits !== 0) {
	            this.emitter.set(nextProps.value, changedBits);
	          }
	        }
	      }
	    };
	
	    _proto.render = function render() {
	      return this.props.children;
	    };
	
	    return Provider;
	  }(React.Component);
	
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);
	
	  var Consumer =
	  /*#__PURE__*/
	  function (_Component2) {
	    _inheritsLoose(Consumer, _Component2);
	
	    function Consumer() {
	      var _this2;
	
	      _this2 = _Component2.apply(this, arguments) || this;
	      _this2.state = {
	        value: _this2.getValue()
	      };
	
	      _this2.onUpdate = function (newValue, changedBits) {
	        var observedBits = _this2.observedBits | 0;
	
	        if ((observedBits & changedBits) !== 0) {
	          _this2.setState({
	            value: _this2.getValue()
	          });
	        }
	      };
	
	      return _this2;
	    }
	
	    var _proto2 = Consumer.prototype;
	
	    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var observedBits = nextProps.observedBits;
	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
	    };
	
	    _proto2.componentDidMount = function componentDidMount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].on(this.onUpdate);
	      }
	
	      var observedBits = this.props.observedBits;
	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
	    };
	
	    _proto2.componentWillUnmount = function componentWillUnmount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].off(this.onUpdate);
	      }
	    };
	
	    _proto2.getValue = function getValue() {
	      if (this.context[contextProp]) {
	        return this.context[contextProp].get();
	      } else {
	        return defaultValue;
	      }
	    };
	
	    _proto2.render = function render() {
	      return onlyChild(this.props.children)(this.state.value);
	    };
	
	    return Consumer;
	  }(React.Component);
	
	  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);
	  return {
	    Provider: Provider,
	    Consumer: Consumer
	  };
	}var index = React__default.createContext || createReactContext;module.exports=index;

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 192,
		"./af.js": 192,
		"./ar": 199,
		"./ar-dz": 193,
		"./ar-dz.js": 193,
		"./ar-kw": 194,
		"./ar-kw.js": 194,
		"./ar-ly": 195,
		"./ar-ly.js": 195,
		"./ar-ma": 196,
		"./ar-ma.js": 196,
		"./ar-sa": 197,
		"./ar-sa.js": 197,
		"./ar-tn": 198,
		"./ar-tn.js": 198,
		"./ar.js": 199,
		"./az": 200,
		"./az.js": 200,
		"./be": 201,
		"./be.js": 201,
		"./bg": 202,
		"./bg.js": 202,
		"./bm": 203,
		"./bm.js": 203,
		"./bn": 204,
		"./bn.js": 204,
		"./bo": 205,
		"./bo.js": 205,
		"./br": 206,
		"./br.js": 206,
		"./bs": 207,
		"./bs.js": 207,
		"./ca": 208,
		"./ca.js": 208,
		"./cs": 209,
		"./cs.js": 209,
		"./cv": 210,
		"./cv.js": 210,
		"./cy": 211,
		"./cy.js": 211,
		"./da": 212,
		"./da.js": 212,
		"./de": 215,
		"./de-at": 213,
		"./de-at.js": 213,
		"./de-ch": 214,
		"./de-ch.js": 214,
		"./de.js": 215,
		"./dv": 216,
		"./dv.js": 216,
		"./el": 217,
		"./el.js": 217,
		"./en-SG": 218,
		"./en-SG.js": 218,
		"./en-au": 219,
		"./en-au.js": 219,
		"./en-ca": 220,
		"./en-ca.js": 220,
		"./en-gb": 221,
		"./en-gb.js": 221,
		"./en-ie": 222,
		"./en-ie.js": 222,
		"./en-il": 223,
		"./en-il.js": 223,
		"./en-nz": 224,
		"./en-nz.js": 224,
		"./eo": 225,
		"./eo.js": 225,
		"./es": 228,
		"./es-do": 226,
		"./es-do.js": 226,
		"./es-us": 227,
		"./es-us.js": 227,
		"./es.js": 228,
		"./et": 229,
		"./et.js": 229,
		"./eu": 230,
		"./eu.js": 230,
		"./fa": 231,
		"./fa.js": 231,
		"./fi": 232,
		"./fi.js": 232,
		"./fo": 233,
		"./fo.js": 233,
		"./fr": 236,
		"./fr-ca": 234,
		"./fr-ca.js": 234,
		"./fr-ch": 235,
		"./fr-ch.js": 235,
		"./fr.js": 236,
		"./fy": 237,
		"./fy.js": 237,
		"./ga": 238,
		"./ga.js": 238,
		"./gd": 239,
		"./gd.js": 239,
		"./gl": 240,
		"./gl.js": 240,
		"./gom-latn": 241,
		"./gom-latn.js": 241,
		"./gu": 242,
		"./gu.js": 242,
		"./he": 243,
		"./he.js": 243,
		"./hi": 244,
		"./hi.js": 244,
		"./hr": 245,
		"./hr.js": 245,
		"./hu": 246,
		"./hu.js": 246,
		"./hy-am": 247,
		"./hy-am.js": 247,
		"./id": 248,
		"./id.js": 248,
		"./is": 249,
		"./is.js": 249,
		"./it": 251,
		"./it-ch": 250,
		"./it-ch.js": 250,
		"./it.js": 251,
		"./ja": 252,
		"./ja.js": 252,
		"./jv": 253,
		"./jv.js": 253,
		"./ka": 254,
		"./ka.js": 254,
		"./kk": 255,
		"./kk.js": 255,
		"./km": 256,
		"./km.js": 256,
		"./kn": 257,
		"./kn.js": 257,
		"./ko": 258,
		"./ko.js": 258,
		"./ku": 259,
		"./ku.js": 259,
		"./ky": 260,
		"./ky.js": 260,
		"./lb": 261,
		"./lb.js": 261,
		"./lo": 262,
		"./lo.js": 262,
		"./lt": 263,
		"./lt.js": 263,
		"./lv": 264,
		"./lv.js": 264,
		"./me": 265,
		"./me.js": 265,
		"./mi": 266,
		"./mi.js": 266,
		"./mk": 267,
		"./mk.js": 267,
		"./ml": 268,
		"./ml.js": 268,
		"./mn": 269,
		"./mn.js": 269,
		"./mr": 270,
		"./mr.js": 270,
		"./ms": 272,
		"./ms-my": 271,
		"./ms-my.js": 271,
		"./ms.js": 272,
		"./mt": 273,
		"./mt.js": 273,
		"./my": 274,
		"./my.js": 274,
		"./nb": 275,
		"./nb.js": 275,
		"./ne": 276,
		"./ne.js": 276,
		"./nl": 278,
		"./nl-be": 277,
		"./nl-be.js": 277,
		"./nl.js": 278,
		"./nn": 279,
		"./nn.js": 279,
		"./pa-in": 280,
		"./pa-in.js": 280,
		"./pl": 281,
		"./pl.js": 281,
		"./pt": 283,
		"./pt-br": 282,
		"./pt-br.js": 282,
		"./pt.js": 283,
		"./ro": 284,
		"./ro.js": 284,
		"./ru": 285,
		"./ru.js": 285,
		"./sd": 286,
		"./sd.js": 286,
		"./se": 287,
		"./se.js": 287,
		"./si": 288,
		"./si.js": 288,
		"./sk": 289,
		"./sk.js": 289,
		"./sl": 290,
		"./sl.js": 290,
		"./sq": 291,
		"./sq.js": 291,
		"./sr": 293,
		"./sr-cyrl": 292,
		"./sr-cyrl.js": 292,
		"./sr.js": 293,
		"./ss": 294,
		"./ss.js": 294,
		"./sv": 295,
		"./sv.js": 295,
		"./sw": 296,
		"./sw.js": 296,
		"./ta": 297,
		"./ta.js": 297,
		"./te": 298,
		"./te.js": 298,
		"./tet": 299,
		"./tet.js": 299,
		"./tg": 300,
		"./tg.js": 300,
		"./th": 301,
		"./th.js": 301,
		"./tl-ph": 302,
		"./tl-ph.js": 302,
		"./tlh": 303,
		"./tlh.js": 303,
		"./tr": 304,
		"./tr.js": 304,
		"./tzl": 305,
		"./tzl.js": 305,
		"./tzm": 307,
		"./tzm-latn": 306,
		"./tzm-latn.js": 306,
		"./tzm.js": 307,
		"./ug-cn": 308,
		"./ug-cn.js": 308,
		"./uk": 309,
		"./uk.js": 309,
		"./ur": 310,
		"./ur.js": 310,
		"./uz": 312,
		"./uz-latn": 311,
		"./uz-latn.js": 311,
		"./uz.js": 312,
		"./vi": 313,
		"./vi.js": 313,
		"./x-pseudo": 314,
		"./x-pseudo.js": 314,
		"./yo": 315,
		"./yo.js": 315,
		"./zh-cn": 316,
		"./zh-cn.js": 316,
		"./zh-hk": 317,
		"./zh-hk.js": 317,
		"./zh-tw": 318,
		"./zh-tw.js": 318
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 519;


/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	//This file contains the ES6 extensions to the core Promises/A+ API
	
	var Promise = __webpack_require__(320);
	
	module.exports = Promise;
	
	/* Static Functions */
	
	var TRUE = valuePromise(true);
	var FALSE = valuePromise(false);
	var NULL = valuePromise(null);
	var UNDEFINED = valuePromise(undefined);
	var ZERO = valuePromise(0);
	var EMPTYSTRING = valuePromise('');
	
	function valuePromise(value) {
	  var p = new Promise(Promise._61);
	  p._81 = 1;
	  p._65 = value;
	  return p;
	}
	Promise.resolve = function (value) {
	  if (value instanceof Promise) return value;
	
	  if (value === null) return NULL;
	  if (value === undefined) return UNDEFINED;
	  if (value === true) return TRUE;
	  if (value === false) return FALSE;
	  if (value === 0) return ZERO;
	  if (value === '') return EMPTYSTRING;
	
	  if (typeof value === 'object' || typeof value === 'function') {
	    try {
	      var then = value.then;
	      if (typeof then === 'function') {
	        return new Promise(then.bind(value));
	      }
	    } catch (ex) {
	      return new Promise(function (resolve, reject) {
	        reject(ex);
	      });
	    }
	  }
	  return valuePromise(value);
	};
	
	Promise.all = function (arr) {
	  var args = Array.prototype.slice.call(arr);
	
	  return new Promise(function (resolve, reject) {
	    if (args.length === 0) return resolve([]);
	    var remaining = args.length;
	    function res(i, val) {
	      if (val && (typeof val === 'object' || typeof val === 'function')) {
	        if (val instanceof Promise && val.then === Promise.prototype.then) {
	          while (val._81 === 3) {
	            val = val._65;
	          }
	          if (val._81 === 1) return res(i, val._65);
	          if (val._81 === 2) reject(val._65);
	          val.then(function (val) {
	            res(i, val);
	          }, reject);
	          return;
	        } else {
	          var then = val.then;
	          if (typeof then === 'function') {
	            var p = new Promise(then.bind(val));
	            p.then(function (val) {
	              res(i, val);
	            }, reject);
	            return;
	          }
	        }
	      }
	      args[i] = val;
	      if (--remaining === 0) {
	        resolve(args);
	      }
	    }
	    for (var i = 0; i < args.length; i++) {
	      res(i, args[i]);
	    }
	  });
	};
	
	Promise.reject = function (value) {
	  return new Promise(function (resolve, reject) {
	    reject(value);
	  });
	};
	
	Promise.race = function (values) {
	  return new Promise(function (resolve, reject) {
	    values.forEach(function(value){
	      Promise.resolve(value).then(resolve, reject);
	    });
	  });
	};
	
	/* Prototype Methods */
	
	Promise.prototype['catch'] = function (onRejected) {
	  return this.then(null, onRejected);
	};


/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Promise = __webpack_require__(320);
	
	var DEFAULT_WHITELIST = [
	  ReferenceError,
	  TypeError,
	  RangeError
	];
	
	var enabled = false;
	exports.disable = disable;
	function disable() {
	  enabled = false;
	  Promise._10 = null;
	  Promise._97 = null;
	}
	
	exports.enable = enable;
	function enable(options) {
	  options = options || {};
	  if (enabled) disable();
	  enabled = true;
	  var id = 0;
	  var displayId = 0;
	  var rejections = {};
	  Promise._10 = function (promise) {
	    if (
	      promise._81 === 2 && // IS REJECTED
	      rejections[promise._72]
	    ) {
	      if (rejections[promise._72].logged) {
	        onHandled(promise._72);
	      } else {
	        clearTimeout(rejections[promise._72].timeout);
	      }
	      delete rejections[promise._72];
	    }
	  };
	  Promise._97 = function (promise, err) {
	    if (promise._45 === 0) { // not yet handled
	      promise._72 = id++;
	      rejections[promise._72] = {
	        displayId: null,
	        error: err,
	        timeout: setTimeout(
	          onUnhandled.bind(null, promise._72),
	          // For reference errors and type errors, this almost always
	          // means the programmer made a mistake, so log them after just
	          // 100ms
	          // otherwise, wait 2 seconds to see if they get handled
	          matchWhitelist(err, DEFAULT_WHITELIST)
	            ? 100
	            : 2000
	        ),
	        logged: false
	      };
	    }
	  };
	  function onUnhandled(id) {
	    if (
	      options.allRejections ||
	      matchWhitelist(
	        rejections[id].error,
	        options.whitelist || DEFAULT_WHITELIST
	      )
	    ) {
	      rejections[id].displayId = displayId++;
	      if (options.onUnhandled) {
	        rejections[id].logged = true;
	        options.onUnhandled(
	          rejections[id].displayId,
	          rejections[id].error
	        );
	      } else {
	        rejections[id].logged = true;
	        logError(
	          rejections[id].displayId,
	          rejections[id].error
	        );
	      }
	    }
	  }
	  function onHandled(id) {
	    if (rejections[id].logged) {
	      if (options.onHandled) {
	        options.onHandled(rejections[id].displayId, rejections[id].error);
	      } else if (!rejections[id].onUnhandled) {
	        console.warn(
	          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'
	        );
	        console.warn(
	          '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
	          rejections[id].displayId + '.'
	        );
	      }
	    }
	  }
	}
	
	function logError(id, error) {
	  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
	  var errStr = (error && (error.stack || error)) + '';
	  errStr.split('\n').forEach(function (line) {
	    console.warn('  ' + line);
	  });
	}
	
	function matchWhitelist(error, list) {
	  return list.some(function (cls) {
	    return error instanceof cls;
	  });
	}

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = __webpack_require__(523);
	
	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;
	
	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,
	
	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,
	
	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };
	
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ },
/* 523 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;


/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	/** @license React v16.13.1
	 * react-dom.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	/*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
	'use strict';var aa=__webpack_require__(2),n=__webpack_require__(122),r=__webpack_require__(574);function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));
	function ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;
	function oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};
	function ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
	function ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;
	function Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}
	function Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};
	function Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
	function Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});
	["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});
	["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,
	Va);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});
	C.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});
	function Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
	var Ya=/^(.*)[\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):
	60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
	function pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
	"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
	function rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
	function tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
	null;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
	function Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}
	function Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
	function Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
	function Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}
	function Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
	function Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}
	function Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
	var Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
	function Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};
	ya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}
	var Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}
	function dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}
	function gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
	c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
	function ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;
	function lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}
	function nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}
	function rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}
	function sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=
	ic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}
	var wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
	function Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}
	function Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}
	function Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}
	function Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}
	function Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}
	function Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}
	var Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",
	"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}
	ad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);
	ad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);
	var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}
	function id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}
	function Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}
	var jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
	floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}
	function md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
	function od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
	function pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}
	function td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}
	function wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}
	function yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
	function Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
	function Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;
	function tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}
	function Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}
	function Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,
	b,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}
	function Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;
	function ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}
	function G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}
	n(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,
	b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
	G.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
	function fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);
	var le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
	captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;
	function qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}
	function ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}
	var ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,
	b,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}
	var ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));
	function Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}
	var Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),
	Oe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}
	var Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
	var b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
	dependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===
	a){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;
	k=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;
	function bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}
	var cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;
	function jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}
	var kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;
	case "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
	var pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
	116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===
	a.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
	a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=
	Ve;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=
	We;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}
	function I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
	function Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}
	function Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}
	var If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};
	function ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}
	function fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}
	function og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}
	function sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}
	function vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
	function yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}
	function zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=
	ca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&
	(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}
	function Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}
	var Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;
	c=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}
	function Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
	function Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}
	function Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
	(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;
	function Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
	function Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
	function Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
	2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
	c.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||
	nb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
	a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&
	m&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);
	if(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==
	q.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,
	k.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=
	d.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};
	function ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};
	function hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}
	var jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}
	function oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}
	function th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
	function vh(a,b){return"function"===typeof b?b(a):b}
	function wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&
	(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
	function xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
	function yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}
	function Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}
	function Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
	function Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}
	function zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,
	d)}}
	var sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,
	b];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=
	c}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=
	wh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,
	b,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
	function Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
	function Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}
	function Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}
	function Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
	function ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
	function ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
	function fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
	"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
	typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===
	typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
	x,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):
	("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}
	function gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}
	var ii={dehydrated:null,retryTime:0};
	function ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=
	b;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=
	c}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}
	function ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
	function mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=
	null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
	function $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;
	ni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};
	pi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
	h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
	c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};
	qi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
	function si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));
	return null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=
	{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&
	(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",
	a);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,
	d);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);
	break;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));
	c=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=
	e,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&
	64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,
	e.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=
	b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,
	b.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}
	var Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}
	function Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}
	function Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}
	function Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;
	case 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}
	function Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}
	function Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}
	function Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
	if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}
	function Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}
	function Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}
	function Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
	f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
	function Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;
	case "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?
	d=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=
	f;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
	var Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}
	function $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
	var bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}
	function Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}
	function Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}
	function xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}
	function zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}
	function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=
	b;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}
	function Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;
	c===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
	d;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=
	Hd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}
	function yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}
	function Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}
	function Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}
	function Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=
	null,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;
	break a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==
	jj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}
	function Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}
	function Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==
	a.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}
	function Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
	d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
	m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=
	null;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=
	-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&
	(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,
	top:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=
	null;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}
	function Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}
	function Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
	function Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;
	Rj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;
	if(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,
	b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=
	null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);
	case 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:
	null,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,
	b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==
	k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=
	g}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,
	b,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
	function Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}
	function bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}
	function Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
	firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
	function Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=
	10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}
	function Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
	function ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
	function Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
	function yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
	function bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===
	d?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}
	function fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};
	function gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}
	function ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
	wc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};
	za=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;
	Ga=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};
	(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.13.1",
	rendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};
	exports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};
	exports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
	exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.13.1";


/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function checkDCE() {
	  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	  if (
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
	  ) {
	    return;
	  }
	  if (false) {
	    // This branch is unreachable because this function is only called
	    // in production, but the condition is true only in development.
	    // Therefore if the branch is still here, dead code elimination wasn't
	    // properly applied.
	    // Don't change the message. React DevTools relies on it. Also make sure
	    // this message doesn't occur elsewhere in this function, or it will cause
	    // a false positive.
	    throw new Error('^_^');
	  }
	  try {
	    // Verify that the code above has been dead code eliminated (DCE'd).
	    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	  } catch (err) {
	    // DevTools shouldn't crash React, no matter what.
	    // We should still report in case we break this code.
	    console.error(err);
	  }
	}
	
	if (true) {
	  // DCE check should happen before ReactDOM bundle executes so that
	  // DevTools can report bad minification during injection.
	  checkDCE();
	  module.exports = __webpack_require__(524);
	} else {
	  module.exports = require('./cjs/react-dom.development.js');
	}


/***/ },
/* 526 */
/***/ function(module, exports) {

	/** @license React v16.13.1
	 * react-is.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
	Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
	function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
	exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
	exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
	exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__(2)),_propTypes=_interopRequireDefault(__webpack_require__(15)),_createFirebaseInstance=_interopRequireDefault(__webpack_require__(125)),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24)),_ReduxFirestoreProvider=_interopRequireDefault(__webpack_require__(321));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i],source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target},_extends.apply(this,arguments)}function ReactReduxFirebaseProvider(){var props=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},children=props.children,config=props.config,dispatch=props.dispatch,firebase=props.firebase,initializeAuth=props.initializeAuth,createFirestoreInstance=props.createFirestoreInstance,extendedFirebaseInstance=_react.default.useMemo(function(){var extendedFirebaseInstance=(0,_createFirebaseInstance.default)(firebase,config,dispatch);return initializeAuth&&extendedFirebaseInstance.initializeAuth(),extendedFirebaseInstance},[firebase,config,dispatch]);return createFirestoreInstance?_react.default.createElement(_ReactReduxFirebaseContext.default.Provider,{value:extendedFirebaseInstance},_react.default.createElement(_ReduxFirestoreProvider.default,_extends({},props,{initializeAuth:!1}),children)):_react.default.createElement(_ReactReduxFirebaseContext.default.Provider,{value:extendedFirebaseInstance},children)}ReactReduxFirebaseProvider.defaultProps={initializeAuth:!0},ReactReduxFirebaseProvider.propTypes={children:_propTypes.default.node,config:_propTypes.default.object.isRequired,dispatch:_propTypes.default.func.isRequired,firebase:_propTypes.default.object.isRequired,initializeAuth:_propTypes.default.bool,createFirestoreInstance:_propTypes.default.func};var _default=ReactReduxFirebaseProvider;exports.default=_default,module.exports=exports.default;
	//# sourceMappingURL=ReactReduxFirebaseProvider.js.map

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unWatchUserProfile=unWatchUserProfile,exports.handleProfileWatchResponse=handleProfileWatchResponse,exports.linkAndRetrieveDataWithCredential=linkAndRetrieveDataWithCredential,exports.linkWithPopup=linkWithPopup,exports.linkWithRedirect=linkWithRedirect,exports.signInWithPhoneNumber=signInWithPhoneNumber,exports.linkWithCredential=exports.reloadAuth=exports.updateEmail=exports.updateAuth=exports.updateProfile=exports.verifyPasswordResetCode=exports.confirmPasswordReset=exports.resetPassword=exports.createUser=exports.logout=exports.login=exports.init=exports.handleRedirectResult=exports.createUserProfile=exports.watchUserProfile=void 0;var _pick2=_interopRequireDefault(__webpack_require__(70)),_omit2=_interopRequireDefault(__webpack_require__(69)),_forEach2=_interopRequireDefault(__webpack_require__(64)),_constants=__webpack_require__(16),_helpers=__webpack_require__(322),_utils=__webpack_require__(12),_auth=__webpack_require__(326),_populate=__webpack_require__(72);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||"[object Arguments]"===Object.prototype.toString.call(iter))return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function dispatchLoginError(dispatch,authError){return dispatch({type:_constants.actionTypes.LOGIN_ERROR,authError:authError})}function unWatchUserProfile(firebase){var _firebase$_=firebase._,authUid=_firebase$_.authUid,_firebase$_$config=_firebase$_.config,userProfile=_firebase$_$config.userProfile,useFirestoreForProfile=_firebase$_$config.useFirestoreForProfile;firebase._.profileWatch&&(useFirestoreForProfile&&firebase.firestore?firebase._.profileWatch():firebase.database().ref().child("".concat(userProfile,"/").concat(authUid)).off("value",firebase._.profileWatch),firebase._.profileWatch=null)}function getProfileFromSnap(snap){return snap&&snap.val?snap.val():snap&&snap.data&&snap.exists?snap.data():null}function handleProfileWatchResponse(dispatch,firebase,userProfileSnap,token){var _firebase$_$config2=firebase._.config,profileParamsToPopulate=_firebase$_$config2.profileParamsToPopulate,autoPopulateProfile=_firebase$_$config2.autoPopulateProfile,useFirestoreForProfile=_firebase$_$config2.useFirestoreForProfile,logErrors=_firebase$_$config2.logErrors,profile=getProfileFromSnap(userProfileSnap);profileParamsToPopulate&&!useFirestoreForProfile&&(Array.isArray(profileParamsToPopulate)||(0,_utils.isString)(profileParamsToPopulate))?(0,_populate.promisesForPopulate)(firebase,userProfileSnap.key,profile,profileParamsToPopulate).then(function(data){if((0,_forEach2.default)(data,function(result,path){dispatch({type:_constants.actionTypes.SET,path:path,data:result,timestamp:Date.now(),requesting:!1,requested:!0})}),!autoPopulateProfile)dispatch({type:_constants.actionTypes.SET_PROFILE,profile:token?_objectSpread({},profile,{token:token}):profile});else{var populates=(0,_populate.getPopulateObjs)(profileParamsToPopulate),_profile=userProfileSnap.val();dispatch({type:_constants.actionTypes.SET_PROFILE,profile:(0,_helpers.populate)({profile:token?_objectSpread({},_profile,{token:token}):_profile,data:data},"profile",populates)})}}).catch(function(err){logErrors&&console.error("RRF: Error retrieving data for profile population. Firebase:",err),dispatch({type:_constants.actionTypes.UNAUTHORIZED_ERROR,authError:"Error during profile population: ".concat(err.message)}),dispatch({type:_constants.actionTypes.SET_PROFILE,profile:profile})}):(useFirestoreForProfile&&profileParamsToPopulate&&console.warn("Profile population is not yet supported for Firestore"),dispatch({type:_constants.actionTypes.SET_PROFILE,profile:token?_objectSpread({},profile,{token:token}):profile}))}function createProfileWatchErrorHandler(dispatch,firebase){var _firebase$_$config3=firebase._.config,onProfileListenerError=_firebase$_$config3.onProfileListenerError,logErrors=_firebase$_$config3.logErrors;return function(err){if(logErrors&&console.error("Error with profile listener: ".concat(err.message||""),err),"function"==typeof onProfileListenerError){var factoryResult=onProfileListenerError(err,firebase);if("function"==typeof factoryResult.then)return factoryResult}return Promise.reject(err)}}var watchUserProfile=function(dispatch,firebase){var _firebase$_2=firebase._,authUid=_firebase$_2.authUid,_firebase$_2$config=_firebase$_2.config,userProfile=_firebase$_2$config.userProfile,useFirestoreForProfile=_firebase$_2$config.useFirestoreForProfile,enableClaims=_firebase$_2$config.enableClaims;if(unWatchUserProfile(firebase),userProfile)if(useFirestoreForProfile&&firebase.firestore)firebase._.profileWatch=firebase.firestore().collection(userProfile).doc(authUid).onSnapshot(function(userProfileSnap){return enableClaims?firebase.auth().currentUser.getIdTokenResult(!0).then(function(token){return handleProfileWatchResponse(dispatch,firebase,userProfileSnap,token)}):handleProfileWatchResponse(dispatch,firebase,userProfileSnap,null)},createProfileWatchErrorHandler(dispatch,firebase));else if(firebase.database)firebase._.profileWatch=firebase.database().ref().child("".concat(userProfile,"/").concat(authUid)).on("value",function(userProfileSnap){enableClaims?firebase.auth().currentUser.getIdTokenResult(!0).then(function(token){return handleProfileWatchResponse(dispatch,firebase,userProfileSnap,token)}):handleProfileWatchResponse(dispatch,firebase,userProfileSnap,null)},createProfileWatchErrorHandler(dispatch,firebase));else throw new Error("Real Time Database or Firestore must be included to enable user profile")};exports.watchUserProfile=watchUserProfile;var createUserProfile=function(dispatch,firebase,userData,profile){var config=firebase._.config;if(!config.userProfile||!firebase.database&&!firebase.firestore)return Promise.resolve(userData);if("function"==typeof config.profileFactory)try{profile=config.profileFactory(userData,profile,firebase)}catch(err){return console.error("Error occured within profileFactory function:",err.message||err),Promise.reject(err)}return config.useFirestoreForProfile?firebase.firestore().collection(config.userProfile).doc(userData.uid||userData.user.uid).get().then(function(profileSnap){if(!config.updateProfileOnLogin&&profileSnap.exists)return profileSnap.data();var newProfile=profile;if(!newProfile){var userDataObject=userData.uid?userData.toJSON?userData.toJSON():userData:userData.user.toJSON?userData.user.toJSON():userData.user;newProfile=_objectSpread({},(0,_omit2.default)(userDataObject,config.keysToRemoveFromAuth),{avatarUrl:userDataObject.photoURL})}return Array.isArray(newProfile.providerData)&&(newProfile.providerData=newProfile.providerData.map(function(providerDataItem){return(0,_pick2.default)(providerDataItem,config.keysToPreserveFromProviderData)})),profileSnap.ref.set(newProfile,{merge:!0}).then(function(){return newProfile})}).catch(function(err){return dispatch({type:_constants.actionTypes.UNAUTHORIZED_ERROR,authError:err}),Promise.reject(err)}):firebase.database().ref().child("".concat(config.userProfile,"/").concat(userData.user?userData.user.uid:userData.uid)).once("value").then(function(profileSnap){return config.updateProfileOnLogin||null===profileSnap.val()?profileSnap.ref.update(profile).then(function(){return profile}):profileSnap.val()}).catch(function(err){return dispatch({type:_constants.actionTypes.UNAUTHORIZED_ERROR,authError:err}),"function"==typeof config.onProfileWriteError&&config.onProfileWriteError(err,firebase),Promise.reject(err)})};exports.createUserProfile=createUserProfile;var handleAuthStateChange=function(dispatch,firebase,authData){var config=firebase._.config;authData?(firebase._.authUid=authData.uid,config.presence&&(0,_auth.setupPresence)(dispatch,firebase),dispatch({type:_constants.actionTypes.LOGIN,auth:authData,preserve:config.preserveOnLogin}),watchUserProfile(dispatch,firebase),"function"==typeof config.onAuthStateChanged&&config.onAuthStateChanged(authData,firebase,dispatch)):("function"==typeof config.onAuthStateChanged&&firebase._.config.onAuthStateChanged(authData,firebase,dispatch),dispatch({type:_constants.actionTypes.AUTH_EMPTY_CHANGE,preserve:config.preserveOnEmptyAuthChange}))},handleRedirectResult=function(dispatch,firebase,authData){if("function"==typeof firebase._.config.onRedirectResult&&firebase._.config.onRedirectResult(authData,firebase,dispatch),authData&&authData.user){var user=authData.user;return firebase._.authUid=user.uid,watchUserProfile(dispatch,firebase),dispatch({type:_constants.actionTypes.LOGIN,auth:user,preserve:firebase._.config.preserveOnLogin}),createUserProfile(dispatch,firebase,user,{email:user.email,displayName:user.providerData[0].displayName||user.email,avatarUrl:user.providerData[0].photoURL,providerData:user.providerData})}};exports.handleRedirectResult=handleRedirectResult;var init=function(dispatch,firebase){firebase.auth&&(dispatch({type:_constants.actionTypes.AUTHENTICATION_INIT_STARTED}),firebase.auth().onAuthStateChanged(function(authData){return handleAuthStateChange(dispatch,firebase,authData)}),firebase._.config.enableRedirectHandling&&"function"==typeof firebase.auth().getRedirectResult&&"undefined"!=typeof window&&window.location&&window.location.protocol&&-1!==window.location.protocol.indexOf("http")&&firebase.auth().getRedirectResult().then(function(authData){return handleRedirectResult(dispatch,firebase,authData)}).catch(function(error){return dispatchLoginError(dispatch,error),Promise.reject(error)}),firebase.auth().currentUser,dispatch({type:_constants.actionTypes.AUTHENTICATION_INIT_FINISHED}))};exports.init=init;var login=function(dispatch,firebase,credentials){var _firebase$auth;firebase._.config.resetBeforeLogin&&dispatchLoginError(dispatch,null);var _getLoginMethodAndPar=(0,_auth.getLoginMethodAndParams)(firebase,credentials),method=_getLoginMethodAndPar.method,params=_getLoginMethodAndPar.params;return(_firebase$auth=firebase.auth())[method].apply(_firebase$auth,_toConsumableArray(params)).then(function(userData){if(!userData)return Promise.resolve(null);if(["signInWithEmailAndPassword","signInAndRetrieveDataWithEmailAndPassword"].includes(method))return{user:userData};if(["signInWithCustomToken","signInAndRetrieveDataWithCustomToken"].includes(method))return firebase._.config.updateProfileOnLogin?createUserProfile(dispatch,firebase,userData,credentials.profile):{user:userData};if("signInWithPhoneNumber"===method)return _objectSpread({},userData,{confirm:function confirm(code){return userData.confirm(code).then(function(_ref){var user=_ref.user,additionalUserInfo=_ref.additionalUserInfo;return createUserProfile(dispatch,firebase,user,{phoneNumber:user.providerData[0].phoneNumber,providerData:user.providerData}).then(function(profile){return{profile:profile,user:user,additionalUserInfo:additionalUserInfo}})})}});var user=userData.user||userData;return createUserProfile(dispatch,firebase,user,credentials.profile||{email:user.email,displayName:user.providerData[0].displayName||user.email,avatarUrl:user.providerData[0].photoURL,providerData:user.providerData}).then(function(profile){return _objectSpread({profile:profile},userData)})}).catch(function(err){return dispatchLoginError(dispatch,err),Promise.reject(err)})};exports.login=login;var logout=function(dispatch,firebase){return unWatchUserProfile(firebase),firebase.auth().signOut().then(function(){var action={type:_constants.actionTypes.LOGOUT};return firebase._.config.preserveOnLogout&&(action.preserve=firebase._.config.preserveOnLogout),dispatch(action),firebase._.authUid=null,firebase})};exports.logout=logout;var createUser=function(dispatch,firebase,_ref2,profile){var email=_ref2.email,password=_ref2.password;if(dispatchLoginError(dispatch,null),!email||!password){var error=new Error("Email and Password are required to create user");return dispatchLoginError(dispatch,error),Promise.reject(error)}return firebase.auth().createUserWithEmailAndPassword(email,password).then(function(userData){return createUserProfile(dispatch,firebase,userData,profile||{email:email})}).catch(function(err){return dispatchLoginError(dispatch,err),Promise.reject(err)})};exports.createUser=createUser;var resetPassword=function(dispatch,firebase,email){return dispatchLoginError(dispatch,null),firebase.auth().sendPasswordResetEmail(email).catch(function(err){if(err){switch(err.code){case"auth/user-not-found":dispatchLoginError(dispatch,new Error("The specified user account does not exist."));break;default:dispatchLoginError(dispatch,err);}return Promise.reject(err)}})};exports.resetPassword=resetPassword;var confirmPasswordReset=function(dispatch,firebase,code,password){return dispatchLoginError(dispatch,null),firebase.auth().confirmPasswordReset(code,password).catch(function(err){if(err){switch(err.code){case"auth/expired-action-code":dispatchLoginError(dispatch,new Error("The action code has expired."));break;case"auth/invalid-action-code":dispatchLoginError(dispatch,new Error("The action code is invalid."));break;case"auth/user-disabled":dispatchLoginError(dispatch,new Error("The user is disabled."));break;case"auth/user-not-found":dispatchLoginError(dispatch,new Error("The user is not found."));break;case"auth/weak-password":dispatchLoginError(dispatch,new Error("The password is not strong enough."));break;default:dispatchLoginError(dispatch,err);}return Promise.reject(err)}})};exports.confirmPasswordReset=confirmPasswordReset;var verifyPasswordResetCode=function(dispatch,firebase,code){return dispatchLoginError(dispatch,null),firebase.auth().verifyPasswordResetCode(code).catch(function(err){return err&&dispatchLoginError(dispatch,err),Promise.reject(err)})};exports.verifyPasswordResetCode=verifyPasswordResetCode;var updateProfile=function(dispatch,firebase,profileUpdate,options){var config=firebase._.config;dispatch({type:_constants.actionTypes.PROFILE_UPDATE_START,payload:profileUpdate});var updatePromise=config.useFirestoreForProfile?_auth.updateProfileOnFirestore:_auth.updateProfileOnRTDB;return updatePromise(firebase,profileUpdate,options).then(function(snap){return dispatch({type:_constants.actionTypes.PROFILE_UPDATE_SUCCESS,payload:config.useFirestoreForProfile?snap.data():snap.val()}),snap}).catch(function(error){return dispatch({type:_constants.actionTypes.PROFILE_UPDATE_ERROR,error:error}),Promise.reject(error)})};exports.updateProfile=updateProfile;var updateAuth=function(dispatch,firebase,authUpdate,updateInProfile){if(dispatch({type:_constants.actionTypes.AUTH_UPDATE_START,payload:authUpdate}),!firebase.auth().currentUser){var error=new Error("User must be logged in to update auth.");return dispatch({type:_constants.actionTypes.AUTH_UPDATE_ERROR,payload:error}),Promise.reject(error)}return firebase.auth().currentUser.updateProfile(authUpdate).then(function(payload){return dispatch({type:_constants.actionTypes.AUTH_UPDATE_SUCCESS,auth:firebase.auth().currentUser}),updateInProfile?updateProfile(dispatch,firebase,authUpdate):payload}).catch(function(error){return dispatch({type:_constants.actionTypes.AUTH_UPDATE_ERROR,error:error}),Promise.reject(error)})};exports.updateAuth=updateAuth;var updateEmail=function(dispatch,firebase,newEmail,updateInProfile){if(dispatch({type:_constants.actionTypes.EMAIL_UPDATE_START,payload:newEmail}),!firebase.auth().currentUser){var error=new Error("User must be logged in to update email.");return dispatch({type:_constants.actionTypes.EMAIL_UPDATE_ERROR,error:error}),Promise.reject(error)}return firebase.auth().currentUser.updateEmail(newEmail).then(function(payload){return dispatch({type:_constants.actionTypes.EMAIL_UPDATE_SUCCESS,payload:newEmail}),updateInProfile?updateProfile(dispatch,firebase,{email:newEmail}):payload}).catch(function(error){return dispatch({type:_constants.actionTypes.EMAIL_UPDATE_ERROR,error:error}),Promise.reject(error)})};exports.updateEmail=updateEmail;var reloadAuth=function(dispatch,firebase){if(dispatch({type:_constants.actionTypes.AUTH_RELOAD_START}),!firebase.auth().currentUser){var error=new Error("User must be logged in to reload auth.");return dispatch({type:_constants.actionTypes.AUTH_RELOAD_ERROR,error:error}),Promise.reject(error)}return firebase.auth().currentUser.reload().then(function(){var auth=firebase.auth().currentUser;return dispatch({type:_constants.actionTypes.AUTH_RELOAD_SUCCESS,payload:auth}),auth}).catch(function(error){return dispatch({type:_constants.actionTypes.AUTH_RELOAD_ERROR,error:error}),Promise.reject(error)})};exports.reloadAuth=reloadAuth;var linkWithCredential=function(dispatch,firebase,credential){if(dispatch({type:_constants.actionTypes.AUTH_LINK_START}),!firebase.auth().currentUser){var error=new Error("User must be logged in to link with credential.");return dispatch({type:_constants.actionTypes.AUTH_LINK_ERROR,error:error}),Promise.reject(error)}return firebase.auth().currentUser.linkWithCredential(credential).then(function(auth){return dispatch({type:_constants.actionTypes.AUTH_LINK_SUCCESS,payload:auth}),auth}).catch(function(error){return dispatch({type:_constants.actionTypes.AUTH_LINK_ERROR,error:error}),Promise.reject(error)})};exports.linkWithCredential=linkWithCredential;function linkWithAuthDispatch(promiseFunc,args,dispatch,firebase){if(dispatch({type:_constants.actionTypes.AUTH_LINK_START}),!firebase.auth().currentUser){var error=new Error("User must be logged in to link with credential.");return dispatch({type:_constants.actionTypes.AUTH_LINK_ERROR,error:error}),Promise.reject(error)}return promiseFunc.apply(void 0,_toConsumableArray(args)).then(function(auth){return dispatch({type:_constants.actionTypes.AUTH_LINK_SUCCESS,payload:auth}),auth}).catch(function(error){return dispatch({type:_constants.actionTypes.AUTH_LINK_ERROR,error:error}),Promise.reject(error)})}function linkAndRetrieveDataWithCredential(dispatch,firebase,credential){return linkWithAuthDispatch(firebase.auth().currentUser.linkAndRetrieveDataWithCredential,[credential],dispatch,firebase)}function linkWithPopup(dispatch,firebase,credential){return linkWithAuthDispatch(firebase.auth().currentUser.linkWithPopup,[credential],dispatch,firebase)}function linkWithRedirect(dispatch,firebase,provider){return linkWithAuthDispatch(firebase.auth().currentUser.linkWithRedirect,[provider],dispatch,firebase)}function signInWithPhoneNumber(firebase,dispatch,phoneNumber,applicationVerifier){var options=4<arguments.length&&arguments[4]!==void 0?arguments[4]:{};return login(dispatch,firebase,_objectSpread({phoneNumber:phoneNumber,applicationVerifier:applicationVerifier},options))}
	//# sourceMappingURL=auth.js.map

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.uploadFile=uploadFile,exports.uploadFiles=uploadFiles,exports.deleteFile=deleteFile;var _map2=_interopRequireDefault(__webpack_require__(33)),_constants=__webpack_require__(16),_actions=__webpack_require__(325),_storage=__webpack_require__(537);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(0<=excluded.indexOf(key))&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var FILE_UPLOAD_START=_constants.actionTypes.FILE_UPLOAD_START,FILE_UPLOAD_ERROR=_constants.actionTypes.FILE_UPLOAD_ERROR,FILE_UPLOAD_COMPLETE=_constants.actionTypes.FILE_UPLOAD_COMPLETE,FILE_DELETE_START=_constants.actionTypes.FILE_DELETE_START,FILE_DELETE_ERROR=_constants.actionTypes.FILE_DELETE_ERROR,FILE_DELETE_COMPLETE=_constants.actionTypes.FILE_DELETE_COMPLETE;function uploadFile(dispatch,firebase,config){if(!firebase.storage)throw new Error("Firebase storage is required to upload files");var _ref=config||{},path=_ref.path,file=_ref.file,dbPath=_ref.dbPath,_ref$options=_ref.options,options=void 0===_ref$options?{progress:!1}:_ref$options,fileMetadata=(options||{}).metadata,logErrors=firebase._.config.logErrors,nameFromOptions="function"==typeof options.name?options.name(file,firebase,config):options.name,filename=nameFromOptions||file.name,meta=_objectSpread({},config,{filename:filename});dispatch({type:FILE_UPLOAD_START,payload:_objectSpread({},config,{filename:filename})});return function uploadPromise(){return options.progress?(0,_storage.uploadFileWithProgress)(dispatch,firebase,{path:path,file:file,filename:filename,meta:meta,fileMetadata:fileMetadata}):firebase.storage().ref("".concat(path,"/").concat(filename)).put(file,fileMetadata)}().then(function(uploadTaskSnapshot){return dbPath&&(firebase.database||firebase.firestore)?(0,_storage.writeMetadataToDb)({firebase:firebase,uploadTaskSnapshot:uploadTaskSnapshot,dbPath:dbPath,options:options}).then(function(payload){return dispatch({type:FILE_UPLOAD_COMPLETE,meta:_objectSpread({},config,{filename:filename}),payload:payload}),payload}):(dispatch({type:FILE_UPLOAD_COMPLETE,meta:_objectSpread({},config,{filename:filename}),payload:{uploadTaskSnapshot:uploadTaskSnapshot,uploadTaskSnaphot:uploadTaskSnapshot}}),{uploadTaskSnapshot:uploadTaskSnapshot,uploadTaskSnaphot:uploadTaskSnapshot})}).catch(function(err){return logErrors&&console.error&&console.error("RRF: Error uploading file: ".concat(err.message||err),err),dispatch({type:FILE_UPLOAD_ERROR,path:path,payload:err}),Promise.reject(err)})}function uploadFiles(dispatch,firebase,_ref3){var files=_ref3.files,other=_objectWithoutProperties(_ref3,["files"]);return Promise.all((0,_map2.default)(files,function(file){return uploadFile(dispatch,firebase,_objectSpread({file:file},other))}))}function deleteFile(dispatch,firebase,_ref4){var path=_ref4.path,dbPath=_ref4.dbPath;return(0,_actions.wrapInDispatch)(dispatch,{method:_storage.deleteFile,args:[firebase,{path:path,dbPath:dbPath}],types:[FILE_DELETE_START,FILE_DELETE_COMPLETE,FILE_DELETE_ERROR]})}
	//# sourceMappingURL=storage.js.map

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=firebaseConnect;var _differenceWith2=_interopRequireDefault(__webpack_require__(180)),_isEqual2=_interopRequireDefault(__webpack_require__(31)),_react=_interopRequireWildcard(__webpack_require__(2)),_propTypes=_interopRequireDefault(__webpack_require__(15)),_hoistNonReactStatics=_interopRequireDefault(__webpack_require__(25)),_query=__webpack_require__(124),_utils=__webpack_require__(12),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function(){return cache},cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={};if(null!=obj){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _extends(){return _extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i],source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target},_extends.apply(this,arguments)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&("object"===_typeof(call)||"function"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function firebaseConnect(){var queriesConfig=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[];return function(WrappedComponent){function FirebaseConnectWithContext(props){return _react.default.createElement(_ReactReduxFirebaseContext.default.Consumer,null,function(_internalFirebase){return _react.default.createElement(FirebaseConnectWrapped,_extends({},props,{dispatch:_internalFirebase.dispatch,firebase:_internalFirebase}))})}var FirebaseConnectWrapped=function(_Component){function FirebaseConnectWrapped(){var _getPrototypeOf2,_this;_classCallCheck(this,FirebaseConnectWrapped);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FirebaseConnectWrapped)).call.apply(_getPrototypeOf2,[this].concat(args))),_defineProperty(_assertThisInitialized(_this),"firebaseEvents",[]),_defineProperty(_assertThisInitialized(_this),"firebase",null),_defineProperty(_assertThisInitialized(_this),"prevData",null),_this}return _inherits(FirebaseConnectWrapped,_Component),_createClass(FirebaseConnectWrapped,[{key:"componentDidMount",value:function componentDidMount(){var _this$props=this.props,firebase=_this$props.firebase,dispatch=_this$props.dispatch,inputAsFunc=(0,_utils.createCallable)(queriesConfig);this.prevData=inputAsFunc(this.props,this.props);var ref=firebase.ref,helpers=firebase.helpers,storage=firebase.storage,database=firebase.database,auth=firebase.auth;this.firebase=_objectSpread({ref:ref,storage:storage,database:database,auth:auth},helpers),this._firebaseEvents=(0,_utils.getEventsFromInput)(this.prevData),(0,_query.watchEvents)(firebase,dispatch,this._firebaseEvents)}},{key:"componentWillUnmount",value:function componentWillUnmount(){var _this$props2=this.props,firebase=_this$props2.firebase,dispatch=_this$props2.dispatch;(0,_query.unWatchEvents)(firebase,dispatch,this._firebaseEvents)}},{key:"UNSAFE_componentWillReceiveProps",value:function UNSAFE_componentWillReceiveProps(np){var _this$props3=this.props,firebase=_this$props3.firebase,dispatch=_this$props3.dispatch,inputAsFunc=(0,_utils.createCallable)(queriesConfig),data=inputAsFunc(np,this.store);if(!(0,_isEqual2.default)(data,this.prevData)){var itemsToSubscribe=(0,_differenceWith2.default)(data,this.prevData,_isEqual2.default),itemsToUnsubscribe=(0,_differenceWith2.default)(this.prevData,data,_isEqual2.default);this.prevData=data,(0,_query.unWatchEvents)(firebase,dispatch,(0,_utils.getEventsFromInput)(itemsToUnsubscribe)),this._firebaseEvents=(0,_utils.getEventsFromInput)(data),(0,_query.watchEvents)(firebase,dispatch,(0,_utils.getEventsFromInput)(itemsToSubscribe))}}},{key:"render",value:function render(){return _react.default.createElement(WrappedComponent,this.props)}}]),FirebaseConnectWrapped}(_react.Component);return _defineProperty(FirebaseConnectWrapped,"displayName",(0,_utils.wrapDisplayName)(WrappedComponent,"FirebaseConnectWrapped")),_defineProperty(FirebaseConnectWrapped,"wrappedComponent",WrappedComponent),FirebaseConnectWrapped.propTypes={dispatch:_propTypes.default.func.isRequired,firebase:_propTypes.default.object.isRequired},FirebaseConnectWithContext.displayName=(0,_utils.wrapDisplayName)(WrappedComponent,"FirebaseConnect"),FirebaseConnectWithContext.wrappedComponent=WrappedComponent,(0,_hoistNonReactStatics.default)(FirebaseConnectWithContext,WrappedComponent)}}module.exports=exports.default;
	//# sourceMappingURL=firebaseConnect.js.map

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=firestoreConnect;var _isEqual2=_interopRequireDefault(__webpack_require__(31)),_react=_interopRequireWildcard(__webpack_require__(2)),_propTypes=_interopRequireDefault(__webpack_require__(15)),_hoistNonReactStatics=_interopRequireDefault(__webpack_require__(25)),_utils=__webpack_require__(12),_ReduxFirestoreContext=_interopRequireDefault(__webpack_require__(44)),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function(){return cache},cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={};if(null!=obj){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _extends(){return _extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i],source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target},_extends.apply(this,arguments)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&("object"===_typeof(call)||"function"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function firestoreConnect(){var queriesConfig=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[];return function(WrappedComponent){function FirestoreConnectWithContext(props){return _react.default.createElement(_ReactReduxFirebaseContext.default.Consumer,null,function(_internalFirebase){return _react.default.createElement(_ReduxFirestoreContext.default.Consumer,null,function(_internalFirestore){return _react.default.createElement(FirestoreConnectWrapped,_extends({},props,{dispatch:_internalFirebase.dispatch,firestore:_internalFirestore,firebase:_internalFirebase}))})})}var FirestoreConnectWrapped=function(_Component){function FirestoreConnectWrapped(){var _getPrototypeOf2,_this;_classCallCheck(this,FirestoreConnectWrapped);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FirestoreConnectWrapped)).call.apply(_getPrototypeOf2,[this].concat(args))),_defineProperty(_assertThisInitialized(_this),"prevData",null),_this}return _inherits(FirestoreConnectWrapped,_Component),_createClass(FirestoreConnectWrapped,[{key:"componentDidMount",value:function componentDidMount(){if(this.firestoreIsEnabled){var inputAsFunc=(0,_utils.createCallable)(queriesConfig);this.prevData=inputAsFunc(this.props,this.props),this.props.firestore.setListeners(this.prevData)}}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.firestoreIsEnabled&&this.prevData&&this.props.firestore.unsetListeners(this.prevData)}},{key:"UNSAFE_componentWillReceiveProps",value:function UNSAFE_componentWillReceiveProps(np){var firestore=this.props.firestore,inputAsFunc=(0,_utils.createCallable)(queriesConfig),data=inputAsFunc(np,this.props);if(this.firestoreIsEnabled&&!(0,_isEqual2.default)(data,this.prevData)){var changes=(0,_utils.getChanges)(data,this.prevData);this.prevData=data,firestore.unsetListeners(changes.removed),firestore.setListeners(changes.added)}}},{key:"render",value:function render(){return _react.default.createElement(WrappedComponent,this.props)}},{key:"firestoreIsEnabled",get:function get(){return!!this.props.firestore}}]),FirestoreConnectWrapped}(_react.Component);return _defineProperty(FirestoreConnectWrapped,"wrappedComponent",WrappedComponent),_defineProperty(FirestoreConnectWrapped,"displayName",(0,_utils.wrapDisplayName)(WrappedComponent,"FirestoreConnectWrapped")),FirestoreConnectWrapped.propTypes={dispatch:_propTypes.default.func.isRequired,firebase:_propTypes.default.object,firestore:_propTypes.default.object},FirestoreConnectWithContext.displayName=(0,_utils.wrapDisplayName)(WrappedComponent,"FirestoreConnect"),FirestoreConnectWithContext.wrappedComponent=WrappedComponent,(0,_hoistNonReactStatics.default)(FirestoreConnectWithContext,WrappedComponent)}}module.exports=exports.default;
	//# sourceMappingURL=firestoreConnect.js.map

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reducers=__webpack_require__(126),_reducers2=__webpack_require__(533),_default=(0,_reducers.combineReducers)({requesting:_reducers2.requestingReducer,requested:_reducers2.requestedReducer,timestamps:_reducers2.timestampsReducer,data:_reducers2.dataReducer,ordered:_reducers2.orderedReducer,auth:_reducers2.authReducer,authError:_reducers2.authErrorReducer,profile:_reducers2.profileReducer,listeners:_reducers2.listenersReducer,isInitializing:_reducers2.isInitializingReducer,errors:_reducers2.errorsReducer});exports.default=_default,module.exports=exports.default;
	//# sourceMappingURL=reducer.js.map

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isInitializingReducer=isInitializingReducer,exports.requestingReducer=requestingReducer,exports.requestedReducer=requestedReducer,exports.timestampsReducer=timestampsReducer,exports.authReducer=authReducer,exports.authErrorReducer=authErrorReducer,exports.profileReducer=profileReducer,exports.errorsReducer=errorsReducer,exports.orderedReducer=exports.dataReducer=exports.listenersReducer=void 0;var _assign2=_interopRequireDefault(__webpack_require__(483)),_setWith2=_interopRequireDefault(__webpack_require__(183)),_isObject2=_interopRequireDefault(__webpack_require__(4)),_get2=_interopRequireDefault(__webpack_require__(11)),_omit2=_interopRequireDefault(__webpack_require__(69)),_pick2=_interopRequireDefault(__webpack_require__(70)),_constants=__webpack_require__(16),_reducers=__webpack_require__(126);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||"[object Arguments]"===Object.prototype.toString.call(iter))return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(source,!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var START=_constants.actionTypes.START,SET=_constants.actionTypes.SET,SET_PROFILE=_constants.actionTypes.SET_PROFILE,MERGE=_constants.actionTypes.MERGE,LOGIN=_constants.actionTypes.LOGIN,LOGOUT=_constants.actionTypes.LOGOUT,LOGIN_ERROR=_constants.actionTypes.LOGIN_ERROR,CLEAR_ERRORS=_constants.actionTypes.CLEAR_ERRORS,REMOVE=_constants.actionTypes.REMOVE,NO_VALUE=_constants.actionTypes.NO_VALUE,SET_LISTENER=_constants.actionTypes.SET_LISTENER,UNSET_LISTENER=_constants.actionTypes.UNSET_LISTENER,AUTHENTICATION_INIT_STARTED=_constants.actionTypes.AUTHENTICATION_INIT_STARTED,AUTHENTICATION_INIT_FINISHED=_constants.actionTypes.AUTHENTICATION_INIT_FINISHED,AUTH_EMPTY_CHANGE=_constants.actionTypes.AUTH_EMPTY_CHANGE,AUTH_LINK_SUCCESS=_constants.actionTypes.AUTH_LINK_SUCCESS,UNAUTHORIZED_ERROR=_constants.actionTypes.UNAUTHORIZED_ERROR,AUTH_UPDATE_SUCCESS=_constants.actionTypes.AUTH_UPDATE_SUCCESS,AUTH_RELOAD_SUCCESS=_constants.actionTypes.AUTH_RELOAD_SUCCESS,PROFILE_UPDATE_SUCCESS=_constants.actionTypes.PROFILE_UPDATE_SUCCESS;function isInitializingReducer(){var state=!!(0<arguments.length&&arguments[0]!==void 0)&&arguments[0],action=1<arguments.length?arguments[1]:void 0;switch(action.type){case AUTHENTICATION_INIT_STARTED:return!0;case AUTHENTICATION_INIT_FINISHED:return!1;default:return state;}}function requestingReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},_ref=1<arguments.length?arguments[1]:void 0,type=_ref.type,path=_ref.path;return type===START?_objectSpread({},state,_defineProperty({},(0,_reducers.getSlashStrPath)(path),!0)):type===NO_VALUE||type===SET?_objectSpread({},state,_defineProperty({},(0,_reducers.getSlashStrPath)(path),!1)):state}function requestedReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},_ref2=1<arguments.length?arguments[1]:void 0,type=_ref2.type,path=_ref2.path;return type===START?_objectSpread({},state,_defineProperty({},(0,_reducers.getSlashStrPath)(path),!1)):type===NO_VALUE||type===SET?_objectSpread({},state,_defineProperty({},(0,_reducers.getSlashStrPath)(path),!0)):state}function timestampsReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},_ref3=1<arguments.length?arguments[1]:void 0,type=_ref3.type,path=_ref3.path;return type===START||type===NO_VALUE||type===SET?_objectSpread({},state,_defineProperty({},(0,_reducers.getSlashStrPath)(path),Date.now())):state}function createDataReducer(){var actionKey=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"data";return function(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},action=1<arguments.length?arguments[1]:void 0;switch(action.type){case SET:return(0,_setWith2.default)(Object,(0,_reducers.getDotStrPath)(action.path),action[actionKey],state);case MERGE:var previousData=(0,_get2.default)(state,(0,_reducers.getDotStrPath)(action.path),{}),mergedData=(0,_assign2.default)(previousData,action[actionKey]);return(0,_setWith2.default)(Object,(0,_reducers.getDotStrPath)(action.path),mergedData,state);case NO_VALUE:return(0,_setWith2.default)(Object,(0,_reducers.getDotStrPath)(action.path),null,state);case REMOVE:return"data"===actionKey?(0,_reducers.recursiveUnset)((0,_reducers.getDotStrPath)(action.path),state):state;case LOGOUT:if(action.preserve){if(Array.isArray(action.preserve))return(0,_pick2.default)(state,action.preserve);if((0,_isObject2.default)(action.preserve))return action.preserve[actionKey]?(0,_reducers.preserveValuesFromState)(state,action.preserve[actionKey],{}):{};throw new Error("Invalid preserve parameter. It must be an Object or an Array")}return{};default:return state;}}}function authReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{isLoaded:!1,isEmpty:!0},action=1<arguments.length?arguments[1]:void 0;switch(action.type){case LOGIN:case AUTH_UPDATE_SUCCESS:if(!action.auth)return{isEmpty:!0,isLoaded:!0};var auth=action.auth.toJSON?action.auth.toJSON():action.auth;return action.preserve&&action.preserve.auth?(0,_reducers.preserveValuesFromState)(state,action.preserve.auth,_objectSpread({},auth,{isEmpty:!1,isLoaded:!0})):_objectSpread({},auth,{isEmpty:!1,isLoaded:!0});case AUTH_LINK_SUCCESS:case AUTH_RELOAD_SUCCESS:return action.payload?_objectSpread({},action.payload.toJSON?action.payload.toJSON():action.payload,{isEmpty:!1,isLoaded:!0}):{isEmpty:!0,isLoaded:!0};case LOGIN_ERROR:case AUTH_EMPTY_CHANGE:case LOGOUT:return action.preserve&&action.preserve.auth?(0,_reducers.preserveValuesFromState)(state,action.preserve.auth,{isLoaded:!0,isEmpty:!0}):{isLoaded:!0,isEmpty:!0};default:return state;}}function authErrorReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:null,action=1<arguments.length?arguments[1]:void 0;switch(action.type){case LOGIN:case LOGOUT:return null;case LOGIN_ERROR:case UNAUTHORIZED_ERROR:return action.authError;default:return state;}}function profileReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{isLoaded:!1,isEmpty:!0},action=1<arguments.length?arguments[1]:void 0;switch(action.type){case SET_PROFILE:return action.profile?_objectSpread({},action.profile,{isEmpty:!1,isLoaded:!0}):_objectSpread({},state,{isEmpty:!0,isLoaded:!0});case PROFILE_UPDATE_SUCCESS:return Object.assign({},state,action.payload);case LOGIN:return action.preserve&&action.preserve.profile?(0,_reducers.preserveValuesFromState)(state,action.preserve.profile,{isLoaded:!0,isEmpty:!0}):{isEmpty:!0,isLoaded:!1};case LOGOUT:case AUTH_EMPTY_CHANGE:return action.preserve&&action.preserve.profile?(0,_reducers.preserveValuesFromState)(state,action.preserve.profile,{isLoaded:!0,isEmpty:!0}):{isLoaded:!0,isEmpty:!0};default:return state;}}function errorsReducer(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[],action=1<arguments.length?arguments[1]:void 0;switch(action.type){case LOGIN_ERROR:case UNAUTHORIZED_ERROR:if(!Array.isArray(state))throw new Error("Errors state must be an array");return[].concat(_toConsumableArray(state),[action.authError]);case LOGOUT:case CLEAR_ERRORS:if(action.preserve&&action.preserve.errors){if("function"!=typeof action.preserve.errors)throw new Error("Preserve for the errors state currently only supports functions");return state.filter(action.preserve.errors)}return[];default:return state;}}function listenersById(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},_ref4=1<arguments.length?arguments[1]:void 0,type=_ref4.type,path=_ref4.path,payload=_ref4.payload;return type===SET_LISTENER?_objectSpread({},state,_defineProperty({},payload.id,{id:payload.id,path:path})):type===UNSET_LISTENER?(0,_omit2.default)(state,[payload.id]):state}function allListeners(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[],_ref5=1<arguments.length?arguments[1]:void 0,type=_ref5.type,path=_ref5.path,payload=_ref5.payload;return type===SET_LISTENER?[].concat(_toConsumableArray(state),[payload.id]):type===UNSET_LISTENER?state.filter(function(lId){return lId!==payload.id}):state}var listenersReducer=(0,_reducers.combineReducers)({byId:listenersById,allIds:allListeners});exports.listenersReducer=listenersReducer;var dataReducer=createDataReducer();exports.dataReducer=dataReducer;var orderedReducer=createDataReducer("ordered");exports.orderedReducer=orderedReducer;
	//# sourceMappingURL=reducers.js.map

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useFirebaseConnect;var _differenceWith2=_interopRequireDefault(__webpack_require__(180)),_isEqual2=_interopRequireDefault(__webpack_require__(31)),_react=__webpack_require__(2),_query=__webpack_require__(124),_utils=__webpack_require__(12),_useFirebase=_interopRequireDefault(__webpack_require__(323));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function useFirebaseConnect(queriesConfig){var firebase=(0,_useFirebase.default)(),eventRef=(0,_react.useRef)(),dataRef=(0,_react.useRef)(),data=(0,_react.useMemo)(function(){return(0,_utils.invokeArrayQuery)(queriesConfig)},[queriesConfig]);(0,_react.useEffect)(function(){if(null!==data&&!(0,_isEqual2.default)(data,dataRef.current)){var itemsToSubscribe=(0,_differenceWith2.default)(data,dataRef.current,_isEqual2.default),itemsToUnsubscribe=(0,_differenceWith2.default)(dataRef.current,data,_isEqual2.default);dataRef.current=data,(0,_query.unWatchEvents)(firebase,firebase.dispatch,(0,_utils.getEventsFromInput)(itemsToUnsubscribe)),eventRef.current=(0,_utils.getEventsFromInput)(data),(0,_query.watchEvents)(firebase,firebase.dispatch,(0,_utils.getEventsFromInput)(itemsToSubscribe))}},[data]),(0,_react.useEffect)(function(){return function(){(0,_query.unWatchEvents)(firebase,firebase.dispatch,eventRef.current)}},[])}module.exports=exports.default;
	//# sourceMappingURL=useFirebaseConnect.js.map

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useFirestoreConnect;var _isEqual2=_interopRequireDefault(__webpack_require__(31)),_react=__webpack_require__(2),_utils=__webpack_require__(12),_useFirestore=_interopRequireDefault(__webpack_require__(324));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function useFirestoreConnect(queriesConfigs){var firestore=(0,_useFirestore.default)(),firestoreIsEnabled=!!firestore,queryRef=(0,_react.useRef)(),data=(0,_react.useMemo)(function(){return(0,_utils.invokeArrayQuery)(queriesConfigs)},[queriesConfigs]);(0,_react.useEffect)(function(){if(firestoreIsEnabled&&!(0,_isEqual2.default)(data,queryRef.current)){var changes=(0,_utils.getChanges)(data,queryRef.current);queryRef.current=data,firestore.unsetListeners(changes.removed),firestore.setListeners(changes.added)}},[data]),(0,_react.useEffect)(function(){return function(){firestoreIsEnabled&&queryRef.current&&firestore.unsetListeners(queryRef.current)}},[])}module.exports=exports.default;
	//# sourceMappingURL=useFirestoreConnect.js.map

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pathStrToObj=pathStrToObj,exports.getEventsFromInput=getEventsFromInput,exports.default=void 0;var _remove2=_interopRequireDefault(__webpack_require__(505)),_isObject2=_interopRequireDefault(__webpack_require__(4)),_flatMap2=_interopRequireDefault(__webpack_require__(479)),_populate=__webpack_require__(72),_query=__webpack_require__(327);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function pathStrToObj(path){var pathObj={path:path,type:"value",isQuery:!1},queryId=(0,_query.getQueryIdFromPath)(path);if(queryId){var pathArray=path.split("#");pathObj=Object.assign({},pathObj,{queryId:queryId,isQuery:!0,path:pathArray[0],queryParams:pathArray[1].split("&")}),(0,_populate.getPopulates)(pathArray[1].split("&"))&&(pathObj.populates=(0,_populate.getPopulates)(pathArray[1].split("&")),pathObj.queryParams=(0,_remove2.default)(pathArray[1].split("&"),function(p){return-1===p.indexOf("populate")}))}return pathObj}function getEventsFromInput(paths){return(0,_flatMap2.default)(paths,function(path){if("string"==typeof path||path instanceof String)return[pathStrToObj(path)];if(Array.isArray(path))return[{type:"first_child",path:path[0]},{type:"child_added",path:path[0]},{type:"child_removed",path:path[0]},{type:"child_moved",path:path[0]},{type:"child_changed",path:path[0]}];if((0,_isObject2.default)(path)){if(!path.path)throw new Error("Path is a required parameter within definition object");var strPath=path.path;return path.storeAs&&(strPath+="@".concat(path.storeAs)),path.queryParams&&(strPath+="#".concat(path.queryParams.join("&"))),path=Object.assign({},pathStrToObj(strPath),path),[path]}throw new Error("Invalid Path Definition: ".concat(path,". Only strings, objects, and arrays accepted."))})}var _default={getEventsFromInput:getEventsFromInput};exports.default=_default;
	//# sourceMappingURL=events.js.map

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.deleteFile=deleteFile,exports.writeMetadataToDb=writeMetadataToDb,exports.uploadFileWithProgress=uploadFileWithProgress;var _isUndefined2=_interopRequireDefault(__webpack_require__(493)),_omitBy2=_interopRequireDefault(__webpack_require__(499)),_constants=__webpack_require__(16);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var FILE_UPLOAD_ERROR=_constants.actionTypes.FILE_UPLOAD_ERROR,FILE_UPLOAD_PROGRESS=_constants.actionTypes.FILE_UPLOAD_PROGRESS;function deleteFile(firebase,_ref){var path=_ref.path,dbPath=_ref.dbPath;return firebase.storage().ref(path).delete().then(function(){if(!dbPath||!firebase.database&&!firebase.firestore)return{path:path};return function metaDeletePromise(){return firebase._.config.useFirestoreForStorageMeta?firebase.firestore().doc(dbPath).delete():firebase.database().ref(dbPath).remove()}().then(function(){return{path:path,dbPath:dbPath}})})}function createUploadMetaResponseHandler(_ref2){var fileData=_ref2.fileData,firebase=_ref2.firebase,uploadTaskSnapshot=_ref2.uploadTaskSnapshot,downloadURL=_ref2.downloadURL;return function(metaDataSnapshot){var useFirestoreForStorageMeta=firebase._.config.useFirestoreForStorageMeta,result={snapshot:metaDataSnapshot,key:metaDataSnapshot.key||metaDataSnapshot.id,File:fileData,metaDataSnapshot:metaDataSnapshot,uploadTaskSnapshot:uploadTaskSnapshot,uploadTaskSnaphot:uploadTaskSnapshot,createdAt:useFirestoreForStorageMeta?firebase.firestore.FieldValue.serverTimestamp():firebase.database.ServerValue.TIMESTAMP};return metaDataSnapshot.id&&(result.id=metaDataSnapshot.id),downloadURL&&(result.downloadURL=downloadURL),result}}function getDownloadURLFromUploadTaskSnapshot(uploadTaskSnapshot){return uploadTaskSnapshot.ref&&"function"==typeof uploadTaskSnapshot.ref.getDownloadURL?uploadTaskSnapshot.ref.getDownloadURL():Promise.resolve(uploadTaskSnapshot.downloadURLs&&uploadTaskSnapshot.downloadURLs[0])}function writeMetadataToDb(_ref3){var firebase=_ref3.firebase,uploadTaskSnapshot=_ref3.uploadTaskSnapshot,dbPath=_ref3.dbPath,options=_ref3.options,_firebase$_$config=firebase._.config,fileMetadataFactory=_firebase$_$config.fileMetadataFactory,useFirestoreForStorageMeta=_firebase$_$config.useFirestoreForStorageMeta,metadataFactory=options.metadataFactory,metaFactoryFunction=metadataFactory||fileMetadataFactory;return getDownloadURLFromUploadTaskSnapshot(uploadTaskSnapshot).then(function(downloadURL){var fileData="function"==typeof metaFactoryFunction?metaFactoryFunction(uploadTaskSnapshot,firebase,uploadTaskSnapshot.metadata,downloadURL):(0,_omitBy2.default)(uploadTaskSnapshot.metadata,_isUndefined2.default),resultFromSnap=createUploadMetaResponseHandler({fileData:fileData,firebase:firebase,uploadTaskSnapshot:uploadTaskSnapshot,downloadURL:downloadURL});return function metaSetPromise(fileData){if(useFirestoreForStorageMeta)return firebase.firestore().collection(dbPath).add(fileData);var newMetaRef=firebase.database().ref(dbPath).push();return newMetaRef.set(fileData).then(function(){return newMetaRef})}(fileData).then(resultFromSnap)})}function uploadFileWithProgress(dispatch,firebase,_ref4){var path=_ref4.path,file=_ref4.file,filename=_ref4.filename,meta=_ref4.meta,fileMetadata=_ref4.fileMetadata,uploadEvent=firebase.storage().ref("".concat(path,"/").concat(filename)).put(file,fileMetadata),unListen=uploadEvent.on(firebase.storage.TaskEvent.STATE_CHANGED,{next:function next(snapshot){dispatch({type:FILE_UPLOAD_PROGRESS,meta:meta,payload:{snapshot:snapshot,percent:Math.floor(100*(snapshot.bytesTransferred/snapshot.totalBytes))}})},error:function error(err){dispatch({type:FILE_UPLOAD_ERROR,meta:meta,payload:err}),unListen()},complete:function complete(){unListen()}});return uploadEvent}
	//# sourceMappingURL=storage.js.map

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=withFirebase;var _react=_interopRequireDefault(__webpack_require__(2)),_hoistNonReactStatics=_interopRequireDefault(__webpack_require__(25)),_utils=__webpack_require__(12),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i],source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target},_extends.apply(this,arguments)}function withFirebase(WrappedComponent){function WithFirebase(props){return _react.default.createElement(_ReactReduxFirebaseContext.default.Consumer,null,function(firebase){return _react.default.createElement(WrappedComponent,_extends({firebase:firebase,dispatch:firebase&&firebase.dispatch},props))})}return WithFirebase.displayName=(0,_utils.wrapDisplayName)(WrappedComponent,"withFirebase"),WithFirebase.wrappedComponent=WrappedComponent,(0,_hoistNonReactStatics.default)(WithFirebase,WrappedComponent)}module.exports=exports.default;
	//# sourceMappingURL=withFirebase.js.map

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=withFirestore;var _react=_interopRequireDefault(__webpack_require__(2)),_hoistNonReactStatics=_interopRequireDefault(__webpack_require__(25)),_utils=__webpack_require__(12),_ReactReduxFirebaseContext=_interopRequireDefault(__webpack_require__(24)),_ReduxFirestoreContext=_interopRequireDefault(__webpack_require__(44));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i],source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target},_extends.apply(this,arguments)}function withFirestore(WrappedComponent){function WithFirestore(props){return _react.default.createElement(_ReactReduxFirebaseContext.default.Consumer,null,function(firebase){return _react.default.createElement(_ReduxFirestoreContext.default.Consumer,null,function(firestore){return _react.default.createElement(WrappedComponent,_extends({firestore:firestore,firebase:firebase,dispatch:firebase.dispatch},props))})})}return WithFirestore.displayName=(0,_utils.wrapDisplayName)(WrappedComponent,"withFirestore"),WithFirestore.wrappedComponent=WrappedComponent,(0,_hoistNonReactStatics.default)(WithFirestore,WrappedComponent)}module.exports=exports.default;
	//# sourceMappingURL=withFirestore.js.map

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(77);
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.createProvider = createProvider;
	exports.default = void 0;
	
	var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(76));
	
	var _react = _interopRequireWildcard(__webpack_require__(2));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(15));
	
	var _PropTypes = __webpack_require__(330);
	
	var _warning = _interopRequireDefault(__webpack_require__(127));
	
	var prefixUnsafeLifecycleMethods = typeof _react.default.forwardRef !== "undefined";
	var didWarnAboutReceivingStore = false;
	
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	
	  didWarnAboutReceivingStore = true;
	  (0, _warning.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reduxjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	function createProvider(storeKey) {
	  var _Provider$childContex;
	
	  if (storeKey === void 0) {
	    storeKey = 'store';
	  }
	
	  var subscriptionKey = storeKey + "Subscription";
	
	  var Provider =
	  /*#__PURE__*/
	  function (_Component) {
	    (0, _inheritsLoose2.default)(Provider, _Component);
	    var _proto = Provider.prototype;
	
	    _proto.getChildContext = function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
	    };
	
	    function Provider(props, context) {
	      var _this;
	
	      _this = _Component.call(this, props, context) || this;
	      _this[storeKey] = props.store;
	      return _this;
	    }
	
	    _proto.render = function render() {
	      return _react.Children.only(this.props.children);
	    };
	
	    return Provider;
	  }(_react.Component);
	
	  if (false) {
	    // Use UNSAFE_ event name where supported
	    var eventName = prefixUnsafeLifecycleMethods ? 'UNSAFE_componentWillReceiveProps' : 'componentWillReceiveProps';
	
	    Provider.prototype[eventName] = function (nextProps) {
	      if (this[storeKey] !== nextProps.store) {
	        warnAboutReceivingStore();
	      }
	    };
	  }
	
	  Provider.propTypes = {
	    store: _PropTypes.storeShape.isRequired,
	    children: _propTypes.default.element.isRequired
	  };
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);
	  return Provider;
	}
	
	var _default = createProvider();
	
	exports.default = _default;

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.createConnect = createConnect;
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(75));
	
	var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(78));
	
	var _connectAdvanced = _interopRequireDefault(__webpack_require__(328));
	
	var _shallowEqual = _interopRequireDefault(__webpack_require__(549));
	
	var _mapDispatchToProps = _interopRequireDefault(__webpack_require__(542));
	
	var _mapStateToProps = _interopRequireDefault(__webpack_require__(543));
	
	var _mergeProps = _interopRequireDefault(__webpack_require__(544));
	
	var _selectorFactory = _interopRequireDefault(__webpack_require__(545));
	
	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:
	
	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.
	
	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.
	
	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */
	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }
	
	  return function (dispatch, options) {
	    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
	  };
	}
	
	function strictEqual(a, b) {
	  return a === b;
	} // createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	
	
	function createConnect(_temp) {
	  var _ref = _temp === void 0 ? {} : _temp,
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === void 0 ? _connectAdvanced.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? _mapStateToProps.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? _mapDispatchToProps.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === void 0 ? _mergeProps.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === void 0 ? _selectorFactory.default : _ref$selectorFactory;
	
	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
	    if (_ref2 === void 0) {
	      _ref2 = {};
	    }
	
	    var _ref3 = _ref2,
	        _ref3$pure = _ref3.pure,
	        pure = _ref3$pure === void 0 ? true : _ref3$pure,
	        _ref3$areStatesEqual = _ref3.areStatesEqual,
	        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
	        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
	        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? _shallowEqual.default : _ref3$areOwnPropsEqua,
	        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
	        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? _shallowEqual.default : _ref3$areStatePropsEq,
	        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
	        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? _shallowEqual.default : _ref3$areMergedPropsE,
	        extraOptions = (0, _objectWithoutPropertiesLoose2.default)(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);
	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
	    return connectHOC(selectorFactory, (0, _extends2.default)({
	      // used in error messages
	      methodName: 'connect',
	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return "Connect(" + name + ")";
	      },
	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),
	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual
	    }, extraOptions));
	  };
	}
	
	var _default = createConnect();
	
	exports.default = _default;

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
	exports.default = void 0;
	
	var _redux = __webpack_require__(46);
	
	var _wrapMapToProps = __webpack_require__(329);
	
	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}
	
	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return {
	      dispatch: dispatch
	    };
	  }) : undefined;
	}
	
	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}
	
	var _default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
	exports.default = _default;

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
	exports.default = void 0;
	
	var _wrapMapToProps = __webpack_require__(329);
	
	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}
	
	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}
	
	var _default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
	exports.default = _default;

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(75));
	
	var _verifyPlainObject = _interopRequireDefault(__webpack_require__(331));
	
	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return (0, _extends2.default)({}, ownProps, stateProps, dispatchProps);
	}
	
	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;
	    var hasRunOnce = false;
	    var mergedProps;
	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;
	        if (false) (0, _verifyPlainObject.default)(mergedProps, displayName, 'mergeProps');
	      }
	
	      return mergedProps;
	    };
	  };
	}
	
	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}
	
	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}
	
	var _default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
	exports.default = _default;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;
	
	var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(78));
	
	var _verifySubselectors = _interopRequireDefault(__webpack_require__(546));
	
	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}
	
	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;
	  var hasRunAtLeastOnce = false;
	  var state;
	  var ownProps;
	  var stateProps;
	  var dispatchProps;
	  var mergedProps;
	
	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }
	
	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;
	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;
	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }
	
	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	} // TODO: Add more comments
	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.
	
	
	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);
	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);
	
	  if (false) {
	    (0, _verifySubselectors.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }
	
	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(9);
	
	exports.__esModule = true;
	exports.default = verifySubselectors;
	
	var _warning = _interopRequireDefault(__webpack_require__(127));
	
	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning.default)("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
	    }
	  }
	}
	
	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ },
/* 547 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = void 0;
	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants
	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};
	
	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];
	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    get: function get() {
	      return next;
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);
	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;
	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}
	
	var Subscription =
	/*#__PURE__*/
	function () {
	  function Subscription(store, parentSub, onStateChange) {
	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }
	
	  var _proto = Subscription.prototype;
	
	  _proto.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };
	
	  _proto.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };
	
	  _proto.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };
	
	  _proto.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
	      this.listeners = createListenerCollection();
	    }
	  };
	
	  _proto.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };
	
	  return Subscription;
	}();
	
	exports.default = Subscription;

/***/ },
/* 548 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = isPlainObject;
	
	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */
	function isPlainObject(obj) {
	  if (typeof obj !== 'object' || obj === null) return false;
	  var proto = Object.getPrototypeOf(obj);
	  if (proto === null) return true;
	  var baseProto = proto;
	
	  while (Object.getPrototypeOf(baseProto) !== null) {
	    baseProto = Object.getPrototypeOf(baseProto);
	  }
	
	  return proto === baseProto;
	}

/***/ },
/* 549 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;
	
	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	  if (keysA.length !== keysB.length) return false;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var reactRouter=__webpack_require__(552),React=_interopDefault(__webpack_require__(2)),history=__webpack_require__(132);__webpack_require__(15),__webpack_require__(73);var invariant=_interopDefault(__webpack_require__(128));function _extends(){return(_extends=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function _inheritsLoose(e,r){e.prototype=Object.create(r.prototype),(e.prototype.constructor=e).__proto__=r}function _objectWithoutPropertiesLoose(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],0<=r.indexOf(t)||(n[t]=e[t]);return n}var BrowserRouter=function(n){function e(){for(var e,r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];return(e=n.call.apply(n,[this].concat(t))||this).history=history.createBrowserHistory(e.props),e}return _inheritsLoose(e,n),e.prototype.render=function(){return React.createElement(reactRouter.Router,{history:this.history,children:this.props.children})},e}(React.Component),HashRouter=function(n){function e(){for(var e,r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];return(e=n.call.apply(n,[this].concat(t))||this).history=history.createHashHistory(e.props),e}return _inheritsLoose(e,n),e.prototype.render=function(){return React.createElement(reactRouter.Router,{history:this.history,children:this.props.children})},e}(React.Component),resolveToLocation=function(e,r){return"function"==typeof e?e(r):e},normalizeToLocation=function(e,r){return"string"==typeof e?history.createLocation(e,null,null,r):e},forwardRefShim=function(e){return e},forwardRef=React.forwardRef;function isModifiedEvent(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}void 0===forwardRef&&(forwardRef=forwardRefShim);var LinkAnchor=forwardRef(function(e,r){var t=e.innerRef,o=e.navigate,n=e.onClick,a=_objectWithoutPropertiesLoose(e,["innerRef","navigate","onClick"]),i=a.target,c=_extends({},a,{onClick:function(r){try{n&&n(r)}catch(e){throw r.preventDefault(),e}r.defaultPrevented||0!==r.button||i&&"_self"!==i||isModifiedEvent(r)||(r.preventDefault(),o())}});return c.ref=forwardRefShim!==forwardRef&&r||t,React.createElement("a",c)}),Link=forwardRef(function(e,a){var r=e.component,i=void 0===r?LinkAnchor:r,c=e.replace,f=e.to,u=e.innerRef,s=_objectWithoutPropertiesLoose(e,["component","replace","to","innerRef"]);return React.createElement(reactRouter.__RouterContext.Consumer,null,function(r){r||invariant(!1);var t=r.history,e=normalizeToLocation(resolveToLocation(f,r.location),r.location),o=e?t.createHref(e):"",n=_extends({},s,{href:o,navigate:function(){var e=resolveToLocation(f,r.location);(c?t.replace:t.push)(e)}});return forwardRefShim!==forwardRef?n.ref=a||u:n.innerRef=u,React.createElement(i,n)})}),forwardRefShim$1=function(e){return e},forwardRef$1=React.forwardRef;function joinClassnames(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.filter(function(e){return e}).join(" ")}void 0===forwardRef$1&&(forwardRef$1=forwardRefShim$1);var NavLink=forwardRef$1(function(e,s){var r=e["aria-current"],l=void 0===r?"page":r,t=e.activeClassName,p=void 0===t?"active":t,h=e.activeStyle,R=e.className,d=e.exact,v=e.isActive,y=e.location,m=e.strict,w=e.style,_=e.to,L=e.innerRef,x=_objectWithoutPropertiesLoose(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return React.createElement(reactRouter.__RouterContext.Consumer,null,function(e){e||invariant(!1);var r=y||e.location,t=normalizeToLocation(resolveToLocation(_,r),r),o=t.pathname,n=o&&o.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),a=n?reactRouter.matchPath(r.pathname,{path:n,exact:d,strict:m}):null,i=!!(v?v(a,r):a),c=i?joinClassnames(R,p):R,f=i?_extends({},w,{},h):w,u=_extends({"aria-current":i&&l||null,className:c,style:f,to:t},x);return forwardRefShim$1!==forwardRef$1?u.ref=s||L:u.innerRef=L,React.createElement(Link,u)})});Object.keys(reactRouter).forEach(function(e){"default"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return reactRouter[e]}})}),exports.BrowserRouter=BrowserRouter,exports.HashRouter=HashRouter,exports.Link=Link,exports.NavLink=NavLink;
	//# sourceMappingURL=react-router-dom.min.js.map


/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}Object.defineProperty(exports,"__esModule",{value:!0});var React=_interopDefault(__webpack_require__(2));__webpack_require__(15);var history=__webpack_require__(132);__webpack_require__(73);var createContext=_interopDefault(__webpack_require__(518)),invariant=_interopDefault(__webpack_require__(128)),pathToRegexp=_interopDefault(__webpack_require__(554));__webpack_require__(123);var hoistStatics=_interopDefault(__webpack_require__(25));function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),(t.prototype.constructor=t).__proto__=e}function _objectWithoutPropertiesLoose(t,e){if(null==t)return{};var n,o,r={},a=Object.keys(t);for(o=0;o<a.length;o++)n=a[o],0<=e.indexOf(n)||(r[n]=t[n]);return r}var createNamedContext=function(t){var e=createContext();return e.displayName=t,e},context=createNamedContext("Router"),Router=function(n){function t(t){var e;return(e=n.call(this,t)||this).state={location:t.history.location},e._isMounted=!1,e._pendingLocation=null,t.staticContext||(e.unlisten=t.history.listen(function(t){e._isMounted?e.setState({location:t}):e._pendingLocation=t})),e}_inheritsLoose(t,n),t.computeRootMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}};var e=t.prototype;return e.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},e.componentWillUnmount=function(){this.unlisten&&this.unlisten()},e.render=function(){return React.createElement(context.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(React.Component),MemoryRouter=function(r){function t(){for(var t,e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return(t=r.call.apply(r,[this].concat(n))||this).history=history.createMemoryHistory(t.props),t}return _inheritsLoose(t,r),t.prototype.render=function(){return React.createElement(Router,{history:this.history,children:this.props.children})},t}(React.Component),Lifecycle=function(t){function e(){return t.apply(this,arguments)||this}_inheritsLoose(e,t);var n=e.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(t){this.props.onUpdate&&this.props.onUpdate.call(this,this,t)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},e}(React.Component);function Prompt(t){var o=t.message,e=t.when,r=void 0===e||e;return React.createElement(context.Consumer,null,function(t){if(t||invariant(!1),!r||t.staticContext)return null;var n=t.history.block;return React.createElement(Lifecycle,{onMount:function(t){t.release=n(o)},onUpdate:function(t,e){e.message!==o&&(t.release(),t.release=n(o))},onUnmount:function(t){t.release()},message:o})})}var cache={},cacheLimit=1e4,cacheCount=0;function compilePath(t){if(cache[t])return cache[t];var e=pathToRegexp.compile(t);return cacheCount<cacheLimit&&(cache[t]=e,cacheCount++),e}function generatePath(t,e){return void 0===t&&(t="/"),void 0===e&&(e={}),"/"===t?t:compilePath(t)(e,{pretty:!0})}function Redirect(t){var a=t.computedMatch,i=t.to,e=t.push,c=void 0!==e&&e;return React.createElement(context.Consumer,null,function(t){t||invariant(!1);var e=t.history,n=t.staticContext,o=c?e.push:e.replace,r=history.createLocation(a?"string"==typeof i?generatePath(i,a.params):_extends({},i,{pathname:generatePath(i.pathname,a.params)}):i);return n?(o(r),null):React.createElement(Lifecycle,{onMount:function(){o(r)},onUpdate:function(t,e){var n=history.createLocation(e.to);history.locationsAreEqual(n,_extends({},r,{key:n.key}))||o(r)},to:i})})}var cache$1={},cacheLimit$1=1e4,cacheCount$1=0;function compilePath$1(t,e){var n=""+e.end+e.strict+e.sensitive,o=cache$1[n]||(cache$1[n]={});if(o[t])return o[t];var r=[],a={regexp:pathToRegexp(t,r,e),keys:r};return cacheCount$1<cacheLimit$1&&(o[t]=a,cacheCount$1++),a}function matchPath(u,t){void 0===t&&(t={}),"string"!=typeof t&&!Array.isArray(t)||(t={path:t});var e=t,n=e.path,o=e.exact,p=void 0!==o&&o,r=e.strict,h=void 0!==r&&r,a=e.sensitive,l=void 0!==a&&a;return[].concat(n).reduce(function(t,e){if(!e&&""!==e)return null;if(t)return t;var n=compilePath$1(e,{end:p,strict:h,sensitive:l}),o=n.regexp,r=n.keys,a=o.exec(u);if(!a)return null;var i=a[0],c=a.slice(1),s=u===i;return p&&!s?null:{path:e,url:"/"===e&&""===i?"/":i,isExact:s,params:r.reduce(function(t,e,n){return t[e.name]=c[n],t},{})}},null)}var Route=function(t){function e(){return t.apply(this,arguments)||this}return _inheritsLoose(e,t),e.prototype.render=function(){var c=this;return React.createElement(context.Consumer,null,function(t){t||invariant(!1);var e=c.props.location||t.location,n=_extends({},t,{location:e,match:c.props.computedMatch?c.props.computedMatch:c.props.path?matchPath(e.pathname,c.props):t.match}),o=c.props,r=o.children,a=o.component,i=o.render;return Array.isArray(r)&&0===r.length&&(r=null),React.createElement(context.Provider,{value:n},n.match?r?"function"==typeof r?r(n):r:a?React.createElement(a,n):i?i(n):null:"function"==typeof r?r(n):null)})},e}(React.Component);function addLeadingSlash(t){return"/"===t.charAt(0)?t:"/"+t}function addBasename(t,e){return t?_extends({},e,{pathname:addLeadingSlash(t)+e.pathname}):e}function stripBasename(t,e){if(!t)return e;var n=addLeadingSlash(t);return 0!==e.pathname.indexOf(n)?e:_extends({},e,{pathname:e.pathname.substr(n.length)})}function createURL(t){return"string"==typeof t?t:history.createPath(t)}function staticHandler(t){return function(){invariant(!1)}}function noop(){}var StaticRouter=function(r){function t(){for(var e,t=arguments.length,n=new Array(t),o=0;o<t;o++)n[o]=arguments[o];return(e=r.call.apply(r,[this].concat(n))||this).handlePush=function(t){return e.navigateTo(t,"PUSH")},e.handleReplace=function(t){return e.navigateTo(t,"REPLACE")},e.handleListen=function(){return noop},e.handleBlock=function(){return noop},e}_inheritsLoose(t,r);var e=t.prototype;return e.navigateTo=function(t,e){var n=this.props,o=n.basename,r=void 0===o?"":o,a=n.context,i=void 0===a?{}:a;i.action=e,i.location=addBasename(r,history.createLocation(t)),i.url=createURL(i.location)},e.render=function(){var t=this.props,e=t.basename,n=void 0===e?"":e,o=t.context,r=void 0===o?{}:o,a=t.location,i=void 0===a?"/":a,c=_objectWithoutPropertiesLoose(t,["basename","context","location"]),s={createHref:function(t){return addLeadingSlash(n+createURL(t))},action:"POP",location:stripBasename(n,history.createLocation(i)),push:this.handlePush,replace:this.handleReplace,go:staticHandler(),goBack:staticHandler(),goForward:staticHandler(),listen:this.handleListen,block:this.handleBlock};return React.createElement(Router,_extends({},c,{history:s,staticContext:r}))},t}(React.Component),Switch=function(t){function e(){return t.apply(this,arguments)||this}return _inheritsLoose(e,t),e.prototype.render=function(){var t=this;return React.createElement(context.Consumer,null,function(n){n||invariant(!1);var o,r,a=t.props.location||n.location;return React.Children.forEach(t.props.children,function(t){if(null==r&&React.isValidElement(t)){var e=(o=t).props.path||t.props.from;r=e?matchPath(a.pathname,_extends({},t.props,{path:e})):n.match}}),r?React.cloneElement(o,{location:a,computedMatch:r}):null})},e}(React.Component);function withRouter(o){function t(t){var e=t.wrappedComponentRef,n=_objectWithoutPropertiesLoose(t,["wrappedComponentRef"]);return React.createElement(context.Consumer,null,function(t){return t||invariant(!1),React.createElement(o,_extends({},n,t,{ref:e}))})}var e="withRouter("+(o.displayName||o.name)+")";return t.displayName=e,t.WrappedComponent=o,hoistStatics(t,o)}var useContext=React.useContext;function useHistory(){return useContext(context).history}function useLocation(){return useContext(context).location}function useParams(){var t=useContext(context).match;return t?t.params:{}}function useRouteMatch(t){return t?matchPath(useLocation().pathname,t):useContext(context).match}exports.MemoryRouter=MemoryRouter,exports.Prompt=Prompt,exports.Redirect=Redirect,exports.Route=Route,exports.Router=Router,exports.StaticRouter=StaticRouter,exports.Switch=Switch,exports.__RouterContext=context,exports.generatePath=generatePath,exports.matchPath=matchPath,exports.useHistory=useHistory,exports.useLocation=useLocation,exports.useParams=useParams,exports.useRouteMatch=useRouteMatch,exports.withRouter=withRouter;
	//# sourceMappingURL=react-router.min.js.map


/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	if (true) {
	  module.exports = __webpack_require__(551);
	} else {
	  module.exports = require("./cjs/react-router.js");
	}


/***/ },
/* 553 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(553)
	
	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp
	
	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')
	
	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res
	
	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length
	
	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }
	
	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]
	
	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }
	
	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group
	
	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }
	
	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }
	
	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }
	
	  return tokens
	}
	
	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options), options)
	}
	
	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens, options) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)
	
	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
	    }
	  }
	
	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent
	
	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]
	
	      if (typeof token === 'string') {
	        path += token
	
	        continue
	      }
	
	      var value = data[token.name]
	      var segment
	
	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }
	
	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }
	
	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }
	
	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }
	
	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])
	
	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }
	
	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }
	
	        continue
	      }
	
	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)
	
	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }
	
	      path += token.prefix + segment
	    }
	
	    return path
	  }
	}
	
	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}
	
	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}
	
	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}
	
	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options && options.sensitive ? '' : 'i'
	}
	
	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)
	
	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }
	
	  return attachKeys(path, keys)
	}
	
	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []
	
	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }
	
	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))
	
	  return attachKeys(regexp, keys)
	}
	
	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}
	
	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''
	
	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]
	
	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'
	
	      keys.push(token)
	
	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }
	
	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }
	
	      route += capture
	    }
	  }
	
	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter
	
	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }
	
	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }
	
	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}
	
	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }
	
	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }
	
	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	// @remove-on-eject-begin
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	// @remove-on-eject-end
	'use strict';
	
	if (typeof Promise === 'undefined') {
	  // Rejection tracking prevents a common issue where React gets into an
	  // inconsistent state due to an error, but it gets swallowed by a Promise,
	  // and the user has no idea what causes React's erratic future behavior.
	  __webpack_require__(521).enable();
	  window.Promise = __webpack_require__(520);
	}
	
	// fetch() polyfill for making API calls.
	__webpack_require__(579);
	
	// Object.assign() is commonly used with React.
	// It will use the native implementation if it's present and isn't buggy.
	Object.assign = __webpack_require__(122);


/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	/** @license React v16.13.1
	 * react.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var l=__webpack_require__(122),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113,z=n?Symbol.for("react.memo"):60115,A=n?Symbol.for("react.lazy"):
	60116,B="function"===typeof Symbol&&Symbol.iterator;function C(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}
	var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
	function G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
	function M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}
	function N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}
	function S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}
	function T(a,b,c,e){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+U(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||"object"!==typeof a?f=null:(f=B&&a[B]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),k=
	0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if("object"===d)throw c=""+a,Error(C(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function V(a,b,c){return null==a?0:T(a,"",b,c)}function U(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}
	function aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(P,"$&/")+"/")+c)),e.push(a))}function X(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(P,"$&/")+"/");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}
	var ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};
	exports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;
	exports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,
	key:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;
	exports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};
	exports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version="16.13.1";


/***/ },
/* 557 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function () {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	
	  var initialState = typeof args[0] !== 'function' && args.shift();
	  var reducers = args;
	
	  if (typeof initialState === 'undefined') {
	    throw new TypeError('The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.');
	  }
	
	  return function (prevState, value) {
	    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	      args[_key2 - 2] = arguments[_key2];
	    }
	
	    var prevStateIsUndefined = typeof prevState === 'undefined';
	    var valueIsUndefined = typeof value === 'undefined';
	
	    if (prevStateIsUndefined && valueIsUndefined && initialState) {
	      return initialState;
	    }
	
	    return reducers.reduce(function (newState, reducer, index) {
	      if (typeof reducer === 'undefined') {
	        throw new TypeError('An undefined reducer was passed in at index ' + index);
	      }
	
	      return reducer.apply(undefined, [newState, value].concat(args));
	    }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);
	  };
	};
	
	module.exports = exports['default'];

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.add = add;
	exports.set = set;
	exports.get = get;
	exports.update = update;
	exports.deleteRef = deleteRef;
	exports.setListener = setListener;
	exports.setListeners = setListeners;
	exports.unsetListener = unsetListener;
	exports.unsetListeners = unsetListeners;
	exports.runTransaction = runTransaction;
	exports.default = void 0;
	
	var _every2 = _interopRequireDefault(__webpack_require__(478));
	
	var _actions = __webpack_require__(335);
	
	var _constants = __webpack_require__(8);
	
	var _query = __webpack_require__(45);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var pathListenerCounts = {};
	
	function add(firebase, dispatch, queryOption) {
	  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
	    args[_key - 3] = arguments[_key];
	  }
	
	  var meta = (0, _query.getQueryConfig)(queryOption);
	  return (0, _actions.wrapInDispatch)(dispatch, {
	    ref: (0, _query.firestoreRef)(firebase, meta),
	    method: 'add',
	    meta: meta,
	    args: args,
	    types: [_constants.actionTypes.ADD_REQUEST, {
	      type: _constants.actionTypes.ADD_SUCCESS,
	      payload: function payload(snap) {
	        var obj = {
	          id: snap.id,
	          data: args[0]
	        };
	
	        _query.snapshotCache.set(obj, snap);
	
	        return obj;
	      }
	    }, _constants.actionTypes.ADD_FAILURE]
	  });
	}
	
	function set(firebase, dispatch, queryOption) {
	  var meta = (0, _query.getQueryConfig)(queryOption);
	
	  for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
	    args[_key2 - 3] = arguments[_key2];
	  }
	
	  return (0, _actions.wrapInDispatch)(dispatch, {
	    ref: (0, _query.firestoreRef)(firebase, meta),
	    method: 'set',
	    meta: meta,
	    args: args,
	    types: [_constants.actionTypes.SET_REQUEST, _constants.actionTypes.SET_SUCCESS, _constants.actionTypes.SET_FAILURE]
	  });
	}
	
	function get(firebase, dispatch, queryOption) {
	  var meta = (0, _query.getQueryConfig)(queryOption);
	
	  var _ref = firebase._.config || {},
	      mergeOrdered = _ref.mergeOrdered,
	      mergeOrderedDocUpdates = _ref.mergeOrderedDocUpdates,
	      mergeOrderedCollectionUpdates = _ref.mergeOrderedCollectionUpdates;
	
	  return (0, _actions.wrapInDispatch)(dispatch, {
	    ref: (0, _query.firestoreRef)(firebase, meta),
	    method: 'get',
	    meta: meta,
	    types: [_constants.actionTypes.GET_REQUEST, {
	      type: _constants.actionTypes.GET_SUCCESS,
	      payload: function payload(snap) {
	        return {
	          data: (0, _query.dataByIdSnapshot)(snap),
	          ordered: (0, _query.orderedFromSnap)(snap)
	        };
	      },
	      merge: {
	        docs: mergeOrdered && mergeOrderedDocUpdates,
	        collections: mergeOrdered && mergeOrderedCollectionUpdates
	      }
	    }, _constants.actionTypes.GET_FAILURE]
	  });
	}
	
	function update(firebase, dispatch, queryOption) {
	  var meta = (0, _query.getQueryConfig)(queryOption);
	
	  for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
	    args[_key3 - 3] = arguments[_key3];
	  }
	
	  return (0, _actions.wrapInDispatch)(dispatch, {
	    ref: (0, _query.firestoreRef)(firebase, meta),
	    method: 'update',
	    meta: meta,
	    args: args,
	    types: [_constants.actionTypes.UPDATE_REQUEST, _constants.actionTypes.UPDATE_SUCCESS, _constants.actionTypes.UPDATE_FAILURE]
	  });
	}
	
	function deleteRef(firebase, dispatch, queryOption) {
	  var meta = (0, _query.getQueryConfig)(queryOption);
	  var config = firebase._.config;
	
	  if (!meta.doc || meta.subcollections && !(0, _every2.default)(meta.subcollections, 'doc')) {
	    if (typeof config.onAttemptCollectionDelete === 'function') {
	      return config.onAttemptCollectionDelete(queryOption, dispatch, firebase);
	    }
	
	    return Promise.reject(new Error('Only documents can be deleted.'));
	  }
	
	  return (0, _actions.wrapInDispatch)(dispatch, {
	    ref: (0, _query.firestoreRef)(firebase, meta),
	    method: 'delete',
	    meta: meta,
	    types: [_constants.actionTypes.DELETE_REQUEST, {
	      type: _constants.actionTypes.DELETE_SUCCESS,
	      preserve: firebase._.config.preserveOnDelete
	    }, _constants.actionTypes.DELETE_FAILURE]
	  });
	}
	
	function setListener(firebase, dispatch, queryOpts, successCb, errorCb) {
	  var meta = (0, _query.getQueryConfig)(queryOpts);
	  var unsubscribe = (0, _query.firestoreRef)(firebase, meta).onSnapshot(function (docData) {
	    if (!meta.populates) {
	      (0, _query.dispatchListenerResponse)({
	        dispatch: dispatch,
	        docData: docData,
	        meta: meta,
	        firebase: firebase
	      });
	      if (typeof successCb === 'function') successCb(docData);
	      return;
	    }
	
	    (0, _query.getPopulateActions)({
	      firebase: firebase,
	      docData: docData,
	      meta: meta
	    }).then(function (populateActions) {
	      populateActions.forEach(function (populateAction) {
	        dispatch(_objectSpread({}, populateAction, {
	          type: _constants.actionTypes.LISTENER_RESPONSE,
	          timestamp: Date.now()
	        }));
	      });
	      (0, _query.dispatchListenerResponse)({
	        dispatch: dispatch,
	        docData: docData,
	        meta: meta,
	        firebase: firebase
	      });
	    }).catch(function (populateErr) {
	      var _ref2 = firebase._.config || {},
	          logListenerError = _ref2.logListenerError;
	
	      if (logListenerError !== false) {
	        if (logListenerError !== false && !!console && typeof console.error === 'function') {
	            console.error('redux-firestore error populating:', populateErr);
	          }
	      }
	
	      if (typeof errorCb === 'function') errorCb(populateErr);
	    });
	  }, function (err) {
	    var _ref3 = firebase._.config || {},
	        mergeOrdered = _ref3.mergeOrdered,
	        mergeOrderedDocUpdates = _ref3.mergeOrderedDocUpdates,
	        mergeOrderedCollectionUpdates = _ref3.mergeOrderedCollectionUpdates,
	        logListenerError = _ref3.logListenerError,
	        preserveOnListenerError = _ref3.preserveOnListenerError;
	
	    if (logListenerError !== false && !!console && typeof console.error === 'function') {
	        console.error('redux-firestore listener error:', err);
	      }
	
	    dispatch({
	      type: _constants.actionTypes.LISTENER_ERROR,
	      meta: meta,
	      payload: err,
	      merge: {
	        docs: mergeOrdered && mergeOrderedDocUpdates,
	        collections: mergeOrdered && mergeOrderedCollectionUpdates
	      },
	      preserve: preserveOnListenerError
	    });
	    if (typeof errorCb === 'function') errorCb(err);
	  });
	  (0, _query.attachListener)(firebase, dispatch, meta, unsubscribe);
	  return unsubscribe;
	}
	
	function setListeners(firebase, dispatch, listeners) {
	  if (!Array.isArray(listeners)) {
	    throw new Error('Listeners must be an Array of listener configs (Strings/Objects).');
	  }
	
	  var config = firebase._.config;
	
	  if (config.oneListenerPerPath) {
	    listeners.forEach(function (listener) {
	      var path = (0, _query.getQueryName)(listener);
	      var oldListenerCount = pathListenerCounts[path] || 0;
	      pathListenerCounts[path] = oldListenerCount + 1;
	
	      if (oldListenerCount > 0) {
	        return;
	      }
	
	      setListener(firebase, dispatch, listener);
	    });
	  } else {
	    var allowMultipleListeners = config.allowMultipleListeners;
	    listeners.forEach(function (listener) {
	      var path = (0, _query.getQueryName)(listener);
	      var oldListenerCount = pathListenerCounts[path] || 0;
	      var multipleListenersEnabled = typeof allowMultipleListeners === 'function' ? allowMultipleListeners(listener, firebase._.listeners) : allowMultipleListeners;
	      pathListenerCounts[path] = oldListenerCount + 1;
	
	      if (oldListenerCount === 0 || multipleListenersEnabled) {
	        setListener(firebase, dispatch, listener);
	      }
	    });
	  }
	}
	
	function unsetListener(firebase, dispatch, meta) {
	  return (0, _query.detachListener)(firebase, dispatch, (0, _query.getQueryConfig)(meta));
	}
	
	function unsetListeners(firebase, dispatch, listeners) {
	  if (!Array.isArray(listeners)) {
	    throw new Error('Listeners must be an Array of listener configs (Strings/Objects).');
	  }
	
	  var config = firebase._.config;
	  var allowMultipleListeners = config.allowMultipleListeners;
	  listeners.forEach(function (listener) {
	    var path = (0, _query.getQueryName)(listener);
	    var listenerExists = pathListenerCounts[path] >= 1;
	    var multipleListenersEnabled = typeof allowMultipleListeners === 'function' ? allowMultipleListeners(listener, firebase._.listeners) : allowMultipleListeners;
	
	    if (listenerExists) {
	      pathListenerCounts[path] -= 1;
	
	      if (pathListenerCounts[path] === 0 || multipleListenersEnabled) {
	        unsetListener(firebase, dispatch, listener);
	      }
	    }
	  });
	}
	
	function runTransaction(firebase, dispatch, transactionPromise) {
	  return (0, _actions.wrapInDispatch)(dispatch, {
	    ref: firebase.firestore(),
	    method: 'runTransaction',
	    args: [transactionPromise],
	    types: [_constants.actionTypes.TRANSACTION_START, _constants.actionTypes.TRANSACTION_SUCCESS, _constants.actionTypes.TRANSACTION_FAILURE]
	  });
	}
	
	var _default = {
	  get: get,
	  firestoreRef: _query.firestoreRef,
	  add: add,
	  update: update,
	  setListener: setListener,
	  setListeners: setListeners,
	  unsetListener: unsetListener,
	  unsetListeners: unsetListeners,
	  runTransaction: runTransaction
	};
	exports.default = _default;

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = reduxFirestore;
	exports.getFirestore = getFirestore;
	
	var _constants = __webpack_require__(8);
	
	var _createFirestoreInstance = _interopRequireDefault(__webpack_require__(333));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var firestoreInstance;
	
	function reduxFirestore(firebaseInstance, otherConfig) {
	  return function (next) {
	    return function (reducer, initialState, middleware) {
	      var store = next(reducer, initialState, middleware);
	
	      var configs = _objectSpread({}, _constants.defaultConfig, {}, otherConfig);
	
	      firestoreInstance = (0, _createFirestoreInstance.default)(firebaseInstance.firebase_ || firebaseInstance, configs, store.dispatch);
	      store.firestore = firestoreInstance;
	      return store;
	    };
	  };
	}
	
	function getFirestore() {
	  if (!firestoreInstance) {
	    throw new Error('Firebase instance does not yet exist. Check your compose function.');
	  }
	
	  return firestoreInstance;
	}

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = reduxFirestoreMiddleware;
	exports.CALL_FIRESTORE = void 0;
	
	var _constants = __webpack_require__(8);
	
	function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }
	
	function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }
	
	function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
	
	function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function callFirestore(firebaseInstance, callInfoObj) {
	  var method = callInfoObj.method;
	  var modelArgs = callInfoObj.modelArgs,
	      methodArgs = callInfoObj.methodArgs;
	  if (!Array.isArray(modelArgs)) modelArgs = [modelArgs];
	  if (!Array.isArray(methodArgs)) methodArgs = [methodArgs];
	
	  if (!firebaseInstance || !firebaseInstance.firestore) {
	    throw new Error('firestore is not a Firebase namespace');
	  }
	
	  return !methodArgs ? firebaseInstance.firestore()[method] : firebaseInstance.firestore()[method].apply(firebaseInstance, methodArgs);
	}
	
	var CALL_FIRESTORE = 'CALL_FIRESTORE';
	exports.CALL_FIRESTORE = CALL_FIRESTORE;
	var typesMap = {
	  get: [_constants.actionTypes.GET_REQUEST, _constants.actionTypes.GET_SUCCESS, _constants.actionTypes.GET_FAILURE]
	};
	
	function reduxFirestoreMiddleware(firestore) {
	  return function (store) {
	    return function (next) {
	      return function (action) {
	        var callAPI = action.type === CALL_FIRESTORE ? action : undefined;
	        if (typeof callAPI === 'undefined') return next(action);
	        var method = callAPI.method;
	        if (typeof method === 'function') method = method(store.getState());
	        if (typeof method !== 'string') throw new Error('Specify a method.');
	        var args = callAPI.args;
	        var types = typesMap[method];
	
	        if (!Array.isArray(types) || types.length !== 3) {
	          throw new Error('Expected an array of three action types.');
	        }
	
	        if (!types.every(function (type) {
	          return typeof type === 'string';
	        })) {
	          throw new Error('Expected action types to be strings.');
	        }
	
	        function actionWith(data) {
	          var finalAction = _objectSpread({}, action, {}, data);
	
	          delete finalAction[CALL_FIRESTORE];
	          return finalAction;
	        }
	
	        var _types = _slicedToArray(types, 3),
	            requestType = _types[0],
	            successType = _types[1],
	            failureType = _types[2];
	
	        next({
	          type: requestType
	        });
	        var callInfoObj = {
	          method: method
	        };
	        return callFirestore(firestore, callInfoObj).then(function (response) {
	          return next({
	            response: response,
	            method: method,
	            args: args,
	            type: successType
	          });
	        }).catch(function (error) {
	          return next(actionWith({
	            type: failureType,
	            error: error.message || error || 'Something bad happened'
	          }));
	        });
	      };
	    };
	  };
	}

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reduceReducers = _interopRequireDefault(__webpack_require__(557));
	
	var _reducers = __webpack_require__(34);
	
	var _reducers2 = __webpack_require__(565);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var combinedReducers = (0, _reducers.combineReducers)({
	  status: _reducers2.statusReducer,
	  data: _reducers2.dataReducer,
	  ordered: _reducers2.orderedReducer,
	  listeners: _reducers2.listenersReducer,
	  errors: _reducers2.errorsReducer,
	  queries: _reducers2.queriesReducer,
	  composite: function composite(state) {
	    return state;
	  }
	});
	
	var _default = (0, _reduceReducers.default)(combinedReducers, _reducers2.crossSliceReducer);
	
	exports.default = _default;

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = crossSliceReducer;
	
	var _get2 = _interopRequireDefault(__webpack_require__(11));
	
	var _set2 = _interopRequireDefault(__webpack_require__(43));
	
	var _merge2 = _interopRequireDefault(__webpack_require__(186));
	
	var _groupBy2 = _interopRequireDefault(__webpack_require__(485));
	
	var _immer = _interopRequireDefault(__webpack_require__(133));
	
	var _constants = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function crossSliceReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var action = arguments.length > 1 ? arguments[1] : undefined;
	  return (0, _immer.default)(state, function (draft) {
	    switch (action.type) {
	      case _constants.actionTypes.DOCUMENT_MODIFIED:
	      case _constants.actionTypes.DOCUMENT_ADDED:
	      case _constants.actionTypes.DOCUMENT_REMOVED:
	      case _constants.actionTypes.LISTENER_RESPONSE:
	      case _constants.actionTypes.UNSET_LISTENER:
	        var groups = (0, _groupBy2.default)(!!state.queries && Object.values(state.queries) || [], function (c) {
	          return c.storeAs || c.collection;
	        });
	        Object.keys(groups).forEach(function (storeAs) {
	          var updated = {};
	          groups[storeAs].forEach(function (item) {
	            return (0, _merge2.default)(updated, (0, _get2.default)(item, 'data', {}));
	          });
	          (0, _set2.default)(draft, ['composite', storeAs], updated);
	        });
	        return draft;
	
	      default:
	        return state;
	    }
	  });
	}

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dataReducer;
	
	var _setWith2 = _interopRequireDefault(__webpack_require__(183));
	
	var _get2 = _interopRequireDefault(__webpack_require__(11));
	
	var _constants = __webpack_require__(8);
	
	var _reducers = __webpack_require__(34);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CLEAR_DATA = _constants.actionTypes.CLEAR_DATA,
	    GET_SUCCESS = _constants.actionTypes.GET_SUCCESS,
	    LISTENER_RESPONSE = _constants.actionTypes.LISTENER_RESPONSE,
	    LISTENER_ERROR = _constants.actionTypes.LISTENER_ERROR,
	    DELETE_SUCCESS = _constants.actionTypes.DELETE_SUCCESS,
	    DOCUMENT_ADDED = _constants.actionTypes.DOCUMENT_ADDED,
	    DOCUMENT_MODIFIED = _constants.actionTypes.DOCUMENT_MODIFIED,
	    DOCUMENT_REMOVED = _constants.actionTypes.DOCUMENT_REMOVED;
	
	function dataReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var action = arguments.length > 1 ? arguments[1] : undefined;
	
	  switch (action.type) {
	    case GET_SUCCESS:
	    case LISTENER_RESPONSE:
	      var meta = action.meta,
	          payload = action.payload;
	
	      if (!payload || payload.data === undefined) {
	        return state;
	      }
	
	      var getDocName = function getDocName(data) {
	        return data.subcollections ? getDocName(data.subcollections.slice(-1)[0]) : data.doc;
	      };
	
	      var docName = getDocName(meta);
	      var data = docName ? (0, _get2.default)(payload.data, docName) : payload.data;
	      var previousData = (0, _get2.default)(state, meta.storeAs ? [meta.storeAs] : (0, _reducers.pathFromMeta)(meta));
	
	      if (!previousData || meta.subcollections) {
	        return (0, _setWith2.default)(Object, meta.storeAs ? [meta.storeAs] : (0, _reducers.pathFromMeta)(meta), data, state);
	      }
	
	      return (0, _setWith2.default)(Object, meta.storeAs ? [meta.storeAs] : (0, _reducers.pathFromMeta)(meta), data, state);
	
	    case DOCUMENT_MODIFIED:
	    case DOCUMENT_ADDED:
	      return (0, _setWith2.default)(Object, (0, _reducers.pathFromMeta)(action.meta), action.payload.data, state);
	
	    case DOCUMENT_REMOVED:
	    case DELETE_SUCCESS:
	      var removePath = (0, _reducers.pathFromMeta)(action.meta);
	      var cleanedState = (0, _setWith2.default)(Object, removePath, null, state);
	
	      if (action.preserve && action.preserve.data) {
	        return (0, _reducers.preserveValuesFromState)(state, action.preserve.data, cleanedState);
	      }
	
	      return cleanedState;
	
	    case CLEAR_DATA:
	      if (action.preserve && action.preserve.data) {
	        return (0, _reducers.preserveValuesFromState)(state, action.preserve.data, {});
	      }
	
	      return {};
	
	    case LISTENER_ERROR:
	      var nextState = (0, _setWith2.default)(Object, (0, _reducers.pathFromMeta)(action.meta), null, state);
	
	      if (action.preserve && action.preserve.data) {
	        return (0, _reducers.preserveValuesFromState)(state, action.preserve.data, nextState);
	      }
	
	      var existingState = (0, _get2.default)(state, (0, _reducers.pathFromMeta)(action.meta));
	
	      if (existingState) {
	        return state;
	      }
	
	      return nextState;
	
	    default:
	      return state;
	  }
	}

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _constants = __webpack_require__(8);
	
	var _query = __webpack_require__(45);
	
	var _reducers = __webpack_require__(34);
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
	
	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
	
	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
	
	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
	
	var CLEAR_ERRORS = _constants.actionTypes.CLEAR_ERRORS,
	    CLEAR_ERROR = _constants.actionTypes.CLEAR_ERROR,
	    LISTENER_ERROR = _constants.actionTypes.LISTENER_ERROR,
	    ERROR = _constants.actionTypes.ERROR;
	
	function errorsAllIds() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	  var _ref = arguments.length > 1 ? arguments[1] : undefined,
	      meta = _ref.meta,
	      type = _ref.type;
	
	  switch (type) {
	    case LISTENER_ERROR:
	    case ERROR:
	      if (state.indexOf((0, _query.getQueryName)(meta)) !== -1) {
	        return state;
	      }
	
	      return [].concat(_toConsumableArray(state), [(0, _query.getQueryName)(meta)]);
	
	    case CLEAR_ERRORS:
	      return [];
	
	    case CLEAR_ERROR:
	      return state.filter(function (lId) {
	        return lId !== (0, _query.getQueryName)(meta);
	      });
	
	    default:
	      return state;
	  }
	}
	
	function errorsByQuery() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,
	      meta = _ref2.meta,
	      payload = _ref2.payload,
	      type = _ref2.type;
	
	  switch (type) {
	    case ERROR:
	    case LISTENER_ERROR:
	      return _objectSpread({}, state, _defineProperty({}, (0, _query.getQueryName)(meta), payload));
	
	    case CLEAR_ERROR:
	      return _objectSpread({}, state, _defineProperty({}, (0, _query.getQueryName)(meta), null));
	
	    default:
	      return state;
	  }
	}
	
	var errorsReducer = (0, _reducers.combineReducers)({
	  byQuery: errorsByQuery,
	  allIds: errorsAllIds
	});
	var _default = errorsReducer;
	exports.default = _default;

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "dataReducer", {
	  enumerable: true,
	  get: function get() {
	    return _dataReducer.default;
	  }
	});
	Object.defineProperty(exports, "errorsReducer", {
	  enumerable: true,
	  get: function get() {
	    return _errorsReducer.default;
	  }
	});
	Object.defineProperty(exports, "listenersReducer", {
	  enumerable: true,
	  get: function get() {
	    return _listenersReducer.default;
	  }
	});
	Object.defineProperty(exports, "orderedReducer", {
	  enumerable: true,
	  get: function get() {
	    return _orderedReducer.default;
	  }
	});
	Object.defineProperty(exports, "statusReducer", {
	  enumerable: true,
	  get: function get() {
	    return _statusReducer.default;
	  }
	});
	Object.defineProperty(exports, "queriesReducer", {
	  enumerable: true,
	  get: function get() {
	    return _queriesReducer.default;
	  }
	});
	Object.defineProperty(exports, "crossSliceReducer", {
	  enumerable: true,
	  get: function get() {
	    return _crossSliceReducer.default;
	  }
	});
	exports.default = void 0;
	
	var _dataReducer = _interopRequireDefault(__webpack_require__(563));
	
	var _errorsReducer = _interopRequireDefault(__webpack_require__(564));
	
	var _listenersReducer = _interopRequireDefault(__webpack_require__(566));
	
	var _orderedReducer = _interopRequireDefault(__webpack_require__(567));
	
	var _statusReducer = _interopRequireDefault(__webpack_require__(569));
	
	var _queriesReducer = _interopRequireDefault(__webpack_require__(568));
	
	var _crossSliceReducer = _interopRequireDefault(__webpack_require__(562));
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _default = {
	  dataReducer: _dataReducer.default,
	  errorsReducer: _errorsReducer.default,
	  listenersReducer: _listenersReducer.default,
	  orderedReducer: _orderedReducer.default,
	  statusReducer: _statusReducer.default,
	  queriesReducer: _queriesReducer.default,
	  crossSliceReducer: _crossSliceReducer.default
	};
	exports.default = _default;

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _omit2 = _interopRequireDefault(__webpack_require__(69));
	
	var _constants = __webpack_require__(8);
	
	var _reducers = __webpack_require__(34);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
	
	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
	
	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
	
	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function listenersById() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var _ref = arguments.length > 1 ? arguments[1] : undefined,
	      type = _ref.type,
	      path = _ref.path,
	      payload = _ref.payload;
	
	  switch (type) {
	    case _constants.actionTypes.SET_LISTENER:
	      return _objectSpread({}, state, _defineProperty({}, payload.name, {
	        name: payload.name,
	        path: path
	      }));
	
	    case _constants.actionTypes.UNSET_LISTENER:
	      return (0, _omit2.default)(state, [payload.name]);
	
	    default:
	      return state;
	  }
	}
	
	function allListeners() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,
	      type = _ref2.type,
	      payload = _ref2.payload;
	
	  switch (type) {
	    case _constants.actionTypes.SET_LISTENER:
	      return [].concat(_toConsumableArray(state), [payload.name]);
	
	    case _constants.actionTypes.UNSET_LISTENER:
	      return state.filter(function (name) {
	        return name !== payload.name;
	      });
	
	    default:
	      return state;
	  }
	}
	
	var listenersReducer = (0, _reducers.combineReducers)({
	  byId: listenersById,
	  allIds: allListeners
	});
	var _default = listenersReducer;
	exports.default = _default;

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = orderedReducer;
	
	var _merge2 = _interopRequireDefault(__webpack_require__(113));
	
	var _isEqual2 = _interopRequireDefault(__webpack_require__(31));
	
	var _keyBy2 = _interopRequireDefault(__webpack_require__(496));
	
	var _map2 = _interopRequireDefault(__webpack_require__(33));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(69));
	
	var _reject2 = _interopRequireDefault(__webpack_require__(504));
	
	var _unionBy2 = _interopRequireDefault(__webpack_require__(515));
	
	var _get2 = _interopRequireDefault(__webpack_require__(11));
	
	var _size2 = _interopRequireDefault(__webpack_require__(120));
	
	var _constants = __webpack_require__(8);
	
	var _reducers = __webpack_require__(34);
	
	var _actionHandlers;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }
	
	function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }
	
	function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
	
	function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
	
	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
	
	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
	
	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
	
	var DOCUMENT_ADDED = _constants.actionTypes.DOCUMENT_ADDED,
	    GET_SUCCESS = _constants.actionTypes.GET_SUCCESS,
	    LISTENER_RESPONSE = _constants.actionTypes.LISTENER_RESPONSE,
	    CLEAR_DATA = _constants.actionTypes.CLEAR_DATA,
	    DELETE_SUCCESS = _constants.actionTypes.DELETE_SUCCESS,
	    DOCUMENT_REMOVED = _constants.actionTypes.DOCUMENT_REMOVED,
	    DOCUMENT_MODIFIED = _constants.actionTypes.DOCUMENT_MODIFIED;
	
	function newArrayWithItemMoved(collectionState, meta, newValue) {
	  var _ref = meta || {},
	      oldIndex = _ref.oldIndex,
	      newIndex = _ref.newIndex;
	
	  var arrayWithoutItem = [].concat(_toConsumableArray(collectionState.slice(0, oldIndex)), _toConsumableArray(collectionState.slice(oldIndex + 1)));
	  return [].concat(_toConsumableArray(arrayWithoutItem.slice(0, newIndex)), [newValue || _objectSpread({}, collectionState[oldIndex])], _toConsumableArray(arrayWithoutItem.slice(newIndex)));
	}
	
	function modifyDoc(collectionState, action) {
	  if (action.payload.ordered) {
	    var _action$payload$order = action.payload.ordered,
	        newIndex = _action$payload$order.newIndex,
	        oldIndex = _action$payload$order.oldIndex;
	
	    if (!!newIndex && oldIndex > -1 && newIndex !== oldIndex) {
	      return newArrayWithItemMoved(collectionState, action.payload.ordered, action.payload.data);
	    }
	  }
	
	  if (!action.meta.subcollections || action.meta.storeAs) {
	    return (0, _reducers.updateItemInArray)(collectionState, action.meta.doc, function (item) {
	      return _objectSpread({
	        id: action.meta.doc
	      }, action.payload.data);
	    });
	  }
	
	  var _pathToArr = (0, _reducers.pathToArr)(action.meta.path),
	      _pathToArr2 = _slicedToArray(_pathToArr, 4),
	      docId = _pathToArr2[1],
	      subcollectionName = _pathToArr2[2],
	      subDocId = _pathToArr2[3];
	
	  return (0, _reducers.updateItemInArray)(collectionState, docId, function (item) {
	    return _objectSpread({}, item, _defineProperty({}, subcollectionName, (0, _reducers.updateItemInArray)((0, _get2.default)(item, subcollectionName, []), subDocId, function (subitem) {
	      return (0, _merge2.default)(subitem, action.payload.data);
	    })));
	  });
	}
	
	function addDoc() {
	  var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	  var action = arguments.length > 1 ? arguments[1] : undefined;
	  var meta = action.meta,
	      payload = action.payload;
	
	  if (!meta.subcollections || meta.storeAs) {
	    return [].concat(_toConsumableArray(array.slice(0, payload.ordered.newIndex)), [_objectSpread({
	      id: meta.doc
	    }, payload.data)], _toConsumableArray(array.slice(payload.ordered.newIndex)));
	  }
	
	  return modifyDoc(array, action);
	}
	
	function removeDoc(array, action) {
	  if (!action.meta.subcollections || action.meta.storeAs) {
	    return (0, _reject2.default)(array, {
	      id: action.meta.doc
	    });
	  }
	
	  var subcollectionSetting = action.meta.subcollections[0];
	
	  if (!subcollectionSetting.doc) {
	    return (0, _reducers.updateItemInArray)(array, action.meta.doc, function (item) {
	      return (0, _omit2.default)(item, [subcollectionSetting.collection]);
	    });
	  }
	
	  return (0, _reducers.updateItemInArray)(array, action.meta.doc, function (item) {
	    var subcollectionVal = (0, _get2.default)(item, subcollectionSetting.collection, []);
	
	    if (subcollectionVal.length) {
	      return _objectSpread({}, item, _defineProperty({}, subcollectionSetting.collection, (0, _reject2.default)(array, {
	        id: subcollectionSetting.doc
	      })));
	    }
	
	    return item;
	  });
	}
	
	function writeCollection(collectionState, action) {
	  var meta = action.meta,
	      _action$merge = action.merge,
	      merge = _action$merge === void 0 ? {
	    doc: true,
	    collections: true
	  } : _action$merge;
	
	  if (meta.storeAs) {
	    return action.payload.ordered;
	  }
	
	  var collectionStateSize = (0, _size2.default)(collectionState);
	  var payloadExists = !!(0, _size2.default)(action.payload.ordered);
	
	  if (meta.doc && merge.doc && collectionStateSize) {
	    return modifyDoc(collectionState, action);
	  }
	
	  if (collectionStateSize && merge.collections) {
	    if (!payloadExists) {
	      return [];
	    }
	
	    var existingKeys = collectionState && (0, _keyBy2.default)(collectionState, 'id');
	    return (0, _map2.default)(action.payload.ordered, function (newDocObj) {
	      var existingDoc = (0, _get2.default)(existingKeys, newDocObj.id);
	      return !!existingDoc && !(0, _isEqual2.default)(existingDoc, newDocObj) ? _objectSpread({}, existingDoc, {}, newDocObj) : newDocObj;
	    });
	  }
	
	  if (meta.doc && meta.subcollections) {
	    var subcollectionConfig = meta.subcollections[0];
	
	    if (!collectionStateSize) {
	      return [_defineProperty({
	        id: meta.doc
	      }, subcollectionConfig.collection, action.payload.ordered)];
	    }
	
	    return (0, _reducers.updateItemInArray)(collectionState, meta.doc, function (item) {
	      return payloadExists ? _objectSpread({}, item, _defineProperty({}, subcollectionConfig.collection, (0, _unionBy2.default)((0, _get2.default)(item, subcollectionConfig.collection, []), action.payload.ordered, 'id'))) : (0, _omit2.default)(item, [subcollectionConfig.collection]);
	    });
	  }
	
	  if (meta.doc && collectionStateSize) {
	    if (!(0, _size2.default)(action.payload.ordered)) {
	      return collectionState;
	    }
	
	    return (0, _reducers.updateItemInArray)(collectionState, meta.doc, function (item) {
	      return (0, _merge2.default)(item, action.payload.ordered[0]);
	    });
	  }
	
	  return action.payload.ordered;
	}
	
	var actionHandlers = (_actionHandlers = {}, _defineProperty(_actionHandlers, DOCUMENT_ADDED, addDoc), _defineProperty(_actionHandlers, DOCUMENT_MODIFIED, modifyDoc), _defineProperty(_actionHandlers, DOCUMENT_REMOVED, removeDoc), _defineProperty(_actionHandlers, DELETE_SUCCESS, removeDoc), _defineProperty(_actionHandlers, LISTENER_RESPONSE, writeCollection), _defineProperty(_actionHandlers, GET_SUCCESS, writeCollection), _actionHandlers);
	var orderedCollectionReducer = (0, _reducers.createReducer)(undefined, actionHandlers);
	
	function orderedReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var action = arguments.length > 1 ? arguments[1] : undefined;
	
	  if (!action.type) {
	    return state;
	  }
	
	  if (action.type === CLEAR_DATA) {
	    if (action.preserve && action.preserve.ordered) {
	      return (0, _reducers.preserveValuesFromState)(state, action.preserve.ordered, {});
	    }
	
	    return {};
	  }
	
	  if (!Object.prototype.hasOwnProperty.call(actionHandlers, action.type)) {
	    return state;
	  }
	
	  if (!action.meta || !action.meta.storeAs && !action.meta.collection) {
	    return state;
	  }
	
	  var storeUnderKey = action.meta.storeAs || action.meta.collection;
	  var collectionStateSlice = (0, _get2.default)(state, storeUnderKey);
	  return _objectSpread({}, state, _defineProperty({}, storeUnderKey, orderedCollectionReducer(collectionStateSlice, action)));
	}

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isComposable = isComposable;
	exports.default = queriesReducer;
	
	var _unset2 = _interopRequireDefault(__webpack_require__(191));
	
	var _get2 = _interopRequireDefault(__webpack_require__(11));
	
	var _set2 = _interopRequireDefault(__webpack_require__(43));
	
	var _immer = _interopRequireDefault(__webpack_require__(133));
	
	var _constants = __webpack_require__(8);
	
	var _query = __webpack_require__(45);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function isComposable(action) {
	  return !!(0, _get2.default)(action, 'meta.where') && !!(0, _get2.default)(action, 'meta.collection');
	}
	
	function queriesReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var action = arguments.length > 1 ? arguments[1] : undefined;
	  return (0, _immer.default)(state, function (draft) {
	    if (!isComposable(action)) {
	      return state;
	    }
	
	    var key = (0, _query.getBaseQueryName)(action.meta);
	
	    switch (action.type) {
	      case _constants.actionTypes.GET_SUCCESS:
	      case _constants.actionTypes.LISTENER_RESPONSE:
	        draft[key] = _objectSpread({
	          data: action.payload.data
	        }, action.meta);
	        return draft;
	
	      case _constants.actionTypes.UNSET_LISTENER:
	        if (draft[key]) {
	          draft[key].data = undefined;
	        }
	
	        return draft;
	
	      case _constants.actionTypes.DOCUMENT_ADDED:
	      case _constants.actionTypes.DOCUMENT_MODIFIED:
	        (0, _set2.default)(draft, [key, 'data', action.meta.doc], action.payload.data);
	        return draft;
	
	      case _constants.actionTypes.DOCUMENT_REMOVED:
	      case _constants.actionTypes.DELETE_SUCCESS:
	        (0, _unset2.default)(draft, [key, 'data', action.meta.doc]);
	        return draft;
	
	      default:
	        return state;
	    }
	  });
	}

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.requestingReducer = requestingReducer;
	exports.requestedReducer = requestedReducer;
	exports.timestampsReducer = timestampsReducer;
	exports.default = void 0;
	
	var _constants = __webpack_require__(8);
	
	var _reducers = __webpack_require__(34);
	
	var _query = __webpack_require__(45);
	
	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
	
	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var SET_LISTENER = _constants.actionTypes.SET_LISTENER,
	    UNSET_LISTENER = _constants.actionTypes.UNSET_LISTENER,
	    LISTENER_ERROR = _constants.actionTypes.LISTENER_ERROR,
	    LISTENER_RESPONSE = _constants.actionTypes.LISTENER_RESPONSE;
	
	function requestingReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var _ref = arguments.length > 1 ? arguments[1] : undefined,
	      type = _ref.type,
	      meta = _ref.meta;
	
	  switch (type) {
	    case SET_LISTENER:
	      return _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)((0, _query.getQueryName)(meta)), true));
	
	    case LISTENER_ERROR:
	    case LISTENER_RESPONSE:
	    case UNSET_LISTENER:
	      return _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)((0, _query.getQueryName)(meta)), false));
	
	    default:
	      return state;
	  }
	}
	
	function requestedReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,
	      type = _ref2.type,
	      meta = _ref2.meta;
	
	  switch (type) {
	    case SET_LISTENER:
	    case UNSET_LISTENER:
	      return _objectSpread({}, state, _defineProperty({}, (0, _query.getQueryName)(meta), false));
	
	    case LISTENER_ERROR:
	    case LISTENER_RESPONSE:
	      return _objectSpread({}, state, _defineProperty({}, (0, _query.getQueryName)(meta), true));
	
	    default:
	      return state;
	  }
	}
	
	function timestampsReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var _ref3 = arguments.length > 1 ? arguments[1] : undefined,
	      type = _ref3.type,
	      meta = _ref3.meta;
	
	  switch (type) {
	    case SET_LISTENER:
	      return _objectSpread({}, state, _defineProperty({}, (0, _query.getQueryName)(meta), Date.now()));
	
	    default:
	      return state;
	  }
	}
	
	var _default = (0, _reducers.combineReducers)({
	  requesting: requestingReducer,
	  requested: requestedReducer,
	  timestamps: timestampsReducer
	});
	
	exports.default = _default;

/***/ },
/* 570 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch,
	        getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }
	
	        return next(action);
	      };
	    };
	  };
	}
	
	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;
	
	exports['default'] = thunk;

/***/ },
/* 571 */
/***/ function(module, exports) {

	"use strict";function isAbsolute(e){return"/"===e.charAt(0)}function spliceOne(e,t){for(var s=t,n=s+1,i=e.length;n<i;s+=1,n+=1)e[s]=e[n];e.pop()}function resolvePathname(e,t){void 0===t&&(t="");var s,n=e&&e.split("/")||[],i=t&&t.split("/")||[],l=e&&isAbsolute(e),r=t&&isAbsolute(t),o=l||r;if(e&&isAbsolute(e)?i=n:n.length&&(i.pop(),i=i.concat(n)),!i.length)return"/";if(i.length){var u=i[i.length-1];s="."===u||".."===u||""===u}else s=!1;for(var a=0,c=i.length;0<=c;c--){var f=i[c];"."===f?spliceOne(i,c):".."===f?(spliceOne(i,c),a++):a&&(spliceOne(i,c),a--)}if(!o)for(;a--;a)i.unshift("..");!o||""===i[0]||i[0]&&isAbsolute(i[0])||i.unshift("");var h=i.join("/");return s&&"/"!==h.substr(-1)&&(h+="/"),h}module.exports=resolvePathname;


/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(571);
	} else {
	  module.exports = require('./cjs/resolve-pathname.js');
	}


/***/ },
/* 573 */
/***/ function(module, exports) {

	/** @license React v0.19.1
	 * scheduler.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var f,g,h,k,l;
	if("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,
	y=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===
	typeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=
	function(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}
	function M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;
	function V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}
	function X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}
	function Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};
	exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};
	exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};
	exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};


/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(573);
	} else {
	  module.exports = require('./cjs/scheduler.development.js');
	}


/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(576);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(47)(module)))

/***/ },
/* 576 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ },
/* 577 */
/***/ function(module, exports) {

	"use strict";function valueOf(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}function valueEqual(u,r){if(u===r)return!0;if(null==u||null==r)return!1;if(Array.isArray(u))return Array.isArray(r)&&u.length===r.length&&u.every(function(e,u){return valueEqual(e,r[u])});if("object"!=typeof u&&"object"!=typeof r)return!1;var e=valueOf(u),t=valueOf(r);return e!==u||t!==r?valueEqual(e,t):Object.keys(Object.assign({},u,r)).every(function(e){return valueEqual(u[e],r[e])})}module.exports=valueEqual;


/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(577);
	} else {
	  module.exports = require('./cjs/value-equal.js');
	}


/***/ },
/* 579 */
/***/ function(module, exports) {

	(function(self) {
	  'use strict';
	
	  if (self.fetch) {
	    return
	  }
	
	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }
	
	  if (support.arrayBuffer) {
	    var viewClasses = [
	      '[object Int8Array]',
	      '[object Uint8Array]',
	      '[object Uint8ClampedArray]',
	      '[object Int16Array]',
	      '[object Uint16Array]',
	      '[object Int32Array]',
	      '[object Uint32Array]',
	      '[object Float32Array]',
	      '[object Float64Array]'
	    ]
	
	    var isDataView = function(obj) {
	      return obj && DataView.prototype.isPrototypeOf(obj)
	    }
	
	    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
	      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
	    }
	  }
	
	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }
	
	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }
	
	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }
	
	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }
	
	    return iterator
	  }
	
	  function Headers(headers) {
	    this.map = {}
	
	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)
	
	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }
	
	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var oldValue = this.map[name]
	    this.map[name] = oldValue ? oldValue+','+value : value
	  }
	
	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }
	
	  Headers.prototype.get = function(name) {
	    name = normalizeName(name)
	    return this.has(name) ? this.map[name] : null
	  }
	
	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }
	
	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = normalizeValue(value)
	  }
	
	  Headers.prototype.forEach = function(callback, thisArg) {
	    for (var name in this.map) {
	      if (this.map.hasOwnProperty(name)) {
	        callback.call(thisArg, this.map[name], name, this)
	      }
	    }
	  }
	
	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }
	
	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }
	
	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }
	
	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }
	
	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsArrayBuffer(blob)
	    return promise
	  }
	
	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsText(blob)
	    return promise
	  }
	
	  function readArrayBufferAsText(buf) {
	    var view = new Uint8Array(buf)
	    var chars = new Array(view.length)
	
	    for (var i = 0; i < view.length; i++) {
	      chars[i] = String.fromCharCode(view[i])
	    }
	    return chars.join('')
	  }
	
	  function bufferClone(buf) {
	    if (buf.slice) {
	      return buf.slice(0)
	    } else {
	      var view = new Uint8Array(buf.byteLength)
	      view.set(new Uint8Array(buf))
	      return view.buffer
	    }
	  }
	
	  function Body() {
	    this.bodyUsed = false
	
	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (!body) {
	        this._bodyText = ''
	      } else if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
	        this._bodyArrayBuffer = bufferClone(body.buffer)
	        // IE 10-11 can't handle a DataView body.
	        this._bodyInit = new Blob([this._bodyArrayBuffer])
	      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
	        this._bodyArrayBuffer = bufferClone(body)
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	
	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }
	
	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyArrayBuffer) {
	          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }
	
	      this.arrayBuffer = function() {
	        if (this._bodyArrayBuffer) {
	          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
	        } else {
	          return this.blob().then(readBlobAsArrayBuffer)
	        }
	      }
	    }
	
	    this.text = function() {
	      var rejected = consumed(this)
	      if (rejected) {
	        return rejected
	      }
	
	      if (this._bodyBlob) {
	        return readBlobAsText(this._bodyBlob)
	      } else if (this._bodyArrayBuffer) {
	        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
	      } else if (this._bodyFormData) {
	        throw new Error('could not read FormData body as text')
	      } else {
	        return Promise.resolve(this._bodyText)
	      }
	    }
	
	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }
	
	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }
	
	    return this
	  }
	
	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
	
	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }
	
	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	
	    if (input instanceof Request) {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body && input._bodyInit != null) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    } else {
	      this.url = String(input)
	    }
	
	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null
	
	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }
	
	  Request.prototype.clone = function() {
	    return new Request(this, { body: this._bodyInit })
	  }
	
	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }
	
	  function parseHeaders(rawHeaders) {
	    var headers = new Headers()
	    rawHeaders.split(/\r?\n/).forEach(function(line) {
	      var parts = line.split(':')
	      var key = parts.shift().trim()
	      if (key) {
	        var value = parts.join(':').trim()
	        headers.append(key, value)
	      }
	    })
	    return headers
	  }
	
	  Body.call(Request.prototype)
	
	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }
	
	    this.type = 'default'
	    this.status = 'status' in options ? options.status : 200
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = 'statusText' in options ? options.statusText : 'OK'
	    this.headers = new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }
	
	  Body.call(Response.prototype)
	
	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }
	
	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }
	
	  var redirectStatuses = [301, 302, 303, 307, 308]
	
	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }
	
	    return new Response(null, {status: status, headers: {location: url}})
	  }
	
	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response
	
	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request = new Request(input, init)
	      var xhr = new XMLHttpRequest()
	
	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
	        }
	        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }
	
	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.open(request.method, request.url, true)
	
	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }
	
	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }
	
	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })
	
	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ }
/******/ ]);
//# sourceMappingURL=main.899d9e7b.js.map